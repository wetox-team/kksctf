


Gadgets
=======


0x00000000004010d5: adc al, byte ptr [rax]; call qword ptr [rip + 0x2f0a]; hlt; nop; endbr64; ret; 
0x00000000004010d9: adc eax, 0x2f0a; hlt; nop; endbr64; ret; 
0x00000000004010fc: adc ecx, dword ptr [rax - 0x75]; add eax, 0x2edc; test rax, rax; je 0x1110; mov edi, 0x404068; jmp rax; 
0x000000000040116c: adc edx, dword ptr [rbp + 0x48]; mov ebp, esp; call 0x10f0; mov byte ptr [rip + 0x2f03], 1; pop rbp; ret; 
0x00000000004010dd: add ah, dh; nop; endbr64; ret; 
0x00000000004010d7: add bh, bh; adc eax, 0x2f0a; hlt; nop; endbr64; ret; 
0x0000000000401346: add byte ptr [rax + 1], bh; call 0x1060; nop; leave; ret; 
0x000000000040100e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000004011d8: add byte ptr [rax], al; add byte ptr [rax], al; call 0x1070; nop; leave; ret; 
0x00000000004013cc: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x000000000040134a: add byte ptr [rax], al; call 0x1060; nop; leave; ret; 
0x00000000004011da: add byte ptr [rax], al; call 0x1070; nop; leave; ret; 
0x00000000004013ce: add byte ptr [rax], al; endbr64; ret; 
0x00000000004013d6: add byte ptr [rax], al; endbr64; sub rsp, 8; add rsp, 8; ret; 
0x00000000004010dc: add byte ptr [rax], al; hlt; nop; endbr64; ret; 
0x0000000000401345: add byte ptr [rax], al; mov eax, 1; call 0x1060; nop; leave; ret; 
0x0000000000401287: add byte ptr [rax], al; nop; leave; ret; 
0x0000000000401156: add byte ptr [rax], al; ret; 
0x000000000040100d: add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; 
0x000000000040100d: add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x0000000000401102: add byte ptr [rax], al; test rax, rax; je 0x1110; mov edi, 0x404068; jmp rax; 
0x0000000000401144: add byte ptr [rax], al; test rax, rax; je 0x1158; mov edi, 0x404068; jmp rax; 
0x0000000000401155: add byte ptr [rax], r8b; ret; 
0x00000000004010fa: add byte ptr [rbx + rdx + 0x48], dh; mov eax, dword ptr [rip + 0x2edc]; test rax, rax; je 0x1110; mov edi, 0x404068; jmp rax; 
0x00000000004010f9: add byte ptr [rbx + rdx + 0x48], sil; mov eax, dword ptr [rip + 0x2edc]; test rax, rax; je 0x1110; mov edi, 0x404068; jmp rax; 
0x000000000040117b: add byte ptr [rcx], al; pop rbp; ret; 
0x0000000000401101: add byte ptr cs:[rax], al; test rax, rax; je 0x1110; mov edi, 0x404068; jmp rax; 
0x0000000000401143: add byte ptr cs:[rax], al; test rax, rax; je 0x1158; mov edi, 0x404068; jmp rax; 
0x00000000004010d6: add dil, dil; adc eax, 0x2f0a; hlt; nop; endbr64; ret; 
0x0000000000401348: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x1060; nop; leave; ret; 
0x0000000000401141: add eax, 0x2eb2; test rax, rax; je 0x1158; mov edi, 0x404068; jmp rax; 
0x00000000004010ff: add eax, 0x2edc; test rax, rax; je 0x1110; mov edi, 0x404068; jmp rax; 
0x000000000040100a: add eax, 0x2fe1; test rax, rax; je 0x1016; call rax; 
0x0000000000401017: add esp, 8; ret; 
0x0000000000401016: add rsp, 8; ret; 
0x000000000040134c: call 0x1060; nop; leave; ret; 
0x00000000004011dc: call 0x1070; nop; leave; ret; 
0x0000000000401171: call 0x10f0; mov byte ptr [rip + 0x2f03], 1; pop rbp; ret; 
0x00000000004010d8: call qword ptr [rip + 0x2f0a]; hlt; nop; endbr64; ret; 
0x0000000000401014: call rax; 
0x0000000000401014: call rax; add rsp, 8; ret; 
0x0000000000401284: clc; pop rdx; ret; 
0x00000000004010e3: cli; ret; 
0x00000000004013db: cli; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401003: cli; sub rsp, 8; mov rax, qword ptr [rip + 0x2fe1]; test rax, rax; je 0x1016; call rax; 
0x0000000000401342: cmp eax, 0xd06; mov eax, 1; call 0x1060; nop; leave; ret; 
0x00000000004010e0: endbr64; ret; 
0x00000000004013d8: endbr64; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401000: endbr64; sub rsp, 8; mov rax, qword ptr [rip + 0x2fe1]; test rax, rax; je 0x1016; call rax; 
0x00000000004013ac: fisttp word ptr [rax - 0x7d]; ret; 
0x0000000000401100: fsubr qword ptr [rsi]; add byte ptr [rax], al; test rax, rax; je 0x1110; mov edi, 0x404068; jmp rax; 
0x00000000004010de: hlt; nop; endbr64; ret; 
0x0000000000401006: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x2fe1; test rax, rax; je 0x1016; call rax; 
0x0000000000401012: je 0x1016; call rax; 
0x0000000000401012: je 0x1016; call rax; add rsp, 8; ret; 
0x0000000000401107: je 0x1110; mov edi, 0x404068; jmp rax; 
0x00000000004010fb: je 0x1110; mov rax, qword ptr [rip + 0x2edc]; test rax, rax; je 0x1110; mov edi, 0x404068; jmp rax; 
0x0000000000401149: je 0x1158; mov edi, 0x404068; jmp rax; 
0x000000000040113d: je 0x1158; mov rax, qword ptr [rip + 0x2eb2]; test rax, rax; je 0x1158; mov edi, 0x404068; jmp rax; 
0x000000000040110e: jmp rax; 
0x0000000000401341: lea edi, [rip + 0xd06]; mov eax, 1; call 0x1060; nop; leave; ret; 
0x0000000000401340: lea rdi, [rip + 0xd06]; mov eax, 1; call 0x1060; nop; leave; ret; 
0x00000000004011e2: leave; ret; 
0x000000000040100b: loope 0x103c; add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; 
0x0000000000401176: mov byte ptr [rip + 0x2f03], 1; pop rbp; ret; 
0x0000000000401142: mov dl, 0x2e; add byte ptr [rax], al; test rax, rax; je 0x1158; mov edi, 0x404068; jmp rax; 
0x00000000004011d7: mov eax, 0; call 0x1070; nop; leave; ret; 
0x0000000000401347: mov eax, 1; call 0x1060; nop; leave; ret; 
0x0000000000401140: mov eax, dword ptr [rip + 0x2eb2]; test rax, rax; je 0x1158; mov edi, 0x404068; jmp rax; 
0x00000000004010fe: mov eax, dword ptr [rip + 0x2edc]; test rax, rax; je 0x1110; mov edi, 0x404068; jmp rax; 
0x0000000000401009: mov eax, dword ptr [rip + 0x2fe1]; test rax, rax; je 0x1016; call rax; 
0x000000000040116f: mov ebp, esp; call 0x10f0; mov byte ptr [rip + 0x2f03], 1; pop rbp; ret; 
0x0000000000401109: mov edi, 0x404068; jmp rax; 
0x00000000004011d5: mov edi, eax; mov eax, 0; call 0x1070; nop; leave; ret; 
0x000000000040113f: mov rax, qword ptr [rip + 0x2eb2]; test rax, rax; je 0x1158; mov edi, 0x404068; jmp rax; 
0x00000000004010fd: mov rax, qword ptr [rip + 0x2edc]; test rax, rax; je 0x1110; mov edi, 0x404068; jmp rax; 
0x0000000000401008: mov rax, qword ptr [rip + 0x2fe1]; test rax, rax; je 0x1016; call rax; 
0x000000000040116e: mov rbp, rsp; call 0x10f0; mov byte ptr [rip + 0x2f03], 1; pop rbp; ret; 
0x00000000004013c8: nop dword ptr [rax + rax]; endbr64; ret; 
0x0000000000401153: nop dword ptr [rax + rax]; ret; 
0x00000000004013c7: nop dword ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401152: nop word ptr [rax + rax]; ret; 
0x00000000004013c6: nop word ptr cs:[rax + rax]; endbr64; ret; 
0x00000000004010df: nop; endbr64; ret; 
0x00000000004011e1: nop; leave; ret; 
0x000000000040117f: nop; ret; 
0x0000000000401007: or byte ptr [rax - 0x75], cl; add eax, 0x2fe1; test rax, rax; je 0x1016; call rax; 
0x00000000004010da: or ch, byte ptr [rdi]; add byte ptr [rax], al; hlt; nop; endbr64; ret; 
0x0000000000401338: outsb dx, byte ptr [rsi]; ret 0x8948; 
0x00000000004013bc: pop r12; pop r13; pop r14; pop r15; ret; 
0x00000000004013be: pop r13; pop r14; pop r15; ret; 
0x00000000004013c0: pop r14; pop r15; ret; 
0x00000000004013c2: pop r15; ret; 
0x00000000004013bb: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x00000000004013bf: pop rbp; pop r14; pop r15; ret; 
0x000000000040117d: pop rbp; ret; 
0x00000000004013c3: pop rdi; ret; 
0x0000000000401285: pop rdx; ret; 
0x00000000004013c1: pop rsi; pop r15; ret; 
0x00000000004013bd: pop rsp; pop r13; pop r14; pop r15; ret; 
0x000000000040116d: push rbp; mov rbp, rsp; call 0x10f0; mov byte ptr [rip + 0x2f03], 1; pop rbp; ret; 
0x0000000000401072: ret 0x2f; 
0x0000000000401339: ret 0x8948; 
0x000000000040101a: ret; 
0x0000000000401011: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000040113e: sbb dword ptr [rax - 0x75], ecx; add eax, 0x2eb2; test rax, rax; je 0x1158; mov edi, 0x404068; jmp rax; 
0x00000000004013dd: sub esp, 8; add rsp, 8; ret; 
0x0000000000401005: sub esp, 8; mov rax, qword ptr [rip + 0x2fe1]; test rax, rax; je 0x1016; call rax; 
0x00000000004013dc: sub rsp, 8; add rsp, 8; ret; 
0x0000000000401004: sub rsp, 8; mov rax, qword ptr [rip + 0x2fe1]; test rax, rax; je 0x1016; call rax; 
0x00000000004013ca: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x0000000000401010: test eax, eax; je 0x1016; call rax; 
0x0000000000401010: test eax, eax; je 0x1016; call rax; add rsp, 8; ret; 
0x0000000000401105: test eax, eax; je 0x1110; mov edi, 0x404068; jmp rax; 
0x0000000000401147: test eax, eax; je 0x1158; mov edi, 0x404068; jmp rax; 
0x000000000040100f: test rax, rax; je 0x1016; call rax; 
0x000000000040100f: test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x0000000000401104: test rax, rax; je 0x1110; mov edi, 0x404068; jmp rax; 
0x0000000000401146: test rax, rax; je 0x1158; mov edi, 0x404068; jmp rax; 

119 gadgets found
