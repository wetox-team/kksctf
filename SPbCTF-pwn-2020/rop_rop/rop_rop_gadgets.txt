


Gadgets
=======


0x000000000040056e: adc byte ptr [rax], ah; jmp rax; 
0x000000000040056d: adc byte ptr [rax], spl; jmp rax; 
0x000000000040053f: add bl, dh; ret; 
0x0000000000400565: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x5d], 0xbf; adc byte ptr [rax], spl; jmp rax; 
0x00000000004005a7: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rcx + 0x5d], 0xbf; adc byte ptr [rax], spl; jmp rax; 
0x00000000004004ba: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000040071d: add byte ptr [rax], al; add bl, dh; ret; 
0x0000000000400563: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x5d], 0xbf; adc byte ptr [rax], spl; jmp rax; 
0x00000000004005a5: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rcx + 0x5d], 0xbf; adc byte ptr [rax], spl; jmp rax; 
0x000000000040071b: add byte ptr [rax], al; add byte ptr [rax], al; add bl, dh; ret; 
0x0000000000400611: add byte ptr [rax], al; call 0x4f0; mov qword ptr [rbp - 0x28], rax; add rsp, 0x30; pop rbp; ret; 
0x0000000000400576: add byte ptr [rax], al; pop rbp; ret; 
0x0000000000400722: add byte ptr [rax], al; sub rsp, 8; add rsp, 8; ret; 
0x0000000000400564: add byte ptr [rax], al; test rax, rax; je 0x578; pop rbp; mov edi, 0x601040; jmp rax; 
0x00000000004005a6: add byte ptr [rax], al; test rax, rax; je 0x5b8; pop rbp; mov edi, 0x601040; jmp rax; 
0x0000000000400575: add byte ptr [rax], r8b; pop rbp; ret; 
0x00000000004005d7: add byte ptr [rcx], al; pop rbp; ret; 
0x00000000004004b6: add eax, 0x200b3d; test rax, rax; je 0x4c2; call rax; 
0x00000000004004b6: add eax, 0x200b3d; test rax, rax; je 0x4c2; call rax; add rsp, 8; ret; 
0x00000000004006a5: add esp, 0x20; pop rbp; ret; 
0x000000000040061d: add esp, 0x30; pop rbp; ret; 
0x00000000004004c3: add esp, 8; ret; 
0x00000000004006a4: add rsp, 0x20; pop rbp; ret; 
0x000000000040061c: add rsp, 0x30; pop rbp; ret; 
0x00000000004004c2: add rsp, 8; ret; 
0x00000000004004b9: and byte ptr [rax], al; test rax, rax; je 0x4c2; call rax; 
0x00000000004004b9: and byte ptr [rax], al; test rax, rax; je 0x4c2; call rax; add rsp, 8; ret; 
0x0000000000400613: call 0x4f0; mov qword ptr [rbp - 0x28], rax; add rsp, 0x30; pop rbp; ret; 
0x00000000004005cd: call 0x550; mov byte ptr [rip + 0x200a7f], 1; pop rbp; ret; 
0x000000000040069d: call 0x600; xor eax, eax; add rsp, 0x20; pop rbp; ret; 
0x0000000000400777: call qword ptr [rax + 1]; 
0x00000000004004c0: call rax; 
0x00000000004004c0: call rax; add rsp, 8; ret; 
0x00000000004004b7: cmp eax, 0x4800200b; test eax, eax; je 0x4c2; call rax; 
0x00000000004004b7: cmp eax, 0x4800200b; test eax, eax; je 0x4c2; call rax; add rsp, 8; ret; 
0x00000000004006fc: fmul qword ptr [rax - 0x7d]; ret; 
0x00000000004004b2: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x200b3d; test rax, rax; je 0x4c2; call rax; 
0x00000000004004be: je 0x4c2; call rax; 
0x00000000004004be: je 0x4c2; call rax; add rsp, 8; ret; 
0x0000000000400569: je 0x578; pop rbp; mov edi, 0x601040; jmp rax; 
0x00000000004005ab: je 0x5b8; pop rbp; mov edi, 0x601040; jmp rax; 
0x000000000040074f: jmp qword ptr [rax]; 
0x000000000040084b: jmp qword ptr [rbp]; 
0x000000000040080b: jmp qword ptr [rdx]; 
0x0000000000400571: jmp rax; 
0x00000000004005d2: mov byte ptr [rip + 0x200a7f], 1; pop rbp; ret; 
0x000000000040069a: mov dword ptr [rbp - 0x20], eax; call 0x600; xor eax, eax; add rsp, 0x20; pop rbp; ret; 
0x0000000000400619: mov dword ptr [rbp - 0x28], eax; add rsp, 0x30; pop rbp; ret; 
0x00000000004004b5: mov eax, dword ptr [rip + 0x200b3d]; test rax, rax; je 0x4c2; call rax; 
0x00000000004004b5: mov eax, dword ptr [rip + 0x200b3d]; test rax, rax; je 0x4c2; call rax; add rsp, 8; ret; 
0x00000000004005cb: mov ebp, esp; call 0x550; mov byte ptr [rip + 0x200a7f], 1; pop rbp; ret; 
0x000000000040056c: mov edi, 0x601040; jmp rax; 
0x0000000000400699: mov qword ptr [rbp - 0x20], rax; call 0x600; xor eax, eax; add rsp, 0x20; pop rbp; ret; 
0x0000000000400618: mov qword ptr [rbp - 0x28], rax; add rsp, 0x30; pop rbp; ret; 
0x00000000004004b4: mov rax, qword ptr [rip + 0x200b3d]; test rax, rax; je 0x4c2; call rax; 
0x00000000004004b4: mov rax, qword ptr [rip + 0x200b3d]; test rax, rax; je 0x4c2; call rax; add rsp, 8; ret; 
0x00000000004005ca: mov rbp, rsp; call 0x550; mov byte ptr [rip + 0x200a7f], 1; pop rbp; ret; 
0x0000000000400573: nop dword ptr [rax + rax]; pop rbp; ret; 
0x00000000004005b5: nop dword ptr [rax]; pop rbp; ret; 
0x00000000004005d5: or ah, byte ptr [rax]; add byte ptr [rcx], al; pop rbp; ret; 
0x00000000004004b3: or byte ptr [rax - 0x75], cl; add eax, 0x200b3d; test rax, rax; je 0x4c2; call rax; 
0x00000000004005ac: or ebx, dword ptr [rbp - 0x41]; adc byte ptr [rax], spl; jmp rax; 
0x00000000004004b8: or esp, dword ptr [rax]; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000040070c: pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000040070e: pop r13; pop r14; pop r15; ret; 
0x0000000000400710: pop r14; pop r15; ret; 
0x0000000000400712: pop r15; ret; 
0x000000000040056b: pop rbp; mov edi, 0x601040; jmp rax; 
0x000000000040070b: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000040070f: pop rbp; pop r14; pop r15; ret; 
0x0000000000400578: pop rbp; ret; 
0x0000000000400713: pop rdi; ret; 
0x0000000000400693: pop rdx; ret; 
0x0000000000400711: pop rsi; pop r15; ret; 
0x000000000040070d: pop rsp; pop r13; pop r14; pop r15; ret; 
0x00000000004005c9: push rbp; mov rbp, rsp; call 0x550; mov byte ptr [rip + 0x200a7f], 1; pop rbp; ret; 
0x0000000000400568: sal byte ptr [rbp + rcx + 0x5d], 0xbf; adc byte ptr [rax], spl; jmp rax; 
0x00000000004005aa: sal byte ptr [rbx + rcx + 0x5d], 0xbf; adc byte ptr [rax], spl; jmp rax; 
0x00000000004004bd: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000400725: sub esp, 8; add rsp, 8; ret; 
0x00000000004004b1: sub esp, 8; mov rax, qword ptr [rip + 0x200b3d]; test rax, rax; je 0x4c2; call rax; 
0x0000000000400724: sub rsp, 8; add rsp, 8; ret; 
0x00000000004004b0: sub rsp, 8; mov rax, qword ptr [rip + 0x200b3d]; test rax, rax; je 0x4c2; call rax; 
0x00000000004004bc: test eax, eax; je 0x4c2; call rax; 
0x00000000004004bc: test eax, eax; je 0x4c2; call rax; add rsp, 8; ret; 
0x0000000000400567: test eax, eax; je 0x578; pop rbp; mov edi, 0x601040; jmp rax; 
0x00000000004005a9: test eax, eax; je 0x5b8; pop rbp; mov edi, 0x601040; jmp rax; 
0x00000000004004bb: test rax, rax; je 0x4c2; call rax; 
0x00000000004004bb: test rax, rax; je 0x4c2; call rax; add rsp, 8; ret; 
0x0000000000400566: test rax, rax; je 0x578; pop rbp; mov edi, 0x601040; jmp rax; 
0x00000000004005a8: test rax, rax; je 0x5b8; pop rbp; mov edi, 0x601040; jmp rax; 
0x00000000004006a2: xor eax, eax; add rsp, 0x20; pop rbp; ret; 
0x0000000000400691: leave; ret; 
0x00000000004004c6: ret; 

94 gadgets found
