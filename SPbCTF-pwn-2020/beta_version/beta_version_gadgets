


Gadgets
=======


0x000000000000080d: adc byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 7; 
0x000000000000084c: adc byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rax], 0; add byte ptr [rax], al; syscall; 
0x000000000000084c: adc byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rax], 0; add byte ptr [rax], al; syscall; ret; 
0x00000000000007c2: add al, ch; push -0x6f000002; leave; ret; 
0x00000000000008cb: add al, ch; test eax, 0xebfffffe; ret; 
0x0000000000000767: add bl, dh; ret; 
0x000000000000080f: add byte ptr [rax - 0x39], cl; ret 7; 
0x000000000000084e: add byte ptr [rax - 0x39], cl; rol byte ptr [rax], 0; add byte ptr [rax], al; syscall; 
0x000000000000084e: add byte ptr [rax - 0x39], cl; rol byte ptr [rax], 0; add byte ptr [rax], al; syscall; ret; 
0x0000000000000828: add byte ptr [rax - 0x39], cl; ror byte ptr [rcx], 0; add byte ptr [rax], al; syscall; 
0x0000000000000828: add byte ptr [rax - 0x39], cl; ror byte ptr [rcx], 0; add byte ptr [rax], al; syscall; ret; 
0x0000000000000602: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000000007c0: add byte ptr [rax], al; add al, ch; push -0x6f000002; leave; ret; 
0x00000000000008c9: add byte ptr [rax], al; add al, ch; test eax, 0xebfffffe; ret; 
0x0000000000000765: add byte ptr [rax], al; add bl, dh; ret; 
0x0000000000000826: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ror byte ptr [rcx], 0; add byte ptr [rax], al; syscall; 
0x0000000000000826: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ror byte ptr [rcx], 0; add byte ptr [rax], al; syscall; ret; 
0x000000000000097b: add byte ptr [rax], al; add byte ptr [rax], al; add bl, dh; ret; 
0x00000000000007bf: add byte ptr [rax], al; add byte ptr [rax], al; call 0x630; nop; leave; ret; 
0x00000000000008ff: add byte ptr [rax], al; add byte ptr [rax], al; leave; ret; 
0x0000000000000825: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 9; syscall; 
0x0000000000000825: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 9; syscall; ret; 
0x0000000000000841: add byte ptr [rax], al; add byte ptr [rax], al; mov rsi, rax; mov rdx, 0x1000; mov rax, 0; syscall; 
0x00000000000006cc: add byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret; 
0x0000000000000852: add byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x0000000000000852: add byte ptr [rax], al; add byte ptr [rax], al; syscall; ret; 
0x0000000000000853: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xc35d90c3; push rbp; mov rbp, rsp; jmp rax; 
0x0000000000000900: add byte ptr [rax], al; add cl, cl; ret; 
0x00000000000007c1: add byte ptr [rax], al; call 0x630; nop; leave; ret; 
0x0000000000000901: add byte ptr [rax], al; leave; ret; 
0x000000000000081b: add byte ptr [rax], al; mov r8d, 0xffffffff; mov r9d, 0; mov rax, 9; syscall; 
0x000000000000081b: add byte ptr [rax], al; mov r8d, 0xffffffff; mov r9d, 0; mov rax, 9; syscall; ret; 
0x000000000000084d: add byte ptr [rax], al; mov rax, 0; syscall; 
0x000000000000084d: add byte ptr [rax], al; mov rax, 0; syscall; ret; 
0x0000000000000827: add byte ptr [rax], al; mov rax, 9; syscall; 
0x0000000000000827: add byte ptr [rax], al; mov rax, 9; syscall; ret; 
0x00000000000007ed: add byte ptr [rax], al; mov rdi, rax; call 0x640; nop; leave; ret; 
0x0000000000000843: add byte ptr [rax], al; mov rsi, rax; mov rdx, 0x1000; mov rax, 0; syscall; 
0x0000000000000843: add byte ptr [rax], al; mov rsi, rax; mov rdx, 0x1000; mov rax, 0; syscall; ret; 
0x00000000000006ce: add byte ptr [rax], al; pop rbp; ret; 
0x0000000000000982: add byte ptr [rax], al; sub rsp, 8; add rsp, 8; ret; 
0x000000000000082e: add byte ptr [rax], al; syscall; 
0x000000000000082e: add byte ptr [rax], al; syscall; ret; 
0x000000000000084b: add byte ptr [rax], dl; add byte ptr [rax], al; mov rax, 0; syscall; 
0x000000000000084b: add byte ptr [rax], dl; add byte ptr [rax], al; mov rax, 0; syscall; ret; 
0x000000000000075d: add byte ptr [rcx], al; pop rbp; ret; 
0x0000000000000855: add byte ptr [rdi], cl; add eax, 0xc35d90c3; push rbp; mov rbp, rsp; jmp rax; 
0x0000000000000902: add cl, cl; ret; 
0x000000000000070a: add eax, 0x2008e1; test rax, rax; je 0x720; pop rbp; jmp rax; 
0x00000000000006b9: add eax, 0x20091a; test rax, rax; je 0x6d0; pop rbp; jmp rax; 
0x00000000000005fe: add eax, 0x2009e5; test rax, rax; je 0x60a; call rax; 
0x0000000000000857: add eax, 0xc35d90c3; push rbp; mov rbp, rsp; jmp rax; 
0x000000000000060b: add esp, 8; ret; 
0x000000000000060a: add rsp, 8; ret; 
0x000000000000086c: and al, 0xbe; ret; 
0x0000000000000866: and al, 0xce; ret; 
0x0000000000000819: and al, byte ptr [rax]; add byte ptr [rax], al; mov r8d, 0xffffffff; mov r9d, 0; mov rax, 9; syscall; 
0x000000000000074c: and byte ptr [rax], al; call 0x660; call 0x6a0; mov byte ptr [rip + 0x2008b9], 1; pop rbp; ret; 
0x0000000000000601: and byte ptr [rax], al; test rax, rax; je 0x60a; call rax; 
0x0000000000000601: and byte ptr [rax], al; test rax, rax; je 0x60a; call rax; add rsp, 8; ret; 
0x00000000000006bc: and byte ptr [rax], al; test rax, rax; je 0x6d0; pop rbp; jmp rax; 
0x000000000000070d: and byte ptr [rax], al; test rax, rax; je 0x720; pop rbp; jmp rax; 
0x00000000000008f7: and eax, 0xebfffffd; cdq; nop; mov eax, 0; leave; ret; 
0x00000000000007c3: call 0x630; nop; leave; ret; 
0x00000000000007f2: call 0x640; nop; leave; ret; 
0x000000000000074e: call 0x660; call 0x6a0; mov byte ptr [rip + 0x2008b9], 1; pop rbp; ret; 
0x0000000000000753: call 0x6a0; mov byte ptr [rip + 0x2008b9], 1; pop rbp; ret; 
0x0000000000000a37: call qword ptr [rax + 1]; 
0x0000000000000a27: call qword ptr [rax]; 
0x0000000000000779: call qword ptr [rbp + 0x48]; 
0x0000000000000b93: call qword ptr [rbx]; 
0x0000000000000af3: call qword ptr [rcx]; 
0x0000000000000b73: call qword ptr [rsi]; 
0x0000000000000608: call rax; 
0x0000000000000608: call rax; add rsp, 8; ret; 
0x00000000000008fc: cdq; nop; mov eax, 0; leave; ret; 
0x000000000000083d: clc; mov rdi, 0; mov rsi, rax; mov rdx, 0x1000; mov rax, 0; syscall; 
0x0000000000000749: cmp eax, 0x2008ba; call 0x660; call 0x6a0; mov byte ptr [rip + 0x2008b9], 1; pop rbp; ret; 
0x000000000000095c: fmul qword ptr [rax - 0x7d]; ret; 
0x00000000000005fa: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x2009e5; test rax, rax; je 0x60a; call rax; 
0x00000000000005ff: in eax, 9; and byte ptr [rax], al; test rax, rax; je 0x60a; call rax; 
0x0000000000000822: inc dword ptr [rcx - 0x47]; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 9; syscall; 
0x0000000000000822: inc dword ptr [rcx - 0x47]; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 9; syscall; ret; 
0x0000000000000606: je 0x60a; call rax; 
0x0000000000000606: je 0x60a; call rax; add rsp, 8; ret; 
0x00000000000006b5: je 0x6d0; mov rax, qword ptr [rip + 0x20091a]; test rax, rax; je 0x6d0; pop rbp; jmp rax; 
0x00000000000006c1: je 0x6d0; pop rbp; jmp rax; 
0x0000000000000706: je 0x720; mov rax, qword ptr [rip + 0x2008e1]; test rax, rax; je 0x720; pop rbp; jmp rax; 
0x0000000000000712: je 0x720; pop rbp; jmp rax; 
0x000000000000083c: jge 0x836; mov rdi, 0; mov rsi, rax; mov rdx, 0x1000; mov rax, 0; syscall; 
0x0000000000000bb3: jmp qword ptr [rbp]; 
0x0000000000000b53: jmp qword ptr [rsi]; 
0x00000000000006c4: jmp rax; 
0x00000000000007c9: leave; ret; 
0x000000000000070b: loope 0x715; and byte ptr [rax], al; test rax, rax; je 0x720; pop rbp; jmp rax; 
0x0000000000000758: mov byte ptr [rip + 0x2008b9], 1; pop rbp; ret; 
0x0000000000000840: mov dword ptr [rax], 0x48000000; mov esi, eax; mov rdx, 0x1000; mov rax, 0; syscall; 
0x000000000000083b: mov dword ptr [rbp - 8], edi; mov rdi, 0; mov rsi, rax; mov rdx, 0x1000; mov rax, 0; syscall; 
0x0000000000000864: mov dword ptr [rsp - 0x32], eax; ret; 
0x00000000000007be: mov eax, 0; call 0x630; nop; leave; ret; 
0x00000000000008fe: mov eax, 0; leave; ret; 
0x0000000000000850: mov eax, 0; syscall; 
0x0000000000000850: mov eax, 0; syscall; ret; 
0x000000000000081e: mov eax, 0xffffffff; mov r9d, 0; mov rax, 9; syscall; 
0x000000000000081e: mov eax, 0xffffffff; mov r9d, 0; mov rax, 9; syscall; ret; 
0x000000000000082a: mov eax, 9; syscall; 
0x000000000000082a: mov eax, 9; syscall; ret; 
0x0000000000000709: mov eax, dword ptr [rip + 0x2008e1]; test rax, rax; je 0x720; pop rbp; jmp rax; 
0x00000000000006b8: mov eax, dword ptr [rip + 0x20091a]; test rax, rax; je 0x6d0; pop rbp; jmp rax; 
0x00000000000005fd: mov eax, dword ptr [rip + 0x2009e5]; test rax, rax; je 0x60a; call rax; 
0x000000000000086a: mov eax, dword ptr [rsp - 0x42]; ret; 
0x000000000000085e: mov ebp, esp; jmp rax; 
0x0000000000000824: mov ecx, 0; mov rax, 9; syscall; 
0x0000000000000824: mov ecx, 0; mov rax, 9; syscall; ret; 
0x000000000000075a: mov ecx, 0x1002008; pop rbp; ret; 
0x000000000000083f: mov edi, 0; mov rsi, rax; mov rdx, 0x1000; mov rax, 0; syscall; 
0x0000000000000748: mov edi, dword ptr [rip + 0x2008ba]; call 0x660; call 0x6a0; mov byte ptr [rip + 0x2008b9], 1; pop rbp; ret; 
0x00000000000007f0: mov edi, eax; call 0x640; nop; leave; ret; 
0x00000000000007bc: mov edi, eax; mov eax, 0; call 0x630; nop; leave; ret; 
0x0000000000000849: mov edx, 0x1000; mov rax, 0; syscall; 
0x0000000000000849: mov edx, 0x1000; mov rax, 0; syscall; ret; 
0x0000000000000818: mov edx, 0x22; mov r8d, 0xffffffff; mov r9d, 0; mov rax, 9; syscall; 
0x00000000000007ea: mov esi, 0x60; mov rdi, rax; call 0x640; nop; leave; ret; 
0x0000000000000846: mov esi, eax; mov rdx, 0x1000; mov rax, 0; syscall; 
0x0000000000000846: mov esi, eax; mov rdx, 0x1000; mov rax, 0; syscall; ret; 
0x000000000000083a: mov qword ptr [rbp - 8], rdi; mov rdi, 0; mov rsi, rax; mov rdx, 0x1000; mov rax, 0; syscall; 
0x0000000000000863: mov qword ptr [rsp - 0x32], rax; ret; 
0x0000000000000817: mov r10d, 0x22; mov r8d, 0xffffffff; mov r9d, 0; mov rax, 9; syscall; 
0x000000000000081d: mov r8d, 0xffffffff; mov r9d, 0; mov rax, 9; syscall; 
0x000000000000081d: mov r8d, 0xffffffff; mov r9d, 0; mov rax, 9; syscall; ret; 
0x0000000000000823: mov r9d, 0; mov rax, 9; syscall; 
0x0000000000000823: mov r9d, 0; mov rax, 9; syscall; ret; 
0x000000000000084f: mov rax, 0; syscall; 
0x000000000000084f: mov rax, 0; syscall; ret; 
0x0000000000000829: mov rax, 9; syscall; 
0x0000000000000829: mov rax, 9; syscall; ret; 
0x0000000000000708: mov rax, qword ptr [rip + 0x2008e1]; test rax, rax; je 0x720; pop rbp; jmp rax; 
0x00000000000006b7: mov rax, qword ptr [rip + 0x20091a]; test rax, rax; je 0x6d0; pop rbp; jmp rax; 
0x00000000000005fc: mov rax, qword ptr [rip + 0x2009e5]; test rax, rax; je 0x60a; call rax; 
0x0000000000000869: mov rax, qword ptr [rsp - 0x42]; ret; 
0x000000000000085d: mov rbp, rsp; jmp rax; 
0x000000000000083e: mov rdi, 0; mov rsi, rax; mov rdx, 0x1000; mov rax, 0; syscall; 
0x0000000000000747: mov rdi, qword ptr [rip + 0x2008ba]; call 0x660; call 0x6a0; mov byte ptr [rip + 0x2008b9], 1; pop rbp; ret; 
0x00000000000007ef: mov rdi, rax; call 0x640; nop; leave; ret; 
0x00000000000007bb: mov rdi, rax; mov eax, 0; call 0x630; nop; leave; ret; 
0x0000000000000848: mov rdx, 0x1000; mov rax, 0; syscall; 
0x0000000000000848: mov rdx, 0x1000; mov rax, 0; syscall; ret; 
0x0000000000000845: mov rsi, rax; mov rdx, 0x1000; mov rax, 0; syscall; 
0x0000000000000845: mov rsi, rax; mov rdx, 0x1000; mov rax, 0; syscall; ret; 
0x00000000000006c8: nop dword ptr [rax + rax]; pop rbp; ret; 
0x00000000000006c7: nop dword ptr cs:[rax + rax]; pop rbp; ret; 
0x0000000000000717: nop word ptr [rax + rax]; pop rbp; ret; 
0x00000000000006c6: nop word ptr cs:[rax + rax]; pop rbp; ret; 
0x00000000000007c8: nop; leave; ret; 
0x00000000000008fd: nop; mov eax, 0; leave; ret; 
0x0000000000000833: nop; pop rbp; ret; 
0x0000000000000713: or al, 0x5d; jmp rax; 
0x00000000000005fb: or byte ptr [rax - 0x75], cl; add eax, 0x2009e5; test rax, rax; je 0x60a; call rax; 
0x000000000000075b: or byte ptr [rax], ah; add byte ptr [rcx], al; pop rbp; ret; 
0x000000000000082c: or dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000000082c: or dword ptr [rax], eax; add byte ptr [rax], al; syscall; ret; 
0x0000000000000600: or dword ptr [rax], esp; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000000006c2: or eax, 0x66e0ff5d; nop dword ptr cs:[rax + rax]; pop rbp; ret; 
0x000000000000096c: pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000000096e: pop r13; pop r14; pop r15; ret; 
0x0000000000000970: pop r14; pop r15; ret; 
0x0000000000000972: pop r15; ret; 
0x00000000000006c3: pop rbp; jmp rax; 
0x000000000000096b: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000000096f: pop rbp; pop r14; pop r15; ret; 
0x00000000000006d0: pop rbp; ret; 
0x0000000000000973: pop rdi; ret; 
0x0000000000000971: pop rsi; pop r15; ret; 
0x000000000000096d: pop rsp; pop r13; pop r14; pop r15; ret; 
0x00000000000007c4: push -0x6f000002; leave; ret; 
0x000000000000085c: push rbp; mov rbp, rsp; jmp rax; 
0x000000000000084a: ret 0x1000; 
0x0000000000000812: ret 7; 
0x0000000000000: ret; 
0x0000000000000851: rol byte ptr [rax], 0; add byte ptr [rax], al; syscall; 
0x0000000000000851: rol byte ptr [rax], 0; add byte ptr [rax], al; syscall; ret; 
0x000000000000082b: ror byte ptr [rcx], 0; add byte ptr [rax], al; syscall; 
0x000000000000082b: ror byte ptr [rcx], 0; add byte ptr [rax], al; syscall; ret; 
0x0000000000000605: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000000707: sbb byte ptr [rax - 0x75], cl; add eax, 0x2008e1; test rax, rax; je 0x720; pop rbp; jmp rax; 
0x00000000000006ba: sbb cl, byte ptr [rcx]; and byte ptr [rax], al; test rax, rax; je 0x6d0; pop rbp; jmp rax; 
0x00000000000006b6: sbb dword ptr [rax - 0x75], ecx; add eax, 0x20091a; test rax, rax; je 0x6d0; pop rbp; jmp rax; 
0x0000000000000985: sub esp, 8; add rsp, 8; ret; 
0x00000000000005f9: sub esp, 8; mov rax, qword ptr [rip + 0x2009e5]; test rax, rax; je 0x60a; call rax; 
0x0000000000000984: sub rsp, 8; add rsp, 8; ret; 
0x00000000000005f8: sub rsp, 8; mov rax, qword ptr [rip + 0x2009e5]; test rax, rax; je 0x60a; call rax; 
0x0000000000000830: syscall; 
0x0000000000000830: syscall; ret; 
0x00000000000006ca: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret; 
0x00000000000008cd: test eax, 0xebfffffe; ret; 
0x0000000000000604: test eax, eax; je 0x60a; call rax; 
0x0000000000000604: test eax, eax; je 0x60a; call rax; add rsp, 8; ret; 
0x00000000000006bf: test eax, eax; je 0x6d0; pop rbp; jmp rax; 
0x0000000000000710: test eax, eax; je 0x720; pop rbp; jmp rax; 
0x0000000000000603: test rax, rax; je 0x60a; call rax; 
0x0000000000000603: test rax, rax; je 0x60a; call rax; add rsp, 8; ret; 
0x00000000000006be: test rax, rax; je 0x6d0; pop rbp; jmp rax; 
0x000000000000070f: test rax, rax; je 0x720; pop rbp; jmp rax; 

203 gadgets found
