


Gadgets
=======


0x000000000042230d: adc ah, byte ptr [rip + 0xffff]; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000046db63: adc ah, byte ptr [rsi + 0xf]; outsd dx, dword ptr [rsi]; retf 0xf66; outsd dx, dword ptr [rsi]; ret 0x290f; 
0x0000000000472e95: adc al, 0; add byte ptr [rax - 0x77], cl; sbb byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x000000000043206f: adc al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004320d9: adc al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000469ec0: adc al, 0; add byte ptr [rax], al; syscall; 
0x0000000000440c47: adc al, 0x11; lea rcx, [rip - 0x60]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x000000000046232b: adc al, 0x11; test edx, edx; jne 0x62338; ret; 
0x00000000004224b5: adc al, 0x13; jmp rdx; 
0x0000000000419e15: adc al, 0x16; sub eax, edx; ret; 
0x000000000041b31c: adc al, 0x16; sub eax, edx; vzeroupper; ret; 
0x000000000041f665: adc al, 0x16; test r8d, r8d; je 0x1f66d; xchg eax, edx; sub eax, edx; ret; 
0x000000000043fc6e: adc al, 0x24; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x000000000047cd40: adc al, 0x24; mov r8, r13; mov rcx, r12; mov esi, 0xa; mov edi, 1; call rax; 
0x000000000043e841: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3e859; add rsp, 0x28; ret; 
0x000000000043f7b4: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3f7c1; add rsp, 0x28; ret; 
0x000000000046cf9b: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6cfcb; add rsp, 0x38; ret; 
0x000000000046d605: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6d61d; add rsp, 0x38; ret; 
0x0000000000472f20: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x72f2d; add rsp, 0x38; ret; 
0x00000000004083a5: adc al, 0x25; xor byte ptr [rax], al; add byte ptr [rax], al; call rdx; 
0x0000000000411865: adc al, 0x30; mov rax, r8; ret; 
0x000000000041f8cd: adc al, 0x3a; sub eax, edx; vzeroupper; ret; 
0x00000000004397d0: adc al, 0x48; lea eax, [rdi + 0x14]; ret; 
0x0000000000467b3b: adc al, 0x48; sub esp, 8; call qword ptr [rip + 0x455fa]; xor eax, eax; add rsp, 8; ret; 
0x000000000040d3fe: adc al, 0x4c; mov edx, esp; mov rsi, r15; mov rdi, rbp; call qword ptr [rbx + 0x40]; 
0x000000000045f17e: adc al, 0x90; mov qword ptr [rax + 0x10], rdi; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000045f14d: adc al, 0x90; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000045d238: adc al, 0x91; add rdx, rcx; jmp rdx; 
0x0000000000433500: adc al, 0x91; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000431c2e: adc al, 0x91; sub eax, edx; ret; 
0x00000000004224b1: adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000419f83: adc al, 0xa; sub eax, edx; ret; 
0x000000000041b49d: adc al, 0xa; sub eax, edx; vzeroupper; ret; 
0x000000000043eadb: adc al, 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000043ebab: adc al, 0xb8; add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000046abb3: adc al, 0xe9; ret; 
0x000000000043c0f4: adc al, 0xe; cmp rdi, rdx; jb 0x3c0fe; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000433751: adc al, 0xe; lea rcx, [rip + 0x53d86]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000431c21: adc al, 0xe; lea rcx, [rip + 0x558b6]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000041e83a: adc al, 0xe; sub eax, edx; ret; 
0x0000000000420a2a: adc al, 0xe; sub eax, edx; vzeroupper; ret; 
0x000000000047ceba: adc al, 0xf7; add rsp, 8; ret; 
0x0000000000450c93: adc al, 1; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000044420a: adc al, 4; add al, ch; fsubp st(3); sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000432217: adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000432281: adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000045228b: adc al, byte ptr [rax]; add byte ptr [rcx + rcx*4 - 0x16], cl; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000045b428: adc al, byte ptr [rax]; add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x0000000000472fda: adc al, byte ptr [rcx]; add byte ptr [rax], al; lea rax, [rip + 0x6b]; cmovne rax, rdx; ret; 
0x000000000046b5fc: adc al, ch; xchg dword ptr cs:[rax], eax; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000441183: adc al, ch; xlatb; push rdi; std; dec dword ptr [rax - 0x77]; ret; 
0x0000000000421766: adc ax, 6; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000462803: adc bh, dh; jmp qword ptr [rsi + 0x2e]; 
0x0000000000476ef2: adc bl, ch; jno 0x76f3f; shl ecx, cl; mov qword ptr [rdi], r9; ret; 
0x0000000000429cf0: adc bl, dh; movq qword ptr [rdi + 0x10], mm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043ce66: adc bl, dh; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x00000000004397a6: adc bl, dh; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x13]; ret; 
0x00000000004397c6: adc bl, dh; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, [rdi + 0x14]; ret; 
0x0000000000439116: adc bl, dh; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000439106: adc bl, dh; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000439827: adc bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x0000000000439847: adc bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x0000000000439197: adc bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000439177: adc bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000439767: adc bl, dh; movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x00000000004390d7: adc bl, dh; movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000439928: adc bl, dh; movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; lea rax, [rdi + 0x1f]; ret; 
0x0000000000439278: adc bl, dh; movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x000000000047ab97: adc bl, dh; movups xmm0, xmmword ptr [rip + 0x21a98]; divss xmm0, dword ptr [rip + 0x21a94]; ret; 
0x0000000000429cef: adc bl, r14b; movq qword ptr [rdi + 0x10], mm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x00000000004397a5: adc bl, r14b; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x13]; ret; 
0x00000000004397c5: adc bl, r14b; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, [rdi + 0x14]; ret; 
0x0000000000439115: adc bl, r14b; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000439105: adc bl, r14b; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000439826: adc bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x0000000000439846: adc bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x0000000000439196: adc bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000439176: adc bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000439766: adc bl, r14b; movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x00000000004390d6: adc bl, r14b; movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; ret; 
0x000000000040d7a8: adc byte ptr [r11 + 0x4c], r14b; movzx eax, byte ptr [rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000040d786: adc byte ptr [r11 + 6], r14b; movzx eax, byte ptr [rax]; ret; 
0x0000000000479ba5: adc byte ptr [r13 + 0x51840fc0], al; add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x000000000041fe5f: adc byte ptr [r14 + 0xf], r12b; xlatb; rol dword ptr [rbp + 0x315775c0], 0xc0; ret; 
0x000000000043c222: adc byte ptr [r15], r9b; adc dword ptr [rdi + rdx - 0x10], edx; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x0000000000443d26: adc byte ptr [r15], r9b; xchg eax, ebp; ret; 
0x000000000046d26f: adc byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x000000000040ad42: adc byte ptr [r8 + 1], r9b; ret; 
0x0000000000410d6f: adc byte ptr [r8 - 0x77], r9b; ret 0xf8b; 
0x000000000040ef8c: adc byte ptr [r8 - 0x77], r9b; sbb byte ptr [r8 - 0x77], r9b; push rdi; mov qword ptr [rdi + 8], rax; ret; 
0x0000000000468d49: adc byte ptr [r9 + 3], cl; add eax, dword ptr [rbp - 0x7b]; sal byte ptr [rbp + 0x10], cl; mov qword ptr [rbp - 0xd8], r11; call rax; 
0x000000000043fb9b: adc byte ptr [r9 + 9], cl; ror dword ptr [rcx + rcx*4 + 0x48], 1; or bl, ch; ret; 
0x000000000043fa8d: adc byte ptr [r9 - 0x77], r9b; ret 0x8349; 
0x000000000041185a: adc byte ptr [rax + 0x29], cl; ret 0x3948; 
0x0000000000470485: adc byte ptr [rax + 0x29], cl; ret 0xc148; 
0x000000000043954a: adc byte ptr [rax + 0x29], cl; retf 0x8d4c; sbb eax, 0x4a7fb; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f2a: adc byte ptr [rax + 0x29], cl; retf 0x8d4c; sbb eax, 0x4ad9b; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000450219: adc byte ptr [rax + 0x39], cl; ret 0x8e0f; 
0x00000000004140f3: adc byte ptr [rax + 0x39], cl; ret 0xef75; 
0x0000000000476a24: adc byte ptr [rax + 0x3b], cl; sub byte ptr [rbx - 0x1b], sil; mov eax, 1; ret; 
0x000000000046d270: adc byte ptr [rax + 0x5a], bl; pop rbx; ret; 
0x000000000045d13f: adc byte ptr [rax + 0x63], cl; add al, 0x81; add rax, rcx; jmp rax; 
0x0000000000438f07: adc byte ptr [rax + 0xf], cl; mov esp, 0x1d8d4cd2; mov ebp, 0x490004ad; movsxd rcx, dword ptr [rbx + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439527: adc byte ptr [rax + 0xf], cl; mov esp, 0x1d8d4cd2; sbb eax, 0x490004a8; movsxd rcx, dword ptr [rbx + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000040a422: adc byte ptr [rax + 1], cl; ret 0x2b48; 
0x00000000004768cc: adc byte ptr [rax + 1], cl; ret 0x3949; 
0x000000000040ad43: adc byte ptr [rax + 1], cl; ret; 
0x0000000000402210: adc byte ptr [rax - 0x39], cl; ret 0; 
0x0000000000472fd6: adc byte ptr [rax - 0x73], cl; adc eax, 0x112; lea rax, [rip + 0x6b]; cmovne rax, rdx; ret; 
0x0000000000417c16: adc byte ptr [rax - 0x73], cl; adc eax, 0x240a2; lea rax, [rip + 0x23ffb]; cmovne rax, rdx; ret; 
0x0000000000418486: adc byte ptr [rax - 0x73], cl; adc eax, 0xfffffd02; lea rax, [rip + 0x232eb]; cmove rax, rdx; ret; 
0x000000000046233c: adc byte ptr [rax - 0x73], cl; or al, 0x8e; add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000402777: adc byte ptr [rax - 0x73], cl; xor eax, 0x7e959; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000046233b: adc byte ptr [rax - 0x73], r9b; or al, 0x8e; add eax, dword ptr [rcx + rdx]; ret; 
0x000000000040ef23: adc byte ptr [rax - 0x75], cl; add byte ptr [rcx + 0x39], cl; ror byte ptr [rdi + rcx + 0x4f], 1; ret 0x8548; 
0x00000000004025a1: adc byte ptr [rax - 0x75], cl; and al, 0x18; call rax; 
0x000000000040a17e: adc byte ptr [rax - 0x75], cl; push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x0000000000440254: adc byte ptr [rax - 0x75], cl; push rsi; or byte ptr [rbx + 0x94801e2], al; ret 0x8948; 
0x000000000040a198: adc byte ptr [rax - 0x75], cl; xchg eax, ebx; nop; add byte ptr [rax], al; add byte ptr [rcx + 1], cl; ret; 
0x0000000000413ace: adc byte ptr [rax - 0x77], cl; and al, 8; mov qword ptr [rsp], rdi; call rax; 
0x000000000045f183: adc byte ptr [rax - 0x77], cl; jo 0x5f1c8; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000045e438: adc byte ptr [rax - 0x77], cl; mov qword ptr [rax], rdx; ret; 
0x0000000000460f5e: adc byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x00000000004108fc: adc byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x00000000004707cf: adc byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000410d70: adc byte ptr [rax - 0x77], cl; ret 0xf8b; 
0x000000000040ef8d: adc byte ptr [rax - 0x77], cl; sbb byte ptr [r8 - 0x77], r9b; push rdi; mov qword ptr [rdi + 8], rax; ret; 
0x000000000043fa49: adc byte ptr [rax - 0x7b], cl; push qword ptr [rbp + 0x27]; mov rdi, qword ptr [rbp]; call rbx; 
0x00000000004808f6: adc byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rdx + 0x48]; mov eax, dword ptr [rdi + 0x20]; test rax, rax; je 0x8090c; call rax; 
0x0000000000435e77: adc byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x85; call qword ptr [rbx]; 
0x0000000000435eb3: adc byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x85; ret; 
0x0000000000413965: adc byte ptr [rax - 0x7d], cl; clc; dec dword ptr [rax - 0x77]; ret 0x840f; 
0x000000000041238b: adc byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x00000000004420cd: adc byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x00000000004023ec: adc byte ptr [rax - 0x7d], cl; ret; 
0x0000000000461ac7: adc byte ptr [rax - 1], bh; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000040db82: adc byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000046b25b: adc byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in eax, 0x48; mov esi, ebp; syscall; 
0x0000000000402a6e: adc byte ptr [rax], al; add byte ptr [rax - 0x77], cl; or byte ptr [rax + 0x9e], r15b; mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x000000000043e562: adc byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000041e89a: adc byte ptr [rax], al; add byte ptr [rax - 0x77], cl; retf 0x8349; ret 0x7f10; 
0x0000000000432002: adc byte ptr [rax], al; add byte ptr [rax - 0x77], cl; retf 0x8349; ret 0xf10; 
0x0000000000433acc: adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000432421: adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004712ec: adc byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 0x77], al; ret; 
0x00000000004117cc: adc byte ptr [rax], al; add byte ptr [rax], al; cmovne rax, rdx; mov qword ptr [rip + 0x9d9bd], rax; ret; 
0x000000000043f406: adc byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x48; syscall; 
0x000000000043d3e2: adc byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000462160: adc byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000042fcd8: adc byte ptr [rax], al; add cl, ch; retf 0xfffe; jmp qword ptr [rsi + 0xf]; 
0x00000000004020fe: adc byte ptr [rax], al; add dh, dh; ret 0x7402; 
0x000000000044db36: adc byte ptr [rbp + 0x41], bl; pop rsp; pop r13; ret; 
0x000000000045f146: adc byte ptr [rbp + 0x494575f6], al; lea edx, [rax + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000479ba6: adc byte ptr [rbp + 0x51840fc0], al; add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x00000000004579c0: adc byte ptr [rbp + 0x63], cl; ret; 
0x000000000043958f: adc byte ptr [rbp + rcx*4 + 0x1d], cl; mov ecx, 0x490004a7; movsxd rcx, dword ptr [rbx + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000440273: adc byte ptr [rbp - 0x7b], cl; sal byte ptr [rdi + rdx*2 + 0x4d], 0x89; ret; 
0x000000000040d7a9: adc byte ptr [rbx + 0x4c], dh; movzx eax, byte ptr [rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000045cd67: adc byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x000000000040a658: adc byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000046b1ff: adc byte ptr [rbx + 0x5d], bl; ret; 
0x00000000004391d7: adc byte ptr [rbx + 0xff3174e], cl; jg 0x391e6; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x0000000000439887: adc byte ptr [rbx + 0xff3174e], cl; jg 0x39896; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; lea rax, [rdi + 0x1a]; ret; 
0x00000000004391f7: adc byte ptr [rbx + 0xff3184e], cl; jg 0x39206; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x00000000004398a7: adc byte ptr [rbx + 0xff3184e], cl; jg 0x398b6; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x000000000040d787: adc byte ptr [rbx + 6], dh; movzx eax, byte ptr [rax]; ret; 
0x0000000000414b23: adc byte ptr [rbx + rcx*4 + 0x3c], cl; ret 0x8b49; 
0x0000000000410952: adc byte ptr [rbx - 0x2fd6efb9], cl; ret; 
0x00000000004413f7: adc byte ptr [rbx - 0x59], dh; xor eax, eax; ret; 
0x000000000044da74: adc byte ptr [rbx - 0x72f00108], al; ret 0; 
0x0000000000467676: adc byte ptr [rbx], al; add byte ptr [rax], al; lea rax, [rax + rdx*4]; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x0000000000467659: adc byte ptr [rbx], al; add byte ptr [rax], al; ret; 
0x000000000040fb3f: adc byte ptr [rcx + 0x807448], al; add byte ptr [rax], al; mov rax, qword ptr [rax + 0x68]; test rax, rax; jne 0xfb40; ret; 
0x0000000000468d4a: adc byte ptr [rcx + 3], cl; add eax, dword ptr [rbp - 0x7b]; sal byte ptr [rbp + 0x10], cl; mov qword ptr [rbp - 0xd8], r11; call rax; 
0x000000000043fb9c: adc byte ptr [rcx + 9], cl; ror dword ptr [rcx + rcx*4 + 0x48], 1; or bl, ch; ret; 
0x000000000047f31d: adc byte ptr [rcx + rcx*4 - 0x11], cl; call rax; 
0x000000000044db5a: adc byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x0000000000413f22: adc byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x00000000004091ae: adc byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000473c8f: adc byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; ret; 
0x000000000045f1b3: adc byte ptr [rcx - 0x73], cl; adc al, 0x90; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000440d5f: adc byte ptr [rcx - 0x73], cl; add dword ptr [rax - 0x77], ecx; add eax, 0x6d57d; ret; 
0x000000000043ea70: adc byte ptr [rcx - 0x77], al; ror byte ptr [rbx + 0x3108247c], 0xc0; syscall; 
0x000000000043fa8e: adc byte ptr [rcx - 0x77], cl; ret 0x8349; 
0x000000000047a8dc: adc byte ptr [rcx - 0x77], cl; ret; 
0x0000000000414fbb: adc byte ptr [rcx - 0x7d], al; ret; 
0x000000000041e8cd: adc byte ptr [rcx - 0x7d], cl; ret 0x7f10; 
0x0000000000443b99: adc byte ptr [rcx], al; add byte ptr [rax], al; mov eax, r12d; pop r12; ret; 
0x000000000040c56c: adc byte ptr [rcx], al; add byte ptr [rax], al; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x000000000043bd23: adc byte ptr [rcx], ch; cmp edx, ecx; jle 0x3bd3c; movsxd rax, ecx; ret; 
0x000000000045fd15: adc byte ptr [rcx], cl; ret 0x3949; 
0x000000000043c33d: adc byte ptr [rdi], cl; adc dword ptr [rdi + 0x20], esi; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x000000000043c223: adc byte ptr [rdi], cl; adc dword ptr [rdi + rdx - 0x10], edx; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x00000000004161a1: adc byte ptr [rdi], cl; test dword ptr [rip + 0x5b000002], ebp; mov rax, r8; pop rbp; pop r12; ret; 
0x0000000000439d93: adc byte ptr [rdi], cl; test esi, edx; add dword ptr [rax], eax; add dh, dh; ret 0x7510; 
0x000000000041ecb1: adc byte ptr [rdi], cl; xchg ah, bl; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000041eda1: adc byte ptr [rdi], cl; xchg ah, ch; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000041ebc1: adc byte ptr [rdi], cl; xchg ah, cl; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000041f609: adc byte ptr [rdi], cl; xchg byte ptr [rax + rax - 0x7cb80000], al; ret 0xeb10; 
0x000000000041f161: adc byte ptr [rdi], cl; xchg byte ptr [rax - 0x7cb80000], ch; ret 0xeb10; 
0x000000000041e8f1: adc byte ptr [rdi], cl; xchg byte ptr [rbp + rcx - 0x7cb80000], bl; ret 0xeb10; 
0x000000000041f341: adc byte ptr [rdi], cl; xchg byte ptr [rbx + rax], cl; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000041ead1: adc byte ptr [rdi], cl; xchg byte ptr [rbx + rcx - 0x7cb80000], bh; ret 0xeb10; 
0x000000000041f521: adc byte ptr [rdi], cl; xchg byte ptr [rcx + rax], ch; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000041f431: adc byte ptr [rdi], cl; xchg byte ptr [rdx + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000041ed73: adc byte ptr [rdi], cl; xchg byte ptr [rdx], bl; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000041ee63: adc byte ptr [rdi], cl; xchg byte ptr [rdx], ch; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000041ec83: adc byte ptr [rdi], cl; xchg byte ptr [rdx], cl; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000041e9e1: adc byte ptr [rdi], cl; xchg byte ptr [rsp + rcx - 0x7cb80000], ch; ret 0xeb10; 
0x000000000041eb93: adc byte ptr [rdi], cl; xchg dl, bh; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000041e9b3: adc byte ptr [rdi], cl; xchg dl, bl; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000041eaa3: adc byte ptr [rdi], cl; xchg dl, ch; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000041e8c3: adc byte ptr [rdi], cl; xchg dl, cl; or eax, 0x83480000; ret 0x4910; 
0x0000000000443d27: adc byte ptr [rdi], cl; xchg eax, ebp; ret; 
0x000000000043ee70: adc byte ptr [rdi], cl; xchg eax, esp; ret 0x2044; 
0x0000000000441505: adc byte ptr [rdx + 0x1c], dh; cmp rdx, qword ptr [rdi + 0x18]; ja 0x41524; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000460c90: adc byte ptr [rdx + 1], ch; push 0; lea rcx, [rax + 4]; lea r9, [rsp + 0x20]; call rbx; 
0x0000000000460c16: adc byte ptr [rdx + 1], ch; xor edx, edx; push 1; lea r9, [rsp + 0x20]; call rbx; 
0x000000000043b866: adc byte ptr [rdx], al; jne 0x3b880; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x3b860; ret; 
0x000000000043b916: adc byte ptr [rdx], al; jne 0x3b930; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x3b910; ret; 
0x00000000004218eb: adc byte ptr [rdx], cl; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043b865: adc byte ptr [rdx], r8b; jne 0x3b880; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x3b860; ret; 
0x000000000043b915: adc byte ptr [rdx], r8b; jne 0x3b930; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x3b910; ret; 
0x000000000047ab9a: adc byte ptr [rip + 0x21a98], al; divss xmm0, dword ptr [rip + 0x21a94]; ret; 
0x0000000000439d63: adc byte ptr [rsi + 0x66], ah; nop dword ptr cs:[rax + rax]; nop; xor rax, rax; ret; 
0x0000000000420d95: adc byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042179a: adc byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret; 
0x0000000000420d90: adc byte ptr [rsi + 0xf], ah; out dx, eax; push rsi; adc byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000418b65: adc byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; fmul qword ptr [rcx - 0x7d]; ret 0x7f10; 
0x000000000042d9eb: adc byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; fmul qword ptr [rcx - 0x7d]; ret 0xf10; 
0x0000000000418bab: adc byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; fsub st(1), st(0); imul edi, edi, -1; jmp qword ptr [rsi + 0x66]; 
0x000000000041fe60: adc byte ptr [rsi + 0xf], ah; xlatb; rol dword ptr [rbp + 0x315775c0], 0xc0; ret; 
0x000000000043c09b: adc byte ptr [rsi + rdx - 0x10], cl; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000043c219: adc byte ptr [rsi + rdx - 0x20], bl; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm1; movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000044152b: adc byte ptr [rsi + rsi*8 + 0x48], bh; cmp edx, dword ptr [rdi + 0x18]; jg 0x41524; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x000000000042d03a: adc byte ptr [rsi - 0x75], ah; mov cx, word ptr ss:[rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x00000000004391b7: adc byte ptr [rsi - 0x75], ah; sbb bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x000000000043c098: adc byte ptr [rsi], al; movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000451258: adc cl, byte ptr [rax - 0x75]; adc cl, byte ptr [rbx + rcx*4 + 0x74]; ret 0x4c40; 
0x000000000047d9c2: adc cl, byte ptr [rax - 0x75]; and al, 8; mov qword ptr [rsp + 0x10], r10; call rax; 
0x0000000000410d85: adc cl, byte ptr [rax - 0x75]; or byte ptr [r8 + 0x39], r9b; sal byte ptr [rbx + 0x21], 1; movzx eax, byte ptr [rax]; ret; 
0x0000000000435ba5: adc cl, byte ptr [rax - 1]; ret 0x2288; 
0x000000000045125b: adc cl, byte ptr [rbx + rcx*4 + 0x74]; ret 0x4c40; 
0x00000000004745fa: adc cl, byte ptr [rcx + 0x48b48d8]; ret 0x8b48; 
0x000000000040ca92: adc cl, byte ptr [rdx]; add byte ptr [rbx + 0xc08b], cl; add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x000000000040ac98: adc cl, ch; ret 0xfffe; 
0x00000000004731e9: adc dh, byte ptr [rbx - 0xc]; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000000045f7f9: adc dword ptr [rax + 0x39], ecx; ret; 
0x000000000040d6e5: adc dword ptr [rax + 0x48000000], -0x77; call 0x5c42344c; ret; 
0x00000000004083a1: adc dword ptr [rax + rcx*2 + 0x33], esp; adc al, 0x25; xor byte ptr [rax], al; add byte ptr [rax], al; call rdx; 
0x00000000004083bf: adc dword ptr [rax + rcx*2 + 0x33], esp; add al, 0x25; xor byte ptr [rax], al; add byte ptr [rax], al; call rax; 
0x000000000044f94d: adc dword ptr [rax - 0x39], ecx; ret 0xffe8; 
0x000000000041176d: adc dword ptr [rax - 0x3f], ecx; call 0x508e5f79; add dword ptr [rax - 0x77], ecx; adc eax, 0x9afd3; ret; 
0x000000000040a9c3: adc dword ptr [rax - 0x3f], ecx; cli; add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret 0x2948; 
0x0000000000440c48: adc dword ptr [rax - 0x73], ecx; or eax, 0xffffffa0; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x000000000044fa19: adc dword ptr [rax - 0x75], ecx; pop rax; mov rdx, -0x18; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000046221e: adc dword ptr [rax - 0x77], ecx; add eax, 0x4d3d2; cmp rdi, rax; ja 0x62250; xor eax, eax; ret; 
0x000000000045b3a7: adc dword ptr [rax - 0x77], ecx; ret 0xc148; 
0x0000000000441af6: adc dword ptr [rax - 0x7b], ecx; sal byte ptr [rsp + rcx + 0x48], cl; lea edi, [rcx + rsi + 0x20]; jmp rdx; 
0x0000000000433acb: adc dword ptr [rax], 0x83480000; ret 0x4910; 
0x000000000040c56b: adc dword ptr [rax], 1; add byte ptr [rax], al; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x00000000004524e6: adc dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; fimul dword ptr [rcx + rcx*4 - 0x1a]; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x00000000004323b7: adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004339cf: adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000473914: adc dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x0000000000473914: adc dword ptr [rax], eax; add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x73928; ret; 
0x0000000000401c1e: adc dword ptr [rax], edi; test rax, rax; je 0x1c30; mov edi, 0x4adb30; jmp rax; 
0x00000000004209d6: adc dword ptr [rbp + 0x31000002], -0x40; vzeroupper; ret; 
0x000000000042a3b6: adc dword ptr [rbp + 0x4c000000], -0x73; sbb eax, 0x592ce; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043c348: adc dword ptr [rbx], eax; ret; 
0x000000000043c2c1: adc dword ptr [rbx], esp; ret; 
0x000000000046ad13: adc dword ptr [rcx + 4], ecx; add byte ptr [rcx], bh; ret 0x373; 
0x000000000042d309: adc dword ptr [rcx + 5], ebp; vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000042d310: adc dword ptr [rcx + 6], esi; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000042d317: adc dword ptr [rcx + 7], edi; ret; 
0x000000000043c2b3: adc dword ptr [rcx - 0x10], esi; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000043c2b7: adc dword ptr [rcx - 0x20], edi; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000043c2bc: adc dword ptr [rcx - 0x30], eax; movups xmmword ptr [r11], xmm4; ret; 
0x000000000042cfb2: adc dword ptr [rcx - 1], ebx; ret; 
0x000000000042cf76: adc dword ptr [rcx - 1], edi; ret; 
0x000000000042cfab: adc dword ptr [rcx - 2], edx; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000042d1a9: adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000042cf6f: adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000042d1a2: adc dword ptr [rcx - 3], ebp; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000042cf68: adc dword ptr [rcx - 3], ebp; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000042d19b: adc dword ptr [rcx - 4], esp; vmovups zmmword ptr [r9 - 0xc0], zmm13; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000042cf61: adc dword ptr [rcx - 4], esp; vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000043c2b0: adc dword ptr [rcx], ebp; movups xmmword ptr [rcx - 0x10], xmm6; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000043c33b: adc dword ptr [rdi + 0x10], ebp; movups xmmword ptr [rdi + 0x20], xmm6; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x000000000043c221: adc dword ptr [rdi + 0x10], ecx; movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000043c33f: adc dword ptr [rdi + 0x20], esi; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x000000000043c343: adc dword ptr [rdi + 0x30], edi; movups xmmword ptr [r11], xmm8; ret; 
0x000000000042cfa4: adc dword ptr [rdi + 1], ecx; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000043be81: adc dword ptr [rdi + 1], edx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043c0a3: adc dword ptr [rdi + rdx - 0x10], ecx; ret; 
0x000000000043c225: adc dword ptr [rdi + rdx - 0x10], edx; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000043c1f8: adc dword ptr [rdi + rdx - 0x10], esp; movups xmmword ptr [rdi + rdx - 0x20], xmm5; movups xmmword ptr [rdi + rdx - 0x30], xmm6; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x000000000043c1fd: adc dword ptr [rdi + rdx - 0x20], ebp; movups xmmword ptr [rdi + rdx - 0x30], xmm6; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x000000000043c22a: adc dword ptr [rdi + rdx - 0x20], ebx; ret; 
0x000000000043c202: adc dword ptr [rdi + rdx - 0x30], esi; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x000000000043c207: adc dword ptr [rdi + rdx - 0x40], edi; ret; 
0x000000000042d464: adc dword ptr [rdi - 5], esp; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000042d46b: adc dword ptr [rdi - 6], ebp; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000042d472: adc dword ptr [rdi - 7], esi; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000042d479: adc dword ptr [rdi - 8], edi; ret; 
0x000000000043c21e: adc dword ptr [rdi], eax; movups xmmword ptr [rdi + 0x10], xmm1; movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000043c0a0: adc dword ptr [rdi], eax; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000042cf9e: adc dword ptr [rdi], eax; vmovups zmmword ptr [rdi + 0x40], zmm1; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000043b390: adc dword ptr [rdi], ecx; test byte ptr [rbx], bl; add al, byte ptr [rax]; add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x000000000043be7b: adc dword ptr [rdi], edx; vmovups zmmword ptr [rdi + 0x40], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043be9c: adc dword ptr [rdi], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043c338: adc dword ptr [rdi], esp; movups xmmword ptr [rdi + 0x10], xmm5; movups xmmword ptr [rdi + 0x20], xmm6; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x000000000043bd03: adc dword ptr [rsi + 0xf], esp; outsd dx, dword ptr [rsi]; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rax], al; ret 0xf66; 
0x00000000004706e4: adc dword ptr [rsi + 0xf], esp; outsd dx, dword ptr [rsi]; retf 0xf66; outsd dx, dword ptr [rsi]; ret 0x290f; 
0x000000000043bfc1: adc dword ptr [rsi + 1], edx; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000043bfc8: adc dword ptr [rsi + 2], edx; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000043bfcf: adc dword ptr [rsi + 3], edx; ret; 
0x000000000043c05e: adc dword ptr [rsi + 5], edx; vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000043c065: adc dword ptr [rsi + 6], edx; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000043c06c: adc dword ptr [rsi + 7], edx; ret; 
0x000000000043be6e: adc dword ptr [rsi - 1], edx; ret; 
0x000000000043be67: adc dword ptr [rsi - 2], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043be60: adc dword ptr [rsi - 3], edx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043be59: adc dword ptr [rsi - 4], edx; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043bfbb: adc dword ptr [rsi], edx; vmovups zmmword ptr [rsi + 0x40], zmm2; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x00000000004323b6: adc dword ptr es:[rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000444175: adc eax, 0; xor r8d, r8d; xor ecx, ecx; xor edx, edx; push rax; call rbx; 
0x0000000000472fd9: adc eax, 0x112; lea rax, [rip + 0x6b]; cmovne rax, rdx; ret; 
0x00000000004185ca: adc eax, 0x11dd1; cmovne rax, rdx; ret; 
0x000000000041882a: adc eax, 0x17041; cmovne rax, rdx; ret; 
0x0000000000418970: adc eax, 0x1c8bb; lea rax, [rip + 0x1c474]; cmove rax, rdx; ret; 
0x000000000047fc42: adc eax, 0x1cfd1; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000417c90: adc eax, 0x1d92b; lea rax, [rip + 0x1d784]; cmove rax, rdx; ret; 
0x0000000000417bf7: adc eax, 0x1e0a4; cmovne rax, rdx; ret; 
0x00000000004187d7: adc eax, 0x1ec74; cmovne rax, rdx; ret; 
0x000000000047db22: adc eax, 0x1f0b1; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000043f615: adc eax, 0x1f0f0000; test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; syscall; 
0x00000000004808fb: adc eax, 0x20478b48; test rax, rax; je 0x8090c; call rax; 
0x000000000047ae19: adc eax, 0x21822; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000418518: adc eax, 0x21af3; cmovne rax, rdx; ret; 
0x0000000000417b37: adc eax, 0x221b4; cmovne rax, rdx; ret; 
0x00000000004188f1: adc eax, 0x2378a; lea rax, [rip + 0x23823]; cmove rax, rdx; ret; 
0x0000000000418771: adc eax, 0x238fa; lea rax, [rip + 0x23993]; cmove rax, rdx; ret; 
0x0000000000418601: adc eax, 0x23a7a; lea rax, [rip + 0x23b13]; cmove rax, rdx; ret; 
0x0000000000418877: adc eax, 0x23bb4; lea rax, [rip + 0x23bed]; cmove rax, rdx; ret; 
0x00000000004186f7: adc eax, 0x23d24; lea rax, [rip + 0x23d5d]; cmove rax, rdx; ret; 
0x0000000000418587: adc eax, 0x23ea4; lea rax, [rip + 0x23edd]; cmove rax, rdx; ret; 
0x00000000004188d1: adc eax, 0x23f8a; lea rax, [rip + 0x23fd3]; cmove rax, rdx; ret; 
0x0000000000475082: adc eax, 0x24048b49; pop rbx; add rax, qword ptr [rdx + 8]; pop rbp; pop r12; jmp rax; 
0x0000000000417c19: adc eax, 0x240a2; lea rax, [rip + 0x23ffb]; cmovne rax, rdx; ret; 
0x0000000000418751: adc eax, 0x240fa; lea rax, [rip + 0x24143]; cmove rax, rdx; ret; 
0x000000000041867c: adc eax, 0x2479f; lea rax, [rip + 0x24738]; cmovne rax, rdx; ret; 
0x0000000000418661: adc eax, 0x248ca; lea rax, [rip + 0x24913]; cmove rax, rdx; ret; 
0x00000000004186a5: adc eax, 0x24a06; lea rax, [rip + 0x24a5f]; cmove rax, rdx; ret; 
0x0000000000417b97: adc eax, 0x24e4; cmovne rax, rdx; ret; 
0x0000000000472d26: adc eax, 0x256f1; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000461067: adc eax, 0x34; cmovne rax, rdx; ret; 
0x0000000000473240: adc eax, 0x3ab; lea rax, [rip + 0x74]; cmove rax, rdx; ret; 
0x0000000000472cb7: adc eax, 0x3ae04; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x000000000047397c: adc eax, 0x3be37; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000467b41: adc eax, 0x455fa; xor eax, eax; add rsp, 8; ret; 
0x000000000043e472: adc eax, 0x45f25; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x000000000042a1a5: adc eax, 0x46f00ff2; add eax, 0xef00ff2; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a1a0: adc eax, 0x477f0ff3; adc eax, 0x46f00ff2; add eax, 0xef00ff2; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000461a9f: adc eax, 0x480004a0; test eax, eax; je 0x61ad8; call rax; 
0x000000000041881d: adc eax, 0x4802e680; lea eax, [rip + 0x14e08]; lea rdx, [rip + 0x17041]; cmovne rax, rdx; ret; 
0x0000000000417cf4: adc eax, 0x4802e680; lea eax, [rip + 0x3a21]; lea rdx, [rip + 0x526a]; cmovne rax, rdx; ret; 
0x000000000041850b: adc eax, 0x4802e680; lea eax, [rip + 0x7ffa]; lea rdx, [rip + 0x21af3]; cmovne rax, rdx; ret; 
0x000000000040f8ca: adc eax, 0x48438b48; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x0000000000417d01: adc eax, 0x526a; cmovne rax, rdx; ret; 
0x0000000000434bb8: adc eax, 0x52923; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000434b9e: adc eax, 0x5293d; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000433548: adc eax, 0x53f93; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043352e: adc eax, 0x53fad; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000431998: adc eax, 0x55b43; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043197e: adc eax, 0x55b5d; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000042f848: adc eax, 0x57c93; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000042f82e: adc eax, 0x57cad; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044f925: adc eax, 0x5e0ce; cmp qword ptr fs:[rdi], rsi; je 0x4f938; ret; 
0x00000000004216ed: adc eax, 0x63490006; or al, 0x93; add rcx, r11; jmp rcx; 
0x0000000000417887: adc eax, 0x6b29c; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000478352: adc eax, 0x75f68548; sub bh, al; add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x0000000000406f8a: adc eax, 0x7a3d1; mov r8d, r8d; movsxd rdi, dword ptr [r10 + r8*4]; add rdi, r10; jmp rdi; 
0x0000000000418930: adc eax, 0x7a9b; lea rax, [rip + 0x75c4]; cmove rax, rdx; ret; 
0x00000000004184c0: adc eax, 0x7c3b; lea rax, [rip + 0x7704]; cmove rax, rdx; ret; 
0x0000000000402efe: adc eax, 0x7e391; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000401af8: adc eax, 0x823e7; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000431f41: adc eax, 0x83480000; ret 0xe910; 
0x0000000000414513: adc eax, 0x98288; lea rax, [rip + 0x98281]; add rsp, 0x10; pop rbp; ret; 
0x0000000000411c23: adc eax, 0x9ab20; cmp rax, rdx; jne 0x11c2e; ret; 
0x0000000000411778: adc eax, 0x9afd3; ret; 
0x0000000000411c19: adc eax, 0x9b40a; add rax, rcx; add rdx, qword ptr [rip + 0x9ab20]; cmp rax, rdx; jne 0x11c2e; ret; 
0x0000000000410ca6: adc eax, 0x9e465; mov qword ptr [rip + 0x9e466], rbx; add dword ptr [rip + 0x9e45b], 1; pop rbx; ret; 
0x0000000000402594: adc eax, 0xacc1f; mov edi, dword ptr [rsp + 0xc]; mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x00000000004021db: adc eax, 0xad11c; pop rbx; ret; 
0x000000000045f6f0: adc eax, 0xb2b; lea rax, [rip + 0x834]; cmove rax, rdx; ret; 
0x0000000000460950: adc eax, 0xc3b; lea rax, [rip + 0x994]; cmove rax, rdx; ret; 
0x0000000000419e0a: adc eax, 0xd0bc0f48; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; ret; 
0x00000000004614ca: adc eax, 0xe180d188; pcmpeqb mm3, qword ptr [rsi]; ret; 
0x000000000044ece9: adc eax, 0xe8000377; inc byte ptr [rax - 5]; jmp qword ptr [rsi + 0x66]; 
0x00000000004188ba: adc eax, 0xf011; cmovne rax, rdx; ret; 
0x000000000041873a: adc eax, 0xf171; cmovne rax, rdx; ret; 
0x000000000040885d: adc eax, 0xf489066; mov esi, 0x83480153; ret; 
0x000000000045f6b0: adc eax, 0xf5b; lea rax, [rip + 0xd34]; cmove rax, rdx; ret; 
0x000000000043cee4: adc eax, 0xf880272; ret; 
0x0000000000418489: adc eax, 0xfffffd02; lea rax, [rip + 0x232eb]; cmove rax, rdx; ret; 
0x000000000043cedf: adc eax, dword ptr [rax + 0x157701fa]; jb 0x3cee9; mov byte ptr [rdi], cl; ret; 
0x000000000043382e: adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000047dc7c: adc eax, dword ptr [rbp + 0x31]; ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x0000000000411b28: adc eax, dword ptr [rbp + 1]; sbb byte ptr [r8 + 0x39], cl; ret; 
0x0000000000409aa9: adc eax, dword ptr [rbx + 0xa]; add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x0000000000478139: adc eax, eax; ret; 
0x0000000000478276: adc eax, edx; pop rbp; pop rbx; ret; 
0x00000000004188bb: adc eax, esi; add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x000000000044d483: adc ebp, ebx; ret 0xffb8; 
0x00000000004108d1: adc ebp, ebx; ret; 
0x0000000000462a26: adc ecx, dword ptr [rax + 0x39]; ret 0x870f; 
0x000000000040ef1f: adc ecx, dword ptr [rax + 0x63]; push rax; adc byte ptr [rax - 0x75], cl; add byte ptr [rcx + 0x39], cl; ror byte ptr [rdi + rcx + 0x4f], 1; ret 0x8548; 
0x000000000047ba3a: adc ecx, dword ptr [rax + 0x63]; ret 0xbc80; 
0x00000000004084b9: adc ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000046c4ac: adc ecx, dword ptr [rdi]; mov dh, 0x45; add cl, byte ptr [rax - 0x7d]; ret; 
0x0000000000401bdc: adc edi, dword ptr [rax]; test rax, rax; je 0x1bf0; mov edi, 0x4adb30; jmp rax; 
0x0000000000418609: adc edi, dword ptr [rbx]; add al, byte ptr [rax]; cmove rax, rdx; ret; 
0x000000000047757a: adc edx, eax; mov qword ptr [rdi + r11*8 + 8], r9; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x000000000047a551: adc edx, ebx; mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000000409eef: adc esi, dword ptr [rbp - 1]; jmp qword ptr [rsi + 0x2e]; 
0x000000000042d308: adc qword ptr [rcx + 5], rbp; vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000042d30f: adc qword ptr [rcx + 6], rsi; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000042d316: adc qword ptr [rcx + 7], rdi; ret; 
0x000000000042cfb1: adc qword ptr [rcx - 1], rbx; ret; 
0x000000000042cf75: adc qword ptr [rcx - 1], rdi; ret; 
0x000000000042cfaa: adc qword ptr [rcx - 2], rdx; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000042d1a8: adc qword ptr [rcx - 2], rsi; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000042cf6e: adc qword ptr [rcx - 2], rsi; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000042d1a1: adc qword ptr [rcx - 3], rbp; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000042cf67: adc qword ptr [rcx - 3], rbp; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000042d19a: adc qword ptr [rcx - 4], rsp; vmovups zmmword ptr [r9 - 0xc0], zmm13; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000042cf60: adc qword ptr [rcx - 4], rsp; vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000042cfa3: adc qword ptr [rdi + 1], rcx; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000043be80: adc qword ptr [rdi + 1], rdx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000042d463: adc qword ptr [rdi - 5], rsp; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000042d46a: adc qword ptr [rdi - 6], rbp; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000042d471: adc qword ptr [rdi - 7], rsi; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000042d478: adc qword ptr [rdi - 8], rdi; ret; 
0x000000000042cf9d: adc qword ptr [rdi], rax; vmovups zmmword ptr [rdi + 0x40], zmm1; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000043be7a: adc qword ptr [rdi], rdx; vmovups zmmword ptr [rdi + 0x40], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043be9b: adc qword ptr [rdi], rdx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043bfc0: adc qword ptr [rsi + 1], rdx; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000043bfc7: adc qword ptr [rsi + 2], rdx; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000043bfce: adc qword ptr [rsi + 3], rdx; ret; 
0x000000000043c05d: adc qword ptr [rsi + 5], rdx; vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000043c064: adc qword ptr [rsi + 6], rdx; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000043c06b: adc qword ptr [rsi + 7], rdx; ret; 
0x000000000043be6d: adc qword ptr [rsi - 1], rdx; ret; 
0x000000000043be66: adc qword ptr [rsi - 2], rdx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043be5f: adc qword ptr [rsi - 3], rdx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043be58: adc qword ptr [rsi - 4], rdx; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043bfba: adc qword ptr [rsi], rdx; vmovups zmmword ptr [rsi + 0x40], zmm2; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000047a550: adc r10, r11; mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x000000000043ce65: adc r11b, r14b; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x000000000046b5fb: adc r8b, bpl; xchg dword ptr cs:[rax], eax; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000478275: adc rax, rdx; pop rbp; pop rbx; ret; 
0x0000000000477579: adc rdx, r8; mov qword ptr [rdi + r11*8 + 8], r9; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x000000000043d33a: add ah, bh; add eax, dword ptr [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000000043d31f: add ah, bh; add eax, dword ptr [rax]; ret; 
0x000000000043d419: add ah, bh; inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x000000000043d36a: add ah, bh; inc dword ptr [rbx]; ret; 
0x000000000043cbf0: add ah, byte ptr [rdx - 0xf]; dec byte ptr [rax + 0x7f]; jg 0x3cbfb; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000043cd7a: add ah, byte ptr [rdx - 0xf]; dec byte ptr [rax + 0x7f]; jg 0x3cd85; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000043bfca: add ah, byte ptr [rdx - 0xf]; jl 0x3c017; adc dword ptr [rsi + 3], edx; ret; 
0x0000000000438b53: add ah, byte ptr [rsi - 0x75]; add al, 0x66; mov dword ptr [rdx + 4], eax; lea rax, [rdx + 5]; ret; 
0x0000000000437393: add ah, byte ptr [rsi - 0x75]; add al, 0x66; mov dword ptr [rdx + 4], eax; mov rax, rdi; ret; 
0x0000000000401bb9: add ah, dh; nop dword ptr [rax + rax]; ret; 
0x0000000000469f0c: add al, 0; add byte ptr [rax + 0x63], cl; ret; 
0x000000000043ecd3: add al, 0; add byte ptr [rax - 0x39], cl; ret; 
0x000000000046821e: add al, 0; add byte ptr [rax - 0x73], cl; xor eax, 0x2dff8; movsxd rax, dword ptr [rsi + r12*4]; add rax, rsi; jmp rax; 
0x000000000047a715: add al, 0; add byte ptr [rax - 0x75], cl; add al, 0x24; add rsp, 0x38; ret; 
0x000000000041f227: add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004346ef: add al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041f255: add al, 0; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000047c4dd: add al, 0; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000046cded: add al, 0; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x0000000000461553: add al, 0; add byte ptr [rax], al; ret; 
0x000000000043e870: add al, 0; add byte ptr [rax], al; syscall; 
0x000000000043e870: add al, 0; add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x3e880; ret; 
0x000000000040a83b: add al, 0; add byte ptr [rcx - 0x75], cl; xchg eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x00000000004681fc: add al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000411746: add al, 0; add byte ptr [rsi + 5], dh; ret; 
0x0000000000442bd6: add al, 0; call 0x2df0; nop dword ptr [rax]; lea rax, [rip + 0x6a639]; ret; 
0x0000000000411625: add al, 0; cmovbe rdx, rax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x000000000045f6e9: add al, 0; cmp rax, rdx; lea rdx, [rip + 0xb2b]; lea rax, [rip + 0x834]; cmove rax, rdx; ret; 
0x0000000000460949: add al, 0; cmp rax, rdx; lea rdx, [rip + 0xc3b]; lea rax, [rip + 0x994]; cmove rax, rdx; ret; 
0x000000000045f6a9: add al, 0; cmp rax, rdx; lea rdx, [rip + 0xf5b]; lea rax, [rip + 0xd34]; cmove rax, rdx; ret; 
0x0000000000462224: add al, 0; cmp rdi, rax; ja 0x62250; xor eax, eax; ret; 
0x000000000046cdc5: add al, 0; lea rax, [rdi - 1]; cmp rax, -3; jbe 0x6cdd8; ret; 
0x0000000000442bcf: add al, 0; lea rdi, [rip + 0x426c8]; call 0x2df0; nop dword ptr [rax]; lea rax, [rip + 0x6a639]; ret; 
0x000000000045abbd: add al, 0; mov dword ptr [rbp - 0x4f0], 1; mov dword ptr [rbp - 0x508], 0x20; movzx eax, byte ptr [rdi + rax]; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x0000000000441a64: add al, 0; mov eax, 0x15; syscall; 
0x000000000046d4d8: add al, 0; mov qword ptr [rax], rcx; pop rbp; ret; 
0x000000000045a8c3: add al, 0; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000459e0b: add al, 0; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x000000000045a2eb: add al, 0; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x000000000043e475: add al, 0; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x000000000043d2b7: add al, 0; movsxd rax, dword ptr [rsi + rdi*4]; add rax, rsi; jmp rax; 
0x0000000000438e77: add al, 0; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000046105b: add al, 0; or byte ptr [rax - 0x73], cl; add eax, 0x25b; lea rdx, [rip + 0x34]; cmovne rax, rdx; ret; 
0x000000000043d2e7: add al, 0; shr eax, 0xc; and eax, 0xf; movsxd rcx, dword ptr [rsi + rax*4]; add rcx, rsi; jmp rcx; 
0x0000000000461aa1: add al, 0; test rax, rax; je 0x61ad8; call rax; 
0x0000000000467b44: add al, 0; xor eax, eax; add rsp, 8; ret; 
0x0000000000462342: add al, 0x11; ret; 
0x000000000043d3b4: add al, 0x12; pop rbx; and eax, 0x7ff80000; ret; 
0x0000000000434b9a: add al, 0x17; lea rdx, [rip + 0x5293d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043352a: add al, 0x17; lea rdx, [rip + 0x53fad]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043197a: add al, 0x17; lea rdx, [rip + 0x55b5d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000042f82a: add al, 0x17; lea rdx, [rip + 0x57cad]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000419e11: add al, 0x17; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; ret; 
0x000000000041b318: add al, 0x17; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x0000000000419daa: add al, 0x17; sub eax, ecx; ret; 
0x0000000000439c7e: add al, 0x17; vzeroupper; ret; 
0x0000000000443bab: add al, 0x24; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x000000000047a9ef: add al, 0x24; add rsp, 0x38; pop rbx; pop r14; ret; 
0x000000000047a71a: add al, 0x24; add rsp, 0x38; ret; 
0x000000000047a711: add al, 0x24; call 0x7ab30; mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000047f314: add al, 0x24; mov rdx, r15; mov rsi, qword ptr [r12 + rbp*8 + 0x10]; mov rdi, r13; call rax; 
0x0000000000475085: add al, 0x24; pop rbx; add rax, qword ptr [rdx + 8]; pop rbp; pop r12; jmp rax; 
0x000000000044f98a: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000043ea32: add al, 0x25; sbb byte ptr [rax], al; add byte ptr [rax], al; test eax, eax; jne 0x3ea50; syscall; 
0x000000000044fa6b: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4fa78; add rsp, 0x18; ret; 
0x0000000000478088: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x780d1; leave; ret; 
0x00000000004083c3: add al, 0x25; xor byte ptr [rax], al; add byte ptr [rax], al; call rax; 
0x00000000004715d6: add al, 0x30; add byte ptr [rax], al; add byte ptr [rcx + 0x39], cl; ret 0x840f; 
0x000000000046011e: add al, 0x31; ret; 
0x000000000046001a: add al, 0x37; ret; 
0x000000000041f8c9: add al, 0x38; movzx edx, byte ptr [rdx + rdi]; sub eax, edx; vzeroupper; ret; 
0x0000000000461096: add al, 0x39; bnd je 0x6109f; test edx, edx; jne 0x61090; ret; 
0x0000000000412b75: add al, 0x39; ret; 
0x000000000040ff1f: add al, 0x3a; ret; 
0x00000000004023e5: add al, 0x40; add bl, ch; or bh, bh; push rbx; adc byte ptr [rax - 0x7d], cl; ret; 
0x0000000000442ce1: add al, 0x48; cmp eax, 0x16; ja 0x42d00; movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x000000000043963b: add al, 0x48; lea eax, [rdi + 5]; ret; 
0x0000000000438b49: add al, 0x48; lea eax, [rdx + 4]; ret; 
0x0000000000438b5b: add al, 0x48; lea eax, [rdx + 5]; ret; 
0x0000000000411771: add al, 0x48; lea edx, [rax + 1]; mov qword ptr [rip + 0x9afd3], rdx; ret; 
0x0000000000429eba: add al, 0x48; mov dword ptr [rdi], ecx; ret; 
0x00000000004413a4: add al, 0x48; mov eax, dword ptr [rdx + rax]; mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000437389: add al, 0x48; mov eax, edi; ret; 
0x0000000000429eb3: add al, 0x48; mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000440c44: add al, 0x48; mov edx, dword ptr [rcx + rdx]; lea rcx, [rip - 0x60]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x00000000004603f4: add al, 0x48; xor eax, eax; ret; 
0x00000000004732a8: add al, 0x4c; cmovne eax, eax; mov rax, r8; ret; 
0x00000000004413f2: add al, 0x4c; cmp eax, dword ptr [rcx + rsi + 0x10]; jae 0x413a1; xor eax, eax; ret; 
0x0000000000460c98: add al, 0x4c; lea ecx, [rsp + 0x20]; call rbx; 
0x0000000000438b57: add al, 0x66; mov dword ptr [rdx + 4], eax; lea rax, [rdx + 5]; ret; 
0x0000000000437397: add al, 0x66; mov dword ptr [rdx + 4], eax; mov rax, rdi; ret; 
0x000000000042d027: add al, 0x72; or al, 0x8b; mov ecx, dword ptr ss:[rcx - 4]; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x000000000043cedd: add al, 0x73; adc eax, dword ptr [rax + 0x157701fa]; jb 0x3cee9; mov byte ptr [rdi], cl; ret; 
0x00000000004184c8: add al, 0x77; add byte ptr [rax], al; cmove rax, rdx; ret; 
0x000000000045cb9c: add al, 0x81; add rax, rcx; jmp rax; 
0x0000000000431c2b: add al, 0x81; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000043d84f: add al, 0x81; sub eax, dword ptr [rcx + rsi*4]; je 0x3d838; ret; 
0x0000000000433503: add al, 0x81; sub eax, edx; ret; 
0x0000000000401aff: add al, 0x82; add rax, rdx; jmp rax; 
0x000000000042f837: add al, 0x82; sub eax, ecx; ret; 
0x0000000000442cea: add al, 0x83; add rax, rbx; jmp rax; 
0x000000000046109a: add al, 0x85; sal byte ptr [rbp - 0xf], cl; ret; 
0x000000000047bb78: add al, 0x86; add rax, r14; jmp rax; 
0x000000000047b8eb: add al, 0x87; add rax, r15; jmp rax; 
0x000000000040df2b: add al, 0x87; add rax, rdi; jmp rax; 
0x0000000000438b46: add al, 0x88; add al, 0x48; lea eax, [rdx + 4]; ret; 
0x0000000000437386: add al, 0x88; add al, 0x48; mov eax, edi; ret; 
0x0000000000452913: add al, 0x89; ret 0xf41; 
0x000000000046767c: add al, 0x90; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x000000000046764e: add al, 0x90; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000047b18d: add al, 0x96; add rax, r14; jmp rax; 
0x000000000043d383: add al, 0x96; add rax, rsi; jmp rax; 
0x000000000046822a: add al, 0xa6; add rax, rsi; jmp rax; 
0x0000000000468ad7: add al, 0xa7; add rax, rdi; jmp rax; 
0x000000000040f3ff: add al, 0xa8; add dword ptr [rsp + rbp - 0x77], esi; ret 0xc883; 
0x000000000047396f: add al, 0xa; cmp rax, qword ptr [rip + 0x3be38]; jae 0x73986; mov rdx, qword ptr [rip + 0x3be37]; add word ptr [rdx + rax*2], 1; ret; 
0x000000000043e479: add al, 0xaa; add rax, rdx; jmp rax; 
0x0000000000472cb8: add al, 0xae; add eax, dword ptr [rax]; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x000000000043d852: add al, 0xb1; je 0x3d838; ret; 
0x000000000043d2bb: add al, 0xbe; add rax, rsi; jmp rax; 
0x000000000045a8c7: add al, 0xc1; mov ecx, 1; jmp rax; 
0x0000000000459e0f: add al, 0xc1; xor ecx, ecx; jmp rax; 
0x000000000045a2ef: add al, 0xc6; jmp rax; 
0x00000000004715d3: add al, 0xc7; add al, 0x30; add byte ptr [rax], al; add byte ptr [rcx + 0x39], cl; ret 0x840f; 
0x0000000000453f98: add al, 0xc7; jmp rax; 
0x000000000046d68e: add al, 0xd1; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000044e14a: add al, 0xd8; test rax, rax; je 0x4e153; call rax; 
0x0000000000480641: add al, 0xd8; test rax, rax; je 0x8064a; call rax; 
0x000000000044e38c: add al, 0xf0; test rax, rax; je 0x4e395; call rax; 
0x000000000042a223: add al, 0xf3; movq qword ptr [rdi], mm1; ret; 
0x000000000041e836: add al, 0xf; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x0000000000420a26: add al, 0xf; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000472ba3: add al, 0xf; xchg eax, ebp; rcr byte ptr [rbx + 0xf], 0xb6; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000461dba: add al, 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000045a8bc: add al, 1; lea rcx, [rip + 0x4f4bb]; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000459e04: add al, 1; lea rcx, [rip + 0x4ff73]; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x00000000004413a7: add al, 2; mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000421ff7: add al, 3; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000422926: add al, 6; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000045a2e4: add al, 6; lea rsi, [rip + 0x4fe93]; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x0000000000453f94: add al, 6; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000434c1d: add al, 7; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000043507e: add al, 7; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000045abd5: add al, 7; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x0000000000434e38: add al, 7; ret; 
0x0000000000419f7f: add al, 8; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x000000000041b499: add al, 8; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000416d86: add al, bpl; ret; 
0x000000000041866a: add al, byte ptr [r8]; cmove rax, rdx; ret; 
0x0000000000435ba1: add al, byte ptr [rax + rax*8 - 0xb7ed8c]; ret 0x2288; 
0x0000000000469f0b: add al, byte ptr [rax + rax]; add byte ptr [rax + 0x63], cl; ret; 
0x00000000004490c6: add al, byte ptr [rax]; add bh, dh; ret 0; 
0x00000000004490ba: add al, byte ptr [rax]; add bh, dh; ret 0xf800; 
0x000000000046372a: add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret; 
0x000000000045373b: add al, byte ptr [rax]; add byte ptr [rax + 0x63], cl; ret; 
0x000000000041fc52: add al, byte ptr [rax]; add byte ptr [rax + 1], cl; clc; add rax, rcx; ret; 
0x000000000041f80a: add al, byte ptr [rax]; add byte ptr [rax + 5], cl; add byte ptr [rax], 0; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x0000000000471f9c: add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret 0xffe8; 
0x0000000000461062: add al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; adc eax, 0x34; cmovne rax, rdx; ret; 
0x000000000044b86a: add al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; add cl, byte ptr [rax + 0x39]; ret; 
0x0000000000479a6b: add al, byte ptr [rax]; add byte ptr [rax - 0x75], cl; or byte ptr [rax + 3], cl; add byte ptr [r13 + 0x31], r8b; jmp qword ptr [rsi - 0x7d]; 
0x000000000043c904: add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; sal ebx, 1; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000041f407: add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004332c1: add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041f435: add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000044f912: add al, byte ptr [rax]; add byte ptr [rax - 0x7f], cl; ret 0x200; 
0x0000000000478359: add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x00000000004805ec: add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x0000000000407ae6: add al, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0xe; syscall; 
0x000000000040c017: add al, byte ptr [rax]; add byte ptr [rax], al; mov eax, r10d; syscall; 
0x0000000000411656: add al, byte ptr [rax]; add byte ptr [rax], al; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000000461533: add al, byte ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000461cda: add al, byte ptr [rax]; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004164be: add al, byte ptr [rax]; add byte ptr [rbp + 0x4c], bl; mov eax, eax; pop r12; pop r13; ret; 
0x00000000004490b2: add al, byte ptr [rax]; add byte ptr [rbp + 0xe880fd2], al; add al, byte ptr [rax]; add bh, dh; ret 0xf800; 
0x00000000004161a5: add al, byte ptr [rax]; add byte ptr [rbx + 0x4c], bl; mov eax, eax; pop rbp; pop r12; ret; 
0x000000000043b394: add al, byte ptr [rax]; add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x0000000000473fc4: add al, byte ptr [rax]; add byte ptr [rcx + 0x148b48d8], cl; ret 0xb60f; 
0x00000000004691db: add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0x850f; 
0x0000000000473f61: add al, byte ptr [rax]; call 0x2df0; nop dword ptr [rax + rax]; ret; 
0x0000000000418493: add al, byte ptr [rax]; cmove rax, rdx; ret; 
0x0000000000417b3a: add al, byte ptr [rax]; cmovne rax, rdx; ret; 
0x000000000047ab9e: add al, byte ptr [rax]; divss xmm0, dword ptr [rip + 0x21a94]; ret; 
0x0000000000439c48: add al, byte ptr [rax]; lea rax, [rdi + 2]; vzeroupper; ret; 
0x00000000004188f4: add al, byte ptr [rax]; lea rax, [rip + 0x23823]; cmove rax, rdx; ret; 
0x0000000000418774: add al, byte ptr [rax]; lea rax, [rip + 0x23993]; cmove rax, rdx; ret; 
0x0000000000418604: add al, byte ptr [rax]; lea rax, [rip + 0x23b13]; cmove rax, rdx; ret; 
0x000000000041887a: add al, byte ptr [rax]; lea rax, [rip + 0x23bed]; cmove rax, rdx; ret; 
0x00000000004186fa: add al, byte ptr [rax]; lea rax, [rip + 0x23d5d]; cmove rax, rdx; ret; 
0x000000000041858a: add al, byte ptr [rax]; lea rax, [rip + 0x23edd]; cmove rax, rdx; ret; 
0x00000000004188d4: add al, byte ptr [rax]; lea rax, [rip + 0x23fd3]; cmove rax, rdx; ret; 
0x0000000000417c1c: add al, byte ptr [rax]; lea rax, [rip + 0x23ffb]; cmovne rax, rdx; ret; 
0x0000000000418754: add al, byte ptr [rax]; lea rax, [rip + 0x24143]; cmove rax, rdx; ret; 
0x000000000041867f: add al, byte ptr [rax]; lea rax, [rip + 0x24738]; cmovne rax, rdx; ret; 
0x0000000000418664: add al, byte ptr [rax]; lea rax, [rip + 0x24913]; cmove rax, rdx; ret; 
0x00000000004186a8: add al, byte ptr [rax]; lea rax, [rip + 0x24a5f]; cmove rax, rdx; ret; 
0x0000000000473f5a: add al, byte ptr [rax]; lea rdi, [rip + 0x2451d]; call 0x2df0; nop dword ptr [rax + rax]; ret; 
0x000000000043ebed: add al, byte ptr [rax]; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000043ebcb: add al, byte ptr [rax]; mov edi, dword ptr [rsp + 0xc]; mov r8d, eax; mov eax, 3; syscall; 
0x0000000000417ae7: add al, byte ptr [rax]; mov edx, 0; cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x000000000043ea8f: add al, byte ptr [rax]; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000468ad3: add al, byte ptr [rax]; movsxd rax, dword ptr [rdi + r12*4]; add rax, rdi; jmp rax; 
0x0000000000472d29: add al, byte ptr [rax]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000468226: add al, byte ptr [rax]; movsxd rax, dword ptr [rsi + r12*4]; add rax, rsi; jmp rax; 
0x000000000047ae1c: add al, byte ptr [rax]; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000442c64: add al, byte ptr [rax]; nop word ptr cs:[rax + rax]; ret; 
0x000000000047aba6: add al, byte ptr [rax]; ret; 
0x00000000004803c0: add al, byte ptr [rax]; test rbx, rbx; jne 0x803a8; pop rbx; ret; 
0x0000000000435a58: add al, byte ptr [rax]; vzeroupper; ret; 
0x000000000045f26e: add al, byte ptr [rcx + 0x39]; ret; 
0x000000000044a686: add al, byte ptr [rcx - 0x77]; ret 0x8341; 
0x0000000000406730: add al, byte ptr [rcx - 0xccc1e]; inc dword ptr [rcx]; ret 0xd089; 
0x00000000004614c6: add al, byte ptr [rdx + rdx*8 - 0x2e77ea8c]; and cl, 0xf; je 0x614f0; ret; 
0x00000000004783c3: add al, byte ptr [rdx]; sar bh, 0xff; ret; 
0x0000000000422b14: add al, byte ptr [rsi]; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000418590: add al, byte ptr ds:[rax]; cmove rax, rdx; ret; 
0x0000000000418589: add al, byte ptr ds:[rax]; lea rax, [rip + 0x23edd]; cmove rax, rdx; ret; 
0x00000000004490d1: add al, byte ptr gs:[rax]; add bh, dh; ret 0; 
0x000000000045e927: add al, ch; add ebx, eax; cli; inc dword ptr [rcx + rcx*4 - 2]; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x0000000000441471: add al, ch; cdq; std; dec dword ptr [rax - 0x77]; or byte ptr [r8 - 0x77], cl; ret 0x8548; 
0x0000000000403cfe: add al, ch; cld; ret 0xffbf; 
0x00000000004809ae: add al, ch; cmp al, 0x24; clc; jmp qword ptr [rsi + 0x2e]; 
0x000000000041110b: add al, ch; fistp word ptr [rdi + rdi*8]; jmp qword ptr [rsi + 0x66]; 
0x000000000044420c: add al, ch; fsubp st(3); sti; jmp qword ptr [rsi + 0x2e]; 
0x00000000004478fe: add al, ch; in al, dx; mov ah, 0xfb; jmp qword ptr [rsi + 0x66]; 
0x000000000044aa05: add al, ch; in eax, 0x83; sti; inc dword ptr [rcx - 0x77]; ret; 
0x00000000004740bc: add al, ch; in eax, dx; clc; jmp qword ptr [rsi + 0x66]; 
0x000000000044ecec: add al, ch; inc byte ptr [rax - 5]; jmp qword ptr [rsi + 0x66]; 
0x00000000004163ee: add al, ch; insb byte ptr [rdi], dx; mov bh, 0xff; jmp qword ptr [rsi + 0x66]; 
0x0000000000474104: add al, ch; jbe 0x74101; cld; jmp qword ptr [rsi + 0xf]; 
0x000000000041335b: add al, ch; jmp rdi; 
0x0000000000446d75: add al, ch; jne 0x46d39; sti; dec dword ptr [rbp - 0x77]; fld qword ptr [rcx - 0x77]; ret 0x8ee9; 
0x000000000044057a: add al, ch; jo 0x405a6; cld; call qword ptr [rbp - 0x41]; 
0x0000000000444360: add al, ch; mov ch, dl; sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000451e44: add al, ch; mov dh, 0xa2; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000040dc87: add al, ch; movabs dword ptr [0x854890b0ebffffe4], eax; sal byte ptr [rbp + 0xb], cl; xor eax, eax; ret; 
0x000000000046a349: add al, ch; movabs eax, dword ptr [0x90d8d4890fff98a]; ret 2; 
0x0000000000451ee1: add al, ch; or dword ptr [rdi], ecx; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000044be04: add al, ch; out 0x6f, al; sti; inc dword ptr [rcx - 0x77]; ret; 
0x000000000041424b: add al, ch; out dx, eax; fcos; dec dword ptr [rax - 0x77]; ret; 
0x00000000004165ec: add al, ch; outsb dx, byte ptr [rsi]; mov ch, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000046c1eb: add al, ch; outsd dx, dword ptr [rsi]; and ch, bh; jmp qword ptr [rsi + 0x66]; 
0x000000000044be8d: add al, ch; pop rbp; outsd dx, dword ptr [rsi]; sti; jmp qword ptr [rsi + 0x66]; 
0x0000000000475491: add al, ch; pop rcx; fprem; jmp qword ptr [rsi + 0xf]; 
0x0000000000456a98: add al, ch; push rdx; ret; 
0x0000000000403b78: add al, ch; ret 0xda; 
0x000000000044a128: add al, ch; ret 0xfb8c; 
0x0000000000448928: add al, ch; ret 0xfba4; 
0x00000000004156c8: add al, ch; ret 0xfffd; 
0x0000000000416b67: add al, ch; ret; 
0x0000000000472eaf: add al, ch; retf; or edi, ebp; jmp qword ptr [rsi + 0x66]; 
0x000000000043d43b: add al, ch; scasd eax, dword ptr [rdi]; pop rcx; cld; jmp qword ptr [rsi + 0x66]; 
0x000000000044ef9c: add al, ch; sti; jmp qword ptr [rsi + 0x66]; 
0x00000000004751c1: add al, ch; sub esp, ebx; clc; jmp qword ptr [rsi + 0xf]; 
0x00000000004646bf: add al, ch; sub esp, edi; stc; jmp qword ptr [rsi + 0x66]; 
0x000000000043e24f: add al, ch; wait; cld; jmp qword ptr [rsi + 0x2e]; 
0x0000000000448f58: add al, ch; xchg eax, edx; sahf; sti; jmp qword ptr [rsi - 0x70]; 
0x0000000000416ac4: add al, ch; xchg eax, esi; mov al, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000458624: add ax, word ptr [rax]; add byte ptr [rbx + rcx*4 - 0x53], cl; clc; idiv bh; dec dword ptr [rbp + 0x63]; ret 0x8948; 
0x00000000004783c1: add bh, al; add al, byte ptr [rdx]; sar bh, 0xff; ret; 
0x00000000004160ac: add bh, al; add eax, 0x990c9; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000411696: add bh, al; add eax, 0x9b093; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000045259b: add bh, al; test dword ptr [rax], eax; idiv edi; call qword ptr [rax]; 
0x000000000046eef0: add bh, al; test dword ptr [rdi + rdi*8 - 1], esp; jmp qword ptr [rsi]; 
0x00000000004084b7: add bh, bh; adc ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000467f6d: add bh, bh; ror byte ptr [rax - 0x7d], 1; ret; 
0x00000000004277ca: add bh, byte ptr [rax + 0x63490005]; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004783a0: add bh, byte ptr [rax + 1]; ret; 
0x000000000043e88b: add bh, byte ptr [rax - 1]; ret; 
0x000000000047cbe6: add bh, byte ptr [rdi + 1]; call rax; 
0x00000000004413a8: add bh, byte ptr [rdx]; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000417cdc: add bh, dh; ret 0; 
0x00000000004490bc: add bh, dh; ret 0xf800; 
0x00000000004656ee: add bh, dh; ret; 
0x00000000004023e6: add bl, bpl; or bh, bh; push rbx; adc byte ptr [rax - 0x7d], cl; ret; 
0x00000000004625f8: add bl, byte ptr [rbx + 0x4c]; mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x000000000047dfe3: add bl, byte ptr [rcx]; ror byte ptr [rax - 0x7d], 0xc4; adc byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x00000000004625f7: add bl, byte ptr gs:[rbx + 0x4c]; mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x00000000004023e7: add bl, ch; or bh, bh; push rbx; adc byte ptr [rax - 0x7d], cl; ret; 
0x000000000040fde4: add bl, ch; pushfq; nop word ptr [rax + rax]; mov rax, -1; ret; 
0x0000000000409080: add bl, ch; ret 0x1f0f; 
0x000000000045090f: add bl, ch; ret; 
0x00000000004204ad: add bl, ch; sal bl, 1; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000041280f: add bl, ch; stosd dword ptr [rdi], eax; nop word ptr [rax + rax]; call rax; 
0x0000000000409ee8: add bl, ch; xchg dword ptr [rcx - 0x77], ecx; shr cl, 0x13; jne 0x9ef1; jmp qword ptr [rsi + 0x2e]; 
0x000000000042037f: add bl, dh; bsf eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000000042036f: add bl, dh; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000047ab9f: add bl, dh; divps xmm0, xmmword ptr [rip + 0x21a94]; ret; 
0x00000000004390cf: add bl, dh; movq mm0, qword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x00000000004390ef: add bl, dh; movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x000000000043916f: add bl, dh; movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x000000000043912f: add bl, dh; movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x000000000043914f: add bl, dh; movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x000000000043920f: add bl, dh; movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x000000000043974f: add bl, dh; movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; lea rax, [rdi + 0x10]; ret; 
0x00000000004390bf: add bl, dh; movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x00000000004390ce: add bl, sil; movq mm0, qword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x00000000004390ee: add bl, sil; movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x000000000043916e: add bl, sil; movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x000000000043914e: add bl, sil; movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x000000000043f502: add byte ptr [r10 + rsi + 0x44], sil; mov edx, eax; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000046a13c: add byte ptr [r11 - 0x78f0d008], r8b; push -0x76ffffff; ret 0xc083; 
0x0000000000479a74: add byte ptr [r13 + 0x31], r8b; jmp qword ptr [rsi - 0x7d]; 
0x0000000000447628: add byte ptr [r15], r9b; mov dh, 0x78; inc dword ptr [rax - 0x78]; jl 0x47643; add ecx, dword ptr [rcx + 0x39]; ret 0xe075; 
0x00000000004095cb: add byte ptr [r8 - 0x77], r9b; pop rdi; or byte ptr [rbx - 0x76fefbb9], al; ret 0xe281; 
0x000000000045fea6: add byte ptr [r8 - 0x77], r9b; ret 0x8548; 
0x000000000043f5ab: add byte ptr [r9 + rbp - 0x48], sil; add dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x000000000045f75b: add byte ptr [r9 + rcx*4 - 0x20], r9b; pop rbp; pop r12; pop r13; ret; 
0x0000000000439f3e: add byte ptr [rax + 0x1478d48], dl; ret; 
0x0000000000441a65: add byte ptr [rax + 0x15], bh; syscall; 
0x0000000000417a8f: add byte ptr [rax + 0x16], bh; pop rbx; ret; 
0x000000000043f8df: add byte ptr [rax + 0x1c], bh; syscall; 
0x000000000043f8df: add byte ptr [rax + 0x1c], bh; syscall; cmp rax, -0xfff; jae 0x3f8f0; ret; 
0x00000000004782b3: add byte ptr [rax + 0x21], cl; ret 0xc148; 
0x000000000047878f: add byte ptr [rax + 0x26], bh; syscall; 
0x000000000047878f: add byte ptr [rax + 0x26], bh; syscall; cmp rax, -0xfff; jae 0x787a0; ret; 
0x000000000045a092: add byte ptr [rax + 0x29], cl; fmul dword ptr [rax - 0x77]; fimul word ptr [rcx + rcx*4 - 0x19]; sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x0000000000462c62: add byte ptr [rax + 0x29], cl; ret 0x149; 
0x000000000045b284: add byte ptr [rax + 0x29], cl; ret 0x8949; 
0x00000000004669e1: add byte ptr [rax + 0x29], cl; ret 0x8d48; 
0x00000000004769e0: add byte ptr [rax + 0x29], cl; ret 0xc148; 
0x0000000000402c5f: add byte ptr [rax + 0x29], cl; ret; 
0x0000000000403641: add byte ptr [rax + 0x29], cl; retf 0x8348; ret 0x481a; 
0x00000000004185a6: add byte ptr [rax + 0x2c7408e6], al; ret; 
0x000000000047d968: add byte ptr [rax + 0x39], cl; or byte ptr [rdi + 2], r14b; sbb eax, eax; ret; 
0x000000000040ca5d: add byte ptr [rax + 0x39], cl; ret 0x830f; 
0x000000000040cd67: add byte ptr [rax + 0x39], cl; ret 0x850f; 
0x000000000046a210: add byte ptr [rax + 0x39], cl; ret 0xf48; 
0x0000000000411f71: add byte ptr [rax + 0x39], cl; ret; 
0x000000000043d1f3: add byte ptr [rax + 0x39], cl; retf 0xd975; vzeroupper; ret; 
0x000000000043d030: add byte ptr [rax + 0x39], cl; retf 0xe175; vzeroupper; ret; 
0x000000000041896a: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0x1c8bb; lea rax, [rip + 0x1c474]; cmove rax, rdx; ret; 
0x0000000000417c8a: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0x1d92b; lea rax, [rip + 0x1d784]; cmove rax, rdx; ret; 
0x000000000047323a: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0x3ab; lea rax, [rip + 0x74]; cmove rax, rdx; ret; 
0x000000000041892a: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0x7a9b; lea rax, [rip + 0x75c4]; cmove rax, rdx; ret; 
0x00000000004184ba: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0x7c3b; lea rax, [rip + 0x7704]; cmove rax, rdx; ret; 
0x000000000045f6ea: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0xb2b; lea rax, [rip + 0x834]; cmove rax, rdx; ret; 
0x000000000046094a: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0xc3b; lea rax, [rip + 0x994]; cmove rax, rdx; ret; 
0x000000000045f6aa: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0xf5b; lea rax, [rip + 0xd34]; cmove rax, rdx; ret; 
0x0000000000415138: add byte ptr [rax + 0x39], cl; ror dword ptr [rdi], cl; xchg eax, ebp; ret 0xb60f; 
0x0000000000411c27: add byte ptr [rax + 0x39], cl; sal byte ptr [rbp + 1], 1; ret; 
0x000000000040f0c7: add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x13], 1; mov rax, qword ptr [rbx + 0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000045eff6: add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x14], 1; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000040d3f9: add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x14], 1; mov rdx, r12; mov rsi, r15; mov rdi, rbp; call qword ptr [rbx + 0x40]; 
0x000000000040fece: add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x1c], 1; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000040f537: add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x23], 1; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000045ef5c: add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x2e], 1; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000045dfc2: add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x31], 1; movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x000000000040fe37: add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x33], 1; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000045e717: add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x3b], 1; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000040efd1: add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x59], 1; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x18]; 
0x0000000000409787: add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x5b], 1; mov rdi, rbx; call qword ptr [rbp + 0x60]; 
0x000000000040f485: add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x65], 1; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040f5c7: add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x6b], 1; movzx esi, byte ptr [r12]; lea r15, [r12 + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x0000000000409e6c: add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x72], 1; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000043d397: add byte ptr [rax + 0x485bf0e5], al; cmovne eax, edx; ret; 
0x0000000000417b2c: add byte ptr [rax + 0x48], al; lea eax, [rip + 0x1d09b]; lea rdx, [rip + 0x221b4]; cmovne rax, rdx; ret; 
0x000000000043f409: add byte ptr [rax + 0x48], bh; syscall; 
0x000000000045d235: add byte ptr [rax + 0x63], cl; adc al, 0x91; add rdx, rcx; jmp rdx; 
0x000000000045cbf4: add byte ptr [rax + 0x63], cl; add al, 0x81; add rax, rcx; jmp rax; 
0x0000000000401afc: add byte ptr [rax + 0x63], cl; add al, 0x82; add rax, rdx; jmp rax; 
0x000000000043e476: add byte ptr [rax + 0x63], cl; add al, 0xaa; add rax, rdx; jmp rax; 
0x000000000043d2b8: add byte ptr [rax + 0x63], cl; add al, 0xbe; add rax, rsi; jmp rax; 
0x000000000045183e: add byte ptr [rax + 0x63], cl; or al, 0x8a; add rcx, rdx; jmp rcx; 
0x000000000040277e: add byte ptr [rax + 0x63], cl; or al, 0x8e; add rcx, rsi; jmp rcx; 
0x000000000045e3af: add byte ptr [rax + 0x63], cl; push rax; adc byte ptr [rax - 0x75], cl; add byte ptr [rcx + 0x39], cl; ror byte ptr [rdi + rcx + 0x4f], 1; ret 0x8548; 
0x000000000045f01f: add byte ptr [rax + 0x63], cl; ret 0x8d48; 
0x000000000044e6a7: add byte ptr [rax + 0x63], cl; ret; 
0x000000000046200f: add byte ptr [rax + 0x66], bh; syscall; 
0x000000000046200f: add byte ptr [rax + 0x66], bh; syscall; ret; 
0x000000000046202f: add byte ptr [rax + 0x68], bh; syscall; 
0x000000000046202f: add byte ptr [rax + 0x68], bh; syscall; ret; 
0x000000000046201f: add byte ptr [rax + 0x6b], bh; syscall; 
0x000000000046201f: add byte ptr [rax + 0x6b], bh; syscall; ret; 
0x000000000046203f: add byte ptr [rax + 0x6c], bh; syscall; 
0x000000000046203f: add byte ptr [rax + 0x6c], bh; syscall; ret; 
0x0000000000435b9f: add byte ptr [rax + 0x74c08402], cl; adc cl, byte ptr [rax - 1]; ret 0x2288; 
0x00000000004395df: add byte ptr [rax + 0x78d4837], cl; ret; 
0x000000000043f8af: add byte ptr [rax + 0xa], bh; syscall; 
0x000000000043f8af: add byte ptr [rax + 0xa], bh; syscall; cmp rax, -0xfff; jae 0x3f8c0; ret; 
0x000000000046220f: add byte ptr [rax + 0xc], bh; syscall; 
0x0000000000472741: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x3cf3a]; syscall; 
0x00000000004724bd: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x3d1ba]; syscall; 
0x00000000004705d1: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x3f092]; syscall; 
0x0000000000450931: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x5eca2]; syscall; 
0x000000000045086c: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x5ed67]; syscall; 
0x00000000004506cf: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x5ef04]; syscall; 
0x0000000000450600: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x5efd3]; syscall; 
0x0000000000445381: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x6a04a]; syscall; 
0x0000000000445215: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x6a1b6]; syscall; 
0x000000000044511d: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x6a2ae]; syscall; 
0x000000000043ddb9: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x71612]; syscall; 
0x0000000000417a1d: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x94d76]; syscall; 
0x0000000000415d05: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x96a8e]; syscall; 
0x0000000000415ccd: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x96ac6]; syscall; 
0x00000000004157ad: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x96fe6]; syscall; 
0x0000000000415469: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9732a]; syscall; 
0x0000000000416928: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9885b]; syscall; 
0x0000000000413d99: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x989fa]; syscall; 
0x0000000000413d99: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x989fa]; syscall; pop rbp; ret; 
0x0000000000413d69: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x98a2a]; syscall; 
0x0000000000416001: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x99172]; syscall; 
0x0000000000416001: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x99172]; syscall; pop rbx; ret; 
0x0000000000414337: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9ae4c]; syscall; 
0x00000000004142bb: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9aeb8]; syscall; 
0x0000000000414016: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9b16d]; syscall; 
0x0000000000412179: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9d00a]; syscall; 
0x0000000000410d28: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9e3db]; syscall; 
0x0000000000410d28: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9e3db]; syscall; ret; 
0x000000000041082f: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9e8d4]; syscall; 
0x00000000004104e4: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9ec1f]; syscall; 
0x00000000004101a1: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9ef62]; syscall; 
0x000000000040ee9b: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa0268]; syscall; 
0x000000000040ebdb: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa0528]; syscall; 
0x000000000040e72f: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa09d4]; syscall; 
0x000000000040e72f: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa09d4]; syscall; ret; 
0x000000000040969d: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa5d2e]; syscall; 
0x000000000040876c: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa654f]; syscall; 
0x0000000000408545: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa6776]; syscall; 
0x000000000040850a: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa67b1]; syscall; 
0x0000000000408436: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa6885]; syscall; 
0x000000000040650a: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa8751]; syscall; 
0x0000000000404c37: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa9fec]; syscall; 
0x0000000000403c4e: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xaaf25]; syscall; 
0x0000000000403c25: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xaaf4e]; syscall; 
0x0000000000403b1c: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xab057]; syscall; 
0x00000000004011fe: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xada75]; syscall; 
0x0000000000401350: add byte ptr [rax + 0xca], bh; syscall; 
0x00000000004727e4: add byte ptr [rax + 0xca], bh; syscall; ret; 
0x000000000045f2f8: add byte ptr [rax + 0xca], bh; xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x000000000044fc3a: add byte ptr [rax + 0xd], bh; syscall; 
0x0000000000407ae9: add byte ptr [rax + 0xe], bh; syscall; 
0x000000000047ce4d: add byte ptr [rax + 0xf08323c], al; test dword ptr [rip + 0x48fff848], eax; mov eax, dword ptr [rax]; add rsp, 8; ret; 
0x000000000044622f: add byte ptr [rax + 0xf], al; mov dh, 0xc6; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000000045ff85: add byte ptr [rax + 0xf], cl; mov ebp, 0xf80148c0; ret; 
0x0000000000411626: add byte ptr [rax + 0xf], cl; sal byte ptr [rcx], 1; ror byte ptr [rax + 0x39], 0xfa; setae al; ret; 
0x00000000004783bc: add byte ptr [rax + 1], bh; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000004782cf: add byte ptr [rax + 1], bh; ret; 
0x000000000041fc54: add byte ptr [rax + 1], cl; clc; add rax, rcx; ret; 
0x0000000000460691: add byte ptr [rax + 1], cl; clc; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000000420181: add byte ptr [rax + 1], cl; clc; add rax, rcx; vzeroupper; ret; 
0x0000000000411f67: add byte ptr [rax + 1], cl; ret; 
0x0000000000478438: add byte ptr [rax + 2], bh; ret; 
0x000000000041f80c: add byte ptr [rax + 5], cl; add byte ptr [rax], 0; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x000000000043eb6f: add byte ptr [rax + 8], bh; syscall; 
0x000000000043eb6f: add byte ptr [rax + 8], bh; syscall; cmp rax, -0x1000; ja 0x3eb80; ret; 
0x000000000046cb78: add byte ptr [rax + 9], cl; ret 0x2875; 
0x000000000040604f: add byte ptr [rax + rax*8 - 0x49f0e78c], al; ror byte ptr [rax - 0x77], 1; fisttp word ptr [rdi]; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000411624: add byte ptr [rax + rax], al; cmovbe rdx, rax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x0000000000462259: add byte ptr [rax + rax], cl; add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x0000000000416d98: add byte ptr [rax + rax], cl; add byte ptr [rax], al; xor eax, eax; pop rbx; ret; 
0x000000000047fbf7: add byte ptr [rax + rdx*2], bh; jne 0x7fc1b; xor eax, eax; add rsp, 8; ret; 
0x000000000046e41b: add byte ptr [rax - 0x14343], al; jmp qword ptr [rsi + 0xf]; 
0x000000000041881a: add byte ptr [rax - 0x197fea8c], al; add cl, byte ptr [rax - 0x73]; add eax, 0x14e08; lea rdx, [rip + 0x17041]; cmovne rax, rdx; ret; 
0x0000000000417cf1: add byte ptr [rax - 0x197fea8c], al; add cl, byte ptr [rax - 0x73]; add eax, 0x3a21; lea rdx, [rip + 0x526a]; cmovne rax, rdx; ret; 
0x0000000000460485: add byte ptr [rax - 0x2d], cl; cli; test rdx, rdx; je 0x60530; bsf rax, rdx; ret; 
0x00000000004025ce: add byte ptr [rax - 0x2f7600cf], dl; syscall; 
0x000000000045eb21: add byte ptr [rax - 0x39], cl; add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000410d4a: add byte ptr [rax - 0x39], cl; add eax, 0x9e3c2; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x00000000004016ef: add byte ptr [rax - 0x39], cl; add eax, 0xadfdd; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x000000000040f07f: add byte ptr [rax - 0x39], cl; push r8; add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000045c86f: add byte ptr [rax - 0x39], cl; ret 0xe228; 
0x00000000004706a1: add byte ptr [rax - 0x39], cl; ret 0xffb0; 
0x0000000000470eaf: add byte ptr [rax - 0x39], cl; ret 0xffb8; 
0x000000000043e9f7: add byte ptr [rax - 0x39], cl; ret 0xffc0; 
0x0000000000471f9e: add byte ptr [rax - 0x39], cl; ret 0xffe8; 
0x0000000000417d56: add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x00000000004023d9: add byte ptr [rax - 0x39], cl; ret; 
0x000000000046153f: add byte ptr [rax - 0x39], cl; rol byte ptr [rbx], 0; add byte ptr [rax], al; ret; 
0x000000000046157f: add byte ptr [rax - 0x39], cl; rol byte ptr [rdi], 0; add byte ptr [rax], al; ret; 
0x000000000046152f: add byte ptr [rax - 0x39], cl; rol byte ptr [rdx], 0; add byte ptr [rax], al; ret; 
0x000000000046156f: add byte ptr [rax - 0x39], cl; rol byte ptr [rsi], 0; add byte ptr [rax], al; ret; 
0x000000000044fb6f: add byte ptr [rax - 0x39], cl; ror byte ptr [rdi], 0; add byte ptr [rax], al; syscall; 
0x000000000045fddf: add byte ptr [rax - 0x3d7cb7f6], cl; add dword ptr [rax - 0x7d], ecx; ret; 
0x00000000004356be: add byte ptr [rax - 0x3f43f00d], dl; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000044fab4: add byte ptr [rax - 0x3f], cl; ret 0x4811; 
0x000000000044db29: add byte ptr [rax - 0x3f], cl; ret 0x4911; 
0x000000000044dafd: add byte ptr [rax - 0x3f], cl; ret 0x6411; 
0x0000000000478397: add byte ptr [rax - 0x3ffe], bh; sub eax, ecx; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x00000000004783b8: add byte ptr [rax - 0x47ff76b7], al; add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000000453f8f: add byte ptr [rax - 0x68], cl; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x00000000004185c7: add byte ptr [rax - 0x73], cl; adc eax, 0x11dd1; cmovne rax, rdx; ret; 
0x0000000000418827: add byte ptr [rax - 0x73], cl; adc eax, 0x17041; cmovne rax, rdx; ret; 
0x0000000000417bf4: add byte ptr [rax - 0x73], cl; adc eax, 0x1e0a4; cmovne rax, rdx; ret; 
0x00000000004187d4: add byte ptr [rax - 0x73], cl; adc eax, 0x1ec74; cmovne rax, rdx; ret; 
0x0000000000418515: add byte ptr [rax - 0x73], cl; adc eax, 0x21af3; cmovne rax, rdx; ret; 
0x0000000000417b34: add byte ptr [rax - 0x73], cl; adc eax, 0x221b4; cmovne rax, rdx; ret; 
0x0000000000417b94: add byte ptr [rax - 0x73], cl; adc eax, 0x24e4; cmovne rax, rdx; ret; 
0x0000000000461064: add byte ptr [rax - 0x73], cl; adc eax, 0x34; cmovne rax, rdx; ret; 
0x0000000000417cfe: add byte ptr [rax - 0x73], cl; adc eax, 0x526a; cmovne rax, rdx; ret; 
0x00000000004188b7: add byte ptr [rax - 0x73], cl; adc eax, 0xf011; cmovne rax, rdx; ret; 
0x0000000000418737: add byte ptr [rax - 0x73], cl; adc eax, 0xf171; cmovne rax, rdx; ret; 
0x0000000000460c94: add byte ptr [rax - 0x73], cl; add al, 0x4c; lea ecx, [rsp + 0x20]; call rbx; 
0x0000000000467679: add byte ptr [rax - 0x73], cl; add al, 0x90; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x000000000046764b: add byte ptr [rax - 0x73], cl; add al, 0x90; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x0000000000434c1a: add byte ptr [rax - 0x73], cl; add al, 7; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000044b86c: add byte ptr [rax - 0x73], cl; add cl, byte ptr [rax + 0x39]; ret; 
0x000000000041888f: add byte ptr [rax - 0x73], cl; add eax, 0x14649; and dh, 8; je 0x188c8; ret; 
0x000000000041870f: add byte ptr [rax - 0x73], cl; add eax, 0x147a9; and dh, 8; je 0x18748; ret; 
0x000000000041859f: add byte ptr [rax - 0x73], cl; add eax, 0x14939; and dh, 8; je 0x185d8; ret; 
0x0000000000418974: add byte ptr [rax - 0x73], cl; add eax, 0x1c474; cmove rax, rdx; ret; 
0x0000000000417c94: add byte ptr [rax - 0x73], cl; add eax, 0x1d784; cmove rax, rdx; ret; 
0x00000000004188f5: add byte ptr [rax - 0x73], cl; add eax, 0x23823; cmove rax, rdx; ret; 
0x0000000000418775: add byte ptr [rax - 0x73], cl; add eax, 0x23993; cmove rax, rdx; ret; 
0x0000000000418605: add byte ptr [rax - 0x73], cl; add eax, 0x23b13; cmove rax, rdx; ret; 
0x000000000041887b: add byte ptr [rax - 0x73], cl; add eax, 0x23bed; cmove rax, rdx; ret; 
0x00000000004186fb: add byte ptr [rax - 0x73], cl; add eax, 0x23d5d; cmove rax, rdx; ret; 
0x000000000041858b: add byte ptr [rax - 0x73], cl; add eax, 0x23edd; cmove rax, rdx; ret; 
0x00000000004188d5: add byte ptr [rax - 0x73], cl; add eax, 0x23fd3; cmove rax, rdx; ret; 
0x0000000000417c1d: add byte ptr [rax - 0x73], cl; add eax, 0x23ffb; cmovne rax, rdx; ret; 
0x0000000000418755: add byte ptr [rax - 0x73], cl; add eax, 0x24143; cmove rax, rdx; ret; 
0x0000000000418680: add byte ptr [rax - 0x73], cl; add eax, 0x24738; cmovne rax, rdx; ret; 
0x0000000000418665: add byte ptr [rax - 0x73], cl; add eax, 0x24913; cmove rax, rdx; ret; 
0x00000000004186a9: add byte ptr [rax - 0x73], cl; add eax, 0x24a5f; cmove rax, rdx; ret; 
0x0000000000412219: add byte ptr [rax - 0x73], cl; add eax, 0x344f; mov qword ptr [rip + 0x9a558], rax; ret; 
0x000000000047282f: add byte ptr [rax - 0x73], cl; add eax, 0x3ce89; mov qword ptr [rip + 0x3ce6a], rax; ret; 
0x000000000044e140: add byte ptr [rax - 0x73], cl; add eax, 0x5db18; mov rax, qword ptr [rax + rbx*8]; test rax, rax; je 0x4e153; call rax; 
0x0000000000442bdf: add byte ptr [rax - 0x73], cl; add eax, 0x6a639; ret; 
0x0000000000472fdd: add byte ptr [rax - 0x73], cl; add eax, 0x6b; cmovne rax, rdx; ret; 
0x0000000000473244: add byte ptr [rax - 0x73], cl; add eax, 0x74; cmove rax, rdx; ret; 
0x0000000000418934: add byte ptr [rax - 0x73], cl; add eax, 0x75c4; cmove rax, rdx; ret; 
0x00000000004184c4: add byte ptr [rax - 0x73], cl; add eax, 0x7704; cmove rax, rdx; ret; 
0x000000000045f6f4: add byte ptr [rax - 0x73], cl; add eax, 0x834; cmove rax, rdx; ret; 
0x0000000000414517: add byte ptr [rax - 0x73], cl; add eax, 0x98281; add rsp, 0x10; pop rbp; ret; 
0x0000000000460954: add byte ptr [rax - 0x73], cl; add eax, 0x994; cmove rax, rdx; ret; 
0x000000000045f6b4: add byte ptr [rax - 0x73], cl; add eax, 0xd34; cmove rax, rdx; ret; 
0x00000000004160f3: add byte ptr [rax - 0x73], cl; add eax, 0xfffff575; mov qword ptr [rip + 0x9667e], rax; ret; 
0x00000000004160e5: add byte ptr [rax - 0x73], cl; add eax, 0xfffff993; mov qword ptr [rip + 0x96694], rax; lea rax, [rip - 0xa8b]; mov qword ptr [rip + 0x9667e], rax; ret; 
0x0000000000460af4: add byte ptr [rax - 0x73], cl; add qword ptr [rcx - 0x75], rcx; cmp al, 0x24; lea r9, [rsp + 0x28]; call rbx; 
0x0000000000473f5b: add byte ptr [rax - 0x73], cl; cmp eax, 0x2451d; call 0x2df0; nop dword ptr [rax + rax]; ret; 
0x0000000000468acd: add byte ptr [rax - 0x73], cl; cmp eax, 0x2d7e3; movsxd rax, dword ptr [rdi + r12*4]; add rax, rdi; jmp rax; 
0x0000000000472746: add byte ptr [rax - 0x73], cl; cmp eax, 0x3cf3a; syscall; 
0x00000000004724c2: add byte ptr [rax - 0x73], cl; cmp eax, 0x3d1ba; syscall; 
0x00000000004705d6: add byte ptr [rax - 0x73], cl; cmp eax, 0x3f092; syscall; 
0x0000000000442bd0: add byte ptr [rax - 0x73], cl; cmp eax, 0x426c8; call 0x2df0; nop dword ptr [rax]; lea rax, [rip + 0x6a639]; ret; 
0x0000000000450936: add byte ptr [rax - 0x73], cl; cmp eax, 0x5eca2; syscall; 
0x0000000000450871: add byte ptr [rax - 0x73], cl; cmp eax, 0x5ed67; syscall; 
0x00000000004506d4: add byte ptr [rax - 0x73], cl; cmp eax, 0x5ef04; syscall; 
0x0000000000450605: add byte ptr [rax - 0x73], cl; cmp eax, 0x5efd3; syscall; 
0x0000000000445386: add byte ptr [rax - 0x73], cl; cmp eax, 0x6a04a; syscall; 
0x000000000044521a: add byte ptr [rax - 0x73], cl; cmp eax, 0x6a1b6; syscall; 
0x0000000000445122: add byte ptr [rax - 0x73], cl; cmp eax, 0x6a2ae; syscall; 
0x000000000043ddbe: add byte ptr [rax - 0x73], cl; cmp eax, 0x71612; syscall; 
0x0000000000408670: add byte ptr [rax - 0x73], cl; cmp eax, 0x79155; call 0x2df0; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000417a22: add byte ptr [rax - 0x73], cl; cmp eax, 0x94d76; syscall; 
0x0000000000415d0a: add byte ptr [rax - 0x73], cl; cmp eax, 0x96a8e; syscall; 
0x0000000000415cd2: add byte ptr [rax - 0x73], cl; cmp eax, 0x96ac6; syscall; 
0x00000000004157b2: add byte ptr [rax - 0x73], cl; cmp eax, 0x96fe6; syscall; 
0x000000000041546e: add byte ptr [rax - 0x73], cl; cmp eax, 0x9732a; syscall; 
0x000000000041692d: add byte ptr [rax - 0x73], cl; cmp eax, 0x9885b; syscall; 
0x0000000000413d9e: add byte ptr [rax - 0x73], cl; cmp eax, 0x989fa; syscall; 
0x0000000000413d9e: add byte ptr [rax - 0x73], cl; cmp eax, 0x989fa; syscall; pop rbp; ret; 
0x0000000000413d6e: add byte ptr [rax - 0x73], cl; cmp eax, 0x98a2a; syscall; 
0x0000000000416006: add byte ptr [rax - 0x73], cl; cmp eax, 0x99172; syscall; 
0x0000000000416006: add byte ptr [rax - 0x73], cl; cmp eax, 0x99172; syscall; pop rbx; ret; 
0x000000000041433c: add byte ptr [rax - 0x73], cl; cmp eax, 0x9ae4c; syscall; 
0x00000000004142c0: add byte ptr [rax - 0x73], cl; cmp eax, 0x9aeb8; syscall; 
0x000000000041401b: add byte ptr [rax - 0x73], cl; cmp eax, 0x9b16d; syscall; 
0x000000000041217e: add byte ptr [rax - 0x73], cl; cmp eax, 0x9d00a; syscall; 
0x0000000000410d2d: add byte ptr [rax - 0x73], cl; cmp eax, 0x9e3db; syscall; 
0x0000000000410d2d: add byte ptr [rax - 0x73], cl; cmp eax, 0x9e3db; syscall; ret; 
0x0000000000410834: add byte ptr [rax - 0x73], cl; cmp eax, 0x9e8d4; syscall; 
0x00000000004104e9: add byte ptr [rax - 0x73], cl; cmp eax, 0x9ec1f; syscall; 
0x00000000004101a6: add byte ptr [rax - 0x73], cl; cmp eax, 0x9ef62; syscall; 
0x000000000040eea0: add byte ptr [rax - 0x73], cl; cmp eax, 0xa0268; syscall; 
0x000000000040ebe0: add byte ptr [rax - 0x73], cl; cmp eax, 0xa0528; syscall; 
0x000000000040e734: add byte ptr [rax - 0x73], cl; cmp eax, 0xa09d4; syscall; 
0x000000000040e734: add byte ptr [rax - 0x73], cl; cmp eax, 0xa09d4; syscall; ret; 
0x00000000004096a2: add byte ptr [rax - 0x73], cl; cmp eax, 0xa5d2e; syscall; 
0x0000000000408771: add byte ptr [rax - 0x73], cl; cmp eax, 0xa654f; syscall; 
0x000000000040854a: add byte ptr [rax - 0x73], cl; cmp eax, 0xa6776; syscall; 
0x000000000040850f: add byte ptr [rax - 0x73], cl; cmp eax, 0xa67b1; syscall; 
0x000000000040843b: add byte ptr [rax - 0x73], cl; cmp eax, 0xa6885; syscall; 
0x000000000040650f: add byte ptr [rax - 0x73], cl; cmp eax, 0xa8751; syscall; 
0x0000000000404c3c: add byte ptr [rax - 0x73], cl; cmp eax, 0xa9fec; syscall; 
0x0000000000403c53: add byte ptr [rax - 0x73], cl; cmp eax, 0xaaf25; syscall; 
0x0000000000403c2a: add byte ptr [rax - 0x73], cl; cmp eax, 0xaaf4e; syscall; 
0x0000000000403b21: add byte ptr [rax - 0x73], cl; cmp eax, 0xab057; syscall; 
0x0000000000401203: add byte ptr [rax - 0x73], cl; cmp eax, 0xada75; syscall; 
0x000000000046cdc6: add byte ptr [rax - 0x73], cl; dec dword ptr [r8 - 0x7d]; clc; std; jbe 0x6cdd8; ret; 
0x0000000000443884: add byte ptr [rax - 0x73], cl; mov ah, 0x24; ret 0; 
0x000000000045d22e: add byte ptr [rax - 0x73], cl; or eax, 0x37fae; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000045cbed: add byte ptr [rax - 0x73], cl; or eax, 0x383ab; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000040da7c: add byte ptr [rax - 0x73], cl; or eax, 0xa01bc; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x000000000041e82e: add byte ptr [rax - 0x73], cl; or r14b, al; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x000000000045e98f: add byte ptr [rax - 0x73], cl; test al, 0xd8; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax - 0xa]; ret 0x7408; 
0x0000000000473f54: add byte ptr [rax - 0x73], cl; xor eax, 0x2450c; lea rdi, [rip + 0x2451d]; call 0x2df0; nop dword ptr [rax + rax]; ret; 
0x0000000000468220: add byte ptr [rax - 0x73], cl; xor eax, 0x2dff8; movsxd rax, dword ptr [rsi + r12*4]; add rax, rsi; jmp rax; 
0x000000000043d2b1: add byte ptr [rax - 0x73], cl; xor eax, 0x46b87; movsxd rax, dword ptr [rsi + rdi*4]; add rax, rsi; jmp rax; 
0x0000000000412387: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x00000000004745f7: add byte ptr [rax - 0x75], cl; adc cl, byte ptr [rcx + 0x48b48d8]; ret 0x8b48; 
0x0000000000402591: add byte ptr [rax - 0x75], cl; adc eax, 0xacc1f; mov edi, dword ptr [rsp + 0xc]; mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000047ba37: add byte ptr [rax - 0x75], cl; adc ecx, dword ptr [rax + 0x63]; ret 0xbc80; 
0x000000000047a9ec: add byte ptr [rax - 0x75], cl; add al, 0x24; add rsp, 0x38; pop rbx; pop r14; ret; 
0x000000000047a717: add byte ptr [rax - 0x75], cl; add al, 0x24; add rsp, 0x38; ret; 
0x000000000045a8c4: add byte ptr [rax - 0x75], cl; add al, 0xc1; mov ecx, 1; jmp rax; 
0x0000000000459e0c: add byte ptr [rax - 0x75], cl; add al, 0xc1; xor ecx, ecx; jmp rax; 
0x000000000045a2ec: add byte ptr [rax - 0x75], cl; add al, 0xc6; jmp rax; 
0x000000000044e147: add byte ptr [rax - 0x75], cl; add al, 0xd8; test rax, rax; je 0x4e153; call rax; 
0x000000000048063e: add byte ptr [rax - 0x75], cl; add al, 0xd8; test rax, rax; je 0x8064a; call rax; 
0x0000000000438bff: add byte ptr [rax - 0x75], cl; add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x75]; add eax, 0x5428948; lea rax, [rdx + 0xc]; ret; 
0x00000000004372cf: add byte ptr [rax - 0x75], cl; add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x000000000044d1df: add byte ptr [rax - 0x75], cl; add eax, 0x62241; ret; 
0x00000000004442df: add byte ptr [rax - 0x75], cl; add eax, 0x6b101; ret; 
0x00000000004442cf: add byte ptr [rax - 0x75], cl; add eax, 0x6b109; ret; 
0x0000000000440eaf: add byte ptr [rax - 0x75], cl; add eax, 0x6d411; mov qword ptr [rdi], rax; mov rax, qword ptr [rip + 0x6d3f7]; mov qword ptr [rsi], rax; ret; 
0x000000000043f74f: add byte ptr [rax - 0x75], cl; add eax, 0x6d9c1; test rax, rax; je 0x3f75d; ret; 
0x0000000000410c3f: add byte ptr [rax - 0x75], cl; add eax, 0x9b4d9; ret; 
0x0000000000443bb0: add byte ptr [rax - 0x75], cl; and al, 0x10; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x000000000044b908: add byte ptr [rax - 0x75], cl; and al, 0x30; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000043ea90: add byte ptr [rax - 0x75], cl; and al, 8; add rsp, 0x28; ret; 
0x0000000000407bf4: add byte ptr [rax - 0x75], cl; and al, 8; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000042435f: add byte ptr [rax - 0x75], cl; cmc; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000046cdbf: add byte ptr [rax - 0x75], cl; cmp eax, 0x42899; lea rax, [rdi - 1]; cmp rax, -3; jbe 0x6cdd8; ret; 
0x000000000042453f: add byte ptr [rax - 0x75], cl; hlt; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424b2f: add byte ptr [rax - 0x75], cl; int1; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000040a17a: add byte ptr [rax - 0x75], cl; jae 0xa18f; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x000000000041625f: add byte ptr [rax - 0x75], cl; je 0x16288; sbb byte ptr [rbx + 0x5d], bl; pop r12; jmp rax; 
0x0000000000416faf: add byte ptr [rax - 0x75], cl; je 0x16fd8; sub byte ptr [rcx + rcx*4 - 0x19], cl; call rax; 
0x0000000000446479: add byte ptr [rax - 0x75], cl; je 0x464a2; push rax; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x00000000004474f2: add byte ptr [rax - 0x75], cl; je 0x4751b; push rax; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000042472f: add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042492f: add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000046354f: add byte ptr [rax - 0x75], cl; or byte ptr [r8 - 0x7b], cl; sal byte ptr [rdi + 0x48], 0x89; ret; 
0x000000000047d95f: add byte ptr [rax - 0x75], cl; or byte ptr [rax + 1], dil; cmp qword ptr [rsi + 8], rcx; ja 0x7d971; sbb eax, eax; ret; 
0x0000000000479a6d: add byte ptr [rax - 0x75], cl; or byte ptr [rax + 3], cl; add byte ptr [r13 + 0x31], r8b; jmp qword ptr [rsi - 0x7d]; 
0x000000000046ce0f: add byte ptr [rax - 0x75], cl; or byte ptr [rax + rcx*2 + 0x2b], spl; add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x00000000004768c0: add byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x7b], r9b; sal byte ptr [rsi + rsi*4 + 0x49], 0x8b; adc byte ptr [rax + 1], cl; ret 0x3949; 
0x0000000000478f47: add byte ptr [rax - 0x75], cl; or cl, byte ptr [rax - 0x7d]; ret 0xf08; 
0x0000000000402eb9: add byte ptr [rax - 0x75], cl; pop rsp; ret; 
0x0000000000402290: add byte ptr [rax - 0x75], cl; push rax; and byte ptr [rax + 1], cl; ret 0xb70f; 
0x000000000040c56f: add byte ptr [rax - 0x75], cl; push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x0000000000429e3f: add byte ptr [rax - 0x75], cl; push rsi; add eax, 0x480e8b48; mov dword ptr [rdi + 5], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000423ddf: add byte ptr [rax - 0x75], cl; push rsi; clc; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042967f: add byte ptr [rax - 0x75], cl; push rsi; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004295ef: add byte ptr [rax - 0x75], cl; push rsi; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042988f: add byte ptr [rax - 0x75], cl; push rsi; test dword ptr [rbx - 0x76b703b2], 0x4f89f757; cld; ret; 
0x0000000000479293: add byte ptr [rax - 0x75], cl; test dword ptr [rax - 0x7c000005], esi; ret; 
0x000000000040ce83: add byte ptr [rax - 0x75], cl; test eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x000000000040cd05: add byte ptr [rax - 0x75], cl; test eax, ebx; add byte ptr [rax], al; add byte ptr [rcx - 0x39], cl; mov byte ptr [rax + 0x48004adb], 0xc7; ret; 
0x0000000000423f9f: add byte ptr [rax - 0x75], cl; test qword ptr [rbx - 0x76b703aa], 0x5789f74f; cld; ret; 
0x000000000045e94f: add byte ptr [rax - 0x75], cl; xchg dword ptr [rax + 0x48000000], esp; cmp dword ptr [rax + 0x30], 0; je 0x5e960; ret; 
0x0000000000458aaf: add byte ptr [rax - 0x75], cl; xchg eax, ebp; clc; idiv bh; dec dword ptr [rax + 0x39]; ret 0x850f; 
0x00000000004099fe: add byte ptr [rax - 0x75], cl; xchg eax, edi; movabs al, byte ptr [0xe08a8948000000]; add byte ptr [rax], al; ret; 
0x00000000004671f2: add byte ptr [rax - 0x75], cl; xor byte ptr [rax - 0x7b], cl; test byte ptr [rdi], 0x84; ret 2; 
0x0000000000403df2: add byte ptr [rax - 0x76b7bcc8], al; ret; 
0x000000000047ceb7: add byte ptr [rax - 0x77], cl; adc al, 0xf7; add rsp, 8; ret; 
0x000000000044f922: add byte ptr [rax - 0x77], cl; adc eax, 0x5e0ce; cmp qword ptr fs:[rdi], rsi; je 0x4f938; ret; 
0x0000000000472836: add byte ptr [rax - 0x77], cl; add eax, 0x3ce6a; ret; 
0x000000000047281b: add byte ptr [rax - 0x77], cl; add eax, 0x3ce85; add rsp, 8; ret; 
0x000000000044f91b: add byte ptr [rax - 0x77], cl; add eax, 0x5e0cd; mov qword ptr [rip + 0x5e0ce], rdx; cmp qword ptr fs:[rdi], rsi; je 0x4f938; ret; 
0x0000000000412220: add byte ptr [rax - 0x77], cl; add eax, 0x9a558; ret; 
0x0000000000412212: add byte ptr [rax - 0x77], cl; add eax, 0x9a56e; lea rax, [rip + 0x344f]; mov qword ptr [rip + 0x9a558], rax; ret; 
0x000000000041178f: add byte ptr [rax - 0x77], cl; add eax, 0x9afc9; ret; 
0x000000000041170c: add byte ptr [rax - 0x77], cl; add eax, 0x9afec; ret; 
0x00000000004116dc: add byte ptr [rax - 0x77], cl; add eax, 0x9b024; ret; 
0x000000000041168f: add byte ptr [rax - 0x77], cl; add eax, 0x9b079; mov dword ptr [rip + 0x9b093], 1; ret; 
0x000000000046a4b2: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x69de0; add rsp, 0xd8; ret; 
0x0000000000413b27: add byte ptr [rax - 0x77], cl; and al, 0x18; call rax; 
0x0000000000462154: add byte ptr [rax - 0x77], cl; and al, 0x28; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000040d6e9: add byte ptr [rax - 0x77], cl; call 0x5c42344c; ret; 
0x0000000000410c6f: add byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000040db84: add byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x00000000004524e8: add byte ptr [rax - 0x77], cl; fimul dword ptr [rcx + rcx*4 - 0x1a]; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000045b01e: add byte ptr [rax - 0x77], cl; fimul dword ptr [rcx + rcx*4 - 0x32]; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x0000000000416c76: add byte ptr [rax - 0x77], cl; fistp qword ptr [rax + 0xca]; syscall; 
0x000000000046b25d: add byte ptr [rax - 0x77], cl; in eax, 0x48; mov esi, ebp; syscall; 
0x00000000004173dc: add byte ptr [rax - 0x77], cl; iretd; mov eax, 0xca; syscall; 
0x000000000044151f: add byte ptr [rax - 0x77], cl; ja 0x41544; ret; 
0x0000000000402a79: add byte ptr [rax - 0x77], cl; mov qword ptr ss:[rsi + 0x10], rsi; syscall; 
0x0000000000402a70: add byte ptr [rax - 0x77], cl; or byte ptr [rax + 0x9e], r15b; mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x0000000000412e0b: add byte ptr [rax - 0x77], cl; out dx, eax; mov eax, 0xca; syscall; 
0x000000000040af54: add byte ptr [rax - 0x77], cl; out dx, eax; pop rbp; mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x00000000004095cc: add byte ptr [rax - 0x77], cl; pop rdi; or byte ptr [rbx - 0x76fefbb9], al; ret 0xe281; 
0x0000000000440d9f: add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x000000000040a16b: add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x000000000047ee88: add byte ptr [rax - 0x77], cl; ret 0x3948; 
0x0000000000453d17: add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x0000000000469b1f: add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x000000000045899f: add byte ptr [rax - 0x77], cl; ret 0x8349; 
0x000000000045fea7: add byte ptr [rax - 0x77], cl; ret 0x8548; 
0x000000000045e05f: add byte ptr [rax - 0x77], cl; ret 0x889; 
0x0000000000471217: add byte ptr [rax - 0x77], cl; ret 0x8949; 
0x000000000045e8af: add byte ptr [rax - 0x77], cl; ret 0x894c; 
0x0000000000416091: add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000044051e: add byte ptr [rax - 0x77], cl; ret 0xabe; 
0x000000000044b886: add byte ptr [rax - 0x77], cl; ret 0xb7eb; 
0x000000000045478a: add byte ptr [rax - 0x77], cl; ret 0xb8; 
0x0000000000408d8f: add byte ptr [rax - 0x77], cl; ret 0xc083; 
0x0000000000411616: add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000402d78: add byte ptr [rax - 0x77], cl; ret; 
0x000000000041e89c: add byte ptr [rax - 0x77], cl; retf 0x8349; ret 0x7f10; 
0x0000000000432004: add byte ptr [rax - 0x77], cl; retf 0x8349; ret 0xf10; 
0x000000000043c160: add byte ptr [rax - 0x77], cl; sal ebx, 1; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000046cf41: add byte ptr [rax - 0x77], cl; sbb byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x00000000004803ba: add byte ptr [rax - 0x77], cl; sbb eax, 0x2ed2e; test rbx, rbx; jne 0x803a8; pop rbx; ret; 
0x0000000000410caa: add byte ptr [rax - 0x77], cl; sbb eax, 0x9e466; add dword ptr [rip + 0x9e45b], 1; pop rbx; ret; 
0x000000000044a490: add byte ptr [rax - 0x77], cl; shr bl, 1; ret 0x2e66; 
0x000000000046c2dc: add byte ptr [rax - 0x77], cl; test dword ptr [rcx - 0x77], 0x4de0e8f5; stc; dec dword ptr [rax - 0x77]; ret; 
0x000000000044c023: add byte ptr [rax - 0x77], cl; xchg eax, esp; and al, 0x80; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x000000000047f21f: add byte ptr [rax - 0x77], cl; xlatb; adc byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x00000000004603ef: add byte ptr [rax - 0x7b], cl; div byte ptr [rbp + 4]; xor rax, rax; ret; 
0x0000000000478367: add byte ptr [rax - 0x7b], cl; div byte ptr [rbp - 0xf]; cmp cx, 0x7fff; jne 0x78358; mov eax, 1; ret; 
0x000000000043ec9f: add byte ptr [rax - 0x7b], cl; push qword ptr [rax + rbx*8 + 0x48]; mov ebp, edi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x000000000044038f: add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax + 0x48]; test esi, esi; jne 0x403a0; ret; 
0x00000000004403af: add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax + 0x48]; test esi, esi; jne 0x403c0; ret; 
0x000000000045e996: add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax - 0xa]; ret 0x7408; 
0x00000000004403cf: add byte ptr [rax - 0x7b], cl; push qword ptr [rbx + rcx - 0x17]; push rsi; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x000000000047cf3f: add byte ptr [rax - 0x7b], cl; ror byte ptr [rax + 0xf], 0x45; and al, 0x10; add rsp, 0x28; ret; 
0x000000000046de9f: add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; ret 0x22; 
0x0000000000409a2a: add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x00000000004579bb: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x4d], 0x63; ret; 
0x000000000043cdff: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + 4], cl; mov rax, rdi; ret; 
0x0000000000417a79: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rax + 0x48], cl; mov dword ptr [rbx], edx; xor eax, eax; pop rbx; ret; 
0x0000000000411963: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp - 0x21], cl; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000401be1: add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rcx - 0x41], 0x30; fisttp dword ptr [rdx]; jmp rax; 
0x0000000000401c23: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdi + rax - 0x41], 0x30; fisttp dword ptr [rdx]; jmp rax; 
0x000000000040100a: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000004422c9: add byte ptr [rax - 0x7b], cl; sal byte ptr [rsi + rbp + 0x48], 0x8b; push rax; or byte ptr [rcx + 0x3e895], cl; add dh, dh; ret 0x7402; 
0x0000000000416457: add byte ptr [rax - 0x7d], cl; call qword ptr [rax]; 
0x000000000043cddd: add byte ptr [rax - 0x7d], cl; cli; and byte ptr [rdi + 0x74], dh; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043ce3d: add byte ptr [rax - 0x7d], cl; cli; and byte ptr [rdi + 0xb], dh; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000047a261: add byte ptr [rax - 0x7d], cl; in al, dx; sbb byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000464ff5: add byte ptr [rax - 0x7d], cl; jge 0x64fc2; add byte ptr [rax - 0x77], cl; ret; 
0x000000000041572f: add byte ptr [rax - 0x7d], cl; jmp qword ptr [rax]; 
0x0000000000414d8f: add byte ptr [rax - 0x7d], cl; ret 0x110; 
0x000000000043b85f: add byte ptr [rax - 0x7d], cl; ret 0x3a01; 
0x000000000043d837: add byte ptr [rax - 0x7d], cl; ret 0x4001; 
0x00000000004473e7: add byte ptr [rax - 0x7d], cl; ret 0x4101; 
0x0000000000444195: add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x00000000004072a1: add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x0000000000447412: add byte ptr [rax - 0x7d], cl; ret 0x4901; 
0x000000000041e8c9: add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000046b07f: add byte ptr [rax - 0x7d], cl; ret 0x4c08; 
0x0000000000441a27: add byte ptr [rax - 0x7d], cl; ret 0x8801; 
0x00000000004154a6: add byte ptr [rax - 0x7d], cl; ret 0xb817; 
0x000000000045f9a8: add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x0000000000431da3: add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041e8f7: add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000044179f: add byte ptr [rax - 0x7d], cl; ret 0xf01; 
0x0000000000402957: add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000419ebf: add byte ptr [rax - 0x7d], cl; rol byte ptr [rax + 0x48], 0x83; ret 0x4840; 
0x000000000046052f: add byte ptr [rax - 0x7d], cl; rol byte ptr [rax + 0x49], 0x39; ret 0x2774; 
0x000000000044cd9d: add byte ptr [rax - 0x7d], cl; rol byte ptr [rax + rcx*2], 0x83; ret; 
0x0000000000447f14: add byte ptr [rax - 0x7d], cl; rol byte ptr [rax + rcx*2], 0x89; test byte ptr [rax + rax*4], ah; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x00000000004794ca: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x83; ret 0x3901; 
0x00000000004752b5: add byte ptr [rax - 0x7d], cl; ror dword ptr [rax], 0x83; ret 0x4801; 
0x000000000044f914: add byte ptr [rax - 0x7f], cl; ret 0x200; 
0x000000000041b425: add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x00000000004405f5: add byte ptr [rax - 0x7f], cl; ret; 
0x000000000040a5bb: add byte ptr [rax - 0x80], al; std; add dword ptr [rsi + rbp - 0x77], esi; ret 0xc085; 
0x000000000045072d: add byte ptr [rax - 1], bh; pop rbp; pop r12; pop r13; ret; 
0x000000000040af6f: add byte ptr [rax - 1], bh; pop rbp; ret; 
0x000000000040bc37: add byte ptr [rax - 1], bh; ret; 
0x000000000040bc36: add byte ptr [rax - 1], dil; ret; 
0x0000000000447f1d: add byte ptr [rax], 0; add byte ptr [rax + 0x39], cl; ret; 
0x000000000043d02d: add byte ptr [rax], 0; add byte ptr [rax + 0x39], cl; retf 0xe175; vzeroupper; ret; 
0x000000000041165b: add byte ptr [rax], 0; add byte ptr [rax + 0xca], bh; syscall; 
0x00000000004484f2: add byte ptr [rax], 0; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000041b422: add byte ptr [rax], 0; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x000000000041fe7b: add byte ptr [rax], 0; add byte ptr [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x000000000041fe9b: add byte ptr [rax], 0; add byte ptr [rax], al; bsf eax, eax; lea rax, [rax + rdi + 0x20]; ret; 
0x00000000004084b3: add byte ptr [rax], 0; add byte ptr [rax], al; call qword ptr [rbx]; 
0x000000000040f43b: add byte ptr [rax], 0; add byte ptr [rax], al; cmp qword ptr [rdi + 0x38], 0; je 0xf450; ret; 
0x0000000000440df3: add byte ptr [rax], 0; add byte ptr [rax], al; cmp rax, r8; ja 0x40e08; add rsp, 8; ret; 
0x000000000046220b: add byte ptr [rax], 0; add byte ptr [rax], al; mov eax, 0xc; syscall; 
0x000000000047f5cb: add byte ptr [rax], 0; add byte ptr [rax], al; mov eax, dword ptr [rdi]; test eax, eax; jne 0x7f5e0; ret; 
0x000000000042a22b: add byte ptr [rax], 0; add byte ptr [rax], al; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x00000000004765db: add byte ptr [rax], 0; add byte ptr [rax], al; mov rax, qword ptr [rdi]; cmp rax, rsi; je 0x765f0; ret; 
0x000000000042a06b: add byte ptr [rax], 0; add byte ptr [rax], al; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x00000000004390bb: add byte ptr [rax], 0; add byte ptr [rax], al; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x000000000043d34b: add byte ptr [rax], 0; add byte ptr [rax], al; movzx eax, cl; pop rbx; ret; 
0x000000000042a37b: add byte ptr [rax], 0; add byte ptr [rax], al; movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x000000000042a30b: add byte ptr [rax], 0; add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000435a3b: add byte ptr [rax], 0; add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x0000000000475093: add byte ptr [rax], 0; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000413d1b: add byte ptr [rax], 0; add byte ptr [rax], al; ret; 
0x000000000043cdfb: add byte ptr [rax], 0; add byte ptr [rax], al; test rdx, rdx; jne 0x3ce09; mov rax, rdi; ret; 
0x0000000000417453: add byte ptr [rax], 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000040c1d3: add byte ptr [rax], 0; add byte ptr [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x000000000043d12f: add byte ptr [rax], 0; add byte ptr [rdi + 0x12], dh; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000043d0cf: add byte ptr [rax], 0; add byte ptr [rdi + 0x7b], dh; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x00000000004292d3: add byte ptr [rax], 0; add byte ptr [rdi], cl; cmp dword ptr [rbx - 1], -1; dec dword ptr [rax - 0x7f]; ret 0x80; 
0x0000000000448d4c: add byte ptr [rax], 0; add byte ptr [rdi], cl; mov dh, 0x50; dec dword ptr [rcx - 0x7d]; ret; 
0x0000000000421011: add byte ptr [rax], 0; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000046abb1: add byte ptr [rax], al; adc al, 0xe9; ret; 
0x00000000004020fc: add byte ptr [rax], al; adc byte ptr [rax], al; add dh, dh; ret 0x7402; 
0x0000000000474102: add byte ptr [rax], al; add al, ch; jbe 0x74101; cld; jmp qword ptr [rsi + 0xf]; 
0x000000000046c1e9: add byte ptr [rax], al; add al, ch; outsd dx, dword ptr [rsi]; and ch, bh; jmp qword ptr [rsi + 0x66]; 
0x0000000000472ead: add byte ptr [rax], al; add al, ch; retf; or edi, ebp; jmp qword ptr [rsi + 0x66]; 
0x00000000004783bf: add byte ptr [rax], al; add bh, al; add al, byte ptr [rdx]; sar bh, 0xff; ret; 
0x0000000000452599: add byte ptr [rax], al; add bh, al; test dword ptr [rax], eax; idiv edi; call qword ptr [rax]; 
0x00000000004084b5: add byte ptr [rax], al; add bh, bh; adc ecx, dword ptr [rax - 0x7d]; ret; 
0x00000000004656ec: add byte ptr [rax], al; add bh, dh; ret; 
0x000000000040fde2: add byte ptr [rax], al; add bl, ch; pushfq; nop word ptr [rax + rax]; mov rax, -1; ret; 
0x000000000045090d: add byte ptr [rax], al; add bl, ch; ret; 
0x000000000041280d: add byte ptr [rax], al; add bl, ch; stosd dword ptr [rdi], eax; nop word ptr [rax + rax]; call rax; 
0x000000000042036d: add byte ptr [rax], al; add bl, dh; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000004390bd: add byte ptr [rax], al; add bl, dh; movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x000000000043f5a9: add byte ptr [rax], al; add byte ptr [r9 + rbp - 0x48], sil; add dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x0000000000439f3c: add byte ptr [rax], al; add byte ptr [rax + 0x1478d48], dl; ret; 
0x0000000000417a8d: add byte ptr [rax], al; add byte ptr [rax + 0x16], bh; pop rbx; ret; 
0x0000000000462c60: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x149; 
0x000000000045b282: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x8949; 
0x00000000004669df: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x8d48; 
0x00000000004769de: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0xc148; 
0x00000000004534cf: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x000000000047d966: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; or byte ptr [rdi + 2], r14b; sbb eax, eax; ret; 
0x000000000040cd65: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x850f; 
0x000000000046a20e: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0xf48; 
0x0000000000447f1e: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x000000000043d02e: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; retf 0xe175; vzeroupper; ret; 
0x000000000043d395: add byte ptr [rax], al; add byte ptr [rax + 0x485bf0e5], al; cmovne eax, edx; ret; 
0x000000000043f407: add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; syscall; 
0x000000000045f01d: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x8d48; 
0x000000000046202d: add byte ptr [rax], al; add byte ptr [rax + 0x68], bh; syscall; 
0x000000000046202d: add byte ptr [rax], al; add byte ptr [rax + 0x68], bh; syscall; ret; 
0x000000000046201d: add byte ptr [rax], al; add byte ptr [rax + 0x6b], bh; syscall; 
0x000000000046201d: add byte ptr [rax], al; add byte ptr [rax + 0x6b], bh; syscall; ret; 
0x000000000046203d: add byte ptr [rax], al; add byte ptr [rax + 0x6c], bh; syscall; 
0x000000000046203d: add byte ptr [rax], al; add byte ptr [rax + 0x6c], bh; syscall; ret; 
0x00000000004395dd: add byte ptr [rax], al; add byte ptr [rax + 0x78d4837], cl; ret; 
0x000000000046220d: add byte ptr [rax], al; add byte ptr [rax + 0xc], bh; syscall; 
0x000000000047273f: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x3cf3a]; syscall; 
0x00000000004724bb: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x3d1ba]; syscall; 
0x00000000004705cf: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x3f092]; syscall; 
0x000000000045092f: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x5eca2]; syscall; 
0x000000000045086a: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x5ed67]; syscall; 
0x00000000004506cd: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x5ef04]; syscall; 
0x00000000004505fe: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x5efd3]; syscall; 
0x000000000044537f: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x6a04a]; syscall; 
0x0000000000445213: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x6a1b6]; syscall; 
0x000000000044511b: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x6a2ae]; syscall; 
0x000000000043ddb7: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x71612]; syscall; 
0x0000000000417a1b: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x94d76]; syscall; 
0x0000000000415d03: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x96a8e]; syscall; 
0x0000000000415ccb: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x96ac6]; syscall; 
0x00000000004157ab: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x96fe6]; syscall; 
0x0000000000415467: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9732a]; syscall; 
0x0000000000416926: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9885b]; syscall; 
0x0000000000413d97: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x989fa]; syscall; 
0x0000000000413d97: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x989fa]; syscall; pop rbp; ret; 
0x0000000000413d67: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x98a2a]; syscall; 
0x0000000000415fff: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x99172]; syscall; 
0x0000000000415fff: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x99172]; syscall; pop rbx; ret; 
0x0000000000414335: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9ae4c]; syscall; 
0x00000000004142b9: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9aeb8]; syscall; 
0x0000000000414014: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9b16d]; syscall; 
0x0000000000412177: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9d00a]; syscall; 
0x0000000000410d26: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9e3db]; syscall; 
0x0000000000410d26: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9e3db]; syscall; ret; 
0x000000000041082d: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9e8d4]; syscall; 
0x00000000004104e2: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9ec1f]; syscall; 
0x000000000041019f: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0x9ef62]; syscall; 
0x000000000040ee99: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa0268]; syscall; 
0x000000000040ebd9: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa0528]; syscall; 
0x000000000040e72d: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa09d4]; syscall; 
0x000000000040e72d: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa09d4]; syscall; ret; 
0x000000000040969b: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa5d2e]; syscall; 
0x000000000040876a: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa654f]; syscall; 
0x0000000000408543: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa6776]; syscall; 
0x0000000000408508: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa67b1]; syscall; 
0x0000000000408434: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa6885]; syscall; 
0x0000000000406508: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa8751]; syscall; 
0x0000000000404c35: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xa9fec]; syscall; 
0x0000000000403c4c: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xaaf25]; syscall; 
0x0000000000403c23: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xaaf4e]; syscall; 
0x0000000000403b1a: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xab057]; syscall; 
0x00000000004011fc: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xada75]; syscall; 
0x000000000040134e: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; syscall; 
0x00000000004727e2: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; syscall; ret; 
0x000000000045f2f6: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x000000000044fc38: add byte ptr [rax], al; add byte ptr [rax + 0xd], bh; syscall; 
0x0000000000407ae7: add byte ptr [rax], al; add byte ptr [rax + 0xe], bh; syscall; 
0x00000000004782cd: add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x00000000004461b9: add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x0000000000478436: add byte ptr [rax], al; add byte ptr [rax + 2], bh; ret; 
0x000000000047fbf5: add byte ptr [rax], al; add byte ptr [rax + rdx*2], bh; jne 0x7fc1b; xor eax, eax; add rsp, 8; ret; 
0x00000000004025cc: add byte ptr [rax], al; add byte ptr [rax - 0x2f7600cf], dl; syscall; 
0x000000000045eb1f: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000410d48: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; add eax, 0x9e3c2; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000045c86d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xe228; 
0x000000000043e9f5: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffc0; 
0x0000000000417d54: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000041205f: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x000000000046153d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rbx], 0; add byte ptr [rax], al; ret; 
0x000000000046157d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rdi], 0; add byte ptr [rax], al; ret; 
0x000000000046152d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rdx], 0; add byte ptr [rax], al; ret; 
0x000000000046156d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rsi], 0; add byte ptr [rax], al; ret; 
0x000000000045febd: add byte ptr [rax], al; add byte ptr [rax - 0x3d7cb7f6], cl; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000044fab2: add byte ptr [rax], al; add byte ptr [rax - 0x3f], cl; ret 0x4811; 
0x000000000044db27: add byte ptr [rax], al; add byte ptr [rax - 0x3f], cl; ret 0x4911; 
0x000000000044dafb: add byte ptr [rax], al; add byte ptr [rax - 0x3f], cl; ret 0x6411; 
0x00000000004783b6: add byte ptr [rax], al; add byte ptr [rax - 0x47ff76b7], al; add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000000434c18: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add al, 7; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000041888d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x14649; and dh, 8; je 0x188c8; ret; 
0x000000000041870d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x147a9; and dh, 8; je 0x18748; ret; 
0x000000000041859d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x14939; and dh, 8; je 0x185d8; ret; 
0x000000000047282d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x3ce89; mov qword ptr [rip + 0x3ce6a], rax; ret; 
0x0000000000472744: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x3cf3a; syscall; 
0x00000000004724c0: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x3d1ba; syscall; 
0x00000000004705d4: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x3f092; syscall; 
0x0000000000450934: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x5eca2; syscall; 
0x000000000045086f: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x5ed67; syscall; 
0x00000000004506d2: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x5ef04; syscall; 
0x0000000000450603: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x5efd3; syscall; 
0x0000000000445384: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x6a04a; syscall; 
0x0000000000445218: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x6a1b6; syscall; 
0x0000000000445120: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x6a2ae; syscall; 
0x000000000043ddbc: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x71612; syscall; 
0x0000000000417a20: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x94d76; syscall; 
0x0000000000415d08: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x96a8e; syscall; 
0x0000000000415cd0: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x96ac6; syscall; 
0x00000000004157b0: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x96fe6; syscall; 
0x000000000041546c: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9732a; syscall; 
0x000000000041692b: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9885b; syscall; 
0x0000000000413d9c: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x989fa; syscall; 
0x0000000000413d9c: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x989fa; syscall; pop rbp; ret; 
0x0000000000413d6c: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x98a2a; syscall; 
0x0000000000416004: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x99172; syscall; 
0x0000000000416004: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x99172; syscall; pop rbx; ret; 
0x000000000041433a: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9ae4c; syscall; 
0x00000000004142be: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9aeb8; syscall; 
0x0000000000414019: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9b16d; syscall; 
0x000000000041217c: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9d00a; syscall; 
0x0000000000410d2b: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9e3db; syscall; 
0x0000000000410d2b: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9e3db; syscall; ret; 
0x0000000000410832: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9e8d4; syscall; 
0x00000000004104e7: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9ec1f; syscall; 
0x00000000004101a4: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9ef62; syscall; 
0x000000000040ee9e: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa0268; syscall; 
0x000000000040ebde: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa0528; syscall; 
0x000000000040e732: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa09d4; syscall; 
0x000000000040e732: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa09d4; syscall; ret; 
0x00000000004096a0: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa5d2e; syscall; 
0x000000000040876f: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa654f; syscall; 
0x0000000000408548: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa6776; syscall; 
0x000000000040850d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa67b1; syscall; 
0x0000000000408439: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa6885; syscall; 
0x000000000040650d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa8751; syscall; 
0x0000000000404c3a: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa9fec; syscall; 
0x0000000000403c51: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xaaf25; syscall; 
0x0000000000403c28: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xaaf4e; syscall; 
0x0000000000403b1f: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xab057; syscall; 
0x0000000000401201: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xada75; syscall; 
0x000000000040da7a: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; or eax, 0xa01bc; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x0000000000412385: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000047ba35: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; adc ecx, dword ptr [rax + 0x63]; ret 0xbc80; 
0x00000000004442dd: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; add eax, 0x6b101; ret; 
0x00000000004442cd: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; add eax, 0x6b109; ret; 
0x0000000000443bae: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; and al, 0x10; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x000000000041625d: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; je 0x16288; sbb byte ptr [rbx + 0x5d], bl; pop r12; jmp rax; 
0x0000000000416fad: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; je 0x16fd8; sub byte ptr [rcx + rcx*4 - 0x19], cl; call rax; 
0x000000000042472d: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042492d: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004768be: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x7b], r9b; sal byte ptr [rsi + rsi*4 + 0x49], 0x8b; adc byte ptr [rax + 1], cl; ret 0x3949; 
0x0000000000423f9d: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; test qword ptr [rbx - 0x76b703aa], 0x5789f74f; cld; ret; 
0x00000000004099fc: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; xchg eax, edi; movabs al, byte ptr [0xe08a8948000000]; add byte ptr [rax], al; ret; 
0x000000000041170a: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0x9afec; ret; 
0x00000000004116da: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0x9b024; ret; 
0x000000000046a4b0: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x69de0; add rsp, 0xd8; ret; 
0x000000000040d6e7: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; call 0x5c42344c; ret; 
0x0000000000410c6d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000416c74: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fistp qword ptr [rax + 0xca]; syscall; 
0x00000000004173da: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; iretd; mov eax, 0xca; syscall; 
0x000000000044151d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ja 0x41544; ret; 
0x0000000000402a77: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; mov qword ptr ss:[rsi + 0x10], rsi; syscall; 
0x0000000000412e09: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov eax, 0xca; syscall; 
0x0000000000440d9d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x000000000040a169: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x00000000004541cb: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x0000000000474955: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x000000000045899d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8349; 
0x000000000045e05d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x889; 
0x000000000045e8ad: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x894c; 
0x00000000004484f3: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x0000000000409a31: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000047f21d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; xlatb; adc byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x00000000004603ed: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; div byte ptr [rbp + 4]; xor rax, rax; ret; 
0x00000000004403ad: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax + 0x48]; test esi, esi; jne 0x403c0; ret; 
0x000000000045e994: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax - 0xa]; ret 0x7408; 
0x00000000004403cd: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; push qword ptr [rbx + rcx - 0x17]; push rsi; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x000000000046de9d: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; ret 0x22; 
0x000000000046f225: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x000000000043cdfd: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + 4], cl; mov rax, rdi; ret; 
0x0000000000401bdf: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rcx - 0x41], 0x30; fisttp dword ptr [rdx]; jmp rax; 
0x0000000000401c21: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdi + rax - 0x41], 0x30; fisttp dword ptr [rdx]; jmp rax; 
0x0000000000401008: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000416455: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; call qword ptr [rax]; 
0x000000000041572d: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; jmp qword ptr [rax]; 
0x0000000000414d8d: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x110; 
0x000000000043b85d: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x3a01; 
0x00000000004473e5: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4101; 
0x0000000000444193: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000040729f: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x0000000000447410: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4901; 
0x000000000041f5e3: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000433461: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041f60d: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x00000000004040bd: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000419ebd: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; rol byte ptr [rax + 0x48], 0x83; ret 0x4840; 
0x000000000041b423: add byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x000000000045072b: add byte ptr [rax], al; add byte ptr [rax - 1], bh; pop rbp; pop r12; pop r13; ret; 
0x000000000040af6d: add byte ptr [rax], al; add byte ptr [rax - 1], bh; pop rbp; ret; 
0x000000000040f4fd: add byte ptr [rax], al; add byte ptr [rax - 1], bh; ret; 
0x000000000045090b: add byte ptr [rax], al; add byte ptr [rax], al; add bl, ch; ret; 
0x0000000000439f3a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x1478d48], dl; ret; 
0x0000000000417a8b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x16], bh; pop rbx; ret; 
0x000000000045f01b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x8d48; 
0x000000000046202b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x68], bh; syscall; 
0x000000000046202b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x68], bh; syscall; ret; 
0x000000000046201b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x6b], bh; syscall; 
0x000000000046201b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x6b], bh; syscall; ret; 
0x000000000046203b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x6c], bh; syscall; 
0x000000000046203b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x6c], bh; syscall; ret; 
0x00000000004395db: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x78d4837], cl; ret; 
0x000000000043ebfb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffc0; 
0x000000000046153b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rbx], 0; add byte ptr [rax], al; ret; 
0x000000000046157b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rdi], 0; add byte ptr [rax], al; ret; 
0x000000000046152b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rdx], 0; add byte ptr [rax], al; ret; 
0x000000000046156b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rsi], 0; add byte ptr [rax], al; ret; 
0x000000000045febb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x3d7cb7f6], cl; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000047282b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x3ce89; mov qword ptr [rip + 0x3ce6a], rax; ret; 
0x00000000004442db: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; add eax, 0x6b101; ret; 
0x00000000004442cb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; add eax, 0x6b109; ret; 
0x0000000000416fab: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; je 0x16fd8; sub byte ptr [rcx + rcx*4 - 0x19], cl; call rax; 
0x0000000000410c6b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000044151b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ja 0x41544; ret; 
0x0000000000440d9b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x000000000045899b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8349; 
0x000000000045e05b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x889; 
0x000000000045e8ab: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x894c; 
0x000000000047f21b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; xlatb; adc byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x00000000004603eb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; div byte ptr [rbp + 4]; xor rax, rax; ret; 
0x000000000043b85b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x3a01; 
0x000000000047415b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x0000000000419ebb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; rol byte ptr [rax + 0x48], 0x83; ret 0x4840; 
0x000000000040af6b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 1], bh; pop rbp; ret; 
0x000000000040f4fb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 1], bh; ret; 
0x00000000004115aa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x00000000004115ab: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x000000000040fa46: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x00000000004115ac: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x0000000000438ffb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x477880e], cl; mov dword ptr [rdi], ecx; ret; 
0x000000000044026b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + rcx*4 + 0x42], cl; adc byte ptr [rbp - 0x7b], cl; sal byte ptr [rdi + rdx*2 + 0x4d], 0x89; ret; 
0x000000000045b51b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx - 0x50743], al; jmp qword ptr [rax]; 
0x000000000040569b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx - 0x7cb7f3be], cl; ret 0x8908; 
0x000000000043ba9b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + 1], cl; ret; 
0x000000000046087b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; vzeroupper; ret; 
0x0000000000406c8b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 0x77], cl; fisttp word ptr [rax - 0x7d]; ret; 
0x000000000041a20b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0x7f10; 
0x0000000000418b1b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0xf10; 
0x00000000004060ab: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x42; add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x000000000040607b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x53; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000470d1b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x53; or al, 0xf6; ret 0xf01; 
0x000000000041fe8b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov esp, 0x448d48c0; cmp byte ptr [rax], dl; ret; 
0x000000000040c129: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; cmp qword ptr [rip + 0x9fe80], 0; je 0xc13b; ret; 
0x0000000000438fc9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x00000000004738f9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov eax, 0x27; syscall; 
0x00000000004738f9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov eax, 0x27; syscall; ret; 
0x0000000000440b69: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov eax, 0x63; syscall; 
0x0000000000410c19: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov eax, 0xffffffff; ret; 
0x000000000043f649: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov eax, 1; syscall; 
0x0000000000410c59: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov rax, qword ptr [rdi + 0x68]; ret; 
0x0000000000440be9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; ret; 
0x000000000043f81b: add byte ptr [rax], al; add byte ptr [rax], al; add dh, dh; ret 0x7404; 
0x000000000047f01b: add byte ptr [rax], al; add byte ptr [rax], al; add dh, dh; ret; 
0x00000000004614fc: add byte ptr [rax], al; add byte ptr [rax], al; add rax, 3; ret; 
0x0000000000444335: add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000046cdef: add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000043d394: add byte ptr [rax], al; add byte ptr [rax], al; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x000000000041fe7c: add byte ptr [rax], al; add byte ptr [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x000000000041fe8c: add byte ptr [rax], al; add byte ptr [rax], al; bsf eax, eax; lea rax, [rax + rdi + 0x10]; ret; 
0x000000000041fe9c: add byte ptr [rax], al; add byte ptr [rax], al; bsf eax, eax; lea rax, [rax + rdi + 0x20]; ret; 
0x00000000004782dc: add byte ptr [rax], al; add byte ptr [rax], al; bts rdx, 0x34; mov eax, 1; mov qword ptr [rdi], rdx; ret; 
0x00000000004084b4: add byte ptr [rax], al; add byte ptr [rax], al; call qword ptr [rbx]; 
0x0000000000401d39: add byte ptr [rax], al; add byte ptr [rax], al; call r8; mov eax, 0; leave; ret; 
0x000000000040f43c: add byte ptr [rax], al; add byte ptr [rax], al; cmp qword ptr [rdi + 0x38], 0; je 0xf450; ret; 
0x0000000000417aea: add byte ptr [rax], al; add byte ptr [rax], al; cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x00000000004413aa: add byte ptr [rax], al; add byte ptr [rax], al; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000440df4: add byte ptr [rax], al; add byte ptr [rax], al; cmp rax, r8; ja 0x40e08; add rsp, 8; ret; 
0x0000000000439fbc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xa]; ret; 
0x0000000000439fcc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xb]; ret; 
0x0000000000439fdc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xc]; ret; 
0x0000000000439fec: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xd]; ret; 
0x0000000000439ffc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xe]; ret; 
0x0000000000439f4c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 2]; ret; 
0x0000000000439f5c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 3]; ret; 
0x0000000000439f6c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 4]; ret; 
0x0000000000439f7c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 5]; ret; 
0x0000000000439f8c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 6]; ret; 
0x0000000000439f9c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 8]; ret; 
0x0000000000439fac: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 9]; ret; 
0x0000000000434c17: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000041888c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x14649]; and dh, 8; je 0x188c8; ret; 
0x000000000041870c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x147a9]; and dh, 8; je 0x18748; ret; 
0x000000000041859c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x14939]; and dh, 8; je 0x185d8; ret; 
0x000000000047282c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x3ce89]; mov qword ptr [rip + 0x3ce6a], rax; ret; 
0x0000000000401d41: add byte ptr [rax], al; add byte ptr [rax], al; leave; ret; 
0x0000000000438afc: add byte ptr [rax], al; add byte ptr [rax], al; mov ax, word ptr [rcx]; mov word ptr [rdx], ax; lea rax, [rdx + 1]; ret; 
0x000000000043734c: add byte ptr [rax], al; add byte ptr [rax], al; mov ax, word ptr [rcx]; mov word ptr [rdx], ax; mov rax, rdi; ret; 
0x00000000004395dc: add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rdi], dh; lea rax, [rdi]; ret; 
0x0000000000438fbc: add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rdi], dh; ret; 
0x0000000000438fdc: add byte ptr [rax], al; add byte ptr [rax], al; mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; ret; 
0x0000000000459ce9: add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rbp - 0x508], 0x20; jmp rax; 
0x0000000000459cd4: add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rbp - 0x51c], 0; mov qword ptr [rbp - 0x4d8], 0; mov dword ptr [rbp - 0x508], 0x20; jmp rax; 
0x0000000000453e49: add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rbp - 0x520], 0; mov qword ptr [rbp - 0x4e8], 0; mov qword ptr [rbp - 0x4f8], rsi; jmp rax; 
0x00000000004395ec: add byte ptr [rax], al; add byte ptr [rax], al; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; lea rax, [rdi + 1]; ret; 
0x0000000000417a8c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x16; pop rbx; ret; 
0x000000000046202c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x68; syscall; 
0x000000000046202c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x68; syscall; ret; 
0x000000000046201c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x6b; syscall; 
0x000000000046201c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x6b; syscall; ret; 
0x000000000046203c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x6c; syscall; 
0x000000000046203c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x6c; syscall; ret; 
0x000000000046220c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xc; syscall; 
0x000000000040af6c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffffff; pop rbp; ret; 
0x000000000040f4fc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x00000000004782cc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 1; ret; 
0x0000000000478435: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 2; ret; 
0x000000000047f5cc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi]; test eax, eax; jne 0x7f5e0; ret; 
0x000000000047f90c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi]; test eax, eax; jne 0x7f920; ret; 
0x0000000000442bec: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rip + 0x6c7ca]; test eax, eax; je 0x42c00; ret; 
0x000000000043ea2c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr fs:[0x18]; test eax, eax; jne 0x3ea50; syscall; 
0x0000000000438ffc: add byte ptr [rax], al; add byte ptr [rax], al; mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; ret; 
0x000000000042a22c: add byte ptr [rax], al; add byte ptr [rax], al; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x000000000045eb1e: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 0x48], 0; pop rbx; ret; 
0x000000000040fc00: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 8], 0; ret; 
0x0000000000459cde: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rbp - 0x4d8], 0; mov dword ptr [rbp - 0x508], 0x20; jmp rax; 
0x0000000000453e53: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rbp - 0x4e8], 0; mov qword ptr [rbp - 0x4f8], rsi; jmp rax; 
0x0000000000453e5e: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rbp - 0x4f8], rsi; jmp rax; 
0x000000000046c6e8: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000046c6e0: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rbx + 8], 0; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000040fd20: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx + 0xe0], r8; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000044151c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 0x20], rsi; ret; 
0x000000000047cefc: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 0x98], rsi; ret; 
0x000000000040fd3c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 0xa0], -1; mov qword ptr [rdi + 0xa8], 0; ret; 
0x0000000000410d47: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rip + 0x9e3c2], 0; ret; 
0x000000000047390c: add byte ptr [rax], al; add byte ptr [rax], al; mov r10, rcx; mov eax, 0x11; syscall; 
0x000000000040fdec: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, -1; ret; 
0x000000000044f97c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, -8; add rax, qword ptr fs:[0]; ret; 
0x000000000046152c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 2; ret; 
0x000000000046153c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 3; ret; 
0x000000000046154c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 4; ret; 
0x000000000046155c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 5; ret; 
0x000000000046156c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 6; ret; 
0x000000000046157c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 7; ret; 
0x000000000046cdfc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rax + 8]; ret; 
0x000000000047cf0c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xa0]; ret; 
0x000000000047cf5c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xa8]; ret; 
0x000000000047cf1c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xb8]; ret; 
0x00000000004765dc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi]; cmp rax, rsi; je 0x765f0; ret; 
0x00000000004116ec: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi]; mov dword ptr [rip + 0x9da9b], eax; ret; 
0x000000000041179c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi]; mov qword ptr [rip + 0x9afbe], rax; ret; 
0x000000000041171c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi]; mov qword ptr [rip + 0x9aff6], rax; ret; 
0x00000000004442dc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rip + 0x6b101]; ret; 
0x00000000004442cc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rip + 0x6b109]; ret; 
0x0000000000443bad: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x000000000046087c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, r8; vzeroupper; ret; 
0x0000000000410c6c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x000000000043903c: add byte ptr [rax], al; add byte ptr [rax], al; mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; ret; 
0x0000000000472d9f: add byte ptr [rax], al; add byte ptr [rax], al; mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000042a06c: add byte ptr [rax], al; add byte ptr [rax], al; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x00000000004800bc: add byte ptr [rax], al; add byte ptr [rax], al; mov rdx, rbp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x0000000000416fac: add byte ptr [rax], al; add byte ptr [rax], al; mov rsi, qword ptr [rsp + 0x28]; mov rdi, r12; call rax; 
0x00000000004390bc: add byte ptr [rax], al; add byte ptr [rax], al; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x0000000000420d1c: add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000043d34c: add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, cl; pop rbx; ret; 
0x000000000041cf5c: add byte ptr [rax], al; add byte ptr [rax], al; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000042a37c: add byte ptr [rax], al; add byte ptr [rax], al; movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x000000000042a30c: add byte ptr [rax], al; add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000435a3c: add byte ptr [rax], al; add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000043f8d7: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax + rax]; mov eax, 0x1c; syscall; 
0x0000000000462007: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax + rax]; mov eax, 0x66; syscall; 
0x0000000000462007: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax + rax]; mov eax, 0x66; syscall; ret; 
0x000000000043f8a7: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax + rax]; mov eax, 0xa; syscall; 
0x0000000000440b37: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax + rax]; mov r10, rcx; mov eax, 0x19; syscall; 
0x00000000004200b9: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; bsf eax, eax; lea rax, [rax + rdi - 0x10]; ret; 
0x0000000000478789: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov eax, 0x26; syscall; 
0x0000000000429b08: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov edx, dword ptr [rsi - 4]; mov dword ptr [rdi - 4], edx; ret; 
0x000000000044f998: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov rax, -0x10; add rax, qword ptr fs:[0]; ret; 
0x000000000044f9b8: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov rax, -0x18; add rax, qword ptr fs:[0]; ret; 
0x000000000044fb68: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov rax, 0xf; syscall; 
0x000000000047cec8: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov rax, qword ptr [rdi + 0x98]; ret; 
0x0000000000410c38: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov rax, qword ptr [rip + 0x9b4d9]; ret; 
0x0000000000423dd8: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000429c98: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; movzx edx, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000429c18: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; movzx edx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x000000000043bc09: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; xor eax, eax; ret; 
0x00000000004603d9: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; xor eax, eax; vzeroupper; ret; 
0x000000000040c12a: add byte ptr [rax], al; add byte ptr [rax], al; nop; cmp qword ptr [rip + 0x9fe80], 0; je 0xc13b; ret; 
0x0000000000439f3b: add byte ptr [rax], al; add byte ptr [rax], al; nop; lea rax, [rdi + 1]; ret; 
0x0000000000439f2b: add byte ptr [rax], al; add byte ptr [rax], al; nop; lea rax, [rdi]; ret; 
0x0000000000438fca: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x00000000004738fa: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov eax, 0x27; syscall; 
0x00000000004738fa: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov eax, 0x27; syscall; ret; 
0x0000000000440b6a: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov eax, 0x63; syscall; 
0x000000000043f87b: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov eax, 0xb; syscall; 
0x0000000000410c1a: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov eax, 0xffffffff; ret; 
0x000000000043f64a: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov eax, 1; syscall; 
0x000000000043f36b: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov eax, 3; syscall; 
0x000000000041091b: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov eax, dword ptr [rdi + 0x10]; sub eax, dword ptr [rsi + 0x10]; ret; 
0x000000000046151b: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov rax, 1; ret; 
0x0000000000410c5a: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov rax, qword ptr [rdi + 0x68]; ret; 
0x0000000000440bea: add byte ptr [rax], al; add byte ptr [rax], al; nop; ret; 
0x000000000042035b: add byte ptr [rax], al; add byte ptr [rax], al; nop; vzeroupper; xor eax, eax; ret; 
0x0000000000439d6b: add byte ptr [rax], al; add byte ptr [rax], al; nop; xor rax, rax; ret; 
0x00000000004783b5: add byte ptr [rax], al; add byte ptr [rax], al; or byte ptr [rcx - 0x77], 0; mov eax, 1; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000000040ca0c: add byte ptr [rax], al; add byte ptr [rax], al; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x00000000004115ad: add byte ptr [rax], al; add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x000000000043d307: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; cmove rax, rdx; ret; 
0x000000000046b496: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; or dword ptr [rip + 0x41c66], 1; ret; 
0x0000000000475094: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000040f084: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004016f7: add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x000000000040fa48: add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000401007: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x1012; call rax; 
0x0000000000401bde: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x1bf0; mov edi, 0x4adb30; jmp rax; 
0x0000000000401c20: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x1c30; mov edi, 0x4adb30; jmp rax; 
0x000000000043cdfc: add byte ptr [rax], al; add byte ptr [rax], al; test rdx, rdx; jne 0x3ce09; mov rax, rdi; ret; 
0x00000000004603ec: add byte ptr [rax], al; add byte ptr [rax], al; test rsi, rsi; jne 0x603f9; xor rax, rax; ret; 
0x000000000042036c: add byte ptr [rax], al; add byte ptr [rax], al; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000040f66c: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043f61c: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; syscall; 
0x000000000040c1d4: add byte ptr [rax], al; add byte ptr [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x000000000046150c: add byte ptr [rax], al; add byte ptr [rax], al; xor rax, rax; ret; 
0x000000000043e844: add byte ptr [rax], al; add byte ptr [rbp + 0x10], dh; add rsp, 0x28; ret; 
0x000000000046d608: add byte ptr [rax], al; add byte ptr [rbp + 0x10], dh; add rsp, 0x38; ret; 
0x00000000004621e1: add byte ptr [rax], al; add byte ptr [rbp + 0x1e], dh; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000000407aff: add byte ptr [rax], al; add byte ptr [rbp + 0x20], dh; mov eax, r8d; add rsp, 0x118; ret; 
0x000000000043d93c: add byte ptr [rax], al; add byte ptr [rbp + 0x23], dh; add rsp, 0x20; pop rbx; ret; 
0x0000000000472db7: add byte ptr [rax], al; add byte ptr [rbp + 0x24], dh; mov rdx, qword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x000000000046cf9e: add byte ptr [rax], al; add byte ptr [rbp + 0x28], dh; add rsp, 0x38; ret; 
0x000000000046d322: add byte ptr [rax], al; add byte ptr [rbp + 0x2c], dh; add rsp, 0x38; ret; 
0x000000000040ccc8: add byte ptr [rax], al; add byte ptr [rbp + 0x31], al; dec dword ptr [rax + 0x39]; ret 0x830f; 
0x0000000000461c68: add byte ptr [rax], al; add byte ptr [rbp + 0x37], dh; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x0000000000461f9c: add byte ptr [rax], al; add byte ptr [rbp + 0x39], dh; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x00000000004725ab: add byte ptr [rax], al; add byte ptr [rbp + 0x41], bl; pop rsp; pop r13; ret; 
0x000000000040f94f: add byte ptr [rax], al; add byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x000000000047808b: add byte ptr [rax], al; add byte ptr [rbp + 0x41], dh; leave; ret; 
0x000000000043f483: add byte ptr [rax], al; add byte ptr [rbp + 0x43], dh; add rsp, 0x18; ret; 
0x000000000043f52b: add byte ptr [rax], al; add byte ptr [rbp + 0x43], dh; add rsp, 0x58; ret; 
0x000000000043f5c9: add byte ptr [rax], al; add byte ptr [rbp + 0x45], dh; add rsp, 0x58; ret; 
0x000000000044fd09: add byte ptr [rax], al; add byte ptr [rbp + 0x46], dh; mov eax, r9d; add rsp, 0x148; ret; 
0x000000000043f3f4: add byte ptr [rax], al; add byte ptr [rbp + 0x4a], dh; add rsp, 0x68; ret; 
0x000000000040ca98: add byte ptr [rax], al; add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x0000000000443b91: add byte ptr [rax], al; add byte ptr [rbp + 0x51], dh; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x000000000047a4d6: add byte ptr [rax], al; add byte ptr [rbp + 0xa], dh; add rsp, 0x28; ret; 
0x00000000004786ba: add byte ptr [rax], al; add byte ptr [rbp + 0xa], dh; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x000000000046d038: add byte ptr [rax], al; add byte ptr [rbp + 0xf], dh; add rsp, 0x38; ret; 
0x000000000044fa6e: add byte ptr [rax], al; add byte ptr [rbp + 5], dh; add rsp, 0x18; ret; 
0x000000000043f7b7: add byte ptr [rax], al; add byte ptr [rbp + 5], dh; add rsp, 0x28; ret; 
0x0000000000472f23: add byte ptr [rax], al; add byte ptr [rbp + 5], dh; add rsp, 0x38; ret; 
0x00000000004144c5: add byte ptr [rax], al; add byte ptr [rbp + 6], dh; add rsp, 0x10; pop rbp; ret; 
0x000000000046d225: add byte ptr [rax], al; add byte ptr [rbp + 6], dh; add rsp, 0x20; pop rbx; ret; 
0x000000000046d48b: add byte ptr [rax], al; add byte ptr [rbp + 6], dh; add rsp, 0x30; pop rbp; ret; 
0x000000000047ad39: add byte ptr [rax], al; add byte ptr [rbp + 7], dh; cmp qword ptr [r9 + 0x38], 0; je 0x7ad94; add rsp, 0x18; ret; 
0x0000000000408f71: add byte ptr [rax], al; add byte ptr [rbp + 8], dh; add rsp, 0xd8; ret; 
0x000000000046212c: add byte ptr [rax], al; add byte ptr [rbp + 8], dh; movzx eax, al; add rsp, 0x58; ret; 
0x0000000000457141: add byte ptr [rax], al; add byte ptr [rbp + rcx*4 + 0x2c], cl; test dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x000000000041852a: add byte ptr [rax], al; add byte ptr [rbp + rcx*8 + 0x48], sil; lea eax, [rip + 0x83d9]; test byte ptr [rip + 0x96dc7], 1; je 0x184fd; ret; 
0x0000000000440ac8: add byte ptr [rax], al; add byte ptr [rbp - 0x3dbbf040], al; ret; 
0x000000000043ead5: add byte ptr [rax], al; add byte ptr [rbp - 0x47eb8a40], al; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000043eba5: add byte ptr [rax], al; add byte ptr [rbp - 0x47eb8a40], al; add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000044981e: add byte ptr [rax], al; add byte ptr [rbp - 0x77], cl; ret; 
0x000000000040dbad: add byte ptr [rax], al; add byte ptr [rbx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000047237b: add byte ptr [rax], al; add byte ptr [rbx + 0x44], bl; mov eax, eax; pop rbp; pop r12; ret; 
0x000000000043961d: add byte ptr [rax], al; add byte ptr [rbx + 0x477880e], cl; mov dword ptr [rdi], ecx; lea rax, [rdi + 4]; ret; 
0x0000000000438ffd: add byte ptr [rax], al; add byte ptr [rbx + 0x477880e], cl; mov dword ptr [rdi], ecx; ret; 
0x000000000043d308: add byte ptr [rax], al; add byte ptr [rbx + 0x48], bl; cmove eax, edx; ret; 
0x0000000000473ae1: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000402845: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000040cad1: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; ret; 
0x000000000042a1bd: add byte ptr [rax], al; add byte ptr [rbx + 0xe8b0156], cl; mov dword ptr [rdi + 1], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000042a14d: add byte ptr [rax], al; add byte ptr [rbx + 0xe8b0256], cl; mov dword ptr [rdi + 2], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000042a0dd: add byte ptr [rax], al; add byte ptr [rbx + 0xe8b0356], cl; mov dword ptr [rdi + 3], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000044026d: add byte ptr [rax], al; add byte ptr [rbx + rcx*4 + 0x42], cl; adc byte ptr [rbp - 0x7b], cl; sal byte ptr [rdi + rdx*2 + 0x4d], 0x89; ret; 
0x000000000043ea2d: add byte ptr [rax], al; add byte ptr [rbx + rcx*4 + 4], ah; and eax, 0x18; test eax, eax; jne 0x3ea50; syscall; 
0x000000000045af4e: add byte ptr [rax], al; add byte ptr [rbx - 0x4cf43], al; call qword ptr [rax]; 
0x000000000045b51d: add byte ptr [rax], al; add byte ptr [rbx - 0x50743], al; jmp qword ptr [rax]; 
0x000000000045444b: add byte ptr [rax], al; add byte ptr [rbx - 0x67b7df18], al; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000472d1e: add byte ptr [rax], al; add byte ptr [rbx - 0x72b7f7bd], cl; adc eax, 0x256f1; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000004095c7: add byte ptr [rax], al; add byte ptr [rbx - 0x76b7ffbb], cl; pop rdi; or byte ptr [rbx - 0x76fefbb9], al; ret 0xe281; 
0x000000000040569d: add byte ptr [rax], al; add byte ptr [rbx - 0x7cb7f3be], cl; ret 0x8908; 
0x00000000004359a1: add byte ptr [rax], al; add byte ptr [rbx - 0x7cf0fb06], al; ret; 
0x00000000004715d8: add byte ptr [rax], al; add byte ptr [rcx + 0x39], cl; ret 0x840f; 
0x0000000000457a5d: add byte ptr [rax], al; add byte ptr [rcx + 0xf], al; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x000000000040a19d: add byte ptr [rax], al; add byte ptr [rcx + 1], cl; ret; 
0x000000000046b1f6: add byte ptr [rax], al; add byte ptr [rcx + rax - 0x10], dh; inc dword ptr [r8 + 0x10]; pop rbx; pop rbp; ret; 
0x00000000004800c5: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x11], cl; call rbx; 
0x00000000004166b5: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x11], cl; mov eax, 0xca; syscall; 
0x00000000004163c3: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x19], cl; mov eax, 0xca; syscall; 
0x000000000040c018: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x30], al; syscall; 
0x000000000044fdca: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x3a], cl; mov eax, 0xe; syscall; 
0x000000000040c00d: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x3e], cl; mov rsi, rbx; mov edi, 2; mov eax, r10d; syscall; 
0x000000000044d33a: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], al; pop rbp; pop r12; ret; 
0x000000000040941c: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x000000000041624e: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; pop rbp; pop r12; ret; 
0x0000000000440a20: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; pop rbp; ret; 
0x0000000000461900: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; shr rax, 2; vzeroupper; ret; 
0x00000000004607bd: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; vzeroupper; ret; 
0x0000000000407d85: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0xe], cl; mov rax, qword ptr [rsp + 8]; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000045e82d: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 2], al; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x0000000000440df5: add byte ptr [rax], al; add byte ptr [rcx + rdi - 0x40], cl; ja 0x40e08; add rsp, 8; ret; 
0x0000000000441af2: add byte ptr [rax], al; add byte ptr [rcx + rdx + 0x48], dh; test edx, edx; je 0x41b08; lea rdi, [rcx + rsi + 0x20]; jmp rdx; 
0x000000000046ef86: add byte ptr [rax], al; add byte ptr [rcx - 0x1237b], cl; ljmp [rcx]; ret; 
0x0000000000415fd4: add byte ptr [rax], al; add byte ptr [rcx - 0x14faf028], cl; ret 0x1f0f; 
0x0000000000461f67: add byte ptr [rax], al; add byte ptr [rcx - 0x173fce11], cl; sub eax, 0x89fffdd4; ret 0xf883; 
0x000000000040cd0a: add byte ptr [rax], al; add byte ptr [rcx - 0x39], cl; mov byte ptr [rax + 0x48004adb], 0xc7; ret; 
0x0000000000459c85: add byte ptr [rax], al; add byte ptr [rcx - 0x39], cl; ret; 
0x000000000044fc32: add byte ptr [rax], al; add byte ptr [rcx - 0x46], al; or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xd; syscall; 
0x0000000000476535: add byte ptr [rax], al; add byte ptr [rcx - 0x75], al; or byte ptr [rbp + 0x440f4cc9], al; ret 0x8d48; 
0x0000000000459b77: add byte ptr [rax], al; add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x00000000004712ee: add byte ptr [rax], al; add byte ptr [rcx - 0x77], al; ret; 
0x0000000000406c8d: add byte ptr [rax], al; add byte ptr [rcx - 0x77], cl; fisttp word ptr [rax - 0x7d]; ret; 
0x00000000004117f3: add byte ptr [rax], al; add byte ptr [rcx - 0x77], cl; ret 0xc148; 
0x00000000004756c1: add byte ptr [rax], al; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000041a20d: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0x7f10; 
0x0000000000418b1d: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0xf10; 
0x0000000000401d3a: add byte ptr [rax], al; add byte ptr [rcx - 1], al; sar byte ptr [rax], 1; leave; ret; 
0x0000000000420530: add byte ptr [rax], al; add byte ptr [rcx - 9], cl; ret 1; 
0x0000000000420556: add byte ptr [rax], al; add byte ptr [rcx - 9], cl; ret 2; 
0x000000000046cac2: add byte ptr [rax], al; add byte ptr [rcx], ch; ret 0x8d4d; 
0x000000000045f467: add byte ptr [rax], al; add byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000415485: add byte ptr [rax], al; add byte ptr [rcx], dh; rcr byte ptr [rdx + 0x5d], 0x41; pop rsp; ret; 
0x000000000041fe3a: add byte ptr [rax], al; add byte ptr [rcx], dh; rol bl, 0x83; ret 0x6620; 
0x000000000047a7fd: add byte ptr [rax], al; add byte ptr [rcx], dh; rol byte ptr [rbp - 0x7b], 0xc0; jne 0x7a70c; add rsp, 0x38; ret; 
0x000000000044f586: add byte ptr [rax], al; add byte ptr [rcx], dh; ror byte ptr [rax - 0x77], cl; fldpi; or ecx, dword ptr [rax - 0x7d]; ret 0x8301; 
0x0000000000407add: add byte ptr [rax], al; add byte ptr [rcx], dh; ror byte ptr [rcx + rcx*4 - 0x32], cl; mov edi, 2; mov eax, 0xe; syscall; 
0x000000000043f61d: add byte ptr [rax], al; add byte ptr [rcx], dh; ror byte ptr [rdi], 5; cmp rax, -0x1000; ja 0x3f630; ret; 
0x000000000043d130: add byte ptr [rax], al; add byte ptr [rdi + 0x12], dh; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000043e46b: add byte ptr [rax], al; add byte ptr [rdi + 0x78], dh; lea rdx, [rip + 0x45f25]; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x000000000043d0d0: add byte ptr [rax], al; add byte ptr [rdi + 0x7b], dh; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000047cd1f: add byte ptr [rax], al; add byte ptr [rdi + 1], bh; call rax; 
0x0000000000473cb7: add byte ptr [rax], al; add byte ptr [rdi + rcx + 0x44], cl; ret 0xb0eb; 
0x0000000000407abe: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0x8944c689; ret 0xeab8; 
0x0000000000409826: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0x8949a3eb; shr cl, 0x25; jnp 0x9833; jmp qword ptr [rsi + 0x2e]; 
0x0000000000415ec0: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xffff01e9; jmp qword ptr [rsi + 0xf]; 
0x000000000040e75a: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xffff50e9; jmp qword ptr [rsi + 0x66]; 
0x00000000004145c8: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xffff68e9; jmp qword ptr [rsi + 0x66]; 
0x00000000004292d4: add byte ptr [rax], al; add byte ptr [rdi], cl; cmp dword ptr [rbx - 1], -1; dec dword ptr [rax - 0x7f]; ret 0x80; 
0x000000000042a30d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x16; mov word ptr [rdi], dx; ret; 
0x0000000000435a3d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x16; mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000042a37d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x16; mov byte ptr [rdi], dl; ret; 
0x00000000004060ad: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x42; add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x0000000000406c45: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000448d4d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x50; dec dword ptr [rcx - 0x7d]; ret; 
0x000000000040607d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x53; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000470d1d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x53; or al, 0xf6; ret 0xf01; 
0x000000000043d34d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0xc1; pop rbx; ret; 
0x000000000041cf5d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000000420d1d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 7; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000041fe9d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov esp, 0x448d48c0; cmp byte ptr [rax], ah; ret; 
0x000000000041fe8d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov esp, 0x448d48c0; cmp byte ptr [rax], dl; ret; 
0x000000000041fead: add byte ptr [rax], al; add byte ptr [rdi], cl; mov esp, 0xc22948c0; jbe 0x1fef0; add rax, rdi; ret; 
0x000000000047359d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov esp, 0xc22948c0; jbe 0x735e0; add rax, rdi; ret; 
0x000000000041fe7d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov esp, 0xf80148c0; ret; 
0x000000000046d114: add byte ptr [rax], al; add byte ptr [rdi], cl; test dword ptr [rdx + 0x48000000], ecx; add esp, 0x48; ret; 
0x0000000000411685: add byte ptr [rax], al; add byte ptr [rdx], al; jbe 0x11690; ret; 
0x000000000043f5a4: add byte ptr [rax], al; add byte ptr [rip + 0x410000], dil; je 0x3f5d8; mov eax, 0x101; syscall; 
0x0000000000411657: add byte ptr [rax], al; add byte ptr [rsi + 0x80], bh; mov eax, 0xca; syscall; 
0x000000000047273a: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x3cf3a]; syscall; 
0x00000000004724b6: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x3d1ba]; syscall; 
0x00000000004705ca: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x3f092]; syscall; 
0x000000000045092a: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x5eca2]; syscall; 
0x0000000000450865: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x5ed67]; syscall; 
0x00000000004506c8: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x5ef04]; syscall; 
0x00000000004505f9: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x5efd3]; syscall; 
0x000000000044537a: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x6a04a]; syscall; 
0x000000000044520e: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x6a1b6]; syscall; 
0x0000000000445116: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x6a2ae]; syscall; 
0x000000000043ddb2: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x71612]; syscall; 
0x0000000000417a16: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x94d76]; syscall; 
0x0000000000415cfe: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x96a8e]; syscall; 
0x0000000000415cc6: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x96ac6]; syscall; 
0x00000000004157a6: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x96fe6]; syscall; 
0x0000000000415462: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9732a]; syscall; 
0x0000000000416921: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9885b]; syscall; 
0x0000000000413d92: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x989fa]; syscall; 
0x0000000000413d62: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x98a2a]; syscall; 
0x0000000000415ffa: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x99172]; syscall; 
0x0000000000414330: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9ae4c]; syscall; 
0x00000000004142b4: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9aeb8]; syscall; 
0x000000000041400f: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9b16d]; syscall; 
0x0000000000412172: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9d00a]; syscall; 
0x0000000000410d21: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9e3db]; syscall; 
0x0000000000410d21: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9e3db]; syscall; ret; 
0x0000000000410828: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9e8d4]; syscall; 
0x00000000004104dd: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9ec1f]; syscall; 
0x000000000041019a: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9ef62]; syscall; 
0x000000000040ee94: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa0268]; syscall; 
0x000000000040ebd4: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa0528]; syscall; 
0x000000000040e728: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa09d4]; syscall; 
0x000000000040e728: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa09d4]; syscall; ret; 
0x0000000000409696: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa5d2e]; syscall; 
0x0000000000408765: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa654f]; syscall; 
0x000000000040853e: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa6776]; syscall; 
0x0000000000408503: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa67b1]; syscall; 
0x000000000040842f: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa6885]; syscall; 
0x0000000000406503: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa8751]; syscall; 
0x0000000000404c30: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa9fec]; syscall; 
0x0000000000403c47: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xaaf25]; syscall; 
0x0000000000403c1e: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xaaf4e]; syscall; 
0x0000000000403b15: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xab057]; syscall; 
0x00000000004011f7: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xada75]; syscall; 
0x0000000000401349: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; syscall; 
0x00000000004727dd: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; syscall; ret; 
0x0000000000415fcf: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, ebx; syscall; 
0x00000000004163be: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004166b0: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000412e04: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000416c6f: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000004173d5: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rdi, rcx; mov eax, 0xca; syscall; 
0x0000000000421012: add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000041fda2: add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; xlatb; ret 0xc085; 
0x00000000004117b6: add byte ptr [rax], al; add byte ptr [rsi + 5], dh; ret; 
0x000000000040c12b: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; cmp qword ptr [rip + 0x9fe80], 0; je 0xc13b; ret; 
0x0000000000438aeb: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov al, byte ptr [rcx]; mov byte ptr [rdx], al; lea rax, [rdx]; ret; 
0x0000000000438fcb: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x00000000004738fb: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov eax, 0x27; syscall; 
0x00000000004738fb: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov eax, 0x27; syscall; ret; 
0x0000000000440b6b: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov eax, 0x63; syscall; 
0x0000000000410c1b: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov eax, 0xffffffff; ret; 
0x000000000043f64b: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov eax, 1; syscall; 
0x0000000000410c5b: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov rax, qword ptr [rdi + 0x68]; ret; 
0x000000000043973b: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; lea rax, [rdi + 0xf]; ret; 
0x0000000000440beb: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; ret; 
0x000000000043734d: add byte ptr [rax], al; add byte ptr [rsi - 0x75], ah; add dword ptr [rsi - 0x77], esp; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x000000000045ea89: add byte ptr [rax], al; add byte ptr [rsi - 1], bh; call qword ptr [rax + 0x18]; 
0x000000000048059d: add byte ptr [rax], al; add cl, ch; mov esp, dword ptr [rcx - 7]; jmp qword ptr [rsi + 0x2e]; 
0x000000000047a852: add byte ptr [rax], al; add cl, ch; ret 0xfffe; 
0x000000000044b359: add byte ptr [rax], al; add cl, ch; ret; 
0x000000000044ed3e: add byte ptr [rax], al; add cl, ch; retf 5; add byte ptr [rsi + 0x2e], ah; nop dword ptr [rax + rax]; ret; 
0x000000000045ad3a: add byte ptr [rax], al; add cl, ch; sahf; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x0000000000401d42: add byte ptr [rax], al; add cl, cl; ret; 
0x0000000000411686: add byte ptr [rax], al; add dh, byte ptr [rsi + 5]; ret; 
0x000000000043f81d: add byte ptr [rax], al; add dh, dh; ret 0x7404; 
0x000000000043b1f1: add byte ptr [rax], al; add dh, dh; ret 0x7501; 
0x0000000000470ed5: add byte ptr [rax], al; add dh, dh; ret 0xf50; 
0x000000000047f01d: add byte ptr [rax], al; add dh, dh; ret; 
0x00000000004020b2: add byte ptr [rax], al; add dword ptr [rax], eax; add byte ptr [rbx + 0xad1ff15], cl; add dh, dh; ret 0x7408; 
0x0000000000464233: add byte ptr [rax], al; add ecx, ebp; ret 0xfffd; 
0x00000000004500ce: add byte ptr [rax], al; add r12, r15; mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x00000000004614fe: add byte ptr [rax], al; add rax, 3; ret; 
0x000000000041fc53: add byte ptr [rax], al; add rax, rdi; add rax, rcx; ret; 
0x0000000000460690: add byte ptr [rax], al; add rax, rdi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000000420180: add byte ptr [rax], al; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x000000000040b054: add byte ptr [rax], al; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000040eb49: add byte ptr [rax], al; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000000040b90b: add byte ptr [rax], al; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000046d11b: add byte ptr [rax], al; add rsp, 0x48; ret; 
0x000000000043e975: add byte ptr [rax], al; add rsp, 0x68; pop rbp; pop r12; ret; 
0x0000000000460c58: add byte ptr [rax], al; add rsp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x000000000044fdf8: add byte ptr [rax], al; add rsp, 0x98; ret; 
0x000000000045d780: add byte ptr [rax], al; add rsp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x000000000040cacb: add byte ptr [rax], al; add rsp, 0xa8; pop rbx; pop rbp; ret; 
0x000000000044d334: add byte ptr [rax], al; add rsp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000045da0e: add byte ptr [rax], al; add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000045d9f0: add byte ptr [rax], al; add rsp, 8; mov eax, 1; pop rbx; pop rbp; ret; 
0x000000000040b427: add byte ptr [rax], al; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000000480a6a: add byte ptr [rax], al; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000473035: add byte ptr [rax], al; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000043dd3c: add byte ptr [rax], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000046cdf1: add byte ptr [rax], al; add rsp, 8; ret; 
0x0000000000415774: add byte ptr [rax], al; add rsp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000040210b: add byte ptr [rax], al; and byte ptr [rax], al; add dh, dh; ret 0x7440; 
0x000000000043d396: add byte ptr [rax], al; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x0000000000421a51: add byte ptr [rax], al; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000000422323: add byte ptr [rax], al; and ecx, 0xff; sub eax, ecx; ret; 
0x0000000000421a56: add byte ptr [rax], al; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000041fe7e: add byte ptr [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x000000000041fe8e: add byte ptr [rax], al; bsf eax, eax; lea rax, [rax + rdi + 0x10]; ret; 
0x000000000041fe9e: add byte ptr [rax], al; bsf eax, eax; lea rax, [rax + rdi + 0x20]; ret; 
0x000000000041feae: add byte ptr [rax], al; bsf eax, eax; sub rdx, rax; jbe 0x1fef0; add rax, rdi; ret; 
0x000000000047359e: add byte ptr [rax], al; bsf eax, eax; sub rdx, rax; jbe 0x735e0; add rax, rdi; ret; 
0x00000000004354a0: add byte ptr [rax], al; bsf rax, rdx; ret; 
0x0000000000461144: add byte ptr [rax], al; bsf rax, rdx; shr rax, 2; ret; 
0x0000000000419d9e: add byte ptr [rax], al; bsf rdx, rdx; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000045ff84: add byte ptr [rax], al; bsr rax, rax; add rax, rdi; ret; 
0x0000000000460012: add byte ptr [rax], al; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x00000000004782de: add byte ptr [rax], al; bts rdx, 0x34; mov eax, 1; mov qword ptr [rdi], rdx; ret; 
0x000000000045e926: add byte ptr [rax], al; call 0xc130; mov esi, r15d; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x000000000045e971: add byte ptr [rax], al; call qword ptr [rax + 0x68]; 
0x00000000004084b6: add byte ptr [rax], al; call qword ptr [rbx]; 
0x0000000000401d3b: add byte ptr [rax], al; call r8; mov eax, 0; leave; ret; 
0x00000000004083c7: add byte ptr [rax], al; call rax; 
0x00000000004083a9: add byte ptr [rax], al; call rdx; 
0x0000000000478877: add byte ptr [rax], al; cmove edx, eax; call 0x65180; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000043d342: add byte ptr [rax], al; cmove rax, rcx; ret; 
0x00000000004184ca: add byte ptr [rax], al; cmove rax, rdx; ret; 
0x00000000004117ce: add byte ptr [rax], al; cmovne rax, rdx; mov qword ptr [rip + 0x9d9bd], rax; ret; 
0x0000000000417b9a: add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x000000000047fbf6: add byte ptr [rax], al; cmp al, 0x50; jne 0x7fc1b; xor eax, eax; add rsp, 8; ret; 
0x000000000043b6a8: add byte ptr [rax], al; cmp eax, ecx; jne 0x3b765; xor eax, eax; ret; 
0x0000000000451834: add byte ptr [rax], al; cmp ecx, 7; ja 0x51e30; movsxd rcx, dword ptr [rdx + rcx*4]; add rcx, rdx; jmp rcx; 
0x00000000004574b4: add byte ptr [rax], al; cmp ecx, 7; ja 0x57d20; movsxd rcx, dword ptr [rdx + rcx*4]; add rcx, rdx; jmp rcx; 
0x000000000045e955: add byte ptr [rax], al; cmp qword ptr [rax + 0x30], 0; je 0x5e960; ret; 
0x000000000040f43e: add byte ptr [rax], al; cmp qword ptr [rdi + 0x38], 0; je 0xf450; ret; 
0x000000000047d967: add byte ptr [rax], al; cmp qword ptr [rsi + 8], rcx; ja 0x7d971; sbb eax, eax; ret; 
0x0000000000417aec: add byte ptr [rax], al; cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x00000000004413ac: add byte ptr [rax], al; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000440df6: add byte ptr [rax], al; cmp rax, r8; ja 0x40e08; add rsp, 8; ret; 
0x000000000043ce3c: add byte ptr [rax], al; cmp rdx, 0x20; ja 0x3ce4f; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043cddc: add byte ptr [rax], al; cmp rdx, 0x20; ja 0x3ce58; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043d02f: add byte ptr [rax], al; cmp rdx, rcx; jne 0x3d017; vzeroupper; ret; 
0x000000000043d1f2: add byte ptr [rax], al; cmp rdx, rcx; jne 0x3d1d2; vzeroupper; ret; 
0x0000000000401bb8: add byte ptr [rax], al; hlt; nop dword ptr [rax + rax]; ret; 
0x000000000043d131: add byte ptr [rax], al; ja 0x3d147; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000043d0d1: add byte ptr [rax], al; ja 0x3d150; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000043e46c: add byte ptr [rax], al; ja 0x3e4e8; lea rdx, [rip + 0x45f25]; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x000000000042a3b3: add byte ptr [rax], al; jae 0x2a450; lea r11, [rip + 0x592ce]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000411747: add byte ptr [rax], al; jbe 0x11750; ret; 
0x0000000000411787: add byte ptr [rax], al; jbe 0x11790; ret; 
0x00000000004117b7: add byte ptr [rax], al; jbe 0x117c0; ret; 
0x000000000041852b: add byte ptr [rax], al; je 0x184fd; lea rax, [rip + 0x83d9]; test byte ptr [rip + 0x96dc7], 1; je 0x184fd; ret; 
0x00000000004359bd: add byte ptr [rax], al; je 0x35a40; mov byte ptr [rdi], 0; vzeroupper; ret; 
0x0000000000439bad: add byte ptr [rax], al; je 0x39c30; mov byte ptr [rdi], 0; lea rax, [rdi]; vzeroupper; ret; 
0x0000000000441af3: add byte ptr [rax], al; je 0x41b08; test rdx, rdx; je 0x41b08; lea rdi, [rcx + rsi + 0x20]; jmp rdx; 
0x000000000046b1f7: add byte ptr [rax], al; je 0x6b1fc; lock inc dword ptr [r8 + 0x10]; pop rbx; pop rbp; ret; 
0x000000000040c136: add byte ptr [rax], al; je 0xc13b; ret; 
0x0000000000459cf5: add byte ptr [rax], al; jmp rax; 
0x0000000000410941: add byte ptr [rax], al; jne 0x10950; sub edx, dword ptr [rax + 0x18]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x00000000004144c6: add byte ptr [rax], al; jne 0x144d0; add rsp, 0x10; pop rbp; ret; 
0x0000000000420b12: add byte ptr [rax], al; jne 0x20a20; ret; 
0x000000000043d93d: add byte ptr [rax], al; jne 0x3d964; add rsp, 0x20; pop rbx; ret; 
0x000000000043e845: add byte ptr [rax], al; jne 0x3e859; add rsp, 0x28; ret; 
0x000000000043e96f: add byte ptr [rax], al; jne 0x3ea23; add rsp, 0x68; pop rbp; pop r12; ret; 
0x000000000043f3f5: add byte ptr [rax], al; jne 0x3f443; add rsp, 0x68; ret; 
0x000000000043f484: add byte ptr [rax], al; jne 0x3f4cb; add rsp, 0x18; ret; 
0x000000000043f52c: add byte ptr [rax], al; jne 0x3f573; add rsp, 0x58; ret; 
0x000000000043f5ca: add byte ptr [rax], al; jne 0x3f613; add rsp, 0x58; ret; 
0x000000000043f7b8: add byte ptr [rax], al; jne 0x3f7c1; add rsp, 0x28; ret; 
0x0000000000440e45: add byte ptr [rax], al; jne 0x40e58; mov r8, qword ptr [rip + 0x6d498]; mov rax, r8; ret; 
0x0000000000443b92: add byte ptr [rax], al; jne 0x43be7; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x000000000044fa6f: add byte ptr [rax], al; jne 0x4fa78; add rsp, 0x18; ret; 
0x000000000044fd0a: add byte ptr [rax], al; jne 0x4fd54; mov eax, r9d; add rsp, 0x148; ret; 
0x000000000044fdf2: add byte ptr [rax], al; jne 0x4fe86; add rsp, 0x98; ret; 
0x0000000000450f82: add byte ptr [rax], al; jne 0x50f8e; add rsp, 0xd8; ret; 
0x000000000045f27d: add byte ptr [rax], al; jne 0x5f268; and r11d, 0xffffffbb; cmp r11d, 0xa; je 0x5f28c; ret; 
0x0000000000461c69: add byte ptr [rax], al; jne 0x61ca4; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x0000000000461f9d: add byte ptr [rax], al; jne 0x61fda; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x000000000046212d: add byte ptr [rax], al; jne 0x62139; movzx eax, al; add rsp, 0x58; ret; 
0x00000000004621e2: add byte ptr [rax], al; jne 0x62204; mov eax, r9d; add rsp, 0x38; ret; 
0x000000000046cf9f: add byte ptr [rax], al; jne 0x6cfcb; add rsp, 0x38; ret; 
0x000000000046d039: add byte ptr [rax], al; jne 0x6d04c; add rsp, 0x38; ret; 
0x000000000046d115: add byte ptr [rax], al; jne 0x6d1a7; add rsp, 0x48; ret; 
0x000000000046d226: add byte ptr [rax], al; jne 0x6d230; add rsp, 0x20; pop rbx; ret; 
0x000000000046d323: add byte ptr [rax], al; jne 0x6d353; add rsp, 0x38; ret; 
0x000000000046d3c9: add byte ptr [rax], al; jne 0x6d3dc; add rsp, 0x38; ret; 
0x000000000046d48c: add byte ptr [rax], al; jne 0x6d496; add rsp, 0x30; pop rbp; ret; 
0x000000000046d609: add byte ptr [rax], al; jne 0x6d61d; add rsp, 0x38; ret; 
0x0000000000472945: add byte ptr [rax], al; jne 0x72b25; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000472db8: add byte ptr [rax], al; jne 0x72de0; mov rdx, qword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x0000000000472e36: add byte ptr [rax], al; jne 0x72e3f; add rsp, 0x28; ret; 
0x0000000000472f24: add byte ptr [rax], al; jne 0x72f2d; add rsp, 0x38; ret; 
0x000000000047808c: add byte ptr [rax], al; jne 0x780d1; leave; ret; 
0x00000000004785cf: add byte ptr [rax], al; jne 0x785d8; add rsp, 0x38; ret; 
0x00000000004786bb: add byte ptr [rax], al; jne 0x786c9; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000000478770: add byte ptr [rax], al; jne 0x7877e; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x000000000047a4d7: add byte ptr [rax], al; jne 0x7a4e5; add rsp, 0x28; ret; 
0x000000000047ad3a: add byte ptr [rax], al; jne 0x7ad45; cmp qword ptr [r9 + 0x38], 0; je 0x7ad94; add rsp, 0x18; ret; 
0x0000000000407b00: add byte ptr [rax], al; jne 0x7b24; mov eax, r8d; add rsp, 0x118; ret; 
0x0000000000408f72: add byte ptr [rax], al; jne 0x8f7e; add rsp, 0xd8; ret; 
0x00000000004092b2: add byte ptr [rax], al; jne 0x92be; add rsp, 0xd8; ret; 
0x000000000040b04e: add byte ptr [rax], al; jne 0xb0ea; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000040b905: add byte ptr [rax], al; jne 0xb9f4; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000040cac5: add byte ptr [rax], al; jne 0xcbb6; add rsp, 0xa8; pop rbx; pop rbp; ret; 
0x000000000042a3b9: add byte ptr [rax], al; lea r11, [rip + 0x592ce]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000467678: add byte ptr [rax], al; lea rax, [rax + rdx*4]; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x000000000046764a: add byte ptr [rax], al; lea rax, [rax + rdx*4]; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x0000000000439fbe: add byte ptr [rax], al; lea rax, [rdi + 0xa]; ret; 
0x0000000000439fce: add byte ptr [rax], al; lea rax, [rdi + 0xb]; ret; 
0x0000000000439fde: add byte ptr [rax], al; lea rax, [rdi + 0xc]; ret; 
0x0000000000439fee: add byte ptr [rax], al; lea rax, [rdi + 0xd]; ret; 
0x0000000000439ffe: add byte ptr [rax], al; lea rax, [rdi + 0xe]; ret; 
0x0000000000439f1d: add byte ptr [rax], al; lea rax, [rdi + 0xf]; ret; 
0x0000000000439f4e: add byte ptr [rax], al; lea rax, [rdi + 2]; ret; 
0x0000000000439f5e: add byte ptr [rax], al; lea rax, [rdi + 3]; ret; 
0x0000000000439f6e: add byte ptr [rax], al; lea rax, [rdi + 4]; ret; 
0x0000000000439f7e: add byte ptr [rax], al; lea rax, [rdi + 5]; ret; 
0x0000000000439f8e: add byte ptr [rax], al; lea rax, [rdi + 6]; ret; 
0x0000000000439eca: add byte ptr [rax], al; lea rax, [rdi + 7]; ret; 
0x0000000000439f9e: add byte ptr [rax], al; lea rax, [rdi + 8]; ret; 
0x0000000000439fae: add byte ptr [rax], al; lea rax, [rdi + 9]; ret; 
0x0000000000434c19: add byte ptr [rax], al; lea rax, [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000041888e: add byte ptr [rax], al; lea rax, [rip + 0x14649]; and dh, 8; je 0x188c8; ret; 
0x000000000041870e: add byte ptr [rax], al; lea rax, [rip + 0x147a9]; and dh, 8; je 0x18748; ret; 
0x000000000041859e: add byte ptr [rax], al; lea rax, [rip + 0x14939]; and dh, 8; je 0x185d8; ret; 
0x000000000047282e: add byte ptr [rax], al; lea rax, [rip + 0x3ce89]; mov qword ptr [rip + 0x3ce6a], rax; ret; 
0x0000000000472fdc: add byte ptr [rax], al; lea rax, [rip + 0x6b]; cmovne rax, rdx; ret; 
0x0000000000473243: add byte ptr [rax], al; lea rax, [rip + 0x74]; cmove rax, rdx; ret; 
0x0000000000418933: add byte ptr [rax], al; lea rax, [rip + 0x75c4]; cmove rax, rdx; ret; 
0x00000000004184c3: add byte ptr [rax], al; lea rax, [rip + 0x7704]; cmove rax, rdx; ret; 
0x000000000045f6f3: add byte ptr [rax], al; lea rax, [rip + 0x834]; cmove rax, rdx; ret; 
0x0000000000460953: add byte ptr [rax], al; lea rax, [rip + 0x994]; cmove rax, rdx; ret; 
0x000000000045f6b3: add byte ptr [rax], al; lea rax, [rip + 0xd34]; cmove rax, rdx; ret; 
0x000000000041e82d: add byte ptr [rax], al; lea rcx, [rdx + rcx - 0x10]; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x000000000045d22d: add byte ptr [rax], al; lea rcx, [rip + 0x37fae]; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000045cbec: add byte ptr [rax], al; lea rcx, [rip + 0x383ab]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000040da7b: add byte ptr [rax], al; lea rcx, [rip + 0xa01bc]; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x0000000000468acc: add byte ptr [rax], al; lea rdi, [rip + 0x2d7e3]; movsxd rax, dword ptr [rdi + r12*4]; add rax, rdi; jmp rax; 
0x0000000000472745: add byte ptr [rax], al; lea rdi, [rip + 0x3cf3a]; syscall; 
0x00000000004724c1: add byte ptr [rax], al; lea rdi, [rip + 0x3d1ba]; syscall; 
0x00000000004705d5: add byte ptr [rax], al; lea rdi, [rip + 0x3f092]; syscall; 
0x0000000000450935: add byte ptr [rax], al; lea rdi, [rip + 0x5eca2]; syscall; 
0x0000000000450870: add byte ptr [rax], al; lea rdi, [rip + 0x5ed67]; syscall; 
0x00000000004506d3: add byte ptr [rax], al; lea rdi, [rip + 0x5ef04]; syscall; 
0x0000000000450604: add byte ptr [rax], al; lea rdi, [rip + 0x5efd3]; syscall; 
0x0000000000445385: add byte ptr [rax], al; lea rdi, [rip + 0x6a04a]; syscall; 
0x0000000000445219: add byte ptr [rax], al; lea rdi, [rip + 0x6a1b6]; syscall; 
0x0000000000445121: add byte ptr [rax], al; lea rdi, [rip + 0x6a2ae]; syscall; 
0x000000000043ddbd: add byte ptr [rax], al; lea rdi, [rip + 0x71612]; syscall; 
0x0000000000417a21: add byte ptr [rax], al; lea rdi, [rip + 0x94d76]; syscall; 
0x0000000000415d09: add byte ptr [rax], al; lea rdi, [rip + 0x96a8e]; syscall; 
0x0000000000415cd1: add byte ptr [rax], al; lea rdi, [rip + 0x96ac6]; syscall; 
0x00000000004157b1: add byte ptr [rax], al; lea rdi, [rip + 0x96fe6]; syscall; 
0x000000000041546d: add byte ptr [rax], al; lea rdi, [rip + 0x9732a]; syscall; 
0x000000000041692c: add byte ptr [rax], al; lea rdi, [rip + 0x9885b]; syscall; 
0x0000000000413d9d: add byte ptr [rax], al; lea rdi, [rip + 0x989fa]; syscall; 
0x0000000000413d9d: add byte ptr [rax], al; lea rdi, [rip + 0x989fa]; syscall; pop rbp; ret; 
0x0000000000413d6d: add byte ptr [rax], al; lea rdi, [rip + 0x98a2a]; syscall; 
0x0000000000416005: add byte ptr [rax], al; lea rdi, [rip + 0x99172]; syscall; 
0x0000000000416005: add byte ptr [rax], al; lea rdi, [rip + 0x99172]; syscall; pop rbx; ret; 
0x000000000041433b: add byte ptr [rax], al; lea rdi, [rip + 0x9ae4c]; syscall; 
0x00000000004142bf: add byte ptr [rax], al; lea rdi, [rip + 0x9aeb8]; syscall; 
0x000000000041401a: add byte ptr [rax], al; lea rdi, [rip + 0x9b16d]; syscall; 
0x000000000041217d: add byte ptr [rax], al; lea rdi, [rip + 0x9d00a]; syscall; 
0x0000000000410d2c: add byte ptr [rax], al; lea rdi, [rip + 0x9e3db]; syscall; 
0x0000000000410d2c: add byte ptr [rax], al; lea rdi, [rip + 0x9e3db]; syscall; ret; 
0x0000000000410833: add byte ptr [rax], al; lea rdi, [rip + 0x9e8d4]; syscall; 
0x00000000004104e8: add byte ptr [rax], al; lea rdi, [rip + 0x9ec1f]; syscall; 
0x00000000004101a5: add byte ptr [rax], al; lea rdi, [rip + 0x9ef62]; syscall; 
0x000000000040ee9f: add byte ptr [rax], al; lea rdi, [rip + 0xa0268]; syscall; 
0x000000000040ebdf: add byte ptr [rax], al; lea rdi, [rip + 0xa0528]; syscall; 
0x000000000040e733: add byte ptr [rax], al; lea rdi, [rip + 0xa09d4]; syscall; 
0x000000000040e733: add byte ptr [rax], al; lea rdi, [rip + 0xa09d4]; syscall; ret; 
0x00000000004096a1: add byte ptr [rax], al; lea rdi, [rip + 0xa5d2e]; syscall; 
0x0000000000408770: add byte ptr [rax], al; lea rdi, [rip + 0xa654f]; syscall; 
0x0000000000408549: add byte ptr [rax], al; lea rdi, [rip + 0xa6776]; syscall; 
0x000000000040850e: add byte ptr [rax], al; lea rdi, [rip + 0xa67b1]; syscall; 
0x000000000040843a: add byte ptr [rax], al; lea rdi, [rip + 0xa6885]; syscall; 
0x000000000040650e: add byte ptr [rax], al; lea rdi, [rip + 0xa8751]; syscall; 
0x0000000000404c3b: add byte ptr [rax], al; lea rdi, [rip + 0xa9fec]; syscall; 
0x0000000000403c52: add byte ptr [rax], al; lea rdi, [rip + 0xaaf25]; syscall; 
0x0000000000403c29: add byte ptr [rax], al; lea rdi, [rip + 0xaaf4e]; syscall; 
0x0000000000403b20: add byte ptr [rax], al; lea rdi, [rip + 0xab057]; syscall; 
0x0000000000401202: add byte ptr [rax], al; lea rdi, [rip + 0xada75]; syscall; 
0x00000000004185c6: add byte ptr [rax], al; lea rdx, [rip + 0x11dd1]; cmovne rax, rdx; ret; 
0x0000000000418514: add byte ptr [rax], al; lea rdx, [rip + 0x21af3]; cmovne rax, rdx; ret; 
0x0000000000417b93: add byte ptr [rax], al; lea rdx, [rip + 0x24e4]; cmovne rax, rdx; ret; 
0x0000000000461063: add byte ptr [rax], al; lea rdx, [rip + 0x34]; cmovne rax, rdx; ret; 
0x0000000000417cfd: add byte ptr [rax], al; lea rdx, [rip + 0x526a]; cmovne rax, rdx; ret; 
0x00000000004188b6: add byte ptr [rax], al; lea rdx, [rip + 0xf011]; cmovne rax, rdx; ret; 
0x0000000000418736: add byte ptr [rax], al; lea rdx, [rip + 0xf171]; cmovne rax, rdx; ret; 
0x0000000000473f53: add byte ptr [rax], al; lea rsi, [rip + 0x2450c]; lea rdi, [rip + 0x2451d]; call 0x2df0; nop dword ptr [rax + rax]; ret; 
0x000000000046821f: add byte ptr [rax], al; lea rsi, [rip + 0x2dff8]; movsxd rax, dword ptr [rsi + r12*4]; add rax, rsi; jmp rax; 
0x000000000043d2b0: add byte ptr [rax], al; lea rsi, [rip + 0x46b87]; movsxd rax, dword ptr [rsi + rdi*4]; add rax, rsi; jmp rax; 
0x0000000000401d43: add byte ptr [rax], al; leave; ret; 
0x0000000000438afe: add byte ptr [rax], al; mov ax, word ptr [rcx]; mov word ptr [rdx], ax; lea rax, [rdx + 1]; ret; 
0x000000000043734e: add byte ptr [rax], al; mov ax, word ptr [rcx]; mov word ptr [rdx], ax; mov rax, rdi; ret; 
0x00000000004395de: add byte ptr [rax], al; mov byte ptr [rdi], dh; lea rax, [rdi]; ret; 
0x0000000000438fbe: add byte ptr [rax], al; mov byte ptr [rdi], dh; ret; 
0x00000000004395fe: add byte ptr [rax], al; mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; lea rax, [rdi + 2]; ret; 
0x0000000000438fde: add byte ptr [rax], al; mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; ret; 
0x00000000004541e3: add byte ptr [rax], al; mov dword ptr [rbp - 0x500], r9d; mov rdx, r15; mov rsi, r8; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x0000000000459ceb: add byte ptr [rax], al; mov dword ptr [rbp - 0x508], 0x20; jmp rax; 
0x000000000045abc7: add byte ptr [rax], al; mov dword ptr [rbp - 0x508], 0x20; movzx eax, byte ptr [rdi + rax]; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x0000000000459ccc: add byte ptr [rax], al; mov dword ptr [rbp - 0x510], 0; mov dword ptr [rbp - 0x51c], 0; mov qword ptr [rbp - 0x4d8], 0; mov dword ptr [rbp - 0x508], 0x20; jmp rax; 
0x0000000000453e41: add byte ptr [rax], al; mov dword ptr [rbp - 0x51c], 0; mov dword ptr [rbp - 0x520], 0; mov qword ptr [rbp - 0x4e8], 0; mov qword ptr [rbp - 0x4f8], rsi; jmp rax; 
0x0000000000459cd6: add byte ptr [rax], al; mov dword ptr [rbp - 0x51c], 0; mov qword ptr [rbp - 0x4d8], 0; mov dword ptr [rbp - 0x508], 0x20; jmp rax; 
0x0000000000453e4b: add byte ptr [rax], al; mov dword ptr [rbp - 0x520], 0; mov qword ptr [rbp - 0x4e8], 0; mov qword ptr [rbp - 0x4f8], rsi; jmp rax; 
0x000000000040daa8: add byte ptr [rax], al; mov dword ptr [rbx + 0x70], 0xffffffff; pop rbx; ret; 
0x00000000004783c0: add byte ptr [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000004116bb: add byte ptr [rax], al; mov dword ptr [rip + 0x9b069], eax; ret; 
0x000000000042a29e: add byte ptr [rax], al; mov dx, word ptr [rsi + 1]; mov cx, word ptr [rsi]; mov word ptr [rdi + 1], dx; mov word ptr [rdi], cx; ret; 
0x00000000004395ee: add byte ptr [rax], al; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; lea rax, [rdi + 1]; ret; 
0x0000000000417a8e: add byte ptr [rax], al; mov eax, 0x16; pop rbx; ret; 
0x000000000043f8de: add byte ptr [rax], al; mov eax, 0x1c; syscall; 
0x000000000043f8de: add byte ptr [rax], al; mov eax, 0x1c; syscall; cmp rax, -0xfff; jae 0x3f8f0; ret; 
0x000000000043f408: add byte ptr [rax], al; mov eax, 0x48; syscall; 
0x000000000046200e: add byte ptr [rax], al; mov eax, 0x66; syscall; 
0x000000000046200e: add byte ptr [rax], al; mov eax, 0x66; syscall; ret; 
0x000000000046202e: add byte ptr [rax], al; mov eax, 0x68; syscall; 
0x000000000046202e: add byte ptr [rax], al; mov eax, 0x68; syscall; ret; 
0x000000000046201e: add byte ptr [rax], al; mov eax, 0x6b; syscall; 
0x000000000046201e: add byte ptr [rax], al; mov eax, 0x6b; syscall; ret; 
0x000000000046203e: add byte ptr [rax], al; mov eax, 0x6c; syscall; 
0x000000000046203e: add byte ptr [rax], al; mov eax, 0x6c; syscall; ret; 
0x000000000043f8ae: add byte ptr [rax], al; mov eax, 0xa; syscall; 
0x000000000043f8ae: add byte ptr [rax], al; mov eax, 0xa; syscall; cmp rax, -0xfff; jae 0x3f8c0; ret; 
0x000000000046220e: add byte ptr [rax], al; mov eax, 0xc; syscall; 
0x0000000000472740: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x3cf3a]; syscall; 
0x00000000004724bc: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x3d1ba]; syscall; 
0x00000000004705d0: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x3f092]; syscall; 
0x0000000000450930: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x5eca2]; syscall; 
0x000000000045086b: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x5ed67]; syscall; 
0x00000000004506ce: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x5ef04]; syscall; 
0x00000000004505ff: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x5efd3]; syscall; 
0x0000000000445380: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x6a04a]; syscall; 
0x0000000000445214: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x6a1b6]; syscall; 
0x000000000044511c: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x6a2ae]; syscall; 
0x000000000043ddb8: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x71612]; syscall; 
0x0000000000417a1c: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x94d76]; syscall; 
0x0000000000415d04: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x96a8e]; syscall; 
0x0000000000415ccc: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x96ac6]; syscall; 
0x00000000004157ac: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x96fe6]; syscall; 
0x0000000000415468: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x9732a]; syscall; 
0x0000000000416927: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x9885b]; syscall; 
0x0000000000413d98: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x989fa]; syscall; 
0x0000000000413d98: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x989fa]; syscall; pop rbp; ret; 
0x0000000000413d68: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x98a2a]; syscall; 
0x0000000000416000: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x99172]; syscall; 
0x0000000000416000: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x99172]; syscall; pop rbx; ret; 
0x0000000000414336: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x9ae4c]; syscall; 
0x00000000004142ba: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x9aeb8]; syscall; 
0x0000000000414015: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x9b16d]; syscall; 
0x0000000000412178: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x9d00a]; syscall; 
0x0000000000410d27: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x9e3db]; syscall; 
0x0000000000410d27: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x9e3db]; syscall; ret; 
0x000000000041082e: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x9e8d4]; syscall; 
0x00000000004104e3: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x9ec1f]; syscall; 
0x00000000004101a0: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0x9ef62]; syscall; 
0x000000000040ee9a: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0xa0268]; syscall; 
0x000000000040ebda: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0xa0528]; syscall; 
0x000000000040e72e: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0xa09d4]; syscall; 
0x000000000040e72e: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0xa09d4]; syscall; ret; 
0x000000000040969c: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0xa5d2e]; syscall; 
0x000000000040876b: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0xa654f]; syscall; 
0x0000000000408544: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0xa6776]; syscall; 
0x0000000000408509: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0xa67b1]; syscall; 
0x0000000000408435: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0xa6885]; syscall; 
0x0000000000406509: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0xa8751]; syscall; 
0x0000000000404c36: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0xa9fec]; syscall; 
0x0000000000403c4d: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0xaaf25]; syscall; 
0x0000000000403c24: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0xaaf4e]; syscall; 
0x0000000000403b1b: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0xab057]; syscall; 
0x00000000004011fd: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0xada75]; syscall; 
0x000000000040134f: add byte ptr [rax], al; mov eax, 0xca; syscall; 
0x00000000004727e3: add byte ptr [rax], al; mov eax, 0xca; syscall; ret; 
0x000000000045f2f7: add byte ptr [rax], al; mov eax, 0xca; xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x000000000044fc39: add byte ptr [rax], al; mov eax, 0xd; syscall; 
0x0000000000407ae8: add byte ptr [rax], al; mov eax, 0xe; syscall; 
0x000000000045072c: add byte ptr [rax], al; mov eax, 0xffffffff; pop rbp; pop r12; pop r13; ret; 
0x000000000040af6e: add byte ptr [rax], al; mov eax, 0xffffffff; pop rbp; ret; 
0x000000000040f4fe: add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x00000000004782ce: add byte ptr [rax], al; mov eax, 1; ret; 
0x0000000000478437: add byte ptr [rax], al; mov eax, 2; ret; 
0x0000000000472d1f: add byte ptr [rax], al; mov eax, dword ptr [rbx + 8]; lea rdx, [rip + 0x256f1]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000047f5ce: add byte ptr [rax], al; mov eax, dword ptr [rdi]; test eax, eax; jne 0x7f5e0; ret; 
0x000000000047f90e: add byte ptr [rax], al; mov eax, dword ptr [rdi]; test eax, eax; jne 0x7f920; ret; 
0x0000000000442bee: add byte ptr [rax], al; mov eax, dword ptr [rip + 0x6c7ca]; test eax, eax; je 0x42c00; ret; 
0x000000000043ea2e: add byte ptr [rax], al; mov eax, dword ptr fs:[0x18]; test eax, eax; jne 0x3ea50; syscall; 
0x0000000000415fd5: add byte ptr [rax], al; mov eax, ebx; syscall; 
0x000000000043d316: add byte ptr [rax], al; mov eax, ecx; pop rbx; shr eax, 0xe; and eax, 0x3fc00; ret; 
0x0000000000407ab3: add byte ptr [rax], al; mov eax, ecx; syscall; 
0x000000000043e276: add byte ptr [rax], al; mov eax, edx; syscall; 
0x000000000040c019: add byte ptr [rax], al; mov eax, r10d; syscall; 
0x0000000000443b9b: add byte ptr [rax], al; mov eax, r12d; pop r12; ret; 
0x0000000000409577: add byte ptr [rax], al; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000044d33b: add byte ptr [rax], al; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000040941d: add byte ptr [rax], al; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000043961e: add byte ptr [rax], al; mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; lea rax, [rdi + 4]; ret; 
0x0000000000438ffe: add byte ptr [rax], al; mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; ret; 
0x000000000043900e: add byte ptr [rax], al; mov ecx, dword ptr [rsi]; mov dx, word ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; ret; 
0x0000000000462336: add byte ptr [rax], al; mov ecx, eax; and ecx, dword ptr [rsi + 0x10]; lea rcx, [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x000000000047cd20: add byte ptr [rax], al; mov edi, 1; call rax; 
0x000000000042a1be: add byte ptr [rax], al; mov edx, dword ptr [rsi + 1]; mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 1], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000042a14e: add byte ptr [rax], al; mov edx, dword ptr [rsi + 2]; mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 2], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000042a0de: add byte ptr [rax], al; mov edx, dword ptr [rsi + 3]; mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 3], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000042a22e: add byte ptr [rax], al; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x0000000000411658: add byte ptr [rax], al; mov esi, 0x80; mov eax, 0xca; syscall; 
0x000000000045f306: add byte ptr [rax], al; mov esi, 0x80; syscall; 
0x000000000047273b: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3cf3a]; syscall; 
0x00000000004724b7: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3d1ba]; syscall; 
0x00000000004705cb: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3f092]; syscall; 
0x000000000045092b: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5eca2]; syscall; 
0x0000000000450866: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5ed67]; syscall; 
0x00000000004506c9: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5ef04]; syscall; 
0x00000000004505fa: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5efd3]; syscall; 
0x000000000044537b: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a04a]; syscall; 
0x000000000044520f: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a1b6]; syscall; 
0x0000000000445117: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a2ae]; syscall; 
0x000000000043ddb3: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x71612]; syscall; 
0x0000000000417a17: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x94d76]; syscall; 
0x0000000000415cff: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96a8e]; syscall; 
0x0000000000415cc7: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96ac6]; syscall; 
0x00000000004157a7: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96fe6]; syscall; 
0x0000000000415463: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9732a]; syscall; 
0x0000000000416922: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9885b]; syscall; 
0x0000000000413d93: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x989fa]; syscall; 
0x0000000000413d63: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x98a2a]; syscall; 
0x0000000000415ffb: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x99172]; syscall; 
0x0000000000414331: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ae4c]; syscall; 
0x00000000004142b5: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9aeb8]; syscall; 
0x0000000000414010: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9b16d]; syscall; 
0x0000000000412173: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9d00a]; syscall; 
0x0000000000410d22: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9e3db]; syscall; 
0x0000000000410d22: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9e3db]; syscall; ret; 
0x0000000000410829: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9e8d4]; syscall; 
0x00000000004104de: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ec1f]; syscall; 
0x000000000041019b: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ef62]; syscall; 
0x000000000040ee95: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa0268]; syscall; 
0x000000000040ebd5: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa0528]; syscall; 
0x000000000040e729: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa09d4]; syscall; 
0x000000000040e729: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa09d4]; syscall; ret; 
0x0000000000409697: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa5d2e]; syscall; 
0x0000000000408766: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa654f]; syscall; 
0x000000000040853f: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa6776]; syscall; 
0x0000000000408504: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa67b1]; syscall; 
0x0000000000408430: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa6885]; syscall; 
0x0000000000406504: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa8751]; syscall; 
0x0000000000404c31: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa9fec]; syscall; 
0x0000000000403c48: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xaaf25]; syscall; 
0x0000000000403c1f: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xaaf4e]; syscall; 
0x0000000000403b16: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xab057]; syscall; 
0x00000000004011f8: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xada75]; syscall; 
0x000000000040134a: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004727de: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x0000000000415fd0: add byte ptr [rax], al; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000004163bf: add byte ptr [rax], al; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004166b1: add byte ptr [rax], al; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000412e05: add byte ptr [rax], al; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000416c70: add byte ptr [rax], al; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000004173d6: add byte ptr [rax], al; mov esi, 0x81; mov rdi, rcx; mov eax, 0xca; syscall; 
0x000000000045ea8a: add byte ptr [rax], al; mov esi, 0xffffffff; call qword ptr [rax + 0x18]; 
0x000000000040839a: add byte ptr [rax], al; mov esi, ebp; ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x000000000045e82e: add byte ptr [rax], al; mov esi, r15d; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x000000000045eb20: add byte ptr [rax], al; mov qword ptr [rax + 0x48], 0; pop rbx; ret; 
0x000000000040fc02: add byte ptr [rax], al; mov qword ptr [rax + 8], 0; ret; 
0x0000000000472da8: add byte ptr [rax], al; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000459ce0: add byte ptr [rax], al; mov qword ptr [rbp - 0x4d8], 0; mov dword ptr [rbp - 0x508], 0x20; jmp rax; 
0x000000000045a58e: add byte ptr [rax], al; mov qword ptr [rbp - 0x4e0], rcx; mov rdx, rcx; mov rsi, r9; mov rdi, r12; call qword ptr [rbx + 0x38]; 
0x0000000000453e55: add byte ptr [rax], al; mov qword ptr [rbp - 0x4e8], 0; mov qword ptr [rbp - 0x4f8], rsi; jmp rax; 
0x0000000000453e60: add byte ptr [rax], al; mov qword ptr [rbp - 0x4f8], rsi; jmp rax; 
0x000000000046c6ea: add byte ptr [rax], al; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000046cf40: add byte ptr [rax], al; mov qword ptr [rbx + 0x18], rax; pop rax; pop rdx; pop rbx; ret; 
0x0000000000478632: add byte ptr [rax], al; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x00000000004786e6: add byte ptr [rax], al; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000040f07e: add byte ptr [rax], al; mov qword ptr [rbx + 0x50], 0; pop rbx; ret; 
0x000000000046c6e2: add byte ptr [rax], al; mov qword ptr [rbx + 8], 0; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000040c9f8: add byte ptr [rax], al; mov qword ptr [rbx + 8], rax; mov qword ptr [rbx + 0x10], rax; xor eax, eax; pop rbx; ret; 
0x0000000000444330: add byte ptr [rax], al; mov qword ptr [rbx], 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000040fd22: add byte ptr [rax], al; mov qword ptr [rcx + 0xe0], r8; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000044151e: add byte ptr [rax], al; mov qword ptr [rdi + 0x20], rsi; ret; 
0x0000000000467682: add byte ptr [rax], al; mov qword ptr [rdi + 0x308], rax; ret; 
0x0000000000467654: add byte ptr [rax], al; mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000047cefe: add byte ptr [rax], al; mov qword ptr [rdi + 0x98], rsi; ret; 
0x000000000040fd3e: add byte ptr [rax], al; mov qword ptr [rdi + 0xa0], -1; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000040fd29: add byte ptr [rax], al; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000047ceb6: add byte ptr [rax], al; mov qword ptr [rdi + rsi*8], rdx; add rsp, 8; ret; 
0x00000000004782e8: add byte ptr [rax], al; mov qword ptr [rdi], rdx; ret; 
0x0000000000409a04: add byte ptr [rax], al; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x00000000004803b9: add byte ptr [rax], al; mov qword ptr [rip + 0x2ed2e], rbx; test rbx, rbx; jne 0x803a8; pop rbx; ret; 
0x000000000044f91a: add byte ptr [rax], al; mov qword ptr [rip + 0x5e0cd], rax; mov qword ptr [rip + 0x5e0ce], rdx; cmp qword ptr fs:[rdi], rsi; je 0x4f938; ret; 
0x000000000041221f: add byte ptr [rax], al; mov qword ptr [rip + 0x9a558], rax; ret; 
0x0000000000412211: add byte ptr [rax], al; mov qword ptr [rip + 0x9a56e], rax; lea rax, [rip + 0x344f]; mov qword ptr [rip + 0x9a558], rax; ret; 
0x000000000041170b: add byte ptr [rax], al; mov qword ptr [rip + 0x9afec], rax; ret; 
0x00000000004116db: add byte ptr [rax], al; mov qword ptr [rip + 0x9b024], rax; ret; 
0x0000000000410d49: add byte ptr [rax], al; mov qword ptr [rip + 0x9e3c2], 0; ret; 
0x0000000000402a6f: add byte ptr [rax], al; mov qword ptr [rsi + 8], rax; mov eax, 0x9e; mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x0000000000402a78: add byte ptr [rax], al; mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x000000000046a4b1: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x69de0; add rsp, 0xd8; ret; 
0x0000000000462153: add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000044fa29: add byte ptr [rax], al; mov qword ptr fs:[rdx], rax; ret; 
0x000000000047390e: add byte ptr [rax], al; mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000000440b3e: add byte ptr [rax], al; mov r10, rcx; mov eax, 0x19; syscall; 
0x000000000044fc33: add byte ptr [rax], al; mov r10d, 8; mov eax, 0xd; syscall; 
0x0000000000423dbe: add byte ptr [rax], al; mov r11, qword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000440d55: add byte ptr [rax], al; mov r8, qword ptr [rip + 0x6d58a]; jne 0x40d70; lea rax, [r8 + 1]; mov qword ptr [rip + 0x6d57d], rax; ret; 
0x000000000043e896: add byte ptr [rax], al; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000046224e: add byte ptr [rax], al; mov rax, -0x40; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x000000000046b4a6: add byte ptr [rax], al; mov rax, -0x40; pop rbx; mov eax, dword ptr fs:[rax]; ret; 
0x000000000044f95e: add byte ptr [rax], al; mov rax, -0x58; movsxd rdi, edi; mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000040fdee: add byte ptr [rax], al; mov rax, -1; ret; 
0x000000000044f97e: add byte ptr [rax], al; mov rax, -8; add rax, qword ptr fs:[0]; ret; 
0x000000000046152e: add byte ptr [rax], al; mov rax, 2; ret; 
0x000000000046153e: add byte ptr [rax], al; mov rax, 3; ret; 
0x000000000046154e: add byte ptr [rax], al; mov rax, 4; ret; 
0x000000000046155e: add byte ptr [rax], al; mov rax, 5; ret; 
0x000000000046156e: add byte ptr [rax], al; mov rax, 6; ret; 
0x000000000046157e: add byte ptr [rax], al; mov rax, 7; ret; 
0x00000000004083b6: add byte ptr [rax], al; mov rax, qword ptr [rax + 0x18]; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; call rax; 
0x000000000040af5e: add byte ptr [rax], al; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x000000000040fb45: add byte ptr [rax], al; mov rax, qword ptr [rax + 0x68]; test rax, rax; jne 0xfb40; ret; 
0x000000000046cdfe: add byte ptr [rax], al; mov rax, qword ptr [rax + 8]; ret; 
0x000000000046ce0e: add byte ptr [rax], al; mov rax, qword ptr [rax + 8]; sub rax, qword ptr fs:[0]; ret; 
0x00000000004115ce: add byte ptr [rax], al; mov rax, qword ptr [rdi + 0x28]; cmp qword ptr [rdi + 0x10], rax; cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x000000000045e94e: add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xa0]; cmp qword ptr [rax + 0x30], 0; je 0x5e960; ret; 
0x000000000047cf0e: add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xa0]; ret; 
0x000000000047cf5e: add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xa8]; ret; 
0x000000000047cf1e: add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xb8]; ret; 
0x000000000041167e: add byte ptr [rax], al; mov rax, qword ptr [rdi]; cmp rax, 0x2000000; jbe 0x11690; ret; 
0x000000000041173e: add byte ptr [rax], al; mov rax, qword ptr [rdi]; cmp rax, 0x408; jbe 0x11750; ret; 
0x00000000004117ae: add byte ptr [rax], al; mov rax, qword ptr [rdi]; cmp rax, 0xa0; jbe 0x117c0; ret; 
0x00000000004765de: add byte ptr [rax], al; mov rax, qword ptr [rdi]; cmp rax, rsi; je 0x765f0; ret; 
0x00000000004116fe: add byte ptr [rax], al; mov rax, qword ptr [rdi]; mov dword ptr [rip + 0x9b027], 1; mov qword ptr [rip + 0x9afec], rax; ret; 
0x00000000004116ee: add byte ptr [rax], al; mov rax, qword ptr [rdi]; mov dword ptr [rip + 0x9da9b], eax; ret; 
0x000000000041179e: add byte ptr [rax], al; mov rax, qword ptr [rdi]; mov qword ptr [rip + 0x9afbe], rax; ret; 
0x000000000041172e: add byte ptr [rax], al; mov rax, qword ptr [rdi]; mov qword ptr [rip + 0x9afde], rax; ret; 
0x000000000041171e: add byte ptr [rax], al; mov rax, qword ptr [rdi]; mov qword ptr [rip + 0x9aff6], rax; ret; 
0x00000000004442de: add byte ptr [rax], al; mov rax, qword ptr [rip + 0x6b101]; ret; 
0x00000000004442ce: add byte ptr [rax], al; mov rax, qword ptr [rip + 0x6b109]; ret; 
0x0000000000440eae: add byte ptr [rax], al; mov rax, qword ptr [rip + 0x6d411]; mov qword ptr [rdi], rax; mov rax, qword ptr [rip + 0x6d3f7]; mov qword ptr [rsi], rax; ret; 
0x000000000043f74e: add byte ptr [rax], al; mov rax, qword ptr [rip + 0x6d9c1]; test rax, rax; je 0x3f75d; ret; 
0x0000000000443baf: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x0000000000407bf3: add byte ptr [rax], al; mov rax, qword ptr [rsp + 8]; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000047a9eb: add byte ptr [rax], al; mov rax, qword ptr [rsp]; add rsp, 0x38; pop rbx; pop r14; ret; 
0x000000000047a716: add byte ptr [rax], al; mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000041624f: add byte ptr [rax], al; mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x0000000000440a21: add byte ptr [rax], al; mov rax, r8; pop rbx; pop rbp; ret; 
0x0000000000461901: add byte ptr [rax], al; mov rax, r8; shr rax, 2; vzeroupper; ret; 
0x00000000004607be: add byte ptr [rax], al; mov rax, r8; vzeroupper; ret; 
0x000000000040d6e8: add byte ptr [rax], al; mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x000000000047d068: add byte ptr [rax], al; mov rax, rbp; pop rbx; pop rbp; ret; 
0x000000000040db83: add byte ptr [rax], al; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000410c6e: add byte ptr [rax], al; mov rax, rdi; ret; 
0x000000000046b25c: add byte ptr [rax], al; mov rbp, rsp; mov rsi, rbp; syscall; 
0x000000000042417e: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xa]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000042435e: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xb]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000042453e: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xc]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000042472e: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042492e: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424b2e: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423f9e: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 9]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043966e: add byte ptr [rax], al; mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; lea rax, [rdi + 8]; ret; 
0x000000000043903e: add byte ptr [rax], al; mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; ret; 
0x000000000043904e: add byte ptr [rax], al; mov rcx, qword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x000000000043c15f: add byte ptr [rax], al; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000044ff62: add byte ptr [rax], al; mov rdi, qword ptr [rsp + 8]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x00000000004163c4: add byte ptr [rax], al; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004800c6: add byte ptr [rax], al; mov rdi, r13; call rbx; 
0x00000000004166b6: add byte ptr [rax], al; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000401db8: add byte ptr [rax], al; mov rdi, rax; call 0x9cc0; nop; pop rbp; ret; 
0x0000000000412e0a: add byte ptr [rax], al; mov rdi, rbp; mov eax, 0xca; syscall; 
0x000000000040af53: add byte ptr [rax], al; mov rdi, rbp; pop rbp; mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x000000000045cf37: add byte ptr [rax], al; mov rdi, rbx; call rax; 
0x0000000000416c75: add byte ptr [rax], al; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000004173db: add byte ptr [rax], al; mov rdi, rcx; mov eax, 0xca; syscall; 
0x000000000043ebfe: add byte ptr [rax], al; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000043ea9e: add byte ptr [rax], al; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x000000000040c56e: add byte ptr [rax], al; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x0000000000472da1: add byte ptr [rax], al; mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x00000000004099fd: add byte ptr [rax], al; mov rdx, qword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x000000000047db76: add byte ptr [rax], al; mov rdx, qword ptr [rdx]; mov qword ptr [r8], rdx; add rsp, 8; ret; 
0x0000000000402590: add byte ptr [rax], al; mov rdx, qword ptr [rip + 0xacc1f]; mov edi, dword ptr [rsp + 0xc]; mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000429ffe: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 1]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429f8e: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 2]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429f1e: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 3]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429e3e: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 5]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429dce: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 6]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429d5e: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 7]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x000000000042a06e: add byte ptr [rax], al; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x000000000045283c: add byte ptr [rax], al; mov rdx, r12; mov rsi, r13; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x000000000045228c: add byte ptr [rax], al; mov rdx, r13; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000407d86: add byte ptr [rax], al; mov rdx, r14; mov rax, qword ptr [rsp + 8]; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000040d4ec: add byte ptr [rax], al; mov rdx, r15; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x000000000040c00e: add byte ptr [rax], al; mov rdx, r8; mov rsi, rbx; mov edi, 2; mov eax, r10d; syscall; 
0x00000000004800be: add byte ptr [rax], al; mov rdx, rbp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x000000000044ff8e: add byte ptr [rax], al; mov rdx, rbp; mov rsi, r12; mov rdi, r15; call rbx; 
0x00000000004524e7: add byte ptr [rax], al; mov rdx, rbx; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000045b01d: add byte ptr [rax], al; mov rdx, rbx; mov rsi, r9; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x0000000000407c5b: add byte ptr [rax], al; mov rsi, qword ptr [r13]; mov rdi, qword ptr [r12]; mov rdx, r14; mov rax, qword ptr [rsp + 8]; call rax; 
0x00000000004520bf: add byte ptr [rax], al; mov rsi, qword ptr [r15 + 0x18]; mov rdx, qword ptr [r15 + 0x20]; mov rdi, r14; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x000000000040a179: add byte ptr [rax], al; mov rsi, qword ptr [rbx + 0x10]; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x000000000041625e: add byte ptr [rax], al; mov rsi, qword ptr [rsp + 0x18]; pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000000416fae: add byte ptr [rax], al; mov rsi, qword ptr [rsp + 0x28]; mov rdi, r12; call rax; 
0x0000000000450056: add byte ptr [rax], al; mov rsi, r15; mov rdi, r12; mov rdx, rbp; call rbx; 
0x000000000044fdcb: add byte ptr [rax], al; mov rsi, r8; mov eax, 0xe; syscall; 
0x000000000043920e: add byte ptr [rax], al; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x00000000004390be: add byte ptr [rax], al; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x000000000044ee36: add byte ptr [rax], al; movsxd rcx, dword ptr [rdi + r9*4]; add rcx, rdi; jmp rcx; 
0x000000000045183d: add byte ptr [rax], al; movsxd rcx, dword ptr [rdx + rcx*4]; add rcx, rdx; jmp rcx; 
0x000000000043c095: add byte ptr [rax], al; movups xmm0, xmmword ptr [rsi]; movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000041f88b: add byte ptr [rax], al; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000041f8c5: add byte ptr [rax], al; movzx eax, byte ptr [rax + rdi]; movzx edx, byte ptr [rdx + rdi]; sub eax, edx; vzeroupper; ret; 
0x000000000045abd1: add byte ptr [rax], al; movzx eax, byte ptr [rdi + rax]; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x000000000041f700: add byte ptr [rax], al; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x000000000043b28e: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 0xa]; movzx edx, byte ptr [rsi - 0xa]; sub eax, edx; ret; 
0x000000000043b27e: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 0xb]; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x000000000043b26e: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 0xc]; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x000000000043b25e: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 0xd]; movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x000000000043b24e: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 0xe]; movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x000000000043b23e: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 0xf]; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x000000000043b5e8: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 1]; cmp al, byte ptr [rsi - 1]; jne 0x3b765; xor eax, eax; ret; 
0x0000000000421bbe: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 1]; movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x0000000000421971: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 1]; movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x0000000000420a9e: add byte ptr [rax], al; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000045a2e0: add byte ptr [rax], al; movzx eax, byte ptr [rsi + rax]; lea rsi, [rip + 0x4fe93]; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x000000000043d34e: add byte ptr [rax], al; movzx eax, cl; pop rbx; ret; 
0x000000000041cf5e: add byte ptr [rax], al; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000041fa9e: add byte ptr [rax], al; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x0000000000435a4e: add byte ptr [rax], al; movzx ecx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x000000000042a37e: add byte ptr [rax], al; movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x0000000000439c2e: add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; lea rax, [rdi + 1]; vzeroupper; ret; 
0x000000000042a30e: add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000435a3e: add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000043f8d9: add byte ptr [rax], al; nop dword ptr [rax + rax]; mov eax, 0x1c; syscall; 
0x0000000000462009: add byte ptr [rax], al; nop dword ptr [rax + rax]; mov eax, 0x66; syscall; 
0x0000000000462009: add byte ptr [rax], al; nop dword ptr [rax + rax]; mov eax, 0x66; syscall; ret; 
0x000000000043f8a9: add byte ptr [rax], al; nop dword ptr [rax + rax]; mov eax, 0xa; syscall; 
0x0000000000440b39: add byte ptr [rax], al; nop dword ptr [rax + rax]; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000000411679: add byte ptr [rax], al; nop dword ptr [rax + rax]; mov rax, qword ptr [rdi]; cmp rax, 0x2000000; jbe 0x11690; ret; 
0x000000000043f616: add byte ptr [rax], al; nop dword ptr [rax + rax]; xor eax, eax; syscall; 
0x00000000004200bb: add byte ptr [rax], al; nop dword ptr [rax]; bsf eax, eax; lea rax, [rax + rdi - 0x10]; ret; 
0x000000000043733b: add byte ptr [rax], al; nop dword ptr [rax]; mov al, byte ptr [rcx]; mov byte ptr [rdx], al; mov rax, rdi; ret; 
0x000000000047878b: add byte ptr [rax], al; nop dword ptr [rax]; mov eax, 0x26; syscall; 
0x0000000000438b2a: add byte ptr [rax], al; nop dword ptr [rax]; mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; lea rax, [rdx + 3]; ret; 
0x0000000000429b0a: add byte ptr [rax], al; nop dword ptr [rax]; mov edx, dword ptr [rsi - 4]; mov dword ptr [rdi - 4], edx; ret; 
0x000000000044f99a: add byte ptr [rax], al; nop dword ptr [rax]; mov rax, -0x10; add rax, qword ptr fs:[0]; ret; 
0x000000000044f9ba: add byte ptr [rax], al; nop dword ptr [rax]; mov rax, -0x18; add rax, qword ptr fs:[0]; ret; 
0x000000000044fb6a: add byte ptr [rax], al; nop dword ptr [rax]; mov rax, 0xf; syscall; 
0x0000000000438a7b: add byte ptr [rax], al; nop dword ptr [rax]; mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; lea rax, [rdx + 7]; ret; 
0x00000000004372cb: add byte ptr [rax], al; nop dword ptr [rax]; mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, rdi; ret; 
0x000000000047ceca: add byte ptr [rax], al; nop dword ptr [rax]; mov rax, qword ptr [rdi + 0x98]; ret; 
0x00000000004116ab: add byte ptr [rax], al; nop dword ptr [rax]; mov rax, qword ptr [rdi]; mov dword ptr [rip + 0x9b077], 1; mov dword ptr [rip + 0x9b069], eax; ret; 
0x0000000000410c3a: add byte ptr [rax], al; nop dword ptr [rax]; mov rax, qword ptr [rip + 0x9b4d9]; ret; 
0x0000000000423dda: add byte ptr [rax], al; nop dword ptr [rax]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043b22b: add byte ptr [rax], al; nop dword ptr [rax]; movzx eax, byte ptr [rdi - 0x10]; movzx edx, byte ptr [rsi - 0x10]; sub eax, edx; ret; 
0x0000000000419dbb: add byte ptr [rax], al; nop dword ptr [rax]; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000000429c9a: add byte ptr [rax], al; nop dword ptr [rax]; movzx edx, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000429c1a: add byte ptr [rax], al; nop dword ptr [rax]; movzx edx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x0000000000406d7a: add byte ptr [rax], al; nop dword ptr [rax]; ret; 
0x000000000043cdf7: add byte ptr [rax], al; nop dword ptr [rax]; test rdx, rdx; jne 0x3ce09; mov rax, rdi; ret; 
0x00000000004353bb: add byte ptr [rax], al; nop dword ptr [rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000043bc0b: add byte ptr [rax], al; nop dword ptr [rax]; xor eax, eax; ret; 
0x00000000004603db: add byte ptr [rax], al; nop dword ptr [rax]; xor eax, eax; vzeroupper; ret; 
0x000000000044ed44: add byte ptr [rax], al; nop word ptr cs:[rax + rax]; ret; 
0x000000000040c12c: add byte ptr [rax], al; nop; cmp qword ptr [rip + 0x9fe80], 0; je 0xc13b; ret; 
0x0000000000439f3d: add byte ptr [rax], al; nop; lea rax, [rdi + 1]; ret; 
0x0000000000439f2d: add byte ptr [rax], al; nop; lea rax, [rdi]; ret; 
0x0000000000438aec: add byte ptr [rax], al; nop; mov al, byte ptr [rcx]; mov byte ptr [rdx], al; lea rax, [rdx]; ret; 
0x0000000000438fcc: add byte ptr [rax], al; nop; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x00000000004738fc: add byte ptr [rax], al; nop; mov eax, 0x27; syscall; 
0x00000000004738fc: add byte ptr [rax], al; nop; mov eax, 0x27; syscall; ret; 
0x0000000000440b6c: add byte ptr [rax], al; nop; mov eax, 0x63; syscall; 
0x000000000043f87d: add byte ptr [rax], al; nop; mov eax, 0xb; syscall; 
0x0000000000410c1c: add byte ptr [rax], al; nop; mov eax, 0xffffffff; ret; 
0x000000000043f64c: add byte ptr [rax], al; nop; mov eax, 1; syscall; 
0x000000000043f36d: add byte ptr [rax], al; nop; mov eax, 3; syscall; 
0x000000000041091d: add byte ptr [rax], al; nop; mov eax, dword ptr [rdi + 0x10]; sub eax, dword ptr [rsi + 0x10]; ret; 
0x000000000046151d: add byte ptr [rax], al; nop; mov rax, 1; ret; 
0x0000000000410c5c: add byte ptr [rax], al; nop; mov rax, qword ptr [rdi + 0x68]; ret; 
0x000000000043973c: add byte ptr [rax], al; nop; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; lea rax, [rdi + 0xf]; ret; 
0x0000000000401dc0: add byte ptr [rax], al; nop; pop rbp; ret; 
0x0000000000440bec: add byte ptr [rax], al; nop; ret; 
0x000000000042035d: add byte ptr [rax], al; nop; vzeroupper; xor eax, eax; ret; 
0x00000000004025cd: add byte ptr [rax], al; nop; xor edi, edi; mov eax, edx; syscall; 
0x0000000000439d6d: add byte ptr [rax], al; nop; xor rax, rax; ret; 
0x00000000004783b7: add byte ptr [rax], al; or byte ptr [rcx - 0x77], 0; mov eax, 1; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000000040ca0e: add byte ptr [rax], al; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x000000000041fdc9: add byte ptr [rax], al; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x00000000004164bf: add byte ptr [rax], al; pop rbp; mov rax, r8; pop r12; pop r13; ret; 
0x00000000004725ac: add byte ptr [rax], al; pop rbp; pop r12; pop r13; ret; 
0x000000000040f950: add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x000000000047289e: add byte ptr [rax], al; pop rbp; ret; 
0x000000000043d309: add byte ptr [rax], al; pop rbx; cmove rax, rdx; ret; 
0x000000000040f96e: add byte ptr [rax], al; pop rbx; mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x000000000047237c: add byte ptr [rax], al; pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000004161a6: add byte ptr [rax], al; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000046b498: add byte ptr [rax], al; pop rbx; or dword ptr [rip + 0x41c66], 1; ret; 
0x0000000000473ae2: add byte ptr [rax], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000402846: add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000040cad2: add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x0000000000401f9e: add byte ptr [rax], al; pop rbx; ret; 
0x000000000040dbae: add byte ptr [rax], al; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x00000000004016f9: add byte ptr [rax], al; pop rdx; ret; 
0x0000000000401bbe: add byte ptr [rax], al; ret; 
0x000000000047cee5: add byte ptr [rax], al; sar rax, 0x3f; and eax, 1; mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x0000000000460484: add byte ptr [rax], al; sar rdx, cl; test rdx, rdx; je 0x60530; bsf rax, rdx; ret; 
0x0000000000415dfd: add byte ptr [rax], al; shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x000000000045444c: add byte ptr [rax], al; sub eax, 0x20; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000421a5c: add byte ptr [rax], al; sub eax, ecx; ret; 
0x000000000043bcb1: add byte ptr [rax], al; sub rax, rdx; ret; 
0x000000000040ff26: add byte ptr [rax], al; sub rcx, rax; lea eax, [rcx - 1]; ret; 
0x000000000045f046: add byte ptr [rax], al; sub rcx, rax; sar rcx, 2; lea eax, [rcx - 1]; ret; 
0x000000000047a260: add byte ptr [rax], al; sub rsp, -0x80; pop rbx; pop rbp; pop r12; ret; 
0x000000000044611e: add byte ptr [rax], al; sub rsp, 8; call 0x45c30; or dword ptr [rip + 0x692e4], 2; add rsp, 8; ret; 
0x0000000000401354: add byte ptr [rax], al; syscall; 
0x000000000043e872: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x3e880; ret; 
0x000000000043e8c1: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x3e8d0; ret; 
0x000000000043eadf: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x3eb40; ret; 
0x000000000043eb73: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x3eb80; ret; 
0x000000000043ebaf: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x3ec00; ret; 
0x000000000043f373: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x3f380; ret; 
0x000000000043f653: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x3f660; ret; 
0x0000000000462062: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x62070; ret; 
0x00000000004620b7: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x620c8; ret; 
0x00000000004738d3: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x738e0; ret; 
0x0000000000473916: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x73928; ret; 
0x000000000043e7e3: add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x3e7f0; ret; 
0x000000000043f883: add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x3f890; ret; 
0x000000000043f8b3: add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x3f8c0; ret; 
0x000000000043f8e3: add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x3f8f0; ret; 
0x0000000000440b46: add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x40b53; ret; 
0x0000000000440b73: add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x40b80; ret; 
0x0000000000461fe3: add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x61ff0; ret; 
0x0000000000478793: add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x787a0; ret; 
0x0000000000462013: add byte ptr [rax], al; syscall; ret; 
0x0000000000439f14: add byte ptr [rax], al; test ah, 0x40; jne 0x3a000; lea rax, [rdi + 0xf]; ret; 
0x0000000000439ec2: add byte ptr [rax], al; test al, 0x40; jne 0x39f90; lea rax, [rdi + 7]; ret; 
0x0000000000418535: add byte ptr [rax], al; test byte ptr [rip + 0x96dc7], 1; je 0x184fd; ret; 
0x0000000000439e35: add byte ptr [rax], al; test dh, 0x40; jne 0x39d70; lea rax, [rdi + 0xf]; ret; 
0x0000000000439e7b: add byte ptr [rax], al; test dh, 4; jne 0x39d70; lea rax, [rdi + 0xb]; ret; 
0x0000000000439db2: add byte ptr [rax], al; test dl, 0x40; jne 0x39d70; lea rax, [rdi + 7]; ret; 
0x0000000000439de0: add byte ptr [rax], al; test dl, 4; jne 0x39d70; lea rax, [rdi + 3]; ret; 
0x0000000000440ac9: add byte ptr [rax], al; test eax, eax; cmove eax, edx; ret; 
0x0000000000413d0a: add byte ptr [rax], al; test eax, eax; jne 0x13d80; sub dword ptr [rip + 0x98a89], 1; pop rbp; ret; 
0x0000000000415fb1: add byte ptr [rax], al; test eax, eax; jne 0x15fe8; sub dword ptr [rip + 0x991c2], 1; pop rbx; ret; 
0x000000000043ea36: add byte ptr [rax], al; test eax, eax; jne 0x3ea50; syscall; 
0x000000000043ead6: add byte ptr [rax], al; test eax, eax; jne 0x3eaf0; mov eax, 1; syscall; 
0x000000000043eba6: add byte ptr [rax], al; test eax, eax; jne 0x3ebc0; mov eax, 3; syscall; 
0x0000000000418676: add byte ptr [rax], al; test eax, eax; lea rdx, [rip + 0x2479f]; lea rax, [rip + 0x24738]; cmovne rax, rdx; ret; 
0x0000000000410d02: add byte ptr [rax], al; test edx, edx; jne 0x10d10; sub dword ptr [rip + 0x9e401], 1; ret; 
0x00000000004727c0: add byte ptr [rax], al; test edx, edx; jne 0x727d0; sub dword ptr [rdi], 1; ret; 
0x000000000040e6d6: add byte ptr [rax], al; test edx, edx; jne 0xe6e8; sub dword ptr [rip + 0xa0a2d], 1; ret; 
0x000000000044d9ae: add byte ptr [rax], al; test esi, esi; je 0x4d9c0; cmp esi, 3; je 0x4d9c0; ret; 
0x000000000047cf3e: add byte ptr [rax], al; test rax, rax; cmovne rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x0000000000401009: add byte ptr [rax], al; test rax, rax; je 0x1012; call rax; 
0x0000000000401009: add byte ptr [rax], al; test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x0000000000401be0: add byte ptr [rax], al; test rax, rax; je 0x1bf0; mov edi, 0x4adb30; jmp rax; 
0x0000000000401c22: add byte ptr [rax], al; test rax, rax; je 0x1c30; mov edi, 0x4adb30; jmp rax; 
0x000000000040fbf6: add byte ptr [rax], al; test rax, rax; je 0xfc0c; mov qword ptr [rax], 0; mov qword ptr [rax + 8], 0; ret; 
0x00000000004403ae: add byte ptr [rax], al; test rdi, rdi; je 0x403ba; test rsi, rsi; jne 0x403c0; ret; 
0x000000000043cdfe: add byte ptr [rax], al; test rdx, rdx; jne 0x3ce09; mov rax, rdi; ret; 
0x00000000004603ee: add byte ptr [rax], al; test rsi, rsi; jne 0x603f9; xor rax, rax; ret; 
0x000000000042037e: add byte ptr [rax], al; tzcnt eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000000042036e: add byte ptr [rax], al; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000004727ce: add byte ptr [rax], al; xchg dword ptr [rdi], eax; cmp eax, 1; jg 0x727d8; ret; 
0x000000000045f468: add byte ptr [rax], al; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000047d075: add byte ptr [rax], al; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000416d9b: add byte ptr [rax], al; xor eax, eax; pop rbx; ret; 
0x0000000000415486: add byte ptr [rax], al; xor eax, eax; pop rdx; pop rbp; pop r12; ret; 
0x000000000040b876: add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043f61e: add byte ptr [rax], al; xor eax, eax; syscall; 
0x000000000043f61e: add byte ptr [rax], al; xor eax, eax; syscall; cmp rax, -0x1000; ja 0x3f630; ret; 
0x000000000047a7fe: add byte ptr [rax], al; xor eax, eax; test r8d, r8d; jne 0x7a70c; add rsp, 0x38; ret; 
0x000000000041fa8e: add byte ptr [rax], al; xor eax, eax; vzeroupper; ret; 
0x000000000043f834: add byte ptr [rax], al; xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x000000000043f68a: add byte ptr [rax], al; xor edi, edi; syscall; 
0x000000000043f68a: add byte ptr [rax], al; xor edi, edi; syscall; cmp rax, -0x1000; ja 0x3f6a0; ret; 
0x0000000000407ade: add byte ptr [rax], al; xor edx, edx; mov rsi, r9; mov edi, 2; mov eax, 0xe; syscall; 
0x000000000045a943: add byte ptr [rax], al; xor edx, edx; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x00000000004094e4: add byte ptr [rax], al; xor esi, esi; mov rdi, rbp; call qword ptr [rbx + 0x10]; 
0x000000000045f2fc: add byte ptr [rax], al; xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x000000000040c1d6: add byte ptr [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x000000000046150e: add byte ptr [rax], al; xor rax, rax; ret; 
0x000000000046105c: add byte ptr [rax], cl; lea rax, [rip + 0x25b]; lea rdx, [rip + 0x34]; cmovne rax, rdx; ret; 
0x000000000047ac1e: add byte ptr [rax], cl; mov byte ptr [rip + 0x34bc9], 8; ret; 
0x000000000047ac17: add byte ptr [rax], cl; mov byte ptr [rip + 0x34bcf], 8; mov byte ptr [rip + 0x34bc9], 8; ret; 
0x000000000047ac10: add byte ptr [rax], cl; mov byte ptr [rip + 0x34bd5], 8; mov byte ptr [rip + 0x34bcf], 8; mov byte ptr [rip + 0x34bc9], 8; ret; 
0x000000000047ac09: add byte ptr [rax], cl; mov byte ptr [rip + 0x34bdb], 8; mov byte ptr [rip + 0x34bd5], 8; mov byte ptr [rip + 0x34bcf], 8; mov byte ptr [rip + 0x34bc9], 8; ret; 
0x000000000047ac25: add byte ptr [rax], cl; ret; 
0x0000000000472fd5: add byte ptr [rax], dl; lea rdx, [rip + 0x112]; lea rax, [rip + 0x6b]; cmovne rax, rdx; ret; 
0x0000000000417c15: add byte ptr [rax], dl; lea rdx, [rip + 0x240a2]; lea rax, [rip + 0x23ffb]; cmovne rax, rdx; ret; 
0x0000000000418485: add byte ptr [rax], dl; lea rdx, [rip - 0x2fe]; lea rax, [rip + 0x232eb]; cmove rax, rdx; ret; 
0x000000000045da0d: add byte ptr [rax], r8b; add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000047f59d: add byte ptr [rax], r8b; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000480535: add byte ptr [rax], r8b; add rsp, 8; ret; 
0x000000000045e925: add byte ptr [rax], r8b; call 0xc130; mov esi, r15d; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x0000000000412815: add byte ptr [rax], r8b; call rax; 
0x00000000004395fd: add byte ptr [rax], r8b; mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; lea rax, [rdi + 2]; ret; 
0x000000000043f8dd: add byte ptr [rax], r8b; mov eax, 0x1c; syscall; 
0x000000000043f8dd: add byte ptr [rax], r8b; mov eax, 0x1c; syscall; cmp rax, -0xfff; jae 0x3f8f0; ret; 
0x000000000046200d: add byte ptr [rax], r8b; mov eax, 0x66; syscall; 
0x000000000046200d: add byte ptr [rax], r8b; mov eax, 0x66; syscall; ret; 
0x000000000043f8ad: add byte ptr [rax], r8b; mov eax, 0xa; syscall; 
0x000000000043f8ad: add byte ptr [rax], r8b; mov eax, 0xa; syscall; cmp rax, -0xfff; jae 0x3f8c0; ret; 
0x0000000000410dad: add byte ptr [rax], r8b; mov eax, 0xffffffff; ret; 
0x000000000043e275: add byte ptr [rax], r8b; mov eax, edx; syscall; 
0x0000000000462335: add byte ptr [rax], r8b; mov ecx, eax; and ecx, dword ptr [rsi + 0x10]; lea rcx, [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000438fed: add byte ptr [rax], r8b; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x000000000047ceb5: add byte ptr [rax], r8b; mov qword ptr [rdi + rsi*8], rdx; add rsp, 8; ret; 
0x0000000000440b3d: add byte ptr [rax], r8b; mov r10, rcx; mov eax, 0x19; syscall; 
0x000000000043e895: add byte ptr [rax], r8b; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000046224d: add byte ptr [rax], r8b; mov rax, -0x40; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x000000000046b4a5: add byte ptr [rax], r8b; mov rax, -0x40; pop rbx; mov eax, dword ptr fs:[rax]; ret; 
0x000000000044f95d: add byte ptr [rax], r8b; mov rax, -0x58; movsxd rdi, edi; mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x00000000004083b5: add byte ptr [rax], r8b; mov rax, qword ptr [rax + 0x18]; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; call rax; 
0x00000000004115cd: add byte ptr [rax], r8b; mov rax, qword ptr [rdi + 0x28]; cmp qword ptr [rdi + 0x10], rax; cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x000000000045e94d: add byte ptr [rax], r8b; mov rax, qword ptr [rdi + 0xa0]; cmp qword ptr [rax + 0x30], 0; je 0x5e960; ret; 
0x000000000041167d: add byte ptr [rax], r8b; mov rax, qword ptr [rdi]; cmp rax, 0x2000000; jbe 0x11690; ret; 
0x000000000041173d: add byte ptr [rax], r8b; mov rax, qword ptr [rdi]; cmp rax, 0x408; jbe 0x11750; ret; 
0x00000000004117ad: add byte ptr [rax], r8b; mov rax, qword ptr [rdi]; cmp rax, 0xa0; jbe 0x117c0; ret; 
0x00000000004116fd: add byte ptr [rax], r8b; mov rax, qword ptr [rdi]; mov dword ptr [rip + 0x9b027], 1; mov qword ptr [rip + 0x9afec], rax; ret; 
0x000000000041172d: add byte ptr [rax], r8b; mov rax, qword ptr [rdi]; mov qword ptr [rip + 0x9afde], rax; ret; 
0x000000000043f74d: add byte ptr [rax], r8b; mov rax, qword ptr [rip + 0x6d9c1]; test rax, rax; je 0x3f75d; ret; 
0x00000000004619bd: add byte ptr [rax], r8b; mov rax, r8; shr rax, 2; vzeroupper; ret; 
0x000000000043966d: add byte ptr [rax], r8b; mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; lea rax, [rdi + 8]; ret; 
0x000000000043904d: add byte ptr [rax], r8b; mov rcx, qword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x000000000043ea9d: add byte ptr [rax], r8b; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x000000000047db75: add byte ptr [rax], r8b; mov rdx, qword ptr [rdx]; mov qword ptr [r8], rdx; add rsp, 8; ret; 
0x000000000043902d: add byte ptr [rax], r8b; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x000000000044ff8d: add byte ptr [rax], r8b; mov rdx, rbp; mov rsi, r12; mov rdi, r15; call rbx; 
0x0000000000450055: add byte ptr [rax], r8b; mov rsi, r15; mov rdi, r12; mov rdx, rbp; call rbx; 
0x000000000043b28d: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi - 0xa]; movzx edx, byte ptr [rsi - 0xa]; sub eax, edx; ret; 
0x000000000043b27d: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi - 0xb]; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x000000000043b26d: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi - 0xc]; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x000000000043b25d: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi - 0xd]; movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x000000000043b24d: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi - 0xe]; movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x000000000043b23d: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi - 0xf]; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x0000000000420a9d: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000000435a4d: add byte ptr [rax], r8b; movzx ecx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x000000000047289d: add byte ptr [rax], r8b; pop rbp; ret; 
0x0000000000401bbd: add byte ptr [rax], r8b; ret; 
0x000000000040ff25: add byte ptr [rax], r8b; sub rcx, rax; lea eax, [rcx - 1]; ret; 
0x000000000045f045: add byte ptr [rax], r8b; sub rcx, rax; sar rcx, 2; lea eax, [rcx - 1]; ret; 
0x000000000044611d: add byte ptr [rax], r8b; sub rsp, 8; call 0x45c30; or dword ptr [rip + 0x692e4], 2; add rsp, 8; ret; 
0x0000000000418675: add byte ptr [rax], r8b; test eax, eax; lea rdx, [rip + 0x2479f]; lea rax, [rip + 0x24738]; cmovne rax, rdx; ret; 
0x000000000044d9ad: add byte ptr [rax], r8b; test esi, esi; je 0x4d9c0; cmp esi, 3; je 0x4d9c0; ret; 
0x000000000042037d: add byte ptr [rax], r8b; tzcnt eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x00000000004727cd: add byte ptr [rax], r8b; xchg dword ptr [rdi], eax; cmp eax, 1; jg 0x727d8; ret; 
0x000000000043d2c5: add byte ptr [rax], r8b; xor eax, eax; pop rbx; ret; 
0x000000000040b875: add byte ptr [rax], r8b; xor eax, eax; ret; 
0x000000000041fa8d: add byte ptr [rax], r8b; xor eax, eax; vzeroupper; ret; 
0x000000000043e846: add byte ptr [rbp + 0x10], dh; add rsp, 0x28; ret; 
0x000000000046d60a: add byte ptr [rbp + 0x10], dh; add rsp, 0x38; ret; 
0x0000000000440d5d: add byte ptr [rbp + 0x10], dh; lea rax, [r8 + 1]; mov qword ptr [rip + 0x6d57d], rax; ret; 
0x0000000000418677: add byte ptr [rbp + 0x158d48c0], al; lahf; add r8b, byte ptr [r8]; lea rax, [rip + 0x24738]; cmovne rax, rdx; ret; 
0x0000000000418509: add byte ptr [rbp + 0x15], dh; and dh, 2; lea rax, [rip + 0x7ffa]; lea rdx, [rip + 0x21af3]; cmovne rax, rdx; ret; 
0x00000000004782c2: add byte ptr [rbp + 0x1b], dh; test rdx, rdx; jne 0x782f0; mov dword ptr [rsi], 0; mov eax, 1; ret; 
0x00000000004621e3: add byte ptr [rbp + 0x1e], dh; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000000407b01: add byte ptr [rbp + 0x20], dh; mov eax, r8d; add rsp, 0x118; ret; 
0x000000000040a652: add byte ptr [rbp + 0x21], dh; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000043d93e: add byte ptr [rbp + 0x23], dh; add rsp, 0x20; pop rbx; ret; 
0x0000000000472db9: add byte ptr [rbp + 0x24], dh; mov rdx, qword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x000000000046cfa0: add byte ptr [rbp + 0x28], dh; add rsp, 0x38; ret; 
0x000000000046d324: add byte ptr [rbp + 0x2c], dh; add rsp, 0x38; ret; 
0x000000000040ccca: add byte ptr [rbp + 0x31], al; dec dword ptr [rax + 0x39]; ret 0x830f; 
0x000000000041211f: add byte ptr [rbp + 0x31], al; in al, 0x5b; pop rbp; mov rax, r12; pop r12; ret; 
0x000000000045f773: add byte ptr [rbp + 0x31], al; in al, 0x5d; mov rax, r12; pop r12; pop r13; ret; 
0x0000000000479a75: add byte ptr [rbp + 0x31], al; jmp qword ptr [rsi - 0x7d]; 
0x000000000041651f: add byte ptr [rbp + 0x31], al; rcr byte ptr [rbp + 0x41], 0x5c; mov rax, r8; pop r13; ret; 
0x000000000043dfec: add byte ptr [rbp + 0x31], al; ror byte ptr [rax - 0x75], 0x74; and al, 0x18; mov rcx, r12; mov rdx, r13; call rbx; 
0x0000000000444177: add byte ptr [rbp + 0x31], al; sal byte ptr [rcx], 0xc9; xor edx, edx; push rax; call rbx; 
0x000000000044d455: add byte ptr [rbp + 0x35], dh; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x0000000000461c6a: add byte ptr [rbp + 0x37], dh; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x0000000000411991: add byte ptr [rbp + 0x39], cl; ret 0xd977; 
0x0000000000461f9e: add byte ptr [rbp + 0x39], dh; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x000000000041652f: add byte ptr [rbp + 0x41], bl; pop rsp; pop r13; jmp rax; 
0x00000000004725ad: add byte ptr [rbp + 0x41], bl; pop rsp; pop r13; ret; 
0x000000000040f951: add byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x000000000047808d: add byte ptr [rbp + 0x41], dh; leave; ret; 
0x000000000043f485: add byte ptr [rbp + 0x43], dh; add rsp, 0x18; ret; 
0x000000000043f52d: add byte ptr [rbp + 0x43], dh; add rsp, 0x58; ret; 
0x000000000043f5cb: add byte ptr [rbp + 0x45], dh; add rsp, 0x58; ret; 
0x000000000044fd0b: add byte ptr [rbp + 0x46], dh; mov eax, r9d; add rsp, 0x148; ret; 
0x00000000004427b3: add byte ptr [rbp + 0x488d48d2], al; or dword ptr [rax + 0xf], ecx; ror dword ptr [r8 - 0x77], 5; ret; 
0x000000000044f30f: add byte ptr [rbp + 0x48], dl; mov eax, dword ptr [rdi + 0x20]; mov rbp, rdi; test rax, rax; je 0x4f31f; call rax; 
0x000000000043f3f6: add byte ptr [rbp + 0x4a], dh; add rsp, 0x68; ret; 
0x00000000004164c0: add byte ptr [rbp + 0x4c], bl; mov eax, eax; pop r12; pop r13; ret; 
0x0000000000409aac: add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x0000000000443b93: add byte ptr [rbp + 0x51], dh; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000000409415: add byte ptr [rbp + 0x55], dh; add rsp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000047a4d8: add byte ptr [rbp + 0xa], dh; add rsp, 0x28; ret; 
0x00000000004786bc: add byte ptr [rbp + 0xa], dh; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000000474305: add byte ptr [rbp + 0xb], dh; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000410942: add byte ptr [rbp + 0xb], dh; sub edx, dword ptr [rax + 0x18]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x0000000000440a19: add byte ptr [rbp + 0xd], dh; add rsp, 0x88; mov rax, r8; pop rbx; pop rbp; ret; 
0x00000000004490b4: add byte ptr [rbp + 0xe880fd2], al; add al, byte ptr [rax]; add bh, dh; ret 0xf800; 
0x000000000047705f: add byte ptr [rbp + 0xf], cl; lodsd eax, dword ptr [rsi]; ret; 
0x0000000000476f4f: add byte ptr [rbp + 0xf], cl; movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000046d03a: add byte ptr [rbp + 0xf], dh; add rsp, 0x38; ret; 
0x0000000000440e46: add byte ptr [rbp + 0xf], dh; mov r8, qword ptr [rip + 0x6d498]; mov rax, r8; ret; 
0x00000000004500cf: add byte ptr [rbp + 1], cl; cld; mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x000000000044ffa7: add byte ptr [rbp + 1], cl; out dx, al; mov rdx, rbp; mov rsi, r14; mov rdi, r12; call rbx; 
0x000000000044fa70: add byte ptr [rbp + 5], dh; add rsp, 0x18; ret; 
0x000000000043f7b9: add byte ptr [rbp + 5], dh; add rsp, 0x28; ret; 
0x0000000000472f25: add byte ptr [rbp + 5], dh; add rsp, 0x38; ret; 
0x00000000004144c7: add byte ptr [rbp + 6], dh; add rsp, 0x10; pop rbp; ret; 
0x000000000046d227: add byte ptr [rbp + 6], dh; add rsp, 0x20; pop rbx; ret; 
0x000000000046d48d: add byte ptr [rbp + 6], dh; add rsp, 0x30; pop rbp; ret; 
0x000000000047ad3b: add byte ptr [rbp + 7], dh; cmp qword ptr [r9 + 0x38], 0; je 0x7ad94; add rsp, 0x18; ret; 
0x0000000000408f73: add byte ptr [rbp + 8], dh; add rsp, 0xd8; ret; 
0x000000000046212e: add byte ptr [rbp + 8], dh; movzx eax, al; add rsp, 0x58; ret; 
0x0000000000443c45: add byte ptr [rbp + 9], dh; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x00000000004229bf: add byte ptr [rbp + rcx*4 + 0x1d], cl; add al, 6; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042562f: add byte ptr [rbp + rcx*4 + 0x1d], cl; cdq; fld dword ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423acf: add byte ptr [rbp + rcx*4 + 0x1d], cl; cmp ebx, esi; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042538f: add byte ptr [rbp + rcx*4 + 0x1d], cl; cmp esp, ebx; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042577f: add byte ptr [rbp + rcx*4 + 0x1d], cl; fadd dword ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042382f: add byte ptr [rbp + rcx*4 + 0x1d], cl; fprem1; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004265ef: add byte ptr [rbp + rcx*4 + 0x1d], cl; fxch st(1); add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042319f: add byte ptr [rbp + rcx*4 + 0x1d], cl; imul edi, esp, 0x63490005; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425f5f: add byte ptr [rbp + rcx*4 + 0x1d], cl; imul edx, eax, 0x63490005; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042358f: add byte ptr [rbp + rcx*4 + 0x1d], cl; jns 0x2358d; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042634f: add byte ptr [rbp + rcx*4 + 0x1d], cl; jns 0x26321; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423256: add byte ptr [rbp + rcx*4 + 0x1d], cl; mov dl, 0xfb; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425e0f: add byte ptr [rbp + rcx*4 + 0x1d], cl; mov ecx, 0x490005d1; movsxd rdx, dword ptr [rbx + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042304f: add byte ptr [rbp + rcx*4 + 0x1d], cl; mov ecx, 0x490005fd; movsxd rdx, dword ptr [rbx + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042397f: add byte ptr [rbp + rcx*4 + 0x1d], cl; mov esp, esi; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425c26: add byte ptr [rbp + rcx*4 + 0x1d], cl; movabs byte ptr [0x49931463490005d3], al; lea edx, [rbx + rdx]; jmp rdx; 
0x0000000000425cbf: add byte ptr [rbp + rcx*4 + 0x1d], cl; or ebx, edx; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422eff: add byte ptr [rbp + rcx*4 + 0x1d], cl; or edi, edi; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004232ef: add byte ptr [rbp + rcx*4 + 0x1d], cl; sbb ebx, edi; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004260af: add byte ptr [rbp + rcx*4 + 0x1d], cl; sbb edi, ecx; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042649f: add byte ptr [rbp + rcx*4 + 0x1d], cl; sub ebx, ecx; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004236df: add byte ptr [rbp + rcx*4 + 0x1d], cl; sub edi, esi; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425a1f: add byte ptr [rbp + rcx*4 + 0x1d], cl; test eax, 0x490005d5; movsxd rdx, dword ptr [rbx + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422c5f: add byte ptr [rbp + rcx*4 + 0x1d], cl; test eax, 0x49000601; movsxd rdx, dword ptr [rbx + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000457143: add byte ptr [rbp + rcx*4 + 0x2c], cl; test dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x0000000000464706: add byte ptr [rbp + rcx*4 + 0x2d], cl; ret 0x30e; 
0x000000000047652e: add byte ptr [rbp + rcx*4 + 4], cl; retf 0xba; add byte ptr [rax], al; add byte ptr [rcx - 0x75], al; or byte ptr [rbp + 0x440f4cc9], al; ret 0x8d48; 
0x0000000000473293: add byte ptr [rbp + rcx*4 + 5], cl; cmc; popfq; cld; dec dword ptr [rax + 0x21]; ret 0x8d48; 
0x000000000041852d: add byte ptr [rbp + rcx*8 + 0x48], dh; lea eax, [rip + 0x83d9]; test byte ptr [rip + 0x96dc7], 1; je 0x184fd; ret; 
0x000000000041852c: add byte ptr [rbp + rcx*8 + 0x48], sil; lea eax, [rip + 0x83d9]; test byte ptr [rip + 0x96dc7], 1; je 0x184fd; ret; 
0x000000000045f2e1: add byte ptr [rbp - 0x14], dh; mov eax, r11d; and eax, 0xc; cmp eax, 4; je 0x5f2f0; ret; 
0x0000000000411f7f: add byte ptr [rbp - 0x17], dh; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000045f27e: add byte ptr [rbp - 0x19], dh; and r11d, 0xffffffbb; cmp r11d, 0xa; je 0x5f28c; ret; 
0x00000000004704f7: add byte ptr [rbp - 0x2dce00b9], cl; div ecx; add r8d, eax; mov eax, r8d; ret; 
0x0000000000440aca: add byte ptr [rbp - 0x3dbbf040], al; ret; 
0x000000000043ead7: add byte ptr [rbp - 0x47eb8a40], al; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000043eba7: add byte ptr [rbp - 0x47eb8a40], al; add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x00000000004626d9: add byte ptr [rbp - 0x617bf040], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000466eff: add byte ptr [rbp - 0x76b7febe], cl; ret 0x8b48; 
0x000000000045b83f: add byte ptr [rbp - 0x77], cl; fimul dword ptr [rcx + 0x29]; ret 0xf4c; 
0x0000000000444101: add byte ptr [rbp - 0x77], cl; int1; mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; call rbx; 
0x0000000000449820: add byte ptr [rbp - 0x77], cl; ret; 
0x000000000044740a: add byte ptr [rbp - 0x7a7bf00a], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4901; 
0x000000000047aa4c: add byte ptr [rbp - 0x7b], al; sal byte ptr [rbp - 0x71], cl; add rsp, 0x38; pop rbx; pop r14; ret; 
0x0000000000459a7e: add byte ptr [rbp - 0x7b], cl; test byte ptr [rdi], 0x84; jmp qword ptr [rdx]; 
0x00000000004726ee: add byte ptr [rbp - 0x7cca8a40], al; sub eax, 0x3cf8e; add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x000000000044d9e7: add byte ptr [rbp - 0x7cdb8140], al; call 0x84762f3; pop rbx; ret; 
0x000000000044d9af: add byte ptr [rbp - 0x7cf38b0a], al; inc byte ptr [rbx]; je 0x4d9c0; ret; 
0x0000000000431c29: add byte ptr [rbx + 0x148b8104], cl; xchg eax, ecx; sub eax, edx; ret; 
0x0000000000410d15: add byte ptr [rbx + 0x17f01f8], al; ret; 
0x000000000040e6ed: add byte ptr [rbx + 0x307f01f8], al; ret; 
0x0000000000444174: add byte ptr [rbx + 0x314500d0], al; sal byte ptr [rcx], 0xc9; xor edx, edx; push rax; call rbx; 
0x000000000040dbaf: add byte ptr [rbx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000043964f: add byte ptr [rbx + 0x3568b0e], cl; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; lea rax, [rdi + 6]; ret; 
0x000000000043901f: add byte ptr [rbx + 0x3568b0e], cl; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; ret; 
0x000000000043ebcc: add byte ptr [rbx + 0x410c247c], cl; mov eax, eax; mov eax, 3; syscall; 
0x000000000047237d: add byte ptr [rbx + 0x44], bl; mov eax, eax; pop rbp; pop r12; ret; 
0x000000000043961f: add byte ptr [rbx + 0x477880e], cl; mov dword ptr [rdi], ecx; lea rax, [rdi + 4]; ret; 
0x0000000000438fff: add byte ptr [rbx + 0x477880e], cl; mov dword ptr [rdi], ecx; ret; 
0x00000000004218e0: add byte ptr [rbx + 0x478bfc4e], cl; cld; cmp ecx, eax; jne 0x222ff; xor eax, eax; ret; 
0x0000000000438b2f: add byte ptr [rbx + 0x48028901], cl; lea eax, [rdx + 3]; ret; 
0x000000000043ebee: add byte ptr [rbx + 0x480c2444], cl; add esp, 0x18; ret; 
0x0000000000402598: add byte ptr [rbx + 0x480c247c], cl; mov esi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000439c5f: add byte ptr [rbx + 0x48178916], cl; lea eax, [rdi + 3]; vzeroupper; ret; 
0x000000000043d30a: add byte ptr [rbx + 0x48], bl; cmove eax, edx; ret; 
0x00000000004161a7: add byte ptr [rbx + 0x4c], bl; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000000424b4f: add byte ptr [rbx + 0x4e8bf956], cl; cld; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000042494f: add byte ptr [rbx + 0x4e8bfa56], cl; cld; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000042474f: add byte ptr [rbx + 0x4e8bfb56], cl; cld; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043b53b: add byte ptr [rbx + 0x4e8bfc47], cl; cld; cmp eax, ecx; jne 0x3b750; xor eax, eax; ret; 
0x0000000000421b42: add byte ptr [rbx + 0x4e8bfc47], cl; cld; cmp ecx, eax; jne 0x222ff; xor eax, eax; ret; 
0x0000000000429b0f: add byte ptr [rbx + 0x5789fc56], cl; cld; ret; 
0x000000000045fdaf: add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000000473ae3: add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000402847: add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000040cad3: add byte ptr [rbx + 0x5d], bl; ret; 
0x000000000047b8df: add byte ptr [rbx + 0x7705087b], al; jb 0x7b872; or byte ptr [r9 + 0x63], cl; add al, 0x87; add rax, r15; jmp rax; 
0x0000000000410cb1: add byte ptr [rbx + 0x9e45b05], al; add byte ptr [rcx], al; pop rbx; ret; 
0x00000000004020b6: add byte ptr [rbx + 0xad1ff15], cl; add dh, dh; ret 0x7408; 
0x000000000040ca94: add byte ptr [rbx + 0xc08b], cl; add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x0000000000473977: add byte ptr [rbx + 0xc], dh; mov rdx, qword ptr [rip + 0x3be37]; add word ptr [rdx + rax*2], 1; ret; 
0x000000000043d7f5: add byte ptr [rbx + 0xd7401f8], al; cmp eax, 2; je 0x3d810; xor eax, eax; ret; 
0x000000000042a1bf: add byte ptr [rbx + 0xe8b0156], cl; mov dword ptr [rdi + 1], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000042a14f: add byte ptr [rbx + 0xe8b0256], cl; mov dword ptr [rdi + 2], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000042a0df: add byte ptr [rbx + 0xe8b0356], cl; mov dword ptr [rdi + 3], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000044026f: add byte ptr [rbx + rcx*4 + 0x42], cl; adc byte ptr [rbp - 0x7b], cl; sal byte ptr [rdi + rdx*2 + 0x4d], 0x89; ret; 
0x0000000000446f1e: add byte ptr [rbx + rcx*4 + 0x4c], cl; and al, 0x18; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000447abe: add byte ptr [rbx + rcx*4 + 0x4c], cl; and al, 0x30; mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044a508: add byte ptr [rbx + rcx*4 + 0x4c], cl; and al, 0x30; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044988b: add byte ptr [rbx + rcx*4 + 0x4c], cl; and al, 0x38; mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000478267: add byte ptr [rbx + rcx*4 + 0x57], cl; or byte ptr [rcx + 0x29], cl; ret 0x894c; 
0x000000000047a687: add byte ptr [rbx + rcx*4 + 0x57], cl; or byte ptr [rcx + 1], cl; ret 0x894c; 
0x000000000040825f: add byte ptr [rbx + rcx*4 + 0x63], cl; or byte ptr [rax - 0x7d], cl; ret; 
0x000000000043ea2f: add byte ptr [rbx + rcx*4 + 4], ah; and eax, 0x18; test eax, eax; jne 0x3ea50; syscall; 
0x0000000000450c6c: add byte ptr [rbx + rcx*4 + 4], cl; ret 0x8d48; 
0x0000000000458627: add byte ptr [rbx + rcx*4 - 0x53], cl; clc; idiv bh; dec dword ptr [rbp + 0x63]; ret 0x8948; 
0x000000000045af50: add byte ptr [rbx - 0x4cf43], al; call qword ptr [rax]; 
0x000000000045b51f: add byte ptr [rbx - 0x50743], al; jmp qword ptr [rax]; 
0x000000000045444d: add byte ptr [rbx - 0x67b7df18], al; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000469f05: add byte ptr [rbx - 0x70f0c005], al; add al, byte ptr [rax + rax]; add byte ptr [rax + 0x63], cl; ret; 
0x00000000004551c8: add byte ptr [rbx - 0x72b7df18], al; cmp eax, 0x544ad; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000455155: add byte ptr [rbx - 0x72b7df18], al; cmp eax, 0x54520; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000453f85: add byte ptr [rbx - 0x72b7df18], al; cmp eax, 0x556f0; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000472d20: add byte ptr [rbx - 0x72b7f7bd], cl; adc eax, 0x256f1; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000438b3f: add byte ptr [rbx - 0x75fd76ff], cl; add al, 0x88; add al, 0x48; lea eax, [rdx + 4]; ret; 
0x000000000043737f: add byte ptr [rbx - 0x75fd76ff], cl; add al, 0x88; add al, 0x48; mov eax, edi; ret; 
0x00000000004095c9: add byte ptr [rbx - 0x76b7ffbb], cl; pop rdi; or byte ptr [rbx - 0x76fefbb9], al; ret 0xe281; 
0x000000000045d137: add byte ptr [rbx - 0x77cdf18], al; sub dword ptr [rdi + 0x10], esi; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000046a13d: add byte ptr [rbx - 0x78f0d008], al; push -0x76ffffff; ret 0xc083; 
0x0000000000451835: add byte ptr [rbx - 0x78f0f807], al; int1; add eax, 0x63480000; or al, 0x8a; add rcx, rdx; jmp rcx; 
0x000000000043b396: add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x000000000040569f: add byte ptr [rbx - 0x7cb7f3be], cl; ret 0x8908; 
0x0000000000472357: add byte ptr [rbx - 0x7cb7fbbd], cl; ret; 
0x000000000045d247: add byte ptr [rbx - 0x7cb7fbbe], cl; ret 0xbe04; 
0x00000000004359a3: add byte ptr [rbx - 0x7cf0fb06], al; ret; 
0x0000000000462337: add byte ptr [rcx + 0x104e23c1], cl; lea rcx, [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000473fc6: add byte ptr [rcx + 0x148b48d8], cl; ret 0xb60f; 
0x000000000040ad3f: add byte ptr [rcx + 0x2b], cl; adc byte ptr [r8 + 1], r9b; ret; 
0x00000000004715da: add byte ptr [rcx + 0x39], cl; ret 0x840f; 
0x0000000000448edd: add byte ptr [rcx + 0x39], cl; ret 0x860f; 
0x000000000046055f: add byte ptr [rcx + 0x39], cl; ret; 
0x000000000040ef26: add byte ptr [rcx + 0x39], cl; ror byte ptr [rdi + rcx + 0x4f], 1; ret 0x8548; 
0x000000000045f9b7: add byte ptr [rcx + 0x39], cl; ror dword ptr [rdi], 1; test byte ptr [rsi], bh; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x00000000004726d8: add byte ptr [rcx + 0x3b3c105], cl; add byte ptr [rcx + 0x63], cl; ror byte ptr [rax - 0x77], 0x5c; ret 0x64c0; 
0x00000000004224ae: add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000420d0c: add byte ptr [rcx + 0x63], cl; or al, 0x93; add rcx, r11; jmp rcx; 
0x0000000000438e78: add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000004726de: add byte ptr [rcx + 0x63], cl; ror byte ptr [rax - 0x77], 0x5c; ret 0x64c0; 
0x0000000000457a5f: add byte ptr [rcx + 0xf], al; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0000000000411b25: add byte ptr [rcx + 1], al; adc eax, dword ptr [rbp + 1]; sbb byte ptr [r8 + 0x39], cl; ret; 
0x000000000040a19f: add byte ptr [rcx + 1], cl; ret; 
0x00000000004084aa: add byte ptr [rcx + r15 - 0x1d], cl; jae 0x84c3; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000046b1f8: add byte ptr [rcx + rax - 0x10], dh; inc dword ptr [r8 + 0x10]; pop rbx; pop rbp; ret; 
0x000000000047b152: add byte ptr [rcx + rax - 0x18], cl; jmp rax; 
0x000000000043f5ac: add byte ptr [rcx + rbp - 0x48], dh; add dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x000000000046abb2: add byte ptr [rcx + rbp*8], dl; ret; 
0x0000000000402af6: add byte ptr [rcx + rcx*4 + 0x2d], cl; ret 0xab7; 
0x000000000046ad0f: add byte ptr [rcx + rcx*4 + 0xd], cl; adc dword ptr [rcx + 4], ecx; add byte ptr [rcx], bh; ret 0x373; 
0x00000000004800c7: add byte ptr [rcx + rcx*4 - 0x11], cl; call rbx; 
0x00000000004166b7: add byte ptr [rcx + rcx*4 - 0x11], cl; mov eax, 0xca; syscall; 
0x0000000000460f56: add byte ptr [rcx + rcx*4 - 0x16], cl; mov r9, qword ptr [rsp + 0x10]; mov rdi, rbp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x000000000043e16b: add byte ptr [rcx + rcx*4 - 0x16], cl; mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; mov rdi, rbp; call rbx; 
0x0000000000479847: add byte ptr [rcx + rcx*4 - 0x16], cl; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x000000000045228d: add byte ptr [rcx + rcx*4 - 0x16], cl; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000460e0d: add byte ptr [rcx + rcx*4 - 0x16], cl; xor r8d, r8d; mov rdi, rbp; lea r9, [rsp + 0x30]; call rbx; 
0x00000000004163c5: add byte ptr [rcx + rcx*4 - 0x19], cl; mov eax, 0xca; syscall; 
0x0000000000461ad7: add byte ptr [rcx + rcx*4 - 0x1a], cl; mov edi, ebp; mov eax, 0xe4; syscall; 
0x000000000045283d: add byte ptr [rcx + rcx*4 - 0x1e], cl; mov rsi, r13; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x0000000000443b9c: add byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x0000000000409578: add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000045f75c: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x000000000046a3b0: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000040c01a: add byte ptr [rcx + rcx*4 - 0x30], al; syscall; 
0x000000000047a70b: add byte ptr [rcx + rcx*4 - 0x39], al; mov qword ptr [rsp], rax; call 0x7ab30; mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000044fdcc: add byte ptr [rcx + rcx*4 - 0x3a], cl; mov eax, 0xe; syscall; 
0x000000000040c00f: add byte ptr [rcx + rcx*4 - 0x3e], cl; mov rsi, rbx; mov edi, 2; mov eax, r10d; syscall; 
0x000000000045fefd: add byte ptr [rcx + rcx*4 - 0x40], al; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000044d33c: add byte ptr [rcx + rcx*4 - 0x40], al; pop rbp; pop r12; ret; 
0x000000000040941e: add byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x0000000000408618: add byte ptr [rcx + rcx*4 - 0x40], cl; add qword ptr [rip + 0xa669c], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000406aef: add byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; pop rbp; pop r12; ret; 
0x0000000000440a22: add byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; pop rbp; ret; 
0x0000000000440e4f: add byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x0000000000461902: add byte ptr [rcx + rcx*4 - 0x40], cl; shr rax, 2; vzeroupper; ret; 
0x00000000004607bf: add byte ptr [rcx + rcx*4 - 0x40], cl; vzeroupper; ret; 
0x0000000000407d87: add byte ptr [rcx + rcx*4 - 0xe], cl; mov rax, qword ptr [rsp + 8]; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000045e82f: add byte ptr [rcx + rcx*4 - 2], al; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x0000000000450057: add byte ptr [rcx + rcx*4 - 2], cl; mov rdi, r12; mov rdx, rbp; call rbx; 
0x000000000040d4ed: add byte ptr [rcx + rcx*4 - 6], cl; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x00000000004084ab: add byte ptr [rcx + rdi - 0x1d], cl; jae 0x84c3; nop dword ptr [rax]; call qword ptr [rbx]; 
0x0000000000440df7: add byte ptr [rcx + rdi - 0x40], cl; ja 0x40e08; add rsp, 8; ret; 
0x0000000000441af4: add byte ptr [rcx + rdx + 0x48], dh; test edx, edx; je 0x41b08; lea rdi, [rcx + rsi + 0x20]; jmp rdx; 
0x000000000046ef88: add byte ptr [rcx - 0x1237b], cl; ljmp [rcx]; ret; 
0x0000000000415fd6: add byte ptr [rcx - 0x14faf028], cl; ret 0x1f0f; 
0x0000000000461f69: add byte ptr [rcx - 0x173fce11], cl; sub eax, 0x89fffdd4; ret 0xf883; 
0x000000000045ef8f: add byte ptr [rcx - 0x17f3db8c], cl; xchg eax, edi; sar edx, 1; dec dword ptr [rbx - 0x14f3db8c]; ret; 
0x000000000040839b: add byte ptr [rcx - 0x353eb712], cl; adc dword ptr [rax + rcx*2 + 0x33], esp; adc al, 0x25; xor byte ptr [rax], al; add byte ptr [rax], al; call rdx; 
0x000000000040cd0c: add byte ptr [rcx - 0x39], cl; mov byte ptr [rax + 0x48004adb], 0xc7; ret; 
0x0000000000459c87: add byte ptr [rcx - 0x39], cl; ret; 
0x000000000044fc34: add byte ptr [rcx - 0x46], al; or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xd; syscall; 
0x000000000041349d: add byte ptr [rcx - 0x73], cl; dec dword ptr [r9 - 0x7b]; ret; 
0x0000000000414e63: add byte ptr [rcx - 0x73], cl; push rbp; and byte ptr [rax + 0x39], cl; ret 0x860f; 
0x0000000000476537: add byte ptr [rcx - 0x75], al; or byte ptr [rbp + 0x440f4cc9], al; ret 0x8d48; 
0x0000000000407c60: add byte ptr [rcx - 0x75], cl; cmp al, 0x24; mov rdx, r14; mov rax, qword ptr [rsp + 8]; call rax; 
0x00000000004520c0: add byte ptr [rcx - 0x75], cl; ja 0x520dd; mov rdx, qword ptr [r15 + 0x20]; mov rdi, r14; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x0000000000407c5c: add byte ptr [rcx - 0x75], cl; jne 0x7c61; mov rdi, qword ptr [r12]; mov rdx, r14; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000459b79: add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x00000000004541c5: add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x000000000046de97: add byte ptr [rcx - 0x75], cl; test byte ptr [rax], ah; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; ret 0x22; 
0x000000000046f21f: add byte ptr [rcx - 0x75], cl; test byte ptr [rax], ah; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x000000000040a83d: add byte ptr [rcx - 0x75], cl; xchg eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x0000000000411b49: add byte ptr [rcx - 0x77], al; imul esp, dword ptr [rbx*2 + 0x10438941], 0x41; mov dword ptr [rbx + 0x14], 0; ret; 
0x000000000045f267: add byte ptr [rcx - 0x77], al; ret; 
0x00000000004018a3: add byte ptr [rcx - 0x77], al; rol dword ptr [rcx - 0x77], cl; ret 0x8341; 
0x000000000040c1c9: add byte ptr [rcx - 0x77], cl; call 0xffffffffceebd55c; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000406c8f: add byte ptr [rcx - 0x77], cl; fisttp word ptr [rax - 0x7d]; ret; 
0x000000000044f573: add byte ptr [rcx - 0x77], cl; ret 0x850f; 
0x0000000000417dcf: add byte ptr [rcx - 0x77], cl; ret 0x8948; 
0x00000000004117f5: add byte ptr [rcx - 0x77], cl; ret 0xc148; 
0x00000000004681fe: add byte ptr [rcx - 0x77], cl; ret; 
0x00000000004586f7: add byte ptr [rcx - 0x7d], al; out dx, al; add dword ptr [rax - 0x92f43], eax; jmp qword ptr [rax]; 
0x000000000046f0aa: add byte ptr [rcx - 0x7d], al; out dx, eax; add dword ptr [rax + 0x39], ecx; ret; 
0x000000000046ded9: add byte ptr [rcx - 0x7d], al; out dx, eax; add eax, dword ptr [rbp - 0x7b]; dec dword ptr [rdi]; lahf; ret 0x87e; 
0x0000000000441677: add byte ptr [rcx - 0x7d], al; ret 0x4901; 
0x0000000000414b47: add byte ptr [rcx - 0x7d], al; ret; 
0x000000000043e05f: add byte ptr [rcx - 0x7d], cl; out dx, eax; add dword ptr [rbp - 0x57c03b0], ecx; add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xc085; 
0x000000000041a20f: add byte ptr [rcx - 0x7d], cl; ret 0x7f10; 
0x0000000000418b1f: add byte ptr [rcx - 0x7d], cl; ret 0xf10; 
0x0000000000451c8d: add byte ptr [rcx - 0x7d], cl; ret; 
0x000000000045433c: add byte ptr [rcx - 0x80], al; call qword ptr [rbx + 0xf]; 
0x000000000044e7ae: add byte ptr [rcx - 0x8373], cl; dec dword ptr [rcx + 1]; ret 0x8d48; 
0x000000000046035b: add byte ptr [rcx - 0x876b730], cl; bsr eax, eax; lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x0000000000401d3c: add byte ptr [rcx - 1], al; sar byte ptr [rax], 1; leave; ret; 
0x0000000000420532: add byte ptr [rcx - 9], cl; ret 1; 
0x0000000000420558: add byte ptr [rcx - 9], cl; ret 2; 
0x0000000000411708: add byte ptr [rcx], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0x9afec; ret; 
0x00000000004116d8: add byte ptr [rcx], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0x9b024; ret; 
0x000000000043d1f0: add byte ptr [rcx], al; add byte ptr [rax], al; cmp rdx, rcx; jne 0x3d1d2; vzeroupper; ret; 
0x000000000043bcaf: add byte ptr [rcx], al; add byte ptr [rax], al; sub rax, rdx; ret; 
0x00000000004178f5: add byte ptr [rcx], al; add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000408622: add byte ptr [rcx], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000043f5a5: add byte ptr [rcx], al; cmp eax, 0x410000; je 0x3f5d8; mov eax, 0x101; syscall; 
0x000000000041853c: add byte ptr [rcx], al; je 0x184fd; ret; 
0x000000000043f5aa: add byte ptr [rcx], al; je 0x3f5d8; mov eax, 0x101; syscall; 
0x00000000004726f8: add byte ptr [rcx], al; mov eax, r8d; pop rbx; ret; 
0x0000000000472451: add byte ptr [rcx], al; pop r12; ret; 
0x0000000000401c6b: add byte ptr [rcx], al; pop rbp; ret; 
0x0000000000470574: add byte ptr [rcx], al; pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000004168d2: add byte ptr [rcx], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000410cb7: add byte ptr [rcx], al; pop rbx; ret; 
0x000000000040e6e1: add byte ptr [rcx], al; ret; 
0x00000000004508f1: add byte ptr [rcx], al; xor eax, eax; add rsp, 8; ret; 
0x000000000046ad16: add byte ptr [rcx], bh; ret 0x373; 
0x0000000000468945: add byte ptr [rcx], bh; ret 0x850f; 
0x0000000000413706: add byte ptr [rcx], bh; ret 0xa7e; 
0x0000000000442c33: add byte ptr [rcx], bh; ret; 
0x000000000046cac4: add byte ptr [rcx], ch; ret 0x8d4d; 
0x000000000044543a: add byte ptr [rcx], dh; div byte ptr [rcx]; jmp qword ptr [rsi + 0xf]; 
0x000000000045f469: add byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000415487: add byte ptr [rcx], dh; rcr byte ptr [rdx + 0x5d], 0x41; pop rsp; ret; 
0x000000000041fe3c: add byte ptr [rcx], dh; rol bl, 0x83; ret 0x6620; 
0x000000000047a7ff: add byte ptr [rcx], dh; rol byte ptr [rbp - 0x7b], 0xc0; jne 0x7a70c; add rsp, 0x38; ret; 
0x000000000044f588: add byte ptr [rcx], dh; ror byte ptr [rax - 0x77], cl; fldpi; or ecx, dword ptr [rax - 0x7d]; ret 0x8301; 
0x0000000000469638: add byte ptr [rcx], dh; ror byte ptr [rbp - 0x7b], cl; dec dword ptr [rax - 0x77]; mov r8b, 0xf; xchg eax, ebp; ret 0x2148; 
0x0000000000407adf: add byte ptr [rcx], dh; ror byte ptr [rcx + rcx*4 - 0x32], cl; mov edi, 2; mov eax, 0xe; syscall; 
0x000000000043f61f: add byte ptr [rcx], dh; ror byte ptr [rdi], 5; cmp rax, -0x1000; ja 0x3f630; ret; 
0x000000000040dc6f: add byte ptr [rcx], dh; shl byte ptr [rbx + rax*4 + 0x7d], 0; sbb eax, 0xe6ebe074; nop dword ptr [rax + rax]; xor eax, eax; ret; 
0x0000000000461fd5: add byte ptr [rcx], dh; shr bl, 0xb4; call 0x40bb0; nop; mov eax, 0x3f; syscall; 
0x00000000004094e5: add byte ptr [rcx], dh; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbx + 0x10]; 
0x000000000040dc6e: add byte ptr [rcx], sil; shl byte ptr [rbx + rax*4 + 0x7d], 0; sbb eax, 0xe6ebe074; nop dword ptr [rax + rax]; xor eax, eax; ret; 
0x000000000043d132: add byte ptr [rdi + 0x12], dh; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x00000000004727cf: add byte ptr [rdi + 0x1f88307], al; jg 0x727d8; ret; 
0x000000000043e46d: add byte ptr [rdi + 0x78], dh; lea rdx, [rip + 0x45f25]; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x000000000043d0d2: add byte ptr [rdi + 0x7b], dh; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000040e6e7: add byte ptr [rdi + 0xa0a2205], al; add byte ptr [rbx + 0x307f01f8], al; ret; 
0x000000000047cd21: add byte ptr [rdi + 1], bh; call rax; 
0x0000000000473cb9: add byte ptr [rdi + rcx + 0x44], cl; ret 0xb0eb; 
0x000000000040e01a: add byte ptr [rdi + rcx - 0x42], cl; ret 0x4a8d; 
0x000000000047ad42: add byte ptr [rdi + rcx*2 + 0x48], dh; add esp, 0x18; ret; 
0x000000000047511a: add byte ptr [rdi + rdx + 0x48], dh; add esp, 8; mov eax, 1; pop rbx; pop rbp; ret; 
0x000000000043c096: add byte ptr [rdi], cl; adc byte ptr [rsi], al; movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000042a3b4: add byte ptr [rdi], cl; adc dword ptr [rbp + 0x4c000000], -0x73; sbb eax, 0x592ce; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000411663: add byte ptr [rdi], cl; add eax, 0x1f0fdfeb; test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000407ac0: add byte ptr [rdi], cl; add eax, 0x8944c689; ret 0xeab8; 
0x0000000000409828: add byte ptr [rdi], cl; add eax, 0x8949a3eb; shr cl, 0x25; jnp 0x9833; jmp qword ptr [rsi + 0x2e]; 
0x00000000004096f4: add byte ptr [rdi], cl; add eax, 0xfffdc2e9; dec dword ptr [rcx - 0x77]; shr cl, 0xff; jnp 0x9702; jmp qword ptr [rsi + 0x2e]; 
0x0000000000417a29: add byte ptr [rdi], cl; add eax, 0xfffec6e9; jmp qword ptr [rsi + 0x66]; 
0x0000000000414022: add byte ptr [rdi], cl; add eax, 0xfffee2e9; jmp qword ptr [rsi + 0xf]; 
0x0000000000406516: add byte ptr [rdi], cl; add eax, 0xfffefbe9; jmp qword ptr [rsi - 0x70]; 
0x0000000000415ec2: add byte ptr [rdi], cl; add eax, 0xffff01e9; jmp qword ptr [rsi + 0xf]; 
0x0000000000408442: add byte ptr [rdi], cl; add eax, 0xffff28e9; jmp qword ptr [rsi + 0xf]; 
0x000000000045dbd6: add byte ptr [rdi], cl; add eax, 0xffff3be9; dec dword ptr [rcx - 0x77]; shr cl, 0x8a; cmp edx, edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000040e75c: add byte ptr [rdi], cl; add eax, 0xffff50e9; jmp qword ptr [rsi + 0x66]; 
0x00000000004145ca: add byte ptr [rdi], cl; add eax, 0xffff68e9; jmp qword ptr [rsi + 0x66]; 
0x00000000004292d6: add byte ptr [rdi], cl; cmp dword ptr [rbx - 1], -1; dec dword ptr [rax - 0x7f]; ret 0x80; 
0x0000000000439c2f: add byte ptr [rdi], cl; mov bh, 0x16; mov word ptr [rdi], dx; lea rax, [rdi + 1]; vzeroupper; ret; 
0x000000000042a30f: add byte ptr [rdi], cl; mov bh, 0x16; mov word ptr [rdi], dx; ret; 
0x0000000000435a3f: add byte ptr [rdi], cl; mov bh, 0x16; mov word ptr [rdi], dx; vzeroupper; ret; 
0x0000000000435a4f: add byte ptr [rdi], cl; mov bh, 0xe; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x000000000042a37f: add byte ptr [rdi], cl; mov dh, 0x16; mov byte ptr [rdi], dl; ret; 
0x000000000040df0e: add byte ptr [rdi], cl; mov dh, 0x42; add dword ptr [rax - 0x7d], ecx; ret 0x3c01; 
0x00000000004060af: add byte ptr [rdi], cl; mov dh, 0x42; add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x0000000000406c47: add byte ptr [rdi], cl; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000046c4c9: add byte ptr [rdi], cl; mov dh, 0x45; add cl, byte ptr [rax - 0x7d]; ret; 
0x0000000000443d23: add byte ptr [rdi], cl; mov dh, 0x47; adc byte ptr [rdi], cl; xchg eax, ebp; ret; 
0x000000000043b27f: add byte ptr [rdi], cl; mov dh, 0x47; cmc; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x000000000043b26f: add byte ptr [rdi], cl; mov dh, 0x47; hlt; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x000000000043b23f: add byte ptr [rdi], cl; mov dh, 0x47; int1; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x000000000043b25f: add byte ptr [rdi], cl; mov dh, 0x47; movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x000000000043b24f: add byte ptr [rdi], cl; mov dh, 0x47; movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x0000000000448d4f: add byte ptr [rdi], cl; mov dh, 0x50; dec dword ptr [rcx - 0x7d]; ret; 
0x000000000040607f: add byte ptr [rdi], cl; mov dh, 0x53; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000470d1f: add byte ptr [rdi], cl; mov dh, 0x53; or al, 0xf6; ret 0xf01; 
0x000000000045d3ff: add byte ptr [rdi], cl; mov dh, 0x53; or al, 0xf6; ret 0xf04; 
0x0000000000447629: add byte ptr [rdi], cl; mov dh, 0x78; inc dword ptr [rax - 0x78]; jl 0x47643; add ecx, dword ptr [rcx + 0x39]; ret 0xe075; 
0x000000000045cb96: add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000047ae1d: add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000043d34f: add byte ptr [rdi], cl; mov dh, 0xc1; pop rbx; ret; 
0x0000000000419dbf: add byte ptr [rdi], cl; mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000041fa9f: add byte ptr [rdi], cl; mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x0000000000420a9f: add byte ptr [rdi], cl; mov dh, 7; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x00000000004205df: add byte ptr [rdi], cl; mov dh, 7; movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x000000000041fe6f: add byte ptr [rdi], cl; mov esp, 0x448d48c0; cmp al, dh; ret; 
0x000000000041fe9f: add byte ptr [rdi], cl; mov esp, 0x448d48c0; cmp byte ptr [rax], ah; ret; 
0x000000000041fe8f: add byte ptr [rdi], cl; mov esp, 0x448d48c0; cmp byte ptr [rax], dl; ret; 
0x000000000041feaf: add byte ptr [rdi], cl; mov esp, 0xc22948c0; jbe 0x1fef0; add rax, rdi; ret; 
0x000000000041febf: add byte ptr [rdi], cl; mov esp, 0xc22948c0; jbe 0x1fef0; lea rax, [rdi + rax + 0x10]; ret; 
0x000000000047359f: add byte ptr [rdi], cl; mov esp, 0xc22948c0; jbe 0x735e0; add rax, rdi; ret; 
0x00000000004735af: add byte ptr [rdi], cl; mov esp, 0xc22948c0; jbe 0x735e0; lea rax, [rdi + rax + 0x10]; ret; 
0x000000000041fe7f: add byte ptr [rdi], cl; mov esp, 0xf80148c0; ret; 
0x0000000000475c19: add byte ptr [rdi], cl; test byte ptr [rax + rax - 0x76b40000], cl; dec dword ptr [rax - 0x7d]; ret; 
0x00000000004023d3: add byte ptr [rdi], cl; test dh, bh; add dword ptr [rax], eax; add byte ptr [rax - 0x39], cl; ret; 
0x000000000046ec9a: add byte ptr [rdi], cl; test dword ptr [rcx - 0x16000004], edx; ret; 
0x000000000046d116: add byte ptr [rdi], cl; test dword ptr [rdx + 0x48000000], ecx; add esp, 0x48; ret; 
0x000000000044981a: add byte ptr [rdi], cl; xchg bh, bl; add byte ptr [rax], al; add byte ptr [rbp - 0x77], cl; ret; 
0x0000000000441f8b: add byte ptr [rdi], cl; xchg eax, ebp; ret 0x8348; 
0x000000000044275c: add byte ptr [rdi], cl; xchg eax, ebp; ret 0x8d48; 
0x0000000000402876: add byte ptr [rdi], cl; xchg eax, ebp; ret; 
0x0000000000409557: add byte ptr [rdi], cl; xchg eax, esp; ret 0x3948; 
0x000000000044273b: add byte ptr [rdi], cl; xchg eax, esp; ret 0x8d48; 
0x000000000043733f: add byte ptr [rdx + 0x48028801], cl; mov eax, edi; ret; 
0x0000000000468227: add byte ptr [rdx + 0x63], cl; add al, 0xa6; add rax, rsi; jmp rax; 
0x0000000000468ad4: add byte ptr [rdx + 0x63], cl; add al, 0xa7; add rax, rdi; jmp rax; 
0x000000000044ee37: add byte ptr [rdx + 0x63], cl; or al, 0x8f; add rcx, rdi; jmp rcx; 
0x0000000000440ac5: add byte ptr [rdx + 0x64], bh; test eax, eax; cmove eax, edx; ret; 
0x000000000041287b: add byte ptr [rdx + rdx + 0x48], dh; mov dword ptr [rdx + 0x28], ecx; mov rax, qword ptr [rdi + 0x28]; mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x0000000000410d83: add byte ptr [rdx + rdx + 0x48], dh; mov eax, dword ptr [rdi + 8]; cmp rax, rdx; jae 0x10db0; movzx eax, byte ptr [rax]; ret; 
0x000000000043f503: add byte ptr [rdx + rsi + 0x44], dh; mov edx, eax; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000044e389: add byte ptr [rdx - 0x75], cl; add al, 0xf0; test rax, rax; je 0x4e395; call rax; 
0x000000000044fa27: add byte ptr [rdx], al; add byte ptr [rax], al; mov qword ptr fs:[rdx], rax; ret; 
0x000000000044612e: add byte ptr [rdx], al; add rsp, 8; ret; 
0x0000000000411687: add byte ptr [rdx], al; jbe 0x11690; ret; 
0x00000000004187cc: add byte ptr [rdx], al; lea rax, [rip + 0x1d3eb]; lea rdx, [rip + 0x1ec74]; cmovne rax, rdx; ret; 
0x0000000000417bec: add byte ptr [rdx], al; lea rax, [rip + 0x1deeb]; lea rdx, [rip + 0x1e0a4]; cmovne rax, rdx; ret; 
0x0000000000417b8c: add byte ptr [rdx], al; lea rax, [rip + 0xdfb]; lea rdx, [rip + 0x24e4]; cmovne rax, rdx; ret; 
0x00000000004188ed: add byte ptr [rdx], al; lea rdx, [rip + 0x2378a]; lea rax, [rip + 0x23823]; cmove rax, rdx; ret; 
0x000000000041876d: add byte ptr [rdx], al; lea rdx, [rip + 0x238fa]; lea rax, [rip + 0x23993]; cmove rax, rdx; ret; 
0x00000000004185fd: add byte ptr [rdx], al; lea rdx, [rip + 0x23a7a]; lea rax, [rip + 0x23b13]; cmove rax, rdx; ret; 
0x0000000000418873: add byte ptr [rdx], al; lea rdx, [rip + 0x23bb4]; lea rax, [rip + 0x23bed]; cmove rax, rdx; ret; 
0x00000000004186f3: add byte ptr [rdx], al; lea rdx, [rip + 0x23d24]; lea rax, [rip + 0x23d5d]; cmove rax, rdx; ret; 
0x0000000000418583: add byte ptr [rdx], al; lea rdx, [rip + 0x23ea4]; lea rax, [rip + 0x23edd]; cmove rax, rdx; ret; 
0x00000000004188cd: add byte ptr [rdx], al; lea rdx, [rip + 0x23f8a]; lea rax, [rip + 0x23fd3]; cmove rax, rdx; ret; 
0x000000000041874d: add byte ptr [rdx], al; lea rdx, [rip + 0x240fa]; lea rax, [rip + 0x24143]; cmove rax, rdx; ret; 
0x00000000004186a1: add byte ptr [rdx], al; lea rdx, [rip + 0x24a06]; lea rax, [rip + 0x24a5f]; cmove rax, rdx; ret; 
0x0000000000417ae8: add byte ptr [rdx], bh; cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x000000000047cf3c: add byte ptr [rdx], ch; add byte ptr [rax], al; test rax, rax; cmovne rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x00000000004731e8: add byte ptr [rdx], dl; jae 0x731e0; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000000042b637: add byte ptr [rip + 0x14634900], 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043f5a7: add byte ptr [rip + 0x410000], bh; je 0x3f5d8; mov eax, 0x101; syscall; 
0x000000000043f5a6: add byte ptr [rip + 0x410000], dil; je 0x3f5d8; mov eax, 0x101; syscall; 
0x000000000042231f: add byte ptr [rip + 0xff], ah; and ecx, 0xff; sub eax, ecx; ret; 
0x000000000042231e: add byte ptr [rip + 0xff], spl; and ecx, 0xff; sub eax, ecx; ret; 
0x0000000000421a52: add byte ptr [rip + 0xffff], ah; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000000471bbf: add byte ptr [rip - 0x101b17], ch; jmp qword ptr [rsi + 0x2e]; 
0x000000000040dc75: add byte ptr [rip - 0x19141f8c], bl; nop dword ptr [rax + rax]; xor eax, eax; ret; 
0x0000000000442c65: add byte ptr [rsi + 0x2e], ah; nop dword ptr [rax + rax]; ret; 
0x0000000000411659: add byte ptr [rsi + 0x80], bh; mov eax, 0xca; syscall; 
0x000000000045f307: add byte ptr [rsi + 0x80], bh; syscall; 
0x000000000047273c: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x3cf3a]; syscall; 
0x00000000004724b8: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x3d1ba]; syscall; 
0x00000000004705cc: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x3f092]; syscall; 
0x000000000045092c: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x5eca2]; syscall; 
0x0000000000450867: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x5ed67]; syscall; 
0x00000000004506ca: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x5ef04]; syscall; 
0x00000000004505fb: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x5efd3]; syscall; 
0x000000000044537c: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x6a04a]; syscall; 
0x0000000000445210: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x6a1b6]; syscall; 
0x0000000000445118: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x6a2ae]; syscall; 
0x000000000043ddb4: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x71612]; syscall; 
0x0000000000417a18: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x94d76]; syscall; 
0x0000000000415d00: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x96a8e]; syscall; 
0x0000000000415cc8: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x96ac6]; syscall; 
0x00000000004157a8: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x96fe6]; syscall; 
0x0000000000415464: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9732a]; syscall; 
0x0000000000416923: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9885b]; syscall; 
0x0000000000413d94: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x989fa]; syscall; 
0x0000000000413d64: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x98a2a]; syscall; 
0x0000000000415ffc: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x99172]; syscall; 
0x0000000000414332: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9ae4c]; syscall; 
0x00000000004142b6: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9aeb8]; syscall; 
0x0000000000414011: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9b16d]; syscall; 
0x0000000000412174: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9d00a]; syscall; 
0x0000000000410d23: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9e3db]; syscall; 
0x0000000000410d23: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9e3db]; syscall; ret; 
0x000000000041082a: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9e8d4]; syscall; 
0x00000000004104df: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9ec1f]; syscall; 
0x000000000041019c: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0x9ef62]; syscall; 
0x000000000040ee96: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa0268]; syscall; 
0x000000000040ebd6: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa0528]; syscall; 
0x000000000040e72a: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa09d4]; syscall; 
0x000000000040e72a: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa09d4]; syscall; ret; 
0x0000000000409698: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa5d2e]; syscall; 
0x0000000000408767: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa654f]; syscall; 
0x0000000000408540: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa6776]; syscall; 
0x0000000000408505: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa67b1]; syscall; 
0x0000000000408431: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa6885]; syscall; 
0x0000000000406505: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa8751]; syscall; 
0x0000000000404c32: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xa9fec]; syscall; 
0x0000000000403c49: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xaaf25]; syscall; 
0x0000000000403c20: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xaaf4e]; syscall; 
0x0000000000403b17: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xab057]; syscall; 
0x00000000004011f9: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xada75]; syscall; 
0x000000000040134b: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; syscall; 
0x00000000004727df: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; syscall; ret; 
0x0000000000415fd1: add byte ptr [rsi + 0x81], bh; mov eax, ebx; syscall; 
0x00000000004163c0: add byte ptr [rsi + 0x81], bh; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004166b2: add byte ptr [rsi + 0x81], bh; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000412e06: add byte ptr [rsi + 0x81], bh; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000416c71: add byte ptr [rsi + 0x81], bh; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000004173d7: add byte ptr [rsi + 0x81], bh; mov rdi, rcx; mov eax, 0xca; syscall; 
0x000000000043bd07: add byte ptr [rsi + 0xf], ah; cmp byte ptr [rax], al; ret 0xf66; 
0x0000000000421014: add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000047354b: add byte ptr [rsi + 0xf], ah; jbe 0x7359f; adc byte ptr [rsi + 0xf], ah; xlatb; rol dword ptr [rbp + 0x315775c0], 0xc0; ret; 
0x000000000041fe5b: add byte ptr [rsi + 0xf], ah; je 0x1feaf; adc byte ptr [rsi + 0xf], ah; xlatb; rol dword ptr [rbp + 0x315775c0], 0xc0; ret; 
0x000000000046db88: add byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x000000000041fda4: add byte ptr [rsi + 0xf], ah; xlatb; ret 0xc085; 
0x0000000000411748: add byte ptr [rsi + 5], dh; ret; 
0x000000000040c12d: add byte ptr [rsi - 0x70], ah; cmp qword ptr [rip + 0x9fe80], 0; je 0xc13b; ret; 
0x0000000000438aed: add byte ptr [rsi - 0x70], ah; mov al, byte ptr [rcx]; mov byte ptr [rdx], al; lea rax, [rdx]; ret; 
0x00000000004614dd: add byte ptr [rsi - 0x70], ah; mov ch, dh; and ch, 0xf; je 0x61500; add rax, 2; ret; 
0x0000000000438fcd: add byte ptr [rsi - 0x70], ah; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x00000000004738fd: add byte ptr [rsi - 0x70], ah; mov eax, 0x27; syscall; 
0x00000000004738fd: add byte ptr [rsi - 0x70], ah; mov eax, 0x27; syscall; ret; 
0x0000000000440b6d: add byte ptr [rsi - 0x70], ah; mov eax, 0x63; syscall; 
0x0000000000440b6d: add byte ptr [rsi - 0x70], ah; mov eax, 0x63; syscall; cmp rax, -0xfff; jae 0x40b80; ret; 
0x0000000000410c1d: add byte ptr [rsi - 0x70], ah; mov eax, 0xffffffff; ret; 
0x000000000043f64d: add byte ptr [rsi - 0x70], ah; mov eax, 1; syscall; 
0x000000000043f64d: add byte ptr [rsi - 0x70], ah; mov eax, 1; syscall; cmp rax, -0x1000; ja 0x3f660; ret; 
0x0000000000440abd: add byte ptr [rsi - 0x70], ah; mov eax, dword ptr [rip + 0x6e75a]; mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x0000000000410c5d: add byte ptr [rsi - 0x70], ah; mov rax, qword ptr [rdi + 0x68]; ret; 
0x000000000043926d: add byte ptr [rsi - 0x70], ah; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x000000000043922d: add byte ptr [rsi - 0x70], ah; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x000000000043924d: add byte ptr [rsi - 0x70], ah; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x000000000043973d: add byte ptr [rsi - 0x70], ah; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; lea rax, [rdi + 0xf]; ret; 
0x0000000000440bed: add byte ptr [rsi - 0x70], ah; ret; 
0x000000000046089d: add byte ptr [rsi - 0x70], ah; tzcnt eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000043734f: add byte ptr [rsi - 0x75], ah; add dword ptr [rsi - 0x77], esp; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x000000000043735f: add byte ptr [rsi - 0x75], ah; add dword ptr [rsi - 0x77], esp; add cl, byte ptr [rdx + 0x42880241]; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x000000000045ea8b: add byte ptr [rsi - 1], bh; call qword ptr [rax + 0x18]; 
0x0000000000422d16: add byte ptr [rsi], al; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043e8a1: add byte ptr [rsi], dl; add byte ptr [rax], al; add byte ptr [rax - 1], bh; ret; 
0x000000000045117a: add byte ptr cs:[rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000440ac7: add byte ptr fs:[rax], al; add byte ptr [rbp - 0x3dbbf040], al; ret; 
0x000000000045f772: add byte ptr gs:[rbp + 0x31], al; in al, 0x5d; mov rax, r12; pop r12; pop r13; ret; 
0x000000000046c389: add ch, al; cmp dword ptr [rbp - 7], ecx; dec dword ptr [rax + 1]; ret; 
0x000000000040de27: add ch, al; ret; 
0x000000000046d267: add ch, al; sbb dword ptr [rax - 0x76b70001], 0x43; adc byte ptr [rax + 0x5a], bl; pop rbx; ret; 
0x00000000004351ef: add ch, al; std; xlatb; rol dword ptr [rbp - 0x3a678a40], 0xfd; xlatb; ret 0xc085; 
0x000000000043d2e8: add cl, al; call 0xfe455fb; movsxd rcx, dword ptr [rsi + rax*4]; add rcx, rsi; jmp rcx; 
0x000000000040672d: add cl, al; cli; add al, byte ptr [rcx - 0xccc1e]; inc dword ptr [rcx]; ret 0xd089; 
0x0000000000437367: add cl, byte ptr [r8 - 0x76b7fdbe]; clc; ret; 
0x000000000045cbae: add cl, byte ptr [r9 - 0x77]; ror dword ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000457f8e: add cl, byte ptr [rax + 0x39]; ret 0x850f; 
0x00000000004665a1: add cl, byte ptr [rax + 0x39]; ret 0x860f; 
0x000000000044b870: add cl, byte ptr [rax + 0x39]; ret; 
0x000000000043d054: add cl, byte ptr [rax + 0x77f8c50f]; ret; 
0x000000000040a9c7: add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret 0x2948; 
0x000000000040ab96: add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret; 
0x00000000004188ee: add cl, byte ptr [rax - 0x73]; adc eax, 0x2378a; lea rax, [rip + 0x23823]; cmove rax, rdx; ret; 
0x000000000041876e: add cl, byte ptr [rax - 0x73]; adc eax, 0x238fa; lea rax, [rip + 0x23993]; cmove rax, rdx; ret; 
0x00000000004185fe: add cl, byte ptr [rax - 0x73]; adc eax, 0x23a7a; lea rax, [rip + 0x23b13]; cmove rax, rdx; ret; 
0x0000000000418874: add cl, byte ptr [rax - 0x73]; adc eax, 0x23bb4; lea rax, [rip + 0x23bed]; cmove rax, rdx; ret; 
0x00000000004186f4: add cl, byte ptr [rax - 0x73]; adc eax, 0x23d24; lea rax, [rip + 0x23d5d]; cmove rax, rdx; ret; 
0x0000000000418584: add cl, byte ptr [rax - 0x73]; adc eax, 0x23ea4; lea rax, [rip + 0x23edd]; cmove rax, rdx; ret; 
0x00000000004188ce: add cl, byte ptr [rax - 0x73]; adc eax, 0x23f8a; lea rax, [rip + 0x23fd3]; cmove rax, rdx; ret; 
0x000000000041874e: add cl, byte ptr [rax - 0x73]; adc eax, 0x240fa; lea rax, [rip + 0x24143]; cmove rax, rdx; ret; 
0x00000000004186a2: add cl, byte ptr [rax - 0x73]; adc eax, 0x24a06; lea rax, [rip + 0x24a5f]; cmove rax, rdx; ret; 
0x0000000000418820: add cl, byte ptr [rax - 0x73]; add eax, 0x14e08; lea rdx, [rip + 0x17041]; cmovne rax, rdx; ret; 
0x00000000004187cd: add cl, byte ptr [rax - 0x73]; add eax, 0x1d3eb; lea rdx, [rip + 0x1ec74]; cmovne rax, rdx; ret; 
0x0000000000417bed: add cl, byte ptr [rax - 0x73]; add eax, 0x1deeb; lea rdx, [rip + 0x1e0a4]; cmovne rax, rdx; ret; 
0x0000000000417cf7: add cl, byte ptr [rax - 0x73]; add eax, 0x3a21; lea rdx, [rip + 0x526a]; cmovne rax, rdx; ret; 
0x000000000041850e: add cl, byte ptr [rax - 0x73]; add eax, 0x7ffa; lea rdx, [rip + 0x21af3]; cmovne rax, rdx; ret; 
0x0000000000417b8d: add cl, byte ptr [rax - 0x73]; add eax, 0xdfb; lea rdx, [rip + 0x24e4]; cmovne rax, rdx; ret; 
0x0000000000438c05: add cl, byte ptr [rax - 0x75]; add eax, 0x5428948; lea rax, [rdx + 0xc]; ret; 
0x00000000004373f5: add cl, byte ptr [rax - 0x75]; add eax, 0x5428948; mov rax, rdi; ret; 
0x0000000000437325: add cl, byte ptr [rax - 0x75]; or byte ptr [r8 - 0x77], cl; or byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000437368: add cl, byte ptr [rax - 0x76b7fdbe]; clc; ret; 
0x00000000004372d5: add cl, byte ptr [rax - 0x77]; clc; ret; 
0x000000000046966d: add cl, byte ptr [rax - 0x77]; fimul dword ptr [rax - 0x77]; ret; 
0x000000000045a09f: add cl, byte ptr [rax - 0x77]; ret 0x51ff; 
0x00000000004676e6: add cl, byte ptr [rax - 0x7b]; sal byte ptr [rsp + rsi*2 + 0xf], 0x1f; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x0000000000435b30: add cl, byte ptr [rax - 0x7d]; ret 0x4808; 
0x0000000000450feb: add cl, byte ptr [rax - 0x7d]; ret 0x8301; 
0x0000000000435b93: add cl, byte ptr [rax - 0x7d]; ret 0xe908; 
0x00000000004040dd: add cl, byte ptr [rax - 0x7d]; ret 0xf01; 
0x000000000046c4b0: add cl, byte ptr [rax - 0x7d]; ret; 
0x000000000042a152: add cl, byte ptr [rbx + 0x257890e]; mov dword ptr [rdi], ecx; ret; 
0x00000000004373a3: add cl, byte ptr [rbx + 0x42890341]; add ecx, dword ptr [rax - 0x77]; clc; ret; 
0x0000000000438b85: add cl, byte ptr [rbx + 0x42890541]; add eax, 0x8428d48; ret; 
0x00000000004373e5: add cl, byte ptr [rbx + 0x42890841]; or byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000459bc0: add cl, byte ptr [rcx + rcx*4 - 0x16]; call qword ptr [rax + 0x38]; 
0x000000000045cbaf: add cl, byte ptr [rcx - 0x77]; ror dword ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000045ce05: add cl, byte ptr [rcx - 0x77]; ror dword ptr [rax - 0x77], cl; ret 0xa5e9; 
0x0000000000448122: add cl, byte ptr [rcx - 0x7d]; ret 0x8301; 
0x0000000000448d12: add cl, byte ptr [rcx - 0x7d]; ret; 
0x000000000043dbf3: add cl, byte ptr [rdi]; test dword ptr [rax + rax + 0x14c0000], eax; ret 0x71e9; 
0x000000000045d602: add cl, byte ptr [rdi]; xchg eax, ebp; ret 0x5389; 
0x0000000000437365: add cl, byte ptr [rdx + 0x42880241]; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x0000000000438b43: add cl, byte ptr [rdx + 0x42880441]; add al, 0x48; lea eax, [rdx + 4]; ret; 
0x0000000000437383: add cl, byte ptr [rdx + 0x42880441]; add al, 0x48; mov eax, edi; ret; 
0x000000000040531c: add cl, ch; idiv edi; jmp qword ptr [rsi + 0xf]; 
0x0000000000404784: add cl, ch; imul edi, esi, -1; jmp qword ptr [rsi + 0xf]; 
0x000000000048059f: add cl, ch; mov esp, dword ptr [rcx - 7]; jmp qword ptr [rsi + 0x2e]; 
0x000000000048058c: add cl, ch; out dx, al; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000047a854: add cl, ch; ret 0xfffe; 
0x000000000044b35b: add cl, ch; ret; 
0x000000000042fcda: add cl, ch; retf 0xfffe; jmp qword ptr [rsi + 0xf]; 
0x000000000044ed40: add cl, ch; retf 5; add byte ptr [rsi + 0x2e], ah; nop dword ptr [rax + rax]; ret; 
0x000000000045ad3c: add cl, ch; sahf; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x0000000000401d44: add cl, cl; ret; 
0x000000000042a303: add dh, bl; movq qword ptr [rdi], mm1; ret; 
0x000000000043b867: add dh, byte ptr [rbp + 0x16]; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x3b860; ret; 
0x000000000043b917: add dh, byte ptr [rbp + 0x16]; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x3b910; ret; 
0x000000000045e969: add dh, byte ptr [rbp + 0x64]; mov rax, qword ptr [rax + 0xe0]; call qword ptr [rax + 0x68]; 
0x00000000004185b6: add dh, byte ptr [rdi + rdi - 0xa]; ret 0x7520; 
0x000000000042d038: add dh, byte ptr [rdx + 0x10]; mov si, word ptr [rsi]; mov cx, word ptr [rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x000000000043bedf: add dh, byte ptr [rdx + 8]; mov word ptr [rdi], cx; mov word ptr [rsi - 2], cx; ret; 
0x0000000000411688: add dh, byte ptr [rsi + 5]; ret; 
0x000000000041889f: add dh, dh; add eax, 0x96a02; add dh, byte ptr [rdi + rdi - 0xa]; ret 0x7520; 
0x000000000041871f: add dh, dh; add eax, 0x96b82; add dh, byte ptr [rdi + rdi - 0xa]; ret 0x7520; 
0x00000000004185af: add dh, dh; add eax, 0x96cf2; add dh, byte ptr [rdi + rdi - 0xa]; ret 0x7520; 
0x0000000000402100: add dh, dh; ret 0x7402; 
0x00000000004025dd: add dh, dh; ret 0x7404; 
0x00000000004020bc: add dh, dh; ret 0x7408; 
0x000000000040992f: add dh, dh; ret 0x7420; 
0x000000000040210f: add dh, dh; ret 0x7440; 
0x0000000000439dc7: add dh, dh; ret 0x7501; 
0x0000000000439dd4: add dh, dh; ret 0x7502; 
0x0000000000439de1: add dh, dh; ret 0x7504; 
0x0000000000439d99: add dh, dh; ret 0x7510; 
0x0000000000439da6: add dh, dh; ret 0x7520; 
0x0000000000439db3: add dh, dh; ret 0x7540; 
0x0000000000469461: add dh, dh; ret 0xf04; 
0x0000000000457a97: add dh, dh; ret 0xf40; 
0x0000000000470ed7: add dh, dh; ret 0xf50; 
0x000000000047f01f: add dh, dh; ret; 
0x000000000043dbf0: add dh, dh; rol dword ptr [rdx], 0xf; test dword ptr [rax + rax + 0x14c0000], eax; ret 0x71e9; 
0x000000000040605c: add dword ptr [r8 - 0x7d], ecx; ret; 
0x0000000000418714: add dword ptr [r8], r8d; and dh, 8; je 0x18748; ret; 
0x0000000000438af1: add dword ptr [rax + 0x28d4802], ecx; ret; 
0x000000000040b849: add dword ptr [rax + 0x39], ecx; ret; 
0x000000000040ff13: add dword ptr [rax + 0xf740a38], eax; cmp rax, rsi; ja 0xff10; lea eax, [rdx + rdi]; ret; 
0x000000000046d177: add dword ptr [rax + 1], ecx; ror byte ptr [rax - 0x77], 1; ret 0xc148; 
0x0000000000407973: add dword ptr [rax + 1], ecx; ror byte ptr [rax - 0x77], 1; ret 0xe281; 
0x000000000044025b: add dword ptr [rax + 9], ecx; ret 0x8948; 
0x000000000044eab7: add dword ptr [rax - 0x49f000b9], ecx; push rbx; add dword ptr [rax - 0x7d], ecx; ret; 
0x00000000004547f2: add dword ptr [rax - 0x50743], eax; jmp qword ptr [rax]; 
0x000000000045a8bd: add dword ptr [rax - 0x73], ecx; or eax, 0x4f4bb; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000459e05: add dword ptr [rax - 0x73], ecx; or eax, 0x4ff73; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x000000000047b1ad: add dword ptr [rax - 0x73], ecx; push rdi; add ecx, dword ptr [rax + 0x63]; ret; 
0x0000000000437341: add dword ptr [rax - 0x776b7fe], ecx; ret; 
0x0000000000411775: add dword ptr [rax - 0x77], ecx; adc eax, 0x9afd3; ret; 
0x000000000045f758: add dword ptr [rax - 0x77], ecx; add byte ptr [r9 + rcx*4 - 0x20], r9b; pop rbp; pop r12; pop r13; ret; 
0x0000000000438c02: add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x75]; add eax, 0x5428948; lea rax, [rdx + 0xc]; ret; 
0x00000000004373f2: add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x75]; add eax, 0x5428948; mov rax, rdi; ret; 
0x0000000000437322: add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x75]; or byte ptr [r8 - 0x77], cl; or byte ptr [rax - 0x77], cl; clc; ret; 
0x00000000004372d2: add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x0000000000438b82: add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rbx + 0x42890541]; add eax, 0x8428d48; ret; 
0x00000000004373e2: add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rbx + 0x42890841]; or byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000440d63: add dword ptr [rax - 0x77], ecx; add eax, 0x6d57d; ret; 
0x0000000000471bb9: add dword ptr [rax - 0x77], ecx; push rbp; sub dh, al; add byte ptr [rip - 0x101b17], ch; jmp qword ptr [rsi + 0x2e]; 
0x000000000044559f: add dword ptr [rax - 0x77], ecx; ret 0x2b48; 
0x000000000041742d: add dword ptr [rax - 0x77], ecx; ret 0x2d74; 
0x000000000040d9a6: add dword ptr [rax - 0x77], ecx; ret 0x3075; 
0x00000000004625d3: add dword ptr [rax - 0x77], ecx; ret 0x8948; 
0x0000000000466f02: add dword ptr [rax - 0x77], ecx; ret 0x8b48; 
0x000000000044633c: add dword ptr [rax - 0x78], eax; je 0x46352; add ecx, dword ptr [rcx + 0x39]; ret; 
0x0000000000475e9b: add dword ptr [rax - 0x7d], ecx; ret 0x3901; 
0x000000000040df12: add dword ptr [rax - 0x7d], ecx; ret 0x3c01; 
0x00000000004501d9: add dword ptr [rax - 0x7d], ecx; ret 0x4001; 
0x0000000000445fd4: add dword ptr [rax - 0x7d], ecx; ret 0x4801; 
0x000000000043ff7a: add dword ptr [rax - 0x7d], ecx; ret 0x4808; 
0x0000000000469b69: add dword ptr [rax - 0x7d], ecx; ret 0x4810; 
0x0000000000447621: add dword ptr [rax - 0x7d], ecx; ret 0x4901; 
0x0000000000469b7f: add dword ptr [rax - 0x7d], ecx; ret 0x4f10; 
0x00000000004060b3: add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x0000000000472553: add dword ptr [rax - 0x7d], ecx; ret 0x8404; 
0x0000000000403665: add dword ptr [rax - 0x7d], ecx; ret 0x8801; 
0x000000000040605d: add dword ptr [rax - 0x7d], ecx; ret; 
0x00000000004071ae: add dword ptr [rax - 0x80], eax; jmp qword ptr [rax]; 
0x0000000000452735: add dword ptr [rax - 0x8ef43], eax; jmp qword ptr [rax]; 
0x00000000004586fb: add dword ptr [rax - 0x92f43], eax; jmp qword ptr [rax]; 
0x0000000000406778: add dword ptr [rax - 9], ecx; ror byte ptr [rax + 1], 1; ret; 
0x0000000000418534: add dword ptr [rax], 0; test byte ptr [rip + 0x96dc7], 1; je 0x184fd; ret; 
0x0000000000416c73: add dword ptr [rax], 0x89480000; fistp qword ptr [rax + 0xca]; syscall; 
0x00000000004173d9: add dword ptr [rax], 0x89480000; iretd; mov eax, 0xca; syscall; 
0x0000000000412e08: add dword ptr [rax], 0x89480000; out dx, eax; mov eax, 0xca; syscall; 
0x00000000004166b4: add dword ptr [rax], 0x894c0000; out dx, eax; mov eax, 0xca; syscall; 
0x000000000047273e: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x3cf3a; syscall; 
0x00000000004724ba: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x3d1ba; syscall; 
0x00000000004705ce: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x3f092; syscall; 
0x000000000045092e: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x5eca2; syscall; 
0x0000000000450869: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x5ed67; syscall; 
0x00000000004506cc: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x5ef04; syscall; 
0x00000000004505fd: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x5efd3; syscall; 
0x000000000044537e: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x6a04a; syscall; 
0x0000000000445212: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x6a1b6; syscall; 
0x000000000044511a: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x6a2ae; syscall; 
0x000000000043ddb6: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x71612; syscall; 
0x0000000000417a1a: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x94d76; syscall; 
0x0000000000415d02: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x96a8e; syscall; 
0x0000000000415cca: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x96ac6; syscall; 
0x00000000004157aa: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x96fe6; syscall; 
0x0000000000415466: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9732a; syscall; 
0x0000000000416925: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9885b; syscall; 
0x0000000000413d96: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x989fa; syscall; 
0x0000000000413d66: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x98a2a; syscall; 
0x0000000000415ffe: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x99172; syscall; 
0x0000000000414334: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9ae4c; syscall; 
0x00000000004142b8: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9aeb8; syscall; 
0x0000000000414013: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9b16d; syscall; 
0x0000000000412176: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9d00a; syscall; 
0x0000000000410d25: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9e3db; syscall; 
0x0000000000410d25: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9e3db; syscall; ret; 
0x000000000041082c: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9e8d4; syscall; 
0x00000000004104e1: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9ec1f; syscall; 
0x000000000041019e: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x9ef62; syscall; 
0x000000000040ee98: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa0268; syscall; 
0x000000000040ebd8: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa0528; syscall; 
0x000000000040e72c: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa09d4; syscall; 
0x000000000040e72c: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa09d4; syscall; ret; 
0x000000000040969a: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa5d2e; syscall; 
0x0000000000408769: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa654f; syscall; 
0x0000000000408542: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa6776; syscall; 
0x0000000000408507: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa67b1; syscall; 
0x0000000000408433: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa6885; syscall; 
0x0000000000406507: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa8751; syscall; 
0x0000000000404c34: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa9fec; syscall; 
0x0000000000403c4b: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xaaf25; syscall; 
0x0000000000403c22: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xaaf4e; syscall; 
0x0000000000403b19: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xab057; syscall; 
0x00000000004011fb: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xada75; syscall; 
0x000000000040e754: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xffff50e9; jmp qword ptr [rsi + 0x66]; 
0x00000000004145c2: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xffff68e9; jmp qword ptr [rsi + 0x66]; 
0x0000000000415fd3: add dword ptr [rax], 0xd8890000; syscall; 
0x000000000043d1f1: add dword ptr [rax], eax; add byte ptr [rax + 0x39], cl; retf 0xd975; vzeroupper; ret; 
0x0000000000469fc0: add dword ptr [rax], eax; add byte ptr [rax + 0x63], cl; ret; 
0x000000000045ff83: add dword ptr [rax], eax; add byte ptr [rax + 0xf], cl; mov ebp, 0xf80148c0; ret; 
0x000000000042017f: add dword ptr [rax], eax; add byte ptr [rax + 1], cl; clc; add rax, rcx; vzeroupper; ret; 
0x000000000047e58d: add dword ptr [rax], eax; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x00000000004023d7: add dword ptr [rax], eax; add byte ptr [rax - 0x39], cl; ret; 
0x0000000000472fdb: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; add eax, 0x6b; cmovne rax, rdx; ret; 
0x000000000045d22c: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; or eax, 0x37fae; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000045cbeb: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; or eax, 0x383ab; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000043d2af: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; xor eax, 0x46b87; movsxd rax, dword ptr [rsi + rdi*4]; add rax, rsi; jmp rax; 
0x000000000040228e: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; push rax; and byte ptr [rax + 1], cl; ret 0xb70f; 
0x000000000040c56d: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x000000000040ce81: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; test eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x000000000047ee86: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x3948; 
0x000000000044b884: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0xb7eb; 
0x000000000047cc15: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000043c15e: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; sal ebx, 1; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000044a48e: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; shr bl, 1; ret 0x2e66; 
0x000000000047a25f: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; in al, dx; sbb byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000464ff3: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; jge 0x64fc2; add byte ptr [rax - 0x77], cl; ret; 
0x000000000041f4f7: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000046b07d: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4c08; 
0x00000000004154a4: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xb817; 
0x000000000045f9a6: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x000000000043498f: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041f525: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x00000000004794c8: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x83; ret 0x3901; 
0x0000000000444191: add dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000046a669: add dword ptr [rax], eax; add byte ptr [rax], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000047cbe8: add dword ptr [rax], eax; add byte ptr [rax], al; call rax; 
0x000000000047d965: add dword ptr [rax], eax; add byte ptr [rax], al; cmp qword ptr [rsi + 8], rcx; ja 0x7d971; sbb eax, eax; ret; 
0x000000000045a8ca: add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000045abc5: add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rbp - 0x508], 0x20; movzx eax, byte ptr [rdi + rax]; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x00000000004783be: add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000004116b9: add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rip + 0x9b069], eax; ret; 
0x000000000047d1eb: add dword ptr [rax], eax; add byte ptr [rax], al; mov edi, 1; call rax; 
0x0000000000472739: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3cf3a]; syscall; 
0x00000000004724b5: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3d1ba]; syscall; 
0x00000000004705c9: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3f092]; syscall; 
0x0000000000450929: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5eca2]; syscall; 
0x0000000000450864: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5ed67]; syscall; 
0x00000000004506c7: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5ef04]; syscall; 
0x00000000004505f8: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5efd3]; syscall; 
0x0000000000445379: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a04a]; syscall; 
0x000000000044520d: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a1b6]; syscall; 
0x0000000000445115: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a2ae]; syscall; 
0x000000000043ddb1: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x71612]; syscall; 
0x0000000000417a15: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x94d76]; syscall; 
0x0000000000415cfd: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96a8e]; syscall; 
0x0000000000415cc5: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96ac6]; syscall; 
0x00000000004157a5: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96fe6]; syscall; 
0x0000000000415461: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9732a]; syscall; 
0x0000000000416920: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9885b]; syscall; 
0x0000000000413d91: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x989fa]; syscall; 
0x0000000000413d61: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x98a2a]; syscall; 
0x0000000000415ff9: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x99172]; syscall; 
0x000000000041432f: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ae4c]; syscall; 
0x00000000004142b3: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9aeb8]; syscall; 
0x000000000041400e: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9b16d]; syscall; 
0x0000000000412171: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9d00a]; syscall; 
0x0000000000410d20: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9e3db]; syscall; 
0x0000000000410827: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9e8d4]; syscall; 
0x00000000004104dc: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ec1f]; syscall; 
0x0000000000410199: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ef62]; syscall; 
0x000000000040ee93: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa0268]; syscall; 
0x000000000040ebd3: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa0528]; syscall; 
0x000000000040e727: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa09d4]; syscall; 
0x0000000000409695: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa5d2e]; syscall; 
0x0000000000408764: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa654f]; syscall; 
0x000000000040853d: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa6776]; syscall; 
0x0000000000408502: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa67b1]; syscall; 
0x000000000040842e: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa6885]; syscall; 
0x0000000000406502: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa8751]; syscall; 
0x0000000000404c2f: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa9fec]; syscall; 
0x0000000000403c46: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xaaf25]; syscall; 
0x0000000000403c1d: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xaaf4e]; syscall; 
0x0000000000403b14: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xab057]; syscall; 
0x00000000004011f6: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xada75]; syscall; 
0x0000000000401348: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004727dc: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x0000000000415fce: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000004163bd: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004166af: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000412e03: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000416c6e: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000004173d4: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rdi, rcx; mov eax, 0xca; syscall; 
0x00000000004782e6: add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rdi], rdx; ret; 
0x0000000000411709: add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0x9afec], rax; ret; 
0x00000000004116d9: add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0x9b024], rax; ret; 
0x000000000045cf35: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rbx; call rax; 
0x000000000045a2de: add dword ptr [rax], eax; add byte ptr [rax], al; movzx eax, byte ptr [rsi + rax]; lea rsi, [rip + 0x4fe93]; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x00000000004725aa: add dword ptr [rax], eax; add byte ptr [rax], al; pop rbp; pop r12; pop r13; ret; 
0x000000000040f94e: add dword ptr [rax], eax; add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x000000000045f420: add dword ptr [rax], eax; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000045d9f7: add dword ptr [rax], eax; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x000000000041169d: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000043eadd: add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000043eadd: add dword ptr [rax], eax; add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x3eb40; ret; 
0x000000000043f651: add dword ptr [rax], eax; add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x3f660; ret; 
0x000000000045a941: add dword ptr [rax], eax; add byte ptr [rax], al; xor edx, edx; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000410940: add dword ptr [rax], eax; add byte ptr [rbp + 0xb], dh; sub edx, dword ptr [rax + 0x18]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x000000000047cab1: add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x00000000004438f1: add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x00000000004020b4: add dword ptr [rax], eax; add byte ptr [rbx + 0xad1ff15], cl; add dh, dh; ret 0x7408; 
0x0000000000448edb: add dword ptr [rax], eax; add byte ptr [rcx + 0x39], cl; ret 0x860f; 
0x0000000000443b9a: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x000000000040d4eb: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 6], cl; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x00000000004094e3: add dword ptr [rax], eax; add byte ptr [rcx], dh; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbx + 0x10]; 
0x000000000040e018: add dword ptr [rax], eax; add byte ptr [rdi + rcx - 0x42], cl; ret 0x4a8d; 
0x000000000046c4c7: add dword ptr [rax], eax; add byte ptr [rdi], cl; mov dh, 0x45; add cl, byte ptr [rax - 0x7d]; ret; 
0x000000000044ee35: add dword ptr [rax], eax; add byte ptr [rdx + 0x63], cl; or al, 0x8f; add rcx, rdi; jmp rcx; 
0x0000000000439dc5: add dword ptr [rax], eax; add dh, dh; ret 0x7501; 
0x0000000000439dd2: add dword ptr [rax], eax; add dh, dh; ret 0x7502; 
0x0000000000439ddf: add dword ptr [rax], eax; add dh, dh; ret 0x7504; 
0x0000000000439d97: add dword ptr [rax], eax; add dh, dh; ret 0x7510; 
0x0000000000439da4: add dword ptr [rax], eax; add dh, dh; ret 0x7520; 
0x0000000000439db1: add dword ptr [rax], eax; add dh, dh; ret 0x7540; 
0x00000000004185a5: add dword ptr [rax], eax; and dh, 8; je 0x185d8; ret; 
0x0000000000418715: add dword ptr [rax], eax; and dh, 8; je 0x18748; ret; 
0x0000000000418895: add dword ptr [rax], eax; and dh, 8; je 0x188c8; ret; 
0x0000000000417c9a: add dword ptr [rax], eax; cmove rax, rdx; ret; 
0x0000000000417bfa: add dword ptr [rax], eax; cmovne rax, rdx; ret; 
0x0000000000418973: add dword ptr [rax], eax; lea rax, [rip + 0x1c474]; cmove rax, rdx; ret; 
0x0000000000417c93: add dword ptr [rax], eax; lea rax, [rip + 0x1d784]; cmove rax, rdx; ret; 
0x0000000000418826: add dword ptr [rax], eax; lea rdx, [rip + 0x17041]; cmovne rax, rdx; ret; 
0x0000000000417bf3: add dword ptr [rax], eax; lea rdx, [rip + 0x1e0a4]; cmovne rax, rdx; ret; 
0x00000000004187d3: add dword ptr [rax], eax; lea rdx, [rip + 0x1ec74]; cmovne rax, rdx; ret; 
0x0000000000417b33: add dword ptr [rax], eax; lea rdx, [rip + 0x221b4]; cmovne rax, rdx; ret; 
0x000000000044da04: add dword ptr [rax], eax; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x00000000004016ee: add dword ptr [rax], eax; mov qword ptr [rip + 0xadfdd], 0; pop rdx; ret; 
0x0000000000406aee: add dword ptr [rax], eax; mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x000000000047db25: add dword ptr [rax], eax; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000401ccf: add dword ptr [rax], eax; nop; leave; ret; 
0x0000000000418894: add dword ptr [rax], r8d; and dh, 8; je 0x188c8; ret; 
0x000000000043bbd7: add dword ptr [rbp + 0x16], esi; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x3bbd0; sub rax, 1; ret; 
0x000000000043ba87: add dword ptr [rbp + 0x16], esi; movzx edx, byte ptr [rsi + rax + 3]; test dl, dl; jne 0x3ba80; lea rax, [rcx - 1]; ret; 
0x000000000043fae2: add dword ptr [rbp + 0x1b], esi; ret; 
0x00000000004145b8: add dword ptr [rbp + 0x31], 0x1bad2; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000043fab0: add dword ptr [rbp + 0x3d], esi; ret; 
0x0000000000460c1c: add dword ptr [rbp + rcx*4 + 0x4c], ecx; and al, 0x20; call rbx; 
0x000000000043e063: add dword ptr [rbp - 0x57c03b0], ecx; add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xc085; 
0x000000000043d538: add dword ptr [rbp - 0x79], esi; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000047a9b2: add dword ptr [rbp - 0x7b], eax; sal byte ptr [rbp + 0x29], cl; add rsp, 0x38; pop rbx; pop r14; ret; 
0x000000000042a1c2: add dword ptr [rbx + 0x157890e], ecx; mov dword ptr [rdi], ecx; ret; 
0x0000000000448126: add dword ptr [rbx + 0x394907e0], eax; ret 0xe872; 
0x0000000000448d16: add dword ptr [rbx + 0x394907e0], eax; ret; 
0x0000000000470575: add dword ptr [rbx + 0x44], ebx; mov eax, eax; pop rbp; pop r12; ret; 
0x00000000004168d3: add dword ptr [rbx + 0x5d], ebx; pop r12; ret; 
0x0000000000413700: add dword ptr [rbx + 0x9902905], ecx; add byte ptr [rcx], bh; ret 0xa7e; 
0x000000000045b21b: add dword ptr [rbx - 0x4cf43], eax; call qword ptr [rax]; 
0x000000000045a47b: add dword ptr [rbx - 0x50743], eax; jmp qword ptr [rax]; 
0x000000000043d612: add dword ptr [rbx - 0x50f0fe40], eax; ret 0xda89; 
0x00000000004547c8: add dword ptr [rbx - 0x50f43], eax; call qword ptr [rax]; 
0x000000000045270f: add dword ptr [rbx - 0x8ff43], eax; call qword ptr [rax]; 
0x000000000045cbf2: add dword ptr [rbx], 0; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000045cb94: add dword ptr [rbx], 0; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000004118be: add dword ptr [rcx + 0x21], ecx; ret 0x8d4d; 
0x0000000000438b71: add dword ptr [rcx + 0x3418b02], ecx; mov dword ptr [rdx + 3], eax; lea rax, [rdx + 6]; ret; 
0x00000000004373a1: add dword ptr [rcx + 0x3418b02], ecx; mov dword ptr [rdx + 3], eax; mov rax, rdi; ret; 
0x0000000000438b51: add dword ptr [rcx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [rdx + 4], eax; lea rax, [rdx + 5]; ret; 
0x0000000000437391: add dword ptr [rcx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [rdx + 4], eax; mov rax, rdi; ret; 
0x0000000000438b41: add dword ptr [rcx + 0x4418a02], ecx; mov byte ptr [rdx + 4], al; lea rax, [rdx + 4]; ret; 
0x0000000000437381: add dword ptr [rcx + 0x4418a02], ecx; mov byte ptr [rdx + 4], al; mov rax, rdi; ret; 
0x0000000000472452: add dword ptr [rcx + 0x5c], eax; ret; 
0x000000000044ff56: add dword ptr [rcx + rcx*4 - 0x19], ecx; call rbx; 
0x00000000004726f9: add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x000000000040f5d6: add dword ptr [rcx + rcx*4 - 9], ecx; call qword ptr [rbx + 0x18]; 
0x000000000043faa9: add dword ptr [rcx + rdi + 0x41], esi; test byte ptr [rdx + 8], 1; jne 0x3faf0; ret; 
0x0000000000470695: add dword ptr [rcx - 0x57d7db84], ecx; add dword ptr [rdi], ecx; test dword ptr [rsi], ecx; or byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffb0; 
0x000000000045cde9: add dword ptr [rcx - 0x73], ecx; push rbx; add ecx, ebp; ret; 
0x0000000000460af8: add dword ptr [rcx - 0x75], ecx; cmp al, 0x24; lea r9, [rsp + 0x28]; call rbx; 
0x0000000000437371: add dword ptr [rcx - 0x776b7fe], ecx; ret; 
0x0000000000451c87: add dword ptr [rcx - 0x77], ecx; push rsi; sub dh, al; add byte ptr [rcx - 0x7d], cl; ret; 
0x0000000000477a50: add dword ptr [rcx - 0x77], ecx; push rsp; ret; 
0x000000000044d9d6: add dword ptr [rcx - 0x77cf7bd], ecx; std; je 0x4d9f8; pop rbx; ret; 
0x0000000000448161: add dword ptr [rcx - 0x7d], ecx; ret 0x4801; 
0x00000000004485f4: add dword ptr [rcx - 0x7d], ecx; ret 0x4c01; 
0x0000000000408d73: add dword ptr [rcx - 0x7d], ecx; ret 0x8401; 
0x0000000000441844: add dword ptr [rcx - 0x7d], ecx; ret; 
0x000000000043e951: add dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x000000000045fd2a: add dword ptr [rcx], ecx; ret 0x3949; 
0x0000000000460c18: add dword ptr [rcx], esi; shr byte ptr [rdx + 1], cl; lea r9, [rsp + 0x20]; call rbx; 
0x000000000043cee2: add dword ptr [rdi + 0x15], esi; jb 0x3cee9; mov byte ptr [rdi], cl; ret; 
0x000000000043c173: add dword ptr [rdi + 0x26], esi; jb 0x3c17d; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000043e86c: add dword ptr [rdi + 0x29], esi; mov eax, 4; syscall; 
0x000000000043e86c: add dword ptr [rdi + 0x29], esi; mov eax, 4; syscall; cmp rax, -0x1000; ja 0x3e880; ret; 
0x000000000046205c: add dword ptr [rdi + 0x29], esi; mov eax, 6; syscall; 
0x000000000046205c: add dword ptr [rdi + 0x29], esi; mov eax, 6; syscall; cmp rax, -0x1000; ja 0x62070; ret; 
0x000000000043e8bb: add dword ptr [rdi + 0x2a], esi; mov eax, 5; syscall; 
0x000000000043e8bb: add dword ptr [rdi + 0x2a], esi; mov eax, 5; syscall; cmp rax, -0x1000; ja 0x3e8d0; ret; 
0x000000000043d050: add dword ptr [rdi + 0x2c], esi; jb 0x3d057; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x00000000004620b1: add dword ptr [rdi + 0x2c], esi; mov eax, 0x106; syscall; 
0x00000000004620b1: add dword ptr [rdi + 0x2c], esi; mov eax, 0x106; syscall; cmp rax, -0x1000; ja 0x620c8; ret; 
0x000000000040e6f0: add dword ptr [rdi + 0x30], edi; ret; 
0x000000000043d218: add dword ptr [rdi + 0x3a], esi; jb 0x3d21f; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x000000000043c4d3: add dword ptr [rdi + 0x3b], esi; jb 0x3c4dd; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000043c923: add dword ptr [rdi + 0x53], esi; jb 0x3c92d; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x0000000000410d18: add dword ptr [rdi + 1], edi; ret; 
0x0000000000409ec4: add dword ptr [rdi], ecx; mov ds, word ptr [rsi + rdi*8 + 0x3145ffff]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000043d615: add dword ptr [rdi], ecx; scasd eax, dword ptr [rdi]; ret 0xda89; 
0x000000000043d623: add dword ptr [rdi], ecx; scasd eax, dword ptr [rdi]; ror dword ptr [rdi], 0xaf; ret 0xee9; 
0x000000000047069b: add dword ptr [rdi], ecx; test dword ptr [rsi], ecx; or byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffb0; 
0x0000000000449a32: add dword ptr [rdi], ecx; xchg byte ptr [rax + rcx - 0x157f0000], dl; ret 0; 
0x000000000047721f: add dword ptr [rdi], ecx; xchg eax, edx; ret 0x8948; 
0x0000000000434b66: add dword ptr [rdx + 0x710d8d48], edx; sub dword ptr [rip - 0x6eeb7500], eax; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000043beec: add dword ptr [rdx + 2], esi; mov byte ptr [rdi], cl; ret; 
0x000000000042d04d: add dword ptr [rdx + 4], esi; mov cl, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x0000000000473982: add dword ptr [rdx + rax*2], 1; ret; 
0x000000000043cd3a: add dword ptr [rdx - 0x2f], esp; jge 0x3cd87; out 0x49, eax; jmp qword ptr [rdx - 0x2f]; 
0x000000000042cfa6: add dword ptr [rdx - 0x2f], esp; jl 0x2cff3; adc dword ptr [rcx - 2], edx; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000043cbb7: add dword ptr [rdx - 0x2f], esp; std; jg 0x3cc07; jmp qword ptr [rdx - 0x2f]; 
0x000000000043be83: add dword ptr [rdx - 0xf], esp; jl 0x3bed0; adc dword ptr [rsi - 2], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043bfc3: add dword ptr [rdx - 0xf], esp; jl 0x3c010; adc dword ptr [rsi + 2], edx; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000041f809: add dword ptr [rdx], 0; add byte ptr [rax + 5], cl; add byte ptr [rax], 0; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x0000000000442c63: add dword ptr [rdx], 0; nop word ptr cs:[rax + rax]; ret; 
0x0000000000460af2: add dword ptr [rdx], ebp; lea rcx, [rax + 1]; mov rdi, qword ptr [r12]; lea r9, [rsp + 0x28]; call rbx; 
0x0000000000460c92: add dword ptr [rdx], ebp; lea rcx, [rax + 4]; lea r9, [rsp + 0x20]; call rbx; 
0x000000000042b337: add dword ptr [rip + 0x14634900], -0x6d; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000410cb2: add dword ptr [rip + 0x9e45b], 1; pop rbx; ret; 
0x000000000040861d: add dword ptr [rip + 0xa669c], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000040eacb: add dword ptr [rsi + 0x1a], edi; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000040a5bf: add dword ptr [rsi + rbp - 0x77], esi; ret 0xc085; 
0x0000000000415fc7: add dword ptr [rsi - 0x2b], edi; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, ebx; syscall; 
0x0000000000409814: add dword ptr [rsi - 0x47], edi; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004091f4: add dword ptr [rsi - 0x4c], edi; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000409454: add dword ptr [rsi - 0x4f], edi; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000414566: add dword ptr [rsi - 0x69], edi; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000437352: add dword ptr [rsi - 0x77], esp; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x0000000000437362: add dword ptr [rsi - 0x77], esp; add cl, byte ptr [rdx + 0x42880241]; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x0000000000465d8b: add dword ptr [rsi - 0x7b], esp; ror byte ptr [rdi], cl; xchg eax, esp; ret 0xb60f; 
0x00000000004687c5: add dword ptr [rsi - 0x7b], esp; test byte ptr [rdi], 0x84; sar ebx, 0xff; dec dword ptr [rcx + 1]; ret 0xb58b; 
0x00000000004145b6: add dword ptr [rsi - 0x7f], edi; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000401341: add dword ptr [rsi - 0xf], edi; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000422c64: add dword ptr [rsi], eax; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000040f401: add dword ptr [rsp + rbp - 0x77], esi; ret 0xc883; 
0x000000000045f9bd: add dword ptr ds:[rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x000000000045090a: add eax, 0; add bl, ch; ret; 
0x000000000043bd21: add eax, 0x10; sub edx, esi; cmp edx, ecx; jle 0x3bd3c; movsxd rax, ecx; ret; 
0x0000000000422e67: add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000418892: add eax, 0x14649; and dh, 8; je 0x188c8; ret; 
0x0000000000418712: add eax, 0x147a9; and dh, 8; je 0x18748; ret; 
0x00000000004185a2: add eax, 0x14939; and dh, 8; je 0x185d8; ret; 
0x0000000000418823: add eax, 0x14e08; lea rdx, [rip + 0x17041]; cmovne rax, rdx; ret; 
0x000000000044fa72: add eax, 0x18c48348; ret; 
0x0000000000418977: add eax, 0x1c474; cmove rax, rdx; ret; 
0x0000000000417b30: add eax, 0x1d09b; lea rdx, [rip + 0x221b4]; cmovne rax, rdx; ret; 
0x00000000004187d0: add eax, 0x1d3eb; lea rdx, [rip + 0x1ec74]; cmovne rax, rdx; ret; 
0x0000000000417c97: add eax, 0x1d784; cmove rax, rdx; ret; 
0x0000000000417bf0: add eax, 0x1deeb; lea rdx, [rip + 0x1e0a4]; cmovne rax, rdx; ret; 
0x0000000000411665: add eax, 0x1f0fdfeb; test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000044fa26: add eax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x00000000004616b5: add eax, 0x20; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x00000000004356d5: add eax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042030a: add eax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000000047aba3: add eax, 0x21a94; ret; 
0x000000000047ab9b: add eax, 0x21a98; divss xmm0, dword ptr [rip + 0x21a94]; ret; 
0x0000000000418490: add eax, 0x232eb; cmove rax, rdx; ret; 
0x00000000004188f8: add eax, 0x23823; cmove rax, rdx; ret; 
0x0000000000418778: add eax, 0x23993; cmove rax, rdx; ret; 
0x0000000000418608: add eax, 0x23b13; cmove rax, rdx; ret; 
0x000000000041887e: add eax, 0x23bed; cmove rax, rdx; ret; 
0x00000000004186fe: add eax, 0x23d5d; cmove rax, rdx; ret; 
0x000000000041858e: add eax, 0x23edd; cmove rax, rdx; ret; 
0x00000000004188d8: add eax, 0x23fd3; cmove rax, rdx; ret; 
0x0000000000417c20: add eax, 0x23ffb; cmovne rax, rdx; ret; 
0x0000000000418758: add eax, 0x24143; cmove rax, rdx; ret; 
0x00000000004461b2: add eax, 0x2444c749; cmp byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x0000000000418683: add eax, 0x24738; cmovne rax, rdx; ret; 
0x0000000000418668: add eax, 0x24913; cmove rax, rdx; ret; 
0x00000000004186ac: add eax, 0x24a5f; cmove rax, rdx; ret; 
0x0000000000461060: add eax, 0x25b; lea rdx, [rip + 0x34]; cmovne rax, rdx; ret; 
0x000000000043f7bb: add eax, 0x28c48348; ret; 
0x000000000044ed43: add eax, 0x2e660000; nop dword ptr [rax + rax]; ret; 
0x00000000004809de: add eax, 0x2ebf1; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x00000000004805e9: add eax, 0x2ee3e; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000041221c: add eax, 0x344f; mov qword ptr [rip + 0x9a558], rax; ret; 
0x0000000000472f27: add eax, 0x38c48348; ret; 
0x0000000000417cfa: add eax, 0x3a21; lea rdx, [rip + 0x526a]; cmovne rax, rdx; ret; 
0x0000000000473b61: add eax, 0x3b6ba; ret; 
0x0000000000473973: add eax, 0x3be38; jae 0x73986; mov rdx, qword ptr [rip + 0x3be37]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000473236: add eax, 0x3c0c5; cmp rax, rdx; lea rdx, [rip + 0x3ab]; lea rax, [rip + 0x74]; cmove rax, rdx; ret; 
0x0000000000472839: add eax, 0x3ce6a; ret; 
0x000000000047281e: add eax, 0x3ce85; add rsp, 8; ret; 
0x0000000000472832: add eax, 0x3ce89; mov qword ptr [rip + 0x3ce6a], rax; ret; 
0x0000000000472817: add eax, 0x3cea4; mov qword ptr [rip + 0x3ce85], rax; add rsp, 8; ret; 
0x00000000004620c2: add eax, 0x401f0fc3; add byte ptr [rax - 0x39], cl; ret 0xffc0; 
0x00000000004616d5: add eax, 0x40; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x00000000004356f5: add eax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042032a: add eax, 0x40; add rax, rdi; vzeroupper; ret; 
0x000000000046cdea: add eax, 0x4286d; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000047b8e3: add eax, 0x438b7277; or byte ptr [rcx + 0x63], cl; add al, 0x87; add rax, r15; jmp rax; 
0x0000000000456dc7: add eax, 0x45ffffff; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000438b88: add eax, 0x48054289; lea eax, [rdx + 8]; ret; 
0x00000000004373b8: add eax, 0x48054289; mov eax, edi; ret; 
0x0000000000429e43: add eax, 0x480e8b48; mov dword ptr [rdi + 5], edx; mov qword ptr [rdi], rcx; ret; 
0x00000000004396e6: add eax, 0x480f8948; mov dword ptr [rdi + 5], edx; lea rax, [rdi + 0xc]; ret; 
0x0000000000439086: add eax, 0x480f8948; mov dword ptr [rdi + 5], edx; ret; 
0x000000000042d30b: add eax, 0x487c5162; adc dword ptr [rcx + 6], esi; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000043c060: add eax, 0x487cf162; adc dword ptr [rsi + 6], edx; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x0000000000450c6b: add eax, 0x48b4c00; ret 0x8d48; 
0x000000000047ce54: add eax, 0x48fff848; mov eax, dword ptr [rax]; add rsp, 8; ret; 
0x0000000000461a9e: add eax, 0x4a015; test rax, rax; je 0x61ad8; call rax; 
0x0000000000462221: add eax, 0x4d3d2; cmp rdi, rax; ja 0x62250; xor eax, eax; ret; 
0x0000000000461058: add eax, 0x4e24c; or byte ptr [rax - 0x73], cl; add eax, 0x25b; lea rdx, [rip + 0x34]; cmovne rax, rdx; ret; 
0x0000000000438c09: add eax, 0x5428948; lea rax, [rdx + 0xc]; ret; 
0x00000000004373f9: add eax, 0x5428948; mov rax, rdi; ret; 
0x000000000044f90d: add eax, 0x54800; add al, byte ptr [rax]; add byte ptr [rax - 0x7f], cl; ret 0x200; 
0x000000000044e385: add eax, 0x5d8d6; mov rax, qword ptr [rax + r14*8]; test rax, rax; je 0x4e395; call rax; 
0x000000000044e143: add eax, 0x5db18; mov rax, qword ptr [rax + rbx*8]; test rax, rax; je 0x4e153; call rax; 
0x000000000044f91e: add eax, 0x5e0cd; mov qword ptr [rip + 0x5e0ce], rdx; cmp qword ptr fs:[rdi], rsi; je 0x4f938; ret; 
0x0000000000461721: add eax, 0x60; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000435741: add eax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042034a: add eax, 0x60; add rax, rdi; vzeroupper; ret; 
0x000000000044d1e2: add eax, 0x62241; ret; 
0x000000000045183c: add eax, 0x63480000; or al, 0x8a; add rcx, rdx; jmp rcx; 
0x000000000042287a: add eax, 0x63490006; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000442c1b: add eax, 0x68ea0; pop rbx; ret; 
0x0000000000446111: add eax, 0x692fe; test eax, eax; je 0x46120; ret; 
0x0000000000442be2: add eax, 0x6a639; ret; 
0x00000000004442e2: add eax, 0x6b101; ret; 
0x00000000004442d2: add eax, 0x6b109; ret; 
0x0000000000472fe0: add eax, 0x6b; cmovne rax, rdx; ret; 
0x0000000000440b1a: add eax, 0x6c571; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000442bf1: add eax, 0x6c7ca; test eax, eax; je 0x42c00; ret; 
0x0000000000440ebc: add eax, 0x6d3f7; mov qword ptr [rsi], rax; ret; 
0x0000000000440eb2: add eax, 0x6d411; mov qword ptr [rdi], rax; mov rax, qword ptr [rip + 0x6d3f7]; mov qword ptr [rsi], rax; ret; 
0x0000000000440e4b: add eax, 0x6d498; mov rax, r8; ret; 
0x0000000000440d66: add eax, 0x6d57d; ret; 
0x0000000000440d59: add eax, 0x6d58a; jne 0x40d70; lea rax, [r8 + 1]; mov qword ptr [rip + 0x6d57d], rax; ret; 
0x0000000000440d1c: add eax, 0x6d58f; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000043f752: add eax, 0x6d9c1; test rax, rax; je 0x3f75d; ret; 
0x0000000000440ac1: add eax, 0x6e75a; mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x0000000000473247: add eax, 0x74; cmove rax, rdx; ret; 
0x000000000047dcf4: add eax, 0x7542fa80; or dword ptr [rdi], 0xffffffb6; push rbx; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000418937: add eax, 0x75c4; cmove rax, rdx; ret; 
0x00000000004184c7: add eax, 0x7704; cmove rax, rdx; ret; 
0x0000000000418511: add eax, 0x7ffa; lea rdx, [rip + 0x21af3]; cmovne rax, rdx; ret; 
0x0000000000431c28: add eax, 0x81048b00; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000041f137: add eax, 0x83480000; ret 0x4910; 
0x0000000000432f81: add eax, 0x83480000; ret 0xe910; 
0x000000000041f165: add eax, 0x83480000; ret 0xeb10; 
0x000000000045f6f7: add eax, 0x834; cmove rax, rdx; ret; 
0x0000000000418532: add eax, 0x83d9; test byte ptr [rip + 0x96dc7], 1; je 0x184fd; ret; 
0x0000000000462026: add eax, 0x841f0fc3; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x68], bh; syscall; 
0x0000000000462016: add eax, 0x841f0fc3; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x6b], bh; syscall; 
0x0000000000462036: add eax, 0x841f0fc3; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x6c], bh; syscall; 
0x0000000000438b8b: add eax, 0x8428d48; ret; 
0x0000000000407ac2: add eax, 0x8944c689; ret 0xeab8; 
0x000000000040c1c7: add eax, 0x89490000; call 0xffffffffceebd55c; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000040982a: add eax, 0x8949a3eb; shr cl, 0x25; jnp 0x9833; jmp qword ptr [rsi + 0x2e]; 
0x00000000004667e4: add eax, 0x8949fffb; ret 0x8548; 
0x000000000042f831: add eax, 0x8a0c8b00; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x00000000004334fd: add eax, 0x91148b00; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x00000000004160fd: add eax, 0x9667e; ret; 
0x00000000004160ef: add eax, 0x96694; lea rax, [rip - 0xa8b]; mov qword ptr [rip + 0x9667e], rax; ret; 
0x0000000000418966: add eax, 0x96995; cmp rax, rdx; lea rdx, [rip + 0x1c8bb]; lea rax, [rip + 0x1c474]; cmove rax, rdx; ret; 
0x00000000004188e9: add eax, 0x969c6; add cl, byte ptr [rax - 0x73]; adc eax, 0x2378a; lea rax, [rip + 0x23823]; cmove rax, rdx; ret; 
0x0000000000418926: add eax, 0x969d5; cmp rax, rdx; lea rdx, [rip + 0x7a9b]; lea rax, [rip + 0x75c4]; cmove rax, rdx; ret; 
0x00000000004188a1: add eax, 0x96a02; add dh, byte ptr [rdi + rdi - 0xa]; ret 0x7520; 
0x000000000041886f: add eax, 0x96a40; add cl, byte ptr [rax - 0x73]; adc eax, 0x23bb4; lea rax, [rip + 0x23bed]; cmove rax, rdx; ret; 
0x00000000004187c8: add eax, 0x96adb; add cl, byte ptr [rax - 0x73]; add eax, 0x1d3eb; lea rdx, [rip + 0x1ec74]; cmovne rax, rdx; ret; 
0x0000000000418769: add eax, 0x96b46; add cl, byte ptr [rax - 0x73]; adc eax, 0x238fa; lea rax, [rip + 0x23993]; cmove rax, rdx; ret; 
0x0000000000418749: add eax, 0x96b66; add cl, byte ptr [rax - 0x73]; adc eax, 0x240fa; lea rax, [rip + 0x24143]; cmove rax, rdx; ret; 
0x0000000000418721: add eax, 0x96b82; add dh, byte ptr [rdi + rdi - 0xa]; ret 0x7520; 
0x00000000004186ef: add eax, 0x96bc0; add cl, byte ptr [rax - 0x73]; adc eax, 0x23d24; lea rax, [rip + 0x23d5d]; cmove rax, rdx; ret; 
0x00000000004185b1: add eax, 0x96cf2; add dh, byte ptr [rdi + rdi - 0xa]; ret 0x7520; 
0x0000000000417be8: add eax, 0x976bb; add cl, byte ptr [rax - 0x73]; add eax, 0x1deeb; lea rdx, [rip + 0x1e0a4]; cmovne rax, rdx; ret; 
0x0000000000417b88: add eax, 0x9771b; add cl, byte ptr [rax - 0x73]; add eax, 0xdfb; lea rdx, [rip + 0x24e4]; cmovne rax, rdx; ret; 
0x0000000000417b28: add eax, 0x977d6; lea rax, [rip + 0x1d09b]; lea rdx, [rip + 0x221b4]; cmovne rax, rdx; ret; 
0x000000000041451a: add eax, 0x98281; add rsp, 0x10; pop rbp; ret; 
0x00000000004160ae: add eax, 0x990c9; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000460957: add eax, 0x994; cmove rax, rdx; ret; 
0x0000000000412223: add eax, 0x9a558; ret; 
0x0000000000412215: add eax, 0x9a56e; lea rax, [rip + 0x344f]; mov qword ptr [rip + 0x9a558], rax; ret; 
0x00000000004188b3: add eax, 0x9aa8; lea rdx, [rip + 0xf011]; cmovne rax, rdx; ret; 
0x00000000004117a5: add eax, 0x9afbe; ret; 
0x0000000000411792: add eax, 0x9afc9; ret; 
0x0000000000411735: add eax, 0x9afde; ret; 
0x000000000041170f: add eax, 0x9afec; ret; 
0x0000000000411725: add eax, 0x9aff6; ret; 
0x00000000004116df: add eax, 0x9b024; ret; 
0x0000000000411704: add eax, 0x9b027; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0x9afec], rax; ret; 
0x00000000004116be: add eax, 0x9b069; ret; 
0x00000000004116b4: add eax, 0x9b077; add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rip + 0x9b069], eax; ret; 
0x0000000000411692: add eax, 0x9b079; mov dword ptr [rip + 0x9b093], 1; ret; 
0x0000000000411698: add eax, 0x9b093; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000410c42: add eax, 0x9b4d9; ret; 
0x0000000000418733: add eax, 0x9c08; lea rdx, [rip + 0xf171]; cmovne rax, rdx; ret; 
0x0000000000411df1: add eax, 0x9d39e; test eax, eax; jne 0x11e00; ret; 
0x00000000004117d6: add eax, 0x9d9bd; ret; 
0x00000000004116f4: add eax, 0x9da9b; ret; 
0x0000000000410d4d: add eax, 0x9e3c2; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000410d11: add eax, 0x9e3fa; cmp eax, 1; jg 0x10d1c; ret; 
0x000000000040e6e9: add eax, 0xa0a22; cmp eax, 1; jg 0xe723; ret; 
0x0000000000401f94: add eax, 0xad387; add rsp, 0x88; pop rbx; ret; 
0x00000000004016f2: add eax, 0xadfdd; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x0000000000407ab8: add eax, 0xb8c78948; mov edx, 0xf000000; add eax, 0x8944c689; ret 0xeab8; 
0x0000000000421d4a: add eax, 0xc0310000; ret; 
0x00000000004508f0: add eax, 0xc0310100; add rsp, 8; ret; 
0x000000000040f77e: add eax, 0xc0834800; add dword ptr [rax + 0x39], ecx; ret; 
0x0000000000438c0d: add eax, 0xc428d48; ret; 
0x00000000004396ed: add eax, 0xc478d48; ret; 
0x00000000004185c3: add eax, 0xc768; lea rdx, [rip + 0x11dd1]; cmovne rax, rdx; ret; 
0x000000000045f6b7: add eax, 0xd34; cmove rax, rdx; ret; 
0x0000000000417b90: add eax, 0xdfb; lea rdx, [rip + 0x24e4]; cmovne rax, rdx; ret; 
0x0000000000452730: add eax, 0xe9830000; add dword ptr [rax - 0x8ef43], eax; jmp qword ptr [rax]; 
0x000000000042a1aa: add eax, 0xef00ff2; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a1b3: add eax, 0xf7f0ff3; ret; 
0x00000000004802d9: add eax, 0xfc3f41e8; dec dword ptr [rax - 0x7d]; ret; 
0x00000000004096f6: add eax, 0xfffdc2e9; dec dword ptr [rcx - 0x77]; shr cl, 0xff; jnp 0x9702; jmp qword ptr [rsi + 0x2e]; 
0x0000000000417a2b: add eax, 0xfffec6e9; jmp qword ptr [rsi + 0x66]; 
0x0000000000414024: add eax, 0xfffee2e9; jmp qword ptr [rsi + 0xf]; 
0x0000000000406518: add eax, 0xfffefbe9; jmp qword ptr [rsi - 0x70]; 
0x0000000000415ec4: add eax, 0xffff01e9; jmp qword ptr [rsi + 0xf]; 
0x0000000000408444: add eax, 0xffff28e9; jmp qword ptr [rsi + 0xf]; 
0x000000000045dbd8: add eax, 0xffff3be9; dec dword ptr [rcx - 0x77]; shr cl, 0x8a; cmp edx, edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000040e75e: add eax, 0xffff50e9; jmp qword ptr [rsi + 0x66]; 
0x00000000004145cc: add eax, 0xffff68e9; jmp qword ptr [rsi + 0x66]; 
0x00000000004160f6: add eax, 0xfffff575; mov qword ptr [rip + 0x9667e], rax; ret; 
0x00000000004160e8: add eax, 0xfffff993; mov qword ptr [rip + 0x96694], rax; lea rax, [rip - 0xa8b]; mov qword ptr [rip + 0x9667e], rax; ret; 
0x00000000004614f1: add eax, 1; ret; 
0x00000000004614e8: add eax, 2; ret; 
0x0000000000461501: add eax, 3; ret; 
0x0000000000461094: add eax, 4; cmp edx, esi; je 0x6109f; test edx, edx; jne 0x61090; ret; 
0x000000000044f989: add eax, dword ptr [0]; ret; 
0x0000000000472fd4: add eax, dword ptr [rax]; adc byte ptr [rax - 0x73], cl; adc eax, 0x112; lea rax, [rip + 0x6b]; cmovne rax, rdx; ret; 
0x000000000046eeee: add eax, dword ptr [rax]; add bh, al; test dword ptr [rdi + rdi*8 - 1], esp; jmp qword ptr [rsi]; 
0x0000000000479bac: add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x0000000000467677: add eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; add al, 0x90; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x0000000000467649: add eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; add al, 0x90; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x0000000000473242: add eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; add eax, 0x74; cmove rax, rdx; ret; 
0x0000000000478d3a: add eax, dword ptr [rax]; add byte ptr [rax - 0x77], cl; ret 0x8548; 
0x0000000000466eda: add eax, dword ptr [rax]; add byte ptr [rax - 0x77], cl; ret; 
0x000000000046c2da: add eax, dword ptr [rax]; add byte ptr [rax - 0x77], cl; test dword ptr [rcx - 0x77], 0x4de0e8f5; stc; dec dword ptr [rax - 0x77]; ret; 
0x000000000041f317: add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000433121: add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041f345: add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x00000000004752b3: add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ror dword ptr [rax], 0x83; ret 0x4801; 
0x0000000000461543: add eax, dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000043ebad: add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000043ebad: add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x3ec00; ret; 
0x000000000043f371: add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x3f380; ret; 
0x000000000045f27c: add eax, dword ptr [rax]; add byte ptr [rbp - 0x19], dh; and r11d, 0xffffffbb; cmp r11d, 0xa; je 0x5f28c; ret; 
0x0000000000447408: add eax, dword ptr [rax]; add byte ptr [rbp - 0x7a7bf00a], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4901; 
0x0000000000458625: add eax, dword ptr [rax]; add byte ptr [rbx + rcx*4 - 0x53], cl; clc; idiv bh; dec dword ptr [rbp + 0x63]; ret 0x8948; 
0x0000000000469f03: add eax, dword ptr [rax]; add byte ptr [rbx - 0x70f0c005], al; add al, byte ptr [rax + rax]; add byte ptr [rax + 0x63], cl; ret; 
0x0000000000414e61: add eax, dword ptr [rax]; add byte ptr [rcx - 0x73], cl; push rbp; and byte ptr [rax + 0x39], cl; ret 0x860f; 
0x000000000045f265: add eax, dword ptr [rax]; add byte ptr [rcx - 0x77], al; ret; 
0x00000000004018a1: add eax, dword ptr [rax]; add byte ptr [rcx - 0x77], al; rol dword ptr [rcx - 0x77], cl; ret 0x8341; 
0x00000000004586f5: add eax, dword ptr [rax]; add byte ptr [rcx - 0x7d], al; out dx, al; add dword ptr [rax - 0x92f43], eax; jmp qword ptr [rax]; 
0x000000000045f305: add eax, dword ptr [rax]; add byte ptr [rsi + 0x80], bh; syscall; 
0x00000000004422d6: add eax, dword ptr [rax]; add dh, dh; ret 0x7402; 
0x0000000000470573: add eax, dword ptr [rax]; add dword ptr [rbx + 0x44], ebx; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000000472450: add eax, dword ptr [rax]; add dword ptr [rcx + 0x5c], eax; ret; 
0x00000000004726f7: add eax, dword ptr [rax]; add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x0000000000472821: add eax, dword ptr [rax]; add rsp, 8; ret; 
0x000000000047397f: add eax, dword ptr [rax]; add word ptr [rdx + rax*2], 1; ret; 
0x000000000047ce4c: add eax, dword ptr [rax]; cmp byte ptr [rdx + rsi], 8; jne 0x165d; mov rax, qword ptr [rax]; add rsp, 8; ret; 
0x000000000043d33c: add eax, dword ptr [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x0000000000473239: add eax, dword ptr [rax]; cmp rax, rdx; lea rdx, [rip + 0x3ab]; lea rax, [rip + 0x74]; cmove rax, rdx; ret; 
0x0000000000473976: add eax, dword ptr [rax]; jae 0x73986; mov rdx, qword ptr [rip + 0x3be37]; add word ptr [rdx + rax*2], 1; ret; 
0x000000000045a2d6: add eax, dword ptr [rax]; mov dword ptr [rbp - 0x510], 1; movzx eax, byte ptr [rsi + rax]; lea rsi, [rip + 0x4fe93]; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x0000000000472cba: add eax, dword ptr [rax]; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x0000000000472835: add eax, dword ptr [rax]; mov qword ptr [rip + 0x3ce6a], rax; ret; 
0x000000000047281a: add eax, dword ptr [rax]; mov qword ptr [rip + 0x3ce85], rax; add rsp, 8; ret; 
0x000000000045cbf3: add eax, dword ptr [rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000045d1da: add eax, dword ptr [rax]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000045d234: add eax, dword ptr [rax]; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000045cb95: add eax, dword ptr [rax]; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000043d321: add eax, dword ptr [rax]; ret; 
0x00000000004705dc: add eax, dword ptr [rax]; syscall; 
0x000000000046dedd: add eax, dword ptr [rbp - 0x7b]; dec dword ptr [rdi]; lahf; ret 0x87e; 
0x0000000000468d4d: add eax, dword ptr [rbp - 0x7b]; sal byte ptr [rbp + 0x10], cl; mov qword ptr [rbp - 0xd8], r11; call rax; 
0x0000000000402ef6: add eax, dword ptr [rbx + 0x27770af8]; lea rdx, [rip + 0x7e391]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000004402bf: add eax, dword ptr [rbx + 0x94801e0]; ret 0x8948; 
0x000000000047980f: add eax, dword ptr [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x0000000000468d4c: add eax, dword ptr [rbx]; test r10d, r10d; jne 0x68d63; mov qword ptr [rbp - 0xd8], r11; call rax; 
0x0000000000411800: add eax, dword ptr [rcx + 0x31]; ret 0x2b8; 
0x0000000000462341: add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000467f65: add eax, dword ptr [rdi]; add r13, r14; test esi, esi; jne 0x67f70; call rax; 
0x000000000046839b: add eax, dword ptr [rdi]; test ecx, ecx; jne 0x683a3; call rax; 
0x0000000000468c11: add eax, dword ptr [rdi]; test edx, edx; jne 0x68c19; call rax; 
0x000000000046851c: add eax, dword ptr [rdi]; test r11d, r11d; jne 0x68525; call rax; 
0x0000000000475089: add eax, dword ptr [rdx + 8]; pop rbp; pop r12; jmp rax; 
0x0000000000422a76: add eax, dword ptr [rsi]; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000470500: add eax, eax; mov eax, r8d; ret; 
0x0000000000442d35: add eax, ebp; jmp rax; 
0x0000000000464981: add eax, ebp; mov dword ptr [rdi], edx; sti; dec dword ptr [rax - 0x77]; ret 0x8548; 
0x0000000000442ced: add eax, ebx; jmp rax; 
0x00000000004352a8: add eax, ecx; add rax, rdi; vzeroupper; ret; 
0x0000000000411c1f: add eax, ecx; add rdx, qword ptr [rip + 0x9ab20]; cmp rax, rdx; jne 0x11c2e; ret; 
0x000000000045cb9f: add eax, ecx; jmp rax; 
0x00000000004109e1: add eax, ecx; mov qword ptr [rdi + 0x18], rsi; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x00000000004109a9: add eax, ecx; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000041fc59: add eax, ecx; ret; 
0x000000000043bd5e: add eax, ecx; sub rax, rdi; ret; 
0x00000000004615dd: add eax, ecx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000043560d: add eax, ecx; sub rax, rdx; vzeroupper; ret; 
0x0000000000420186: add eax, ecx; vzeroupper; ret; 
0x000000000041fc56: add eax, edi; add rax, rcx; ret; 
0x00000000004615da: add eax, edi; add rax, rcx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000043560a: add eax, edi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000000420183: add eax, edi; add rax, rcx; vzeroupper; ret; 
0x000000000040df2e: add eax, edi; jmp rax; 
0x000000000041fe84: add eax, edi; ret; 
0x0000000000461695: add eax, edi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x00000000004356c5: add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x00000000004202fa: add eax, edi; vzeroupper; ret; 
0x0000000000401b02: add eax, edx; jmp rax; 
0x00000000004355b6: add eax, edx; sub rax, rdi; ret; 
0x000000000046125b: add eax, edx; sub rax, rdi; shr rax, 2; ret; 
0x000000000046b1fa: add eax, esi; inc dword ptr [r8 + 0x10]; pop rbx; pop rbp; ret; 
0x000000000043d2be: add eax, esi; jmp rax; 
0x0000000000472f4b: add ebp, 0x8548fffe; sal byte ptr [rsp + rcx + 0x5b], 0x5d; pop r12; ret; 
0x000000000040f436: add ebp, ebx; retf; nop dword ptr [rax]; cmp qword ptr [rdi + 0x38], 0; je 0xf450; ret; 
0x0000000000467f68: add ebp, esi; test esi, esi; jne 0x67f70; call rax; 
0x00000000004799a1: add ebx, 8; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x000000000047a1ba: add ebx, dword ptr [rax + 0x5a]; pop rbx; ret; 
0x000000000040f4bf: add ebx, dword ptr [rbx + 0x5d]; pop r12; ret; 
0x0000000000411b31: add ebx, dword ptr [rbx + 0x5d]; ret; 
0x000000000040f94b: add ebx, dword ptr [rbx - 0x48]; add dword ptr [rax], eax; add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x000000000045e929: add ebx, eax; cli; inc dword ptr [rcx + rcx*4 - 2]; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x00000000004727d6: add ebx, eax; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000045ce75: add ebx, ebp; ret; 
0x000000000042a373: add ebx, esi; movq qword ptr [rdi], mm1; ret; 
0x000000000043d1ee: add ecx, 0x100; cmp rdx, rcx; jne 0x3d1d2; vzeroupper; ret; 
0x000000000043d02b: add ecx, 0x80; cmp rdx, rcx; jne 0x3d017; vzeroupper; ret; 
0x00000000004373a5: add ecx, dword ptr [r9 - 0x76b7fcbe]; clc; ret; 
0x0000000000463782: add ecx, dword ptr [rax + 0x29]; ret 0x8b48; 
0x00000000004129d3: add ecx, dword ptr [rax + 0x29]; ret; 
0x000000000047b1b1: add ecx, dword ptr [rax + 0x63]; ret; 
0x0000000000440b17: add ecx, dword ptr [rax - 0x77]; add eax, 0x6c571; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004373a9: add ecx, dword ptr [rax - 0x77]; clc; ret; 
0x000000000040f3fa: add ecx, dword ptr [rax - 0x7b]; push qword ptr [rsp + rax - 0x58]; add dword ptr [rsp + rbp - 0x77], esi; ret 0xc883; 
0x000000000045fee9: add ecx, dword ptr [rax - 0x7d]; ret 0x4801; 
0x000000000046c696: add ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000475058: add ecx, dword ptr [rbp - 0x3f7a00b0]; je 0x75076; lea rbx, [rbp + rdx*8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000042a0e2: add ecx, dword ptr [rbx + 0x357890e]; mov dword ptr [rdi], ecx; ret; 
0x0000000000439654: add ecx, dword ptr [rcx + 0x357890f]; lea rax, [rdi + 6]; ret; 
0x0000000000439024: add ecx, dword ptr [rcx + 0x357890f]; ret; 
0x0000000000447632: add ecx, dword ptr [rcx + 0x39]; ret 0xe075; 
0x0000000000446341: add ecx, dword ptr [rcx + 0x39]; ret; 
0x0000000000473c88: add ecx, dword ptr [rcx + rcx*4 + 3]; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x0000000000479810: add ecx, dword ptr [rcx + rcx*4 - 0x1a]; mov edi, ebp; call rax; 
0x00000000004373a6: add ecx, dword ptr [rcx - 0x76b7fcbe]; clc; ret; 
0x00000000004468a7: add ecx, dword ptr [rdi + r9 + 0x49]; ret 0xc149; 
0x00000000004468a8: add ecx, dword ptr [rdi + rcx + 0x49]; ret 0xc149; 
0x000000000043e069: add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xc085; 
0x000000000043e0c5: add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xd284; 
0x000000000041b5e0: add ecx, eax; movzx eax, byte ptr [rax + rcx + 0x40]; movzx edx, byte ptr [rdx + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000464235: add ecx, ebp; ret 0xfffd; 
0x000000000045cded: add ecx, ebp; ret; 
0x0000000000454b8c: add ecx, ebp; scasb al, byte ptr [rdi]; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x0000000000420d12: add ecx, ebx; jmp rcx; 
0x000000000044ee3d: add ecx, edi; jmp rcx; 
0x0000000000451844: add ecx, edx; jmp rcx; 
0x0000000000402784: add ecx, esi; jmp rcx; 
0x0000000000439525: add edi, 0x10; bsf rdx, rdx; lea r11, [rip + 0x4a81d]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f05: add edi, 0x10; bsf rdx, rdx; lea r11, [rip + 0x4adbd]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000043958d: add edi, 0x10; lea r11, [rip + 0x4a7b9]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000467274: add edi, 0x1c; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004395c2: add edi, 0x20; lea r11, [rip + 0x4a784]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438fa2: add edi, 0x20; lea r11, [rip + 0x4ad24]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000045f302: add edi, 0x308; mov esi, 0x80; syscall; 
0x000000000043948f: add edi, 0x30; lea r11, [rip + 0x4a8b7]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000045f41e: add edi, dword ptr [rax + 1]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000407de1: add edi, dword ptr [rsp]; mov rdi, r12; call rcx; 
0x000000000046ef7e: add edi, eax; test dword ptr [rdi + rdi*8 - 1], esp; jmp qword ptr [rsi]; 
0x000000000042bb71: add edi, edx; add rsi, rdx; lea r11, [rip + 0x57d53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b9f1: add edi, edx; add rsi, rdx; lea r11, [rip + 0x57ed3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b871: add edi, edx; add rsi, rdx; lea r11, [rip + 0x58053]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b6f2: add edi, edx; add rsi, rdx; lea r11, [rip + 0x581d2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b571: add edi, edx; add rsi, rdx; lea r11, [rip + 0x58353]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b3f1: add edi, edx; add rsi, rdx; lea r11, [rip + 0x584d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b271: add edi, edx; add rsi, rdx; lea r11, [rip + 0x58653]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b0f1: add edi, edx; add rsi, rdx; lea r11, [rip + 0x587d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042af71: add edi, edx; add rsi, rdx; lea r11, [rip + 0x58953]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042adf1: add edi, edx; add rsi, rdx; lea r11, [rip + 0x58ad3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042ac71: add edi, edx; add rsi, rdx; lea r11, [rip + 0x58c53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aaf1: add edi, edx; add rsi, rdx; lea r11, [rip + 0x58dd3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a971: add edi, edx; add rsi, rdx; lea r11, [rip + 0x58f53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a7f1: add edi, edx; add rsi, rdx; lea r11, [rip + 0x590d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a671: add edi, edx; add rsi, rdx; lea r11, [rip + 0x59253]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429091: add edi, edx; add rsi, rdx; lea r11, [rip + 0x5a333]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428f11: add edi, edx; add rsi, rdx; lea r11, [rip + 0x5a4b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428d91: add edi, edx; add rsi, rdx; lea r11, [rip + 0x5a633]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428c12: add edi, edx; add rsi, rdx; lea r11, [rip + 0x5a7b2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428a91: add edi, edx; add rsi, rdx; lea r11, [rip + 0x5a933]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428911: add edi, edx; add rsi, rdx; lea r11, [rip + 0x5aab3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428791: add edi, edx; add rsi, rdx; lea r11, [rip + 0x5ac33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428611: add edi, edx; add rsi, rdx; lea r11, [rip + 0x5adb3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428491: add edi, edx; add rsi, rdx; lea r11, [rip + 0x5af33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428311: add edi, edx; add rsi, rdx; lea r11, [rip + 0x5b0b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428191: add edi, edx; add rsi, rdx; lea r11, [rip + 0x5b233]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428011: add edi, edx; add rsi, rdx; lea r11, [rip + 0x5b3b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427e91: add edi, edx; add rsi, rdx; lea r11, [rip + 0x5b533]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427d11: add edi, edx; add rsi, rdx; lea r11, [rip + 0x5b6b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427b91: add edi, edx; add rsi, rdx; lea r11, [rip + 0x5b833]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425027: add edi, edx; add rsi, rdx; lea r11, [rip + 0x5df9d]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422657: add edi, edx; add rsi, rdx; lea r11, [rip + 0x607ad]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000406f97: add edi, edx; jmp rdi; 
0x000000000042bddc: add edi, edx; lea r11, [rip + 0x57aeb]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a537: add edi, edx; lea r11, [rip + 0x59390]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a3db: add edi, edx; lea r11, [rip + 0x594ec]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004292e8: add edi, edx; lea r11, [rip + 0x5a0df]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004276da: add edi, edx; lea r11, [rip + 0x5b8ed]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427a57: add edi, edx; lea r11, [rip + 0x5b970]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004278e5: add edi, edx; lea r11, [rip + 0x5bae2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424f3b: add edi, edx; lea r11, [rip + 0x5e08c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424e76: add edi, edx; lea r11, [rip + 0x5e151]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042256b: add edi, edx; lea r11, [rip + 0x6089c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004224a6: add edi, edx; lea r11, [rip + 0x60961]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000421761: add edi, edx; lea r11, [rip + 0x61566]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x00000000004216e7: add edi, edx; lea r11, [rip + 0x615e0]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421658: add edi, edx; lea r11, [rip + 0x6166f]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000042144d: add edi, edx; lea r11, [rip + 0x6187a]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000042131b: add edi, edx; lea r11, [rip + 0x619ac]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421255: add edi, edx; lea r11, [rip + 0x61a72]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x00000000004211d7: add edi, edx; lea r11, [rip + 0x61af0]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421140: add edi, edx; lea r11, [rip + 0x61b87]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420f44: add edi, edx; lea r11, [rip + 0x61d83]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420e13: add edi, edx; lea r11, [rip + 0x61eb4]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420d04: add edi, edx; lea r11, [rip + 0x61fc3]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000425c20: add edi, edx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d3a2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423250: add edi, edx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5fbb2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042760c: add edi, edx; sfence; lea r11, [rip + 0x5b9b8]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424c24: add edi, edx; sfence; lea r11, [rip + 0x5e1e0]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000439548: add edx, 0x10; sub rdx, rcx; lea r11, [rip + 0x4a7fb]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f28: add edx, 0x10; sub rdx, rcx; lea r11, [rip + 0x4ad9b]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000041090a: add edx, 0x60; mov rax, qword ptr [rdi]; mov qword ptr [rdx], rax; ret; 
0x0000000000411c22: add edx, dword ptr [rip + 0x9ab20]; cmp rax, rdx; jne 0x11c2e; ret; 
0x0000000000477582: add edx, eax; mov rax, rdx; pop rbx; ret; 
0x000000000045d23b: add edx, ecx; jmp rdx; 
0x000000000047db51: add edx, ecx; test dil, dil; js 0x7db78; mov qword ptr [r8], rdx; add rsp, 8; ret; 
0x000000000047fc71: add edx, ecx; test dil, dil; js 0x7fc98; mov qword ptr [r8], rdx; add rsp, 8; ret; 
0x0000000000439589: add esi, 0x10; add rdi, 0x10; lea r11, [rip + 0x4a7b9]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000004395be: add esi, 0x20; add rdi, 0x20; lea r11, [rip + 0x4a784]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f9e: add esi, 0x20; add rdi, 0x20; lea r11, [rip + 0x4ad24]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000043948b: add esi, 0x30; add rdi, 0x30; lea r11, [rip + 0x4a8b7]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000046c732: add esi, 1; test al, al; jne 0x6c707; movsx eax, byte ptr [rsi]; neg eax; ret; 
0x00000000004525ae: add esi, eax; test dword ptr [rax], edx; idiv edi; jmp qword ptr [rax]; 
0x00000000004585cf: add esi, eax; test eax, edx; idiv bh; jmp qword ptr [rax]; 
0x000000000044ffa9: add esi, ebp; mov rdx, rbp; mov rsi, r14; mov rdi, r12; call rbx; 
0x000000000042a293: add esi, ebx; movq qword ptr [rdi], mm1; ret; 
0x000000000043c0fa: add esi, ebx; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000415e01: add esi, ebx; stosq qword ptr [rdi], rax; pop rbp; ret; 
0x0000000000439501: add esi, ecx; bsf rdx, rdx; lea r11, [rip + 0x4a842]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438ee1: add esi, ecx; bsf rdx, rdx; lea r11, [rip + 0x4ade2]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438ec4: add esi, ecx; bsf rdx, rdx; lea r11, [rip + 0x4adff]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000043d41c: add esi, edi; int1; mov eax, eax; ret; 
0x000000000042bdd9: add esi, edx; add rdi, rdx; lea r11, [rip + 0x57aeb]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a534: add esi, edx; add rdi, rdx; lea r11, [rip + 0x59390]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a3d8: add esi, edx; add rdi, rdx; lea r11, [rip + 0x594ec]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004292e5: add esi, edx; add rdi, rdx; lea r11, [rip + 0x5a0df]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004276d7: add esi, edx; add rdi, rdx; lea r11, [rip + 0x5b8ed]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427a54: add esi, edx; add rdi, rdx; lea r11, [rip + 0x5b970]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004278e2: add esi, edx; add rdi, rdx; lea r11, [rip + 0x5bae2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424f38: add esi, edx; add rdi, rdx; lea r11, [rip + 0x5e08c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424e73: add esi, edx; add rdi, rdx; lea r11, [rip + 0x5e151]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422568: add esi, edx; add rdi, rdx; lea r11, [rip + 0x6089c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004224a3: add esi, edx; add rdi, rdx; lea r11, [rip + 0x60961]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042175e: add esi, edx; add rdi, rdx; lea r11, [rip + 0x61566]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x00000000004216e4: add esi, edx; add rdi, rdx; lea r11, [rip + 0x615e0]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421655: add esi, edx; add rdi, rdx; lea r11, [rip + 0x6166f]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000042144a: add esi, edx; add rdi, rdx; lea r11, [rip + 0x6187a]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421318: add esi, edx; add rdi, rdx; lea r11, [rip + 0x619ac]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421252: add esi, edx; add rdi, rdx; lea r11, [rip + 0x61a72]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x00000000004211d4: add esi, edx; add rdi, rdx; lea r11, [rip + 0x61af0]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000042113d: add esi, edx; add rdi, rdx; lea r11, [rip + 0x61b87]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420f41: add esi, edx; add rdi, rdx; lea r11, [rip + 0x61d83]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420e10: add esi, edx; add rdi, rdx; lea r11, [rip + 0x61eb4]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420d01: add esi, edx; add rdi, rdx; lea r11, [rip + 0x61fc3]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000042bb74: add esi, edx; lea r11, [rip + 0x57d53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b9f4: add esi, edx; lea r11, [rip + 0x57ed3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b874: add esi, edx; lea r11, [rip + 0x58053]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b6f5: add esi, edx; lea r11, [rip + 0x581d2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b574: add esi, edx; lea r11, [rip + 0x58353]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b3f4: add esi, edx; lea r11, [rip + 0x584d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b274: add esi, edx; lea r11, [rip + 0x58653]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b0f4: add esi, edx; lea r11, [rip + 0x587d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042af74: add esi, edx; lea r11, [rip + 0x58953]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042adf4: add esi, edx; lea r11, [rip + 0x58ad3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042ac74: add esi, edx; lea r11, [rip + 0x58c53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aaf4: add esi, edx; lea r11, [rip + 0x58dd3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a974: add esi, edx; lea r11, [rip + 0x58f53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a7f4: add esi, edx; lea r11, [rip + 0x590d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a674: add esi, edx; lea r11, [rip + 0x59253]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429094: add esi, edx; lea r11, [rip + 0x5a333]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428f14: add esi, edx; lea r11, [rip + 0x5a4b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428d94: add esi, edx; lea r11, [rip + 0x5a633]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428c15: add esi, edx; lea r11, [rip + 0x5a7b2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428a94: add esi, edx; lea r11, [rip + 0x5a933]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428914: add esi, edx; lea r11, [rip + 0x5aab3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428794: add esi, edx; lea r11, [rip + 0x5ac33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428614: add esi, edx; lea r11, [rip + 0x5adb3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428494: add esi, edx; lea r11, [rip + 0x5af33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428314: add esi, edx; lea r11, [rip + 0x5b0b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428194: add esi, edx; lea r11, [rip + 0x5b233]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428014: add esi, edx; lea r11, [rip + 0x5b3b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427e94: add esi, edx; lea r11, [rip + 0x5b533]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427d14: add esi, edx; lea r11, [rip + 0x5b6b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427b94: add esi, edx; lea r11, [rip + 0x5b833]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426550: add esi, edx; lea r11, [rip + 0x5ca77]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426400: add esi, edx; lea r11, [rip + 0x5cbc7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004262b0: add esi, edx; lea r11, [rip + 0x5cd17]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426160: add esi, edx; lea r11, [rip + 0x5ce67]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426010: add esi, edx; lea r11, [rip + 0x5cfb7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425ec0: add esi, edx; lea r11, [rip + 0x5d107]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425d70: add esi, edx; lea r11, [rip + 0x5d257]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425ad0: add esi, edx; lea r11, [rip + 0x5d4f7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425980: add esi, edx; lea r11, [rip + 0x5d647]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425830: add esi, edx; lea r11, [rip + 0x5d797]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004256e0: add esi, edx; lea r11, [rip + 0x5d8e7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425590: add esi, edx; lea r11, [rip + 0x5da37]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425440: add esi, edx; lea r11, [rip + 0x5db87]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004252f0: add esi, edx; lea r11, [rip + 0x5dcd7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042502a: add esi, edx; lea r11, [rip + 0x5df9d]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423b80: add esi, edx; lea r11, [rip + 0x5f287]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423a30: add esi, edx; lea r11, [rip + 0x5f3d7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004238e0: add esi, edx; lea r11, [rip + 0x5f527]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423790: add esi, edx; lea r11, [rip + 0x5f677]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423640: add esi, edx; lea r11, [rip + 0x5f7c7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004234f0: add esi, edx; lea r11, [rip + 0x5f917]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004233a0: add esi, edx; lea r11, [rip + 0x5fa67]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423100: add esi, edx; lea r11, [rip + 0x5fd07]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422fb0: add esi, edx; lea r11, [rip + 0x5fe57]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422e60: add esi, edx; lea r11, [rip + 0x5ffa7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422d10: add esi, edx; lea r11, [rip + 0x600f7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422bc0: add esi, edx; lea r11, [rip + 0x60247]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422a70: add esi, edx; lea r11, [rip + 0x60397]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422920: add esi, edx; lea r11, [rip + 0x604e7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042265a: add esi, edx; lea r11, [rip + 0x607ad]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043bcad: add esp, 0x100; sub rax, rdx; ret; 
0x00000000004091ac: add esp, 0x10; mov eax, r8d; pop rbx; pop rbp; pop r12; ret; 
0x000000000044db58: add esp, 0x10; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x0000000000413f20: add esp, 0x10; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000473c8d: add esp, 0x10; mov rax, r8; pop rbx; ret; 
0x000000000044db34: add esp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x00000000004144cb: add esp, 0x10; pop rbp; ret; 
0x000000000040f0d2: add esp, 0x10; pop rbx; jmp rax; 
0x000000000040a656: add esp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000443b97: add esp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000000407b08: add esp, 0x118; ret; 
0x000000000044fd12: add esp, 0x148; ret; 
0x00000000004167be: add esp, 0x18; jmp rax; 
0x000000000047dc81: add esp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000047dd35: add esp, 0x18; pop rbx; pop rbp; mov eax, r8d; ret; 
0x0000000000457185: add esp, 0x18; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000040b057: add esp, 0x18; pop rbx; pop rbp; ret; 
0x00000000004167b1: add esp, 0x18; ret; 
0x000000000047caae: add esp, 0x198; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000004438ee: add esp, 0x1d0; pop rbx; pop rbp; pop r12; ret; 
0x000000000040f6ae: add esp, 0x20; pop rbx; jmp rax; 
0x0000000000443c49: add esp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000043d942: add esp, 0x20; pop rbx; ret; 
0x000000000040f8d0: add esp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x000000000047d064: add esp, 0x278; mov rax, rbp; pop rbx; pop rbp; ret; 
0x000000000047d071: add esp, 0x278; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000043de91: add esp, 0x28; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000043e84a: add esp, 0x28; ret; 
0x000000000046d72d: add esp, 0x30; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000004786c0: add esp, 0x30; mov rax, r12; pop r12; ret; 
0x000000000046d491: add esp, 0x30; pop rbp; ret; 
0x000000000040eb4c: add esp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000000047a9b9: add esp, 0x38; pop rbx; pop r14; ret; 
0x0000000000410799: add esp, 0x38; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000040b90e: add esp, 0x38; pop rbx; pop rbp; ret; 
0x00000000004621ea: add esp, 0x38; ret; 
0x000000000046cefc: add esp, 0x48; jmp qword ptr [rax]; 
0x000000000043e42d: add esp, 0x48; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000046d11e: add esp, 0x48; ret; 
0x000000000046ce8a: add esp, 0x58; jmp qword ptr [rax]; 
0x000000000043f531: add esp, 0x58; ret; 
0x000000000043e978: add esp, 0x68; pop rbp; pop r12; ret; 
0x00000000004609e6: add esp, 0x68; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000043f3fa: add esp, 0x68; ret; 
0x0000000000460c5b: add esp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x0000000000440a1d: add esp, 0x88; mov rax, r8; pop rbx; pop rbp; ret; 
0x0000000000401f9a: add esp, 0x88; pop rbx; ret; 
0x0000000000402842: add esp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x000000000044fdfb: add esp, 0x98; ret; 
0x000000000045d783: add esp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000461c6e: add esp, 0xa8; pop rbp; pop r12; ret; 
0x000000000040cace: add esp, 0xa8; pop rbx; pop rbp; ret; 
0x000000000044d337: add esp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000000473ade: add esp, 0xc8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000408f77: add esp, 0xd8; ret; 
0x0000000000409419: add esp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000045da11: add esp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000045d9f3: add esp, 8; mov eax, 1; pop rbx; pop rbp; ret; 
0x000000000040b3e4: add esp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000046d691: add esp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000004097d1: add esp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000043f705: add esp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000040cbf7: add esp, 8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x0000000000478609: add esp, 8; movzx eax, al; neg eax; ret; 
0x0000000000461ace: add esp, 8; pop rbp; pop r12; ret; 
0x000000000040d2f2: add esp, 8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000403093: add esp, 8; pop rbx; pop rbp; ret; 
0x0000000000401013: add esp, 8; ret; 
0x0000000000415777: add esp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000046a679: add esp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000408685: add esp, 8; xor r8d, r8d; mov rax, r8; pop rbx; pop rbp; ret; 
0x00000000004500d1: add esp, edi; mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x000000000042cfa5: add qword ptr [r10 - 0x2f], r12; jl 0x2cff3; adc dword ptr [rcx - 2], edx; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000045cb93: add qword ptr [r11], 0; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000004185a4: add qword ptr [r8], rax; and dh, 8; je 0x185d8; ret; 
0x0000000000418825: add qword ptr [rax], r8; lea rdx, [rip + 0x17041]; cmovne rax, rdx; ret; 
0x0000000000401cce: add qword ptr [rax], rax; nop; leave; ret; 
0x0000000000460af7: add qword ptr [rcx - 0x75], rcx; cmp al, 0x24; lea r9, [rsp + 0x28]; call rbx; 
0x000000000040861c: add qword ptr [rip + 0xa669c], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000042a372: add r11d, r14d; movq qword ptr [rdi], mm1; ret; 
0x00000000004500d0: add r12, r15; mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x000000000046d72c: add r12d, 0x30; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000467f67: add r13, r14; test esi, esi; jne 0x67f70; call rax; 
0x000000000044ffa8: add r14, r13; mov rdx, rbp; mov rsi, r14; mov rdi, r12; call rbx; 
0x000000000042a302: add r14b, r11b; movq qword ptr [rdi], mm1; ret; 
0x000000000042a292: add r14d, r11d; movq qword ptr [rdi], mm1; ret; 
0x0000000000407de0: add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x000000000041f344: add r8, qword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000422bc5: add r8b, byte ptr [r14]; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000473f60: add r8b, byte ptr [r8]; call 0x2df0; nop dword ptr [rax + rax]; ret; 
0x0000000000418685: add r8b, byte ptr [r8]; cmovne rax, rdx; ret; 
0x0000000000439c47: add r8b, byte ptr [r8]; lea rax, [rdi + 2]; vzeroupper; ret; 
0x000000000041867e: add r8b, byte ptr [r8]; lea rax, [rip + 0x24738]; cmovne rax, rdx; ret; 
0x0000000000473f59: add r8b, byte ptr [r8]; lea rdi, [rip + 0x2451d]; call 0x2df0; nop dword ptr [rax + rax]; ret; 
0x0000000000435a57: add r8b, byte ptr [r8]; vzeroupper; ret; 
0x00000000004704ff: add r8d, eax; mov eax, r8d; ret; 
0x000000000046c4af: add r9b, byte ptr [r8 - 0x7d]; ret; 
0x000000000046c695: add r9d, dword ptr [r8 - 0x7d]; ret; 
0x000000000043bd20: add rax, 0x10; sub edx, esi; cmp edx, ecx; jle 0x3bd3c; movsxd rax, ecx; ret; 
0x000000000044fa25: add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x00000000004616b4: add rax, 0x20; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x00000000004356d4: add rax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000420309: add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x00000000004616d4: add rax, 0x40; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x00000000004356f4: add rax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000420329: add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000461720: add rax, 0x60; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000435740: add rax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000420349: add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000004614f0: add rax, 1; ret; 
0x00000000004614e7: add rax, 2; ret; 
0x0000000000461500: add rax, 3; ret; 
0x0000000000461093: add rax, 4; cmp edx, esi; je 0x6109f; test edx, edx; jne 0x61090; ret; 
0x000000000044f988: add rax, qword ptr [0]; ret; 
0x0000000000468d4b: add rax, qword ptr [r11]; test r10d, r10d; jne 0x68d63; mov qword ptr [rbp - 0xd8], r11; call rax; 
0x0000000000467f64: add rax, qword ptr [r15]; add r13, r14; test esi, esi; jne 0x67f70; call rax; 
0x000000000046839a: add rax, qword ptr [r15]; test ecx, ecx; jne 0x683a3; call rax; 
0x0000000000468c10: add rax, qword ptr [r15]; test edx, edx; jne 0x68c19; call rax; 
0x000000000046851b: add rax, qword ptr [r15]; test r11d, r11d; jne 0x68525; call rax; 
0x0000000000478d39: add rax, qword ptr [rax]; add byte ptr [rax - 0x77], cl; ret 0x8548; 
0x000000000047980e: add rax, qword ptr [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x0000000000475088: add rax, qword ptr [rdx + 8]; pop rbp; pop r12; jmp rax; 
0x000000000044f987: add rax, qword ptr fs:[0]; ret; 
0x000000000047b153: add rax, r13; jmp rax; 
0x000000000047b18f: add rax, r14; jmp rax; 
0x000000000047b8ed: add rax, r15; jmp rax; 
0x0000000000442d34: add rax, rbp; jmp rax; 
0x0000000000442cec: add rax, rbx; jmp rax; 
0x00000000004352a7: add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x0000000000411c1e: add rax, rcx; add rdx, qword ptr [rip + 0x9ab20]; cmp rax, rdx; jne 0x11c2e; ret; 
0x000000000045cb9e: add rax, rcx; jmp rax; 
0x00000000004109e0: add rax, rcx; mov qword ptr [rdi + 0x18], rsi; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x00000000004109a8: add rax, rcx; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000041fc58: add rax, rcx; ret; 
0x000000000043bd5d: add rax, rcx; sub rax, rdi; ret; 
0x00000000004615dc: add rax, rcx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000043560c: add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000000420185: add rax, rcx; vzeroupper; ret; 
0x000000000041fc55: add rax, rdi; add rax, rcx; ret; 
0x00000000004615d9: add rax, rdi; add rax, rcx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000435609: add rax, rdi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000000420182: add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x000000000040df2d: add rax, rdi; jmp rax; 
0x000000000041fe83: add rax, rdi; ret; 
0x0000000000461694: add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x00000000004356c4: add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000004202f9: add rax, rdi; vzeroupper; ret; 
0x0000000000401b01: add rax, rdx; jmp rax; 
0x00000000004355b5: add rax, rdx; sub rax, rdi; ret; 
0x000000000046125a: add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x000000000043d2bd: add rax, rsi; jmp rax; 
0x00000000004799a0: add rbx, 8; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x000000000043d1ed: add rcx, 0x100; cmp rdx, rcx; jne 0x3d1d2; vzeroupper; ret; 
0x000000000043d02a: add rcx, 0x80; cmp rdx, rcx; jne 0x3d017; vzeroupper; ret; 
0x0000000000420d11: add rcx, r11; jmp rcx; 
0x000000000041b5df: add rcx, r8; movzx eax, byte ptr [rax + rcx + 0x40]; movzx edx, byte ptr [rdx + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000044ee3c: add rcx, rdi; jmp rcx; 
0x0000000000451843: add rcx, rdx; jmp rcx; 
0x0000000000402783: add rcx, rsi; jmp rcx; 
0x0000000000439524: add rdi, 0x10; bsf rdx, rdx; lea r11, [rip + 0x4a81d]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f04: add rdi, 0x10; bsf rdx, rdx; lea r11, [rip + 0x4adbd]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000043958c: add rdi, 0x10; lea r11, [rip + 0x4a7b9]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000467273: add rdi, 0x1c; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004395c1: add rdi, 0x20; lea r11, [rip + 0x4a784]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438fa1: add rdi, 0x20; lea r11, [rip + 0x4ad24]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000045f301: add rdi, 0x308; mov esi, 0x80; syscall; 
0x000000000043948e: add rdi, 0x30; lea r11, [rip + 0x4a8b7]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000406f96: add rdi, r10; jmp rdi; 
0x000000000042bb70: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x57d53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b9f0: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x57ed3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b870: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x58053]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b6f1: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x581d2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b570: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x58353]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b3f0: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x584d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b270: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x58653]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b0f0: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x587d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042af70: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x58953]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042adf0: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x58ad3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042ac70: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x58c53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aaf0: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x58dd3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a970: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x58f53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a7f0: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x590d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a670: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x59253]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429090: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x5a333]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428f10: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x5a4b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428d90: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x5a633]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428c11: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x5a7b2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428a90: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x5a933]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428910: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x5aab3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428790: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x5ac33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428610: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x5adb3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428490: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x5af33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428310: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x5b0b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428190: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x5b233]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428010: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x5b3b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427e90: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x5b533]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427d10: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x5b6b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427b90: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x5b833]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425026: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x5df9d]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422656: add rdi, rdx; add rsi, rdx; lea r11, [rip + 0x607ad]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bddb: add rdi, rdx; lea r11, [rip + 0x57aeb]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a536: add rdi, rdx; lea r11, [rip + 0x59390]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a3da: add rdi, rdx; lea r11, [rip + 0x594ec]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004292e7: add rdi, rdx; lea r11, [rip + 0x5a0df]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004276d9: add rdi, rdx; lea r11, [rip + 0x5b8ed]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427a56: add rdi, rdx; lea r11, [rip + 0x5b970]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004278e4: add rdi, rdx; lea r11, [rip + 0x5bae2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424f3a: add rdi, rdx; lea r11, [rip + 0x5e08c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424e75: add rdi, rdx; lea r11, [rip + 0x5e151]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042256a: add rdi, rdx; lea r11, [rip + 0x6089c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004224a5: add rdi, rdx; lea r11, [rip + 0x60961]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000421760: add rdi, rdx; lea r11, [rip + 0x61566]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x00000000004216e6: add rdi, rdx; lea r11, [rip + 0x615e0]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421657: add rdi, rdx; lea r11, [rip + 0x6166f]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000042144c: add rdi, rdx; lea r11, [rip + 0x6187a]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000042131a: add rdi, rdx; lea r11, [rip + 0x619ac]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421254: add rdi, rdx; lea r11, [rip + 0x61a72]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x00000000004211d6: add rdi, rdx; lea r11, [rip + 0x61af0]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000042113f: add rdi, rdx; lea r11, [rip + 0x61b87]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420f43: add rdi, rdx; lea r11, [rip + 0x61d83]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420e12: add rdi, rdx; lea r11, [rip + 0x61eb4]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420d03: add rdi, rdx; lea r11, [rip + 0x61fc3]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000425c1f: add rdi, rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d3a2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042324f: add rdi, rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5fbb2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042760b: add rdi, rdx; sfence; lea r11, [rip + 0x5b9b8]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424c23: add rdi, rdx; sfence; lea r11, [rip + 0x5e1e0]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000439547: add rdx, 0x10; sub rdx, rcx; lea r11, [rip + 0x4a7fb]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f27: add rdx, 0x10; sub rdx, rcx; lea r11, [rip + 0x4ad9b]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000410909: add rdx, 0x60; mov rax, qword ptr [rdi]; mov qword ptr [rdx], rax; ret; 
0x0000000000411c21: add rdx, qword ptr [rip + 0x9ab20]; cmp rax, rdx; jne 0x11c2e; ret; 
0x0000000000477581: add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x000000000047db50: add rdx, r9; test dil, dil; js 0x7db78; mov qword ptr [r8], rdx; add rsp, 8; ret; 
0x000000000047fc70: add rdx, r9; test dil, dil; js 0x7fc98; mov qword ptr [r8], rdx; add rsp, 8; ret; 
0x000000000045d23a: add rdx, rcx; jmp rdx; 
0x0000000000439588: add rsi, 0x10; add rdi, 0x10; lea r11, [rip + 0x4a7b9]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000004395bd: add rsi, 0x20; add rdi, 0x20; lea r11, [rip + 0x4a784]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f9d: add rsi, 0x20; add rdi, 0x20; lea r11, [rip + 0x4ad24]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000043948a: add rsi, 0x30; add rdi, 0x30; lea r11, [rip + 0x4a8b7]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000046c731: add rsi, 1; test al, al; jne 0x6c707; movsx eax, byte ptr [rsi]; neg eax; ret; 
0x0000000000439500: add rsi, rcx; bsf rdx, rdx; lea r11, [rip + 0x4a842]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438ee0: add rsi, rcx; bsf rdx, rdx; lea r11, [rip + 0x4ade2]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438ec3: add rsi, rcx; bsf rdx, rdx; lea r11, [rip + 0x4adff]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000042bdd8: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x57aeb]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a533: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x59390]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a3d7: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x594ec]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004292e4: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x5a0df]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004276d6: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x5b8ed]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427a53: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x5b970]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004278e1: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x5bae2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424f37: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x5e08c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424e72: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x5e151]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422567: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x6089c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004224a2: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x60961]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042175d: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x61566]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x00000000004216e3: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x615e0]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421654: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x6166f]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421449: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x6187a]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421317: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x619ac]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421251: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x61a72]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x00000000004211d3: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x61af0]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000042113c: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x61b87]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420f40: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x61d83]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420e0f: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x61eb4]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420d00: add rsi, rdx; add rdi, rdx; lea r11, [rip + 0x61fc3]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000042bb73: add rsi, rdx; lea r11, [rip + 0x57d53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b9f3: add rsi, rdx; lea r11, [rip + 0x57ed3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b873: add rsi, rdx; lea r11, [rip + 0x58053]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b6f4: add rsi, rdx; lea r11, [rip + 0x581d2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b573: add rsi, rdx; lea r11, [rip + 0x58353]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b3f3: add rsi, rdx; lea r11, [rip + 0x584d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b273: add rsi, rdx; lea r11, [rip + 0x58653]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b0f3: add rsi, rdx; lea r11, [rip + 0x587d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042af73: add rsi, rdx; lea r11, [rip + 0x58953]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042adf3: add rsi, rdx; lea r11, [rip + 0x58ad3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042ac73: add rsi, rdx; lea r11, [rip + 0x58c53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aaf3: add rsi, rdx; lea r11, [rip + 0x58dd3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a973: add rsi, rdx; lea r11, [rip + 0x58f53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a7f3: add rsi, rdx; lea r11, [rip + 0x590d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a673: add rsi, rdx; lea r11, [rip + 0x59253]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429093: add rsi, rdx; lea r11, [rip + 0x5a333]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428f13: add rsi, rdx; lea r11, [rip + 0x5a4b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428d93: add rsi, rdx; lea r11, [rip + 0x5a633]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428c14: add rsi, rdx; lea r11, [rip + 0x5a7b2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428a93: add rsi, rdx; lea r11, [rip + 0x5a933]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428913: add rsi, rdx; lea r11, [rip + 0x5aab3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428793: add rsi, rdx; lea r11, [rip + 0x5ac33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428613: add rsi, rdx; lea r11, [rip + 0x5adb3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428493: add rsi, rdx; lea r11, [rip + 0x5af33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428313: add rsi, rdx; lea r11, [rip + 0x5b0b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428193: add rsi, rdx; lea r11, [rip + 0x5b233]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428013: add rsi, rdx; lea r11, [rip + 0x5b3b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427e93: add rsi, rdx; lea r11, [rip + 0x5b533]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427d13: add rsi, rdx; lea r11, [rip + 0x5b6b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427b93: add rsi, rdx; lea r11, [rip + 0x5b833]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042654f: add rsi, rdx; lea r11, [rip + 0x5ca77]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004263ff: add rsi, rdx; lea r11, [rip + 0x5cbc7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004262af: add rsi, rdx; lea r11, [rip + 0x5cd17]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042615f: add rsi, rdx; lea r11, [rip + 0x5ce67]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042600f: add rsi, rdx; lea r11, [rip + 0x5cfb7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425ebf: add rsi, rdx; lea r11, [rip + 0x5d107]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425d6f: add rsi, rdx; lea r11, [rip + 0x5d257]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425acf: add rsi, rdx; lea r11, [rip + 0x5d4f7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042597f: add rsi, rdx; lea r11, [rip + 0x5d647]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042582f: add rsi, rdx; lea r11, [rip + 0x5d797]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004256df: add rsi, rdx; lea r11, [rip + 0x5d8e7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042558f: add rsi, rdx; lea r11, [rip + 0x5da37]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042543f: add rsi, rdx; lea r11, [rip + 0x5db87]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004252ef: add rsi, rdx; lea r11, [rip + 0x5dcd7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425029: add rsi, rdx; lea r11, [rip + 0x5df9d]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423b7f: add rsi, rdx; lea r11, [rip + 0x5f287]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423a2f: add rsi, rdx; lea r11, [rip + 0x5f3d7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004238df: add rsi, rdx; lea r11, [rip + 0x5f527]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042378f: add rsi, rdx; lea r11, [rip + 0x5f677]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042363f: add rsi, rdx; lea r11, [rip + 0x5f7c7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004234ef: add rsi, rdx; lea r11, [rip + 0x5f917]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042339f: add rsi, rdx; lea r11, [rip + 0x5fa67]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004230ff: add rsi, rdx; lea r11, [rip + 0x5fd07]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422faf: add rsi, rdx; lea r11, [rip + 0x5fe57]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422e5f: add rsi, rdx; lea r11, [rip + 0x5ffa7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422d0f: add rsi, rdx; lea r11, [rip + 0x600f7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422bbf: add rsi, rdx; lea r11, [rip + 0x60247]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422a6f: add rsi, rdx; lea r11, [rip + 0x60397]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042291f: add rsi, rdx; lea r11, [rip + 0x604e7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422659: add rsi, rdx; lea r11, [rip + 0x607ad]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043bcac: add rsp, 0x100; sub rax, rdx; ret; 
0x00000000004091ab: add rsp, 0x10; mov eax, r8d; pop rbx; pop rbp; pop r12; ret; 
0x000000000044db57: add rsp, 0x10; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x0000000000413f1f: add rsp, 0x10; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000473c8c: add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x000000000044db33: add rsp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x00000000004144ca: add rsp, 0x10; pop rbp; ret; 
0x000000000040f0d1: add rsp, 0x10; pop rbx; jmp rax; 
0x000000000040a655: add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000443b96: add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000000407b07: add rsp, 0x118; ret; 
0x000000000044fd11: add rsp, 0x148; ret; 
0x00000000004167bd: add rsp, 0x18; jmp rax; 
0x000000000047dc80: add rsp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000047dd34: add rsp, 0x18; pop rbx; pop rbp; mov eax, r8d; ret; 
0x0000000000457184: add rsp, 0x18; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000040b056: add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000004167b0: add rsp, 0x18; ret; 
0x000000000047caad: add rsp, 0x198; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000004438ed: add rsp, 0x1d0; pop rbx; pop rbp; pop r12; ret; 
0x000000000040f6ad: add rsp, 0x20; pop rbx; jmp rax; 
0x0000000000443c48: add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000043d941: add rsp, 0x20; pop rbx; ret; 
0x000000000040f8cf: add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x000000000047d063: add rsp, 0x278; mov rax, rbp; pop rbx; pop rbp; ret; 
0x000000000047d070: add rsp, 0x278; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000043de90: add rsp, 0x28; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000043e849: add rsp, 0x28; ret; 
0x00000000004786bf: add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x000000000046d490: add rsp, 0x30; pop rbp; ret; 
0x000000000040eb4b: add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000000047a9b8: add rsp, 0x38; pop rbx; pop r14; ret; 
0x0000000000410798: add rsp, 0x38; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000040b90d: add rsp, 0x38; pop rbx; pop rbp; ret; 
0x00000000004621e9: add rsp, 0x38; ret; 
0x000000000046cefb: add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000043e42c: add rsp, 0x48; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000046d11d: add rsp, 0x48; ret; 
0x000000000046ce89: add rsp, 0x58; jmp qword ptr [rax]; 
0x000000000043f530: add rsp, 0x58; ret; 
0x000000000043e977: add rsp, 0x68; pop rbp; pop r12; ret; 
0x00000000004609e5: add rsp, 0x68; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000043f3f9: add rsp, 0x68; ret; 
0x0000000000460c5a: add rsp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x0000000000440a1c: add rsp, 0x88; mov rax, r8; pop rbx; pop rbp; ret; 
0x0000000000401f99: add rsp, 0x88; pop rbx; ret; 
0x0000000000402841: add rsp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x000000000044fdfa: add rsp, 0x98; ret; 
0x000000000045d782: add rsp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000461c6d: add rsp, 0xa8; pop rbp; pop r12; ret; 
0x000000000040cacd: add rsp, 0xa8; pop rbx; pop rbp; ret; 
0x000000000044d336: add rsp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000000473add: add rsp, 0xc8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000408f76: add rsp, 0xd8; ret; 
0x0000000000409418: add rsp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000045da10: add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000045d9f2: add rsp, 8; mov eax, 1; pop rbx; pop rbp; ret; 
0x000000000040b3e3: add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000046d690: add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000004097d0: add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000043f704: add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000040cbf6: add rsp, 8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x0000000000478608: add rsp, 8; movzx eax, al; neg eax; ret; 
0x0000000000461acd: add rsp, 8; pop rbp; pop r12; ret; 
0x000000000040d2f1: add rsp, 8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000403092: add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000401012: add rsp, 8; ret; 
0x0000000000415776: add rsp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000046a678: add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000408684: add rsp, 8; xor r8d, r8d; mov rax, r8; pop rbx; pop rbp; ret; 
0x0000000000473981: add word ptr [rdx + rax*2], 1; ret; 
0x000000000045a189: and al, 0; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000443bac: and al, 0; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; and al, 0x10; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x000000000045e96e: and al, 0; add byte ptr [rax], al; call qword ptr [rax + 0x68]; 
0x000000000045ea87: and al, 0; add byte ptr [rax], al; mov esi, 0xffffffff; call qword ptr [rax + 0x18]; 
0x000000000040af5b: and al, 0; add byte ptr [rax], al; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x000000000047cf47: and al, 0x10; add rsp, 0x28; ret; 
0x000000000043fc73: and al, 0x10; call rax; 
0x0000000000413acd: and al, 0x10; mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp], rdi; call rax; 
0x000000000043eb0f: and al, 0x10; mov r8d, eax; mov edi, dword ptr [rsp + 8]; mov eax, 1; syscall; 
0x000000000043ea6f: and al, 0x10; mov r8d, eax; mov edi, dword ptr [rsp + 8]; xor eax, eax; syscall; 
0x00000000004025a0: and al, 0x10; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000443bb4: and al, 0x10; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x0000000000443b57: and al, 0x10; mov rdi, qword ptr [rsp + 0x18]; call rcx; 
0x000000000040f6d8: and al, 0x10; mov rdi, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000000460f5d: and al, 0x10; mov rdi, rbp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x000000000045027d: and al, 0x10; mov rdx, rbp; mov rdi, r12; call rbx; 
0x0000000000460c8f: and al, 0x10; push 1; push 0; lea rcx, [rax + 4]; lea r9, [rsp + 0x20]; call rbx; 
0x0000000000460c15: and al, 0x10; push 1; xor edx, edx; push 1; lea r9, [rsp + 0x20]; call rbx; 
0x00000000004167bb: and al, 0x18; add rsp, 0x18; jmp rax; 
0x000000000046a4b6: and al, 0x18; call 0x69de0; add rsp, 0xd8; ret; 
0x00000000004025a5: and al, 0x18; call rax; 
0x0000000000460f65: and al, 0x18; call rbx; 
0x0000000000443b5c: and al, 0x18; call rcx; 
0x000000000043fc62: and al, 0x18; mov dword ptr [rsp + 0xc], r8d; mov rdi, r15; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x000000000043dff3: and al, 0x18; mov rcx, r12; mov rdx, r13; call rbx; 
0x000000000043eb0a: and al, 0x18; mov rsi, qword ptr [rsp + 0x10]; mov r8d, eax; mov edi, dword ptr [rsp + 8]; mov eax, 1; syscall; 
0x000000000043ea6a: and al, 0x18; mov rsi, qword ptr [rsp + 0x10]; mov r8d, eax; mov edi, dword ptr [rsp + 8]; xor eax, eax; syscall; 
0x000000000040f6d3: and al, 0x18; mov rsi, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000000446f22: and al, 0x18; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000416263: and al, 0x18; pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000000444108: and al, 0x18; xor r8d, r8d; call rbx; 
0x000000000043e172: and al, 0x18; xor r8d, r8d; mov rdi, rbp; call rbx; 
0x000000000044db31: and al, 0x20; add rsp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x0000000000446487: and al, 0x20; call rax; 
0x0000000000460c20: and al, 0x20; call rbx; 
0x000000000043f3d3: and al, 0x20; cmp esi, 9; je 0x3f400; mov eax, 0x48; syscall; 
0x0000000000446f31: and al, 0x28; call rax; 
0x0000000000460b00: and al, 0x28; call rbx; 
0x000000000046ceea: and al, 0x28; mov r11, qword ptr [rsp + 0x30]; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000046ce78: and al, 0x28; mov r11, qword ptr [rsp + 0x30]; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000416fb3: and al, 0x28; mov rdi, r12; call rax; 
0x0000000000462158: and al, 0x28; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x0000000000460e1a: and al, 0x30; call rbx; 
0x000000000043f3ce: and al, 0x30; mov qword ptr [rsp + 0x20], rax; cmp esi, 9; je 0x3f400; mov eax, 0x48; syscall; 
0x000000000046ceef: and al, 0x30; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000046ce7d: and al, 0x30; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000447ac2: and al, 0x30; mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044a50c: and al, 0x30; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000046cef4: and al, 0x38; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000046ce82: and al, 0x38; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x000000000044988f: and al, 0x38; mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x00000000004186f8: and al, 0x3d; add al, byte ptr [rax]; lea rax, [rip + 0x23d5d]; cmove rax, rdx; ret; 
0x000000000046cef9: and al, 0x40; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000046ce87: and al, 0x40; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000449899: and al, 0x40; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000447ac7: and al, 0x40; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000045fe24: and al, 0x41; pop rsp; pop r13; pop r14; ret; 
0x000000000040f0f8: and al, 0x48; add esp, 0x10; pop rbx; jmp rax; 
0x000000000047a9f0: and al, 0x48; add esp, 0x38; pop rbx; pop r14; ret; 
0x000000000047a71b: and al, 0x48; add esp, 0x38; ret; 
0x0000000000471f96: and al, 0x48; cmp dword ptr [rdi], ecx; test ah, ah; add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret 0xffe8; 
0x000000000043fc6f: and al, 0x48; mov dword ptr [rsp + 0x10], ebx; call rax; 
0x000000000040ceea: and al, 0x48; mov edi, ebp; call rax; 
0x0000000000472dbb: and al, 0x48; mov edx, dword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x0000000000447acc: and al, 0x48; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000449894: and al, 0x48; mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000460afc: and al, 0x4c; lea ecx, [rsp + 0x28]; call rbx; 
0x0000000000407de3: and al, 0x4c; mov edi, esp; call rcx; 
0x000000000047f315: and al, 0x4c; mov edx, edi; mov rsi, qword ptr [r12 + rbp*8 + 0x10]; mov rdi, r13; call rax; 
0x0000000000407c64: and al, 0x4c; mov edx, esi; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000040f5d1: and al, 0x4d; lea edi, [rsp + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x000000000047cd41: and al, 0x4d; mov eax, ebp; mov rcx, r12; mov esi, 0xa; mov edi, 1; call rax; 
0x000000000044a511: and al, 0x50; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044647d: and al, 0x50; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000446f27: and al, 0x50; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000446482: and al, 0x58; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000446f2c: and al, 0x58; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x00000000004469bc: and al, 0x58; mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000475086: and al, 0x5b; add rax, qword ptr [rdx + 8]; pop rbp; pop r12; jmp rax; 
0x0000000000411b4d: and al, 0x5d; mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x00000000004469c1: and al, 0x60; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x00000000004469b7: and al, 0x68; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000047cc13: and al, 0x78; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000447f1c: and al, 0x80; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x00000000004484f1: and al, 0x80; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x0000000000448d4b: and al, 0x80; add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x50; dec dword ptr [rcx - 0x7d]; ret; 
0x000000000044e381: and al, 0x80; lea rax, [rip + 0x5d8d6]; mov rax, qword ptr [rax + r14*8]; test rax, rax; je 0x4e395; call rax; 
0x000000000044d9eb: and al, 0x83; call 0x84762f3; pop rbx; ret; 
0x000000000044594c: and al, 0x84; ror byte ptr [rdi], 0x84; ret; 
0x000000000046a107: and al, 0x89; ret 0xc083; 
0x000000000046de9b: and al, 0xa0; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; ret 0x22; 
0x000000000046f223: and al, 0xa0; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x0000000000438fa8: and al, 0xad; add al, 0; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000004116e0: and al, 0xb0; or dword ptr [rax], eax; ret; 
0x0000000000463728: and al, 0xb8; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret; 
0x0000000000463fba: and al, 0xc0; add byte ptr [rax], al; add dh, dh; ret 0x7404; 
0x000000000043ebf1: and al, 0xc; add rsp, 0x18; ret; 
0x000000000043ebc6: and al, 0xc; call 0x5f260; mov edi, dword ptr [rsp + 0xc]; mov r8d, eax; mov eax, 3; syscall; 
0x000000000043ebe8: and al, 0xc; call 0x5f2c0; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000043ebcf: and al, 0xc; mov r8d, eax; mov eax, 3; syscall; 
0x000000000040f0f3: and al, 0xc; mov rdi, qword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000043fc67: and al, 0xc; mov rdi, r15; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x000000000040259b: and al, 0xc; mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000459b7d: and al, 0xd8; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x00000000004541c9: and al, 0xd8; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x0000000000463fad: and al, 0xe8; add eax, dword ptr [rax]; add dh, dh; ret 0x7402; 
0x000000000047a712: and al, 0xe8; sbb byte ptr [rax + rax], al; add byte ptr [rax - 0x75], cl; add al, 0x24; add rsp, 0x38; ret; 
0x0000000000442c60: and al, 0xe9; mov al, byte ptr [rbx + 0x2e660002]; nop dword ptr [rax + rax]; ret; 
0x00000000004809b1: and al, 0xf8; jmp qword ptr [rsi + 0x2e]; 
0x0000000000413e51: and al, 0xf; xchg eax, ebp; ror byte ptr [rdi], 0xb6; rol byte ptr [rbp + 0xfcd75c0], 0x1f; add byte ptr [rax - 0x39], cl; ret; 
0x0000000000442d27: and al, 1; cmp rax, 0x17; ja 0x42d00; movsxd rax, dword ptr [rbp + rax*4]; add rax, rbp; jmp rax; 
0x000000000044ff55: and al, 1; mov rdi, r12; call rbx; 
0x000000000040f5d5: and al, 1; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x000000000040f6dd: and al, 8; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000043ea94: and al, 8; add rsp, 0x28; ret; 
0x000000000043ea8a: and al, 8; call 0x5f2c0; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000407c6b: and al, 8; call rax; 
0x000000000043eb16: and al, 8; mov eax, 1; syscall; 
0x000000000043f403: and al, 8; mov esi, 0x10; mov eax, 0x48; syscall; 
0x000000000040a4d5: and al, 8; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x000000000047d9c6: and al, 8; mov qword ptr [rsp + 0x10], r10; call rax; 
0x0000000000413ad2: and al, 8; mov qword ptr [rsp], rdi; call rax; 
0x0000000000440f6f: and al, 8; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000040a871: and al, 8; mov rdi, r15; call rax; 
0x0000000000407dd8: and al, 8; mov rdx, r14; mov rsi, r13; add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x0000000000407bf8: and al, 8; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000047d9e9: and al, 8; mov rdx, r8; mov rdi, r15; mov rsi, qword ptr [rbx]; call rax; 
0x000000000044ff67: and al, 8; mov rdx, rbp; mov rsi, r12; call rbx; 
0x0000000000407d8e: and al, 8; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000043f460: and al, 8; xor eax, eax; cmp esi, 9; je 0x3f490; mov eax, 0x48; syscall; 
0x000000000043ea76: and al, 8; xor eax, eax; syscall; 
0x0000000000409ee6: and al, byte ptr [rax]; add bl, ch; xchg dword ptr [rcx - 0x77], ecx; shr cl, 0x13; jne 0x9ef1; jmp qword ptr [rsi + 0x2e]; 
0x0000000000435baa: and al, byte ptr [rsp - 0xb7f68c]; ret 0xc148; 
0x000000000047f44e: and bh, al; jmp qword ptr [rsi + 0x66]; 
0x000000000047ae1a: and bl, byte ptr [rax]; add al, byte ptr [rax]; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000047e409: and byte ptr [r14 - 0x3f], r12b; call 0x10072015; test byte ptr [rcx - 0x76fffffe], bh; ret 0xb60f; 
0x000000000040acd7: and byte ptr [r8 + 1], r9b; ret; 
0x000000000044f313: and byte ptr [r8 - 0x77], r9b; std; test rax, rax; je 0x4f31f; call rax; 
0x0000000000457f85: and byte ptr [r9 + 0x2b], r9b; sbb byte ptr [r8 - 0x3f], r9b; clc; add cl, byte ptr [rax + 0x39]; ret 0x850f; 
0x000000000040f013: and byte ptr [r9], sil; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; ret; 
0x000000000041559d: and byte ptr [rax + 0x39], cl; ret 0x4273; 
0x0000000000414e67: and byte ptr [rax + 0x39], cl; ret 0x860f; 
0x000000000040a2ee: and byte ptr [rax + 0x39], cl; ret 0x8948; 
0x000000000044708b: and byte ptr [rax + 0x39], cl; ret 0xf48; 
0x000000000045ea7e: and byte ptr [rax + 0x3b], cl; push rax; sbb byte ptr [rsi + 0x1f], dh; mov rax, qword ptr [rax + 0xe0]; mov esi, 0xffffffff; call qword ptr [rax + 0x18]; 
0x00000000004616b7: and byte ptr [rax + 1], cl; clc; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x00000000004356d7: and byte ptr [rax + 1], cl; clc; sub rax, rdx; vzeroupper; ret; 
0x000000000042030c: and byte ptr [rax + 1], cl; clc; vzeroupper; ret; 
0x0000000000402294: and byte ptr [rax + 1], cl; ret 0xb70f; 
0x000000000040acd8: and byte ptr [rax + 1], cl; ret; 
0x00000000004355ad: and byte ptr [rax + 9], cl; retf 0xf48; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x00000000004612a9: and byte ptr [rax + 9], cl; retf 0xf48; mov esp, 0xd00148d2; sub rax, rdi; shr rax, 2; ret; 
0x000000000047ab95: and byte ptr [rax + rdx - 0xd], dh; movups xmm0, xmmword ptr [rip + 0x21a98]; divss xmm0, dword ptr [rip + 0x21a94]; ret; 
0x0000000000454450: and byte ptr [rax - 0x68], cl; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x00000000004551cb: and byte ptr [rax - 0x73], cl; cmp eax, 0x544ad; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000455158: and byte ptr [rax - 0x73], cl; cmp eax, 0x54520; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000453f88: and byte ptr [rax - 0x73], cl; cmp eax, 0x556f0; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000469d6f: and byte ptr [rax - 0x77], cl; pop rax; or byte ptr [rax - 0x77], cl; ret; 
0x0000000000444c99: and byte ptr [rax - 0x77], cl; ret; 
0x000000000044f314: and byte ptr [rax - 0x77], cl; std; test rax, rax; je 0x4f31f; call rax; 
0x000000000040ca12: and byte ptr [rax - 1], bh; pop rbx; ret; 
0x00000000004405f3: and byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret; 
0x0000000000459cf3: and byte ptr [rax], al; add byte ptr [rax], al; jmp rax; 
0x000000000045abcf: and byte ptr [rax], al; add byte ptr [rax], al; movzx eax, byte ptr [rdi + rax]; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x000000000043d3db: and byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000040210d: and byte ptr [rax], al; add dh, dh; ret 0x7440; 
0x00000000004188ab: and byte ptr [rbp + 0x3a], dh; and edx, 8; lea rax, [rip + 0x9aa8]; lea rdx, [rip + 0xf011]; cmovne rax, rdx; ret; 
0x000000000041872b: and byte ptr [rbp + 0x3a], dh; and edx, 8; lea rax, [rip + 0x9c08]; lea rdx, [rip + 0xf171]; cmovne rax, rdx; ret; 
0x00000000004185bb: and byte ptr [rbp + 0x3a], dh; and edx, 8; lea rax, [rip + 0xc768]; lea rdx, [rip + 0x11dd1]; cmovne rax, rdx; ret; 
0x000000000045515c: and byte ptr [rbp + 5], al; add byte ptr [rax - 0x68], cl; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000438fa4: and byte ptr [rbp + rcx*4 + 0x1d], cl; and al, 0xad; add al, 0; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000425245: and byte ptr [rbp + rcx*4 + 0x1d], cl; sbb ebp, 5; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004395c4: and byte ptr [rbp + rcx*4 + 0x1d], cl; test byte ptr [rdi + 0x63490004], ah; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000422875: and byte ptr [rbp + rcx*4 + 0x1d], cl; xchg eax, ebx; add eax, 0x63490006; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000046b5f8: and byte ptr [rbp + rcx*4 + 0x43], cl; adc al, ch; xchg dword ptr cs:[rax], eax; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000045d13a: and byte ptr [rbx + 0x107729f8], al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000043f3d4: and byte ptr [rbx + 0x267409fe], al; mov eax, 0x48; syscall; 
0x0000000000411c24: and byte ptr [rbx + 0x39480009], ch; sal byte ptr [rbp + 1], 1; ret; 
0x0000000000443c4b: and byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000044fb51: and byte ptr [rbx + rcx*4 + 0x7f], cl; sub byte ptr [rcx - 0x3b76b310], cl; mov rbp, r9; jmp rdx; 
0x0000000000464231: and byte ptr [rbx], al; add byte ptr [rax], al; add ecx, ebp; ret 0xfffd; 
0x000000000047f4dc: and byte ptr [rbx], cl; mov eax, 0xc48348ff; or byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000457f86: and byte ptr [rcx + 0x2b], cl; sbb byte ptr [r8 - 0x3f], r9b; clc; add cl, byte ptr [rax + 0x39]; ret 0x850f; 
0x000000000047087c: and byte ptr [rcx + 9], cl; ret; 
0x000000000045cae2: and byte ptr [rcx + rbp], bh; ja 0x5cb18; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000407b03: and byte ptr [rcx + rcx*4 - 0x40], al; add rsp, 0x118; ret; 
0x00000000004520c8: and byte ptr [rcx + rcx*4 - 9], cl; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x000000000040c566: and byte ptr [rcx + rdi - 0x18], cl; jae 0xc680; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x0000000000404ddd: and byte ptr [rcx - 0x16f7dbbc], cl; paddb mm7, mm7; jmp qword ptr [rsi + 0xf]; 
0x00000000004083d7: and byte ptr [rcx - 0x353eb711], cl; adc dword ptr [rax + rcx*2 + 0x33], esp; adc al, 0x25; xor byte ptr [rax], al; add byte ptr [rax], al; call rdx; 
0x000000000047efac: and byte ptr [rcx - 0x75], cl; insd dword ptr [rdi], dx; sbb dh, dh; ret 0xf01; 
0x0000000000463df6: and byte ptr [rcx - 0x75], cl; sub byte ptr [r8 + 0x39], r9b; ret 0x870f; 
0x000000000040f014: and byte ptr [rcx], dh; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; ret; 
0x000000000043cde1: and byte ptr [rdi + 0x74], dh; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043c12c: and byte ptr [rdi + 0x7e], dh; movups xmm0, xmmword ptr [rsi]; movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000043ce41: and byte ptr [rdi + 0xb], dh; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043c341: and byte ptr [rdi], cl; adc dword ptr [rdi + 0x30], edi; movups xmmword ptr [r11], xmm8; ret; 
0x000000000041b4c4: and byte ptr [rdi], cl; mov dh, 0x54; cmp ah, byte ptr [rax]; sub eax, edx; vzeroupper; ret; 
0x0000000000439ebd: and byte ptr [rdi], cl; test dword ptr [rax + rax + 0x40a80000], edi; jne 0x39f90; lea rax, [rdi + 7]; ret; 
0x0000000000439da0: and byte ptr [rdi], cl; test ecx, ebx; add dword ptr [rax], eax; add dh, dh; ret 0x7520; 
0x000000000042cfe6: and byte ptr [rdx + 0x14], dh; vmovdqu ymm0, ymmword ptr [rsi]; vmovdqu ymm1, ymmword ptr [rcx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x000000000043bea8: and byte ptr [rdx + 0xa], dh; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x0000000000460af0: and byte ptr [rdx + 1], ch; push 0; lea rcx, [rax + 1]; mov rdi, qword ptr [r12]; lea r9, [rsp + 0x28]; call rbx; 
0x000000000048018c: and byte ptr [rdx], cl; cld; call qword ptr [rbp + 0x53]; 
0x0000000000420daa: and byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000420da5: and byte ptr [rsi + 0xf], ah; out dx, eax; push rsi; and byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000047e40a: and byte ptr [rsi - 0x3f], ah; call 0x10072015; test byte ptr [rcx - 0x76fffffe], bh; ret 0xb60f; 
0x000000000043d398: and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x00000000004614e2: and ch, 0xf; je 0x61500; add rax, 2; ret; 
0x00000000004202dc: and ch, al; std; xlatb; rol dword ptr [rbp + 0x311b75c0], 0xc0; vzeroupper; ret; 
0x000000000046c1ee: and ch, bh; jmp qword ptr [rsi + 0x66]; 
0x00000000004614cd: and cl, 0xf; je 0x614f0; ret; 
0x000000000043fa45: and cl, byte ptr [rax - 0x75]; jge 0x3fa5a; test rdi, rdi; jne 0x3fa76; mov rdi, qword ptr [rbp]; call rbx; 
0x00000000004205ed: and cl, byte ptr [rcx - 0x77]; ret; 
0x000000000040e6ea: and cl, byte ptr [rdx]; or al, byte ptr [rax]; cmp eax, 1; jg 0xe723; ret; 
0x0000000000471fe1: and cl, ch; ret; 
0x00000000004021d0: and cl, dl; or al, byte ptr [rax]; mov dword ptr [rip + 0xad11e], ecx; mov dword ptr [rip + 0xad11c], edx; pop rbx; ret; 
0x000000000043d303: and dh, 0xf0; mov edx, 0; pop rbx; cmove rax, rdx; ret; 
0x000000000041881e: and dh, 2; lea rax, [rip + 0x14e08]; lea rdx, [rip + 0x17041]; cmovne rax, rdx; ret; 
0x0000000000417cf5: and dh, 2; lea rax, [rip + 0x3a21]; lea rdx, [rip + 0x526a]; cmovne rax, rdx; ret; 
0x000000000041850c: and dh, 2; lea rax, [rip + 0x7ffa]; lea rdx, [rip + 0x21af3]; cmovne rax, rdx; ret; 
0x00000000004185a7: and dh, 8; je 0x185d8; ret; 
0x0000000000418717: and dh, 8; je 0x18748; ret; 
0x0000000000418897: and dh, 8; je 0x188c8; ret; 
0x0000000000441511: and dh, al; sub byte ptr [r9], r8b; ret; 
0x000000000047ecc7: and dh, dh; ret 0xf01; 
0x0000000000412e67: and dword ptr [rax + 0x39], ecx; ret 0x840f; 
0x000000000040fe48: and dword ptr [rbx], 0xffffffef; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000040fe9f: and dword ptr [rbx], 0xffffffef; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000410d8e: and dword ptr [rdi], ecx; mov dh, 0; ret; 
0x0000000000417cfb: and dword ptr [rdx], edi; add byte ptr [rax], al; lea rdx, [rip + 0x526a]; cmovne rax, rdx; ret; 
0x000000000044f98b: and eax, 0; ret; 
0x000000000043ea33: and eax, 0x18; test eax, eax; jne 0x3ea50; syscall; 
0x000000000043ead3: and eax, 0x18; test eax, eax; jne 0x3eaf0; mov eax, 1; syscall; 
0x000000000043eba3: and eax, 0x18; test eax, eax; jne 0x3ebc0; mov eax, 3; syscall; 
0x0000000000410cff: and eax, 0x18; test edx, edx; jne 0x10d10; sub dword ptr [rip + 0x9e401], 1; ret; 
0x00000000004727bd: and eax, 0x18; test edx, edx; jne 0x727d0; sub dword ptr [rdi], 1; ret; 
0x000000000040e6d3: and eax, 0x18; test edx, edx; jne 0xe6e8; sub dword ptr [rip + 0xa0a2d], 1; ret; 
0x00000000004144c3: and eax, 0x28; jne 0x144d0; add rsp, 0x10; pop rbp; ret; 
0x000000000043d93a: and eax, 0x28; jne 0x3d964; add rsp, 0x20; pop rbx; ret; 
0x000000000043e842: and eax, 0x28; jne 0x3e859; add rsp, 0x28; ret; 
0x000000000043f3f2: and eax, 0x28; jne 0x3f443; add rsp, 0x68; ret; 
0x000000000043f481: and eax, 0x28; jne 0x3f4cb; add rsp, 0x18; ret; 
0x000000000043f529: and eax, 0x28; jne 0x3f573; add rsp, 0x58; ret; 
0x000000000043f5c7: and eax, 0x28; jne 0x3f613; add rsp, 0x58; ret; 
0x000000000043f7b5: and eax, 0x28; jne 0x3f7c1; add rsp, 0x28; ret; 
0x000000000044fa6c: and eax, 0x28; jne 0x4fa78; add rsp, 0x18; ret; 
0x000000000044fd07: and eax, 0x28; jne 0x4fd54; mov eax, r9d; add rsp, 0x148; ret; 
0x000000000044fdef: and eax, 0x28; jne 0x4fe86; add rsp, 0x98; ret; 
0x0000000000450f7f: and eax, 0x28; jne 0x50f8e; add rsp, 0xd8; ret; 
0x000000000046212a: and eax, 0x28; jne 0x62139; movzx eax, al; add rsp, 0x58; ret; 
0x00000000004621df: and eax, 0x28; jne 0x62204; mov eax, r9d; add rsp, 0x38; ret; 
0x000000000046cf9c: and eax, 0x28; jne 0x6cfcb; add rsp, 0x38; ret; 
0x000000000046d036: and eax, 0x28; jne 0x6d04c; add rsp, 0x38; ret; 
0x000000000046d112: and eax, 0x28; jne 0x6d1a7; add rsp, 0x48; ret; 
0x000000000046d223: and eax, 0x28; jne 0x6d230; add rsp, 0x20; pop rbx; ret; 
0x000000000046d320: and eax, 0x28; jne 0x6d353; add rsp, 0x38; ret; 
0x000000000046d3c6: and eax, 0x28; jne 0x6d3dc; add rsp, 0x38; ret; 
0x000000000046d489: and eax, 0x28; jne 0x6d496; add rsp, 0x30; pop rbp; ret; 
0x000000000046d606: and eax, 0x28; jne 0x6d61d; add rsp, 0x38; ret; 
0x0000000000472e33: and eax, 0x28; jne 0x72e3f; add rsp, 0x28; ret; 
0x0000000000472f21: and eax, 0x28; jne 0x72f2d; add rsp, 0x38; ret; 
0x0000000000478089: and eax, 0x28; jne 0x780d1; leave; ret; 
0x00000000004785cc: and eax, 0x28; jne 0x785d8; add rsp, 0x38; ret; 
0x000000000047a4d4: and eax, 0x28; jne 0x7a4e5; add rsp, 0x28; ret; 
0x0000000000407afd: and eax, 0x28; jne 0x7b24; mov eax, r8d; add rsp, 0x118; ret; 
0x0000000000408f6f: and eax, 0x28; jne 0x8f7e; add rsp, 0xd8; ret; 
0x00000000004092af: and eax, 0x28; jne 0x92be; add rsp, 0xd8; ret; 
0x00000000004083c4: and eax, 0x30; call rax; 
0x00000000004083a6: and eax, 0x30; call rdx; 
0x000000000043d31e: and eax, 0x3fc00; ret; 
0x000000000043d418: and eax, 0x3fffc00; div ecx; mov eax, eax; ret; 
0x000000000043d369: and eax, 0x3fffc00; ret; 
0x000000000043f5a3: and eax, 0x410000; cmp eax, 0x410000; je 0x3f5d8; mov eax, 0x101; syscall; 
0x000000000044179a: and eax, 0x441f0f; add byte ptr [rax - 0x7d], cl; ret 0xf01; 
0x000000000040fd26: and eax, 0x48000000; mov dword ptr [rdi + 0xa8], 0; ret; 
0x000000000043e473: and eax, 0x4800045f; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x000000000046821a: and eax, 0x48f870f; add byte ptr [rax], al; lea rsi, [rip + 0x2dff8]; movsxd rax, dword ptr [rsi + r12*4]; add rax, rsi; jmp rax; 
0x000000000043d401: and eax, 0x7ff80000; div esi; mov eax, eax; ret; 
0x000000000043d3b7: and eax, 0x7ff80000; ret; 
0x000000000040bf33: and eax, 0x89483a74; ret 0x8948; 
0x0000000000468ac7: and eax, 0x8a0870f; add byte ptr [rax], al; lea rdi, [rip + 0x2d7e3]; movsxd rax, dword ptr [rdi + r12*4]; add rax, rdi; jmp rax; 
0x0000000000442bce: and eax, 0x8d480004; cmp eax, 0x426c8; call 0x2df0; nop dword ptr [rax]; lea rax, [rip + 0x6a639]; ret; 
0x000000000045f2e7: and eax, 0xc; cmp eax, 4; je 0x5f2f0; ret; 
0x000000000043d2ec: and eax, 0xf; movsxd rcx, dword ptr [rsi + rax*4]; add rcx, rsi; jmp rcx; 
0x0000000000422320: and eax, 0xff; and ecx, 0xff; sub eax, ecx; ret; 
0x0000000000421a53: and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000000401f8f: and eax, 0xffffffc0; mov qword ptr [rip + 0xad387], rax; add rsp, 0x88; pop rbx; ret; 
0x00000000004354f4: and eax, 0xffffffc0; sar rdx, cl; test rdx, rdx; je 0x35510; bsf rax, rdx; ret; 
0x0000000000435493: and eax, 0xffffffc0; sar rdx, cl; test rdx, rdx; je 0x35520; bsf rax, rdx; ret; 
0x0000000000411767: and eax, 0xfffffff0; sub rax, 0x11; shr rax, 4; lea rdx, [rax + 1]; mov qword ptr [rip + 0x9afd3], rdx; ret; 
0x000000000047ae48: and eax, 0xfffffff8; mov rdx, qword ptr [rax]; lea rax, [rax + 8]; mov qword ptr [r9], rdx; pop rbx; ret; 
0x000000000047db65: and eax, 0xfffffff8; mov rdx, qword ptr [rax]; lea rax, [rax + 8]; mov qword ptr [rcx], rdx; ret; 
0x000000000043fad8: and eax, 0xfffffffe; mov rsi, qword ptr [rax + 8]; test sil, 1; jne 0x3fb00; ret; 
0x0000000000417449: and eax, 1; cmovne rax, rdx; ret; 
0x000000000047ceeb: and eax, 1; mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000043fb60: and eax, 1; or rdi, rax; mov qword ptr [rdx], rdi; pop rbx; pop rbp; ret; 
0x0000000000476a68: and eax, 2; sub eax, 1; ret; 
0x0000000000473235: and eax, dword ptr [rip + 0x3c0c5]; cmp rax, rdx; lea rdx, [rip + 0x3ab]; lea rax, [rip + 0x74]; cmove rax, rdx; ret; 
0x0000000000418965: and eax, dword ptr [rip + 0x96995]; cmp rax, rdx; lea rdx, [rip + 0x1c8bb]; lea rax, [rip + 0x1c474]; cmove rax, rdx; ret; 
0x0000000000418925: and eax, dword ptr [rip + 0x969d5]; cmp rax, rdx; lea rdx, [rip + 0x7a9b]; lea rax, [rip + 0x75c4]; cmove rax, rdx; ret; 
0x000000000045ff7e: and eax, ecx; je 0x60140; bsr rax, rax; add rax, rdi; ret; 
0x0000000000407987: and eax, ecx; xor rax, rdx; movzx edx, byte ptr [rdi]; test dl, dl; jne 0x796c; ret; 
0x0000000000434bb9: and ebp, dword ptr [rcx]; add eax, 0x8a0c8b00; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000040fe49: and ebp, edi; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000040fea0: and ebp, edi; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000045f282: and ebx, 0xffffffbb; cmp r11d, 0xa; je 0x5f28c; ret; 
0x000000000040c1a4: and ebx, dword ptr [rbx + 0x4c]; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000000479e64: and ecx, 0x39447fff; ret; 
0x000000000043d338: and ecx, 0x3fc00; cmp edx, 0xff; cmove rax, rcx; ret; 
0x0000000000422325: and ecx, 0xff; sub eax, ecx; ret; 
0x0000000000421a58: and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000000401afa: and ecx, dword ptr [rax]; add byte ptr [rax + 0x63], cl; add al, 0x82; add rax, rdx; jmp rax; 
0x0000000000412114: and ecx, dword ptr [rcx + rcx*4 - 0x20]; pop rbx; pop rbp; pop r12; ret; 
0x000000000046233a: and ecx, dword ptr [rsi + 0x10]; lea rcx, [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000462323: and ecx, dword ptr [rsi + 0xc]; lea rcx, [rsi + rcx*4]; mov edx, dword ptr [rcx + rdx]; test edx, edx; jne 0x62338; ret; 
0x000000000047ab93: and edi, 0x20; je 0x7aba8; movss xmm0, dword ptr [rip + 0x21a98]; divss xmm0, dword ptr [rip + 0x21a94]; ret; 
0x00000000004188f9: and edi, dword ptr [rax]; add al, byte ptr [rax]; cmove rax, rdx; ret; 
0x0000000000467c13: and edi, eax; and rsi, rax; cmp rdi, rsi; jne 0x67c20; pop rbx; ret; 
0x000000000043d37e: and edx, 0xf; movsxd rax, dword ptr [rsi + rdx*4]; add rax, rsi; jmp rax; 
0x00000000004117c5: and edx, 0xfffffff0; test rax, rax; mov eax, 0x10; cmovne rax, rdx; mov qword ptr [rip + 0x9d9bd], rax; ret; 
0x00000000004188ae: and edx, 8; lea rax, [rip + 0x9aa8]; lea rdx, [rip + 0xf011]; cmovne rax, rdx; ret; 
0x000000000041872e: and edx, 8; lea rax, [rip + 0x9c08]; lea rdx, [rip + 0xf171]; cmovne rax, rdx; ret; 
0x00000000004185be: and edx, 8; lea rax, [rip + 0xc768]; lea rdx, [rip + 0x11dd1]; cmovne rax, rdx; ret; 
0x000000000046010e: and edx, eax; cmovne rcx, rdi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx + rsi]; ret; 
0x0000000000467c16: and esi, eax; cmp rdi, rsi; jne 0x67c20; pop rbx; ret; 
0x0000000000460202: and esi, eax; je 0x60140; bsr rax, rsi; add rax, rdi; ret; 
0x000000000046000c: and esi, ecx; je 0x60140; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x000000000045f281: and r11d, 0xffffffbb; cmp r11d, 0xa; je 0x5f28c; ret; 
0x00000000004202db: and r13b, r8b; std; xlatb; rol dword ptr [rbp + 0x311b75c0], 0xc0; vzeroupper; ret; 
0x0000000000409ee5: and r8b, byte ptr [r8]; add bl, ch; xchg dword ptr [rcx - 0x77], ecx; shr cl, 0x13; jne 0x9ef1; jmp qword ptr [rsi + 0x2e]; 
0x00000000004354f3: and rax, 0xffffffffffffffc0; sar rdx, cl; test rdx, rdx; je 0x35510; bsf rax, rdx; ret; 
0x0000000000435492: and rax, 0xffffffffffffffc0; sar rdx, cl; test rdx, rdx; je 0x35520; bsf rax, rdx; ret; 
0x0000000000411766: and rax, 0xfffffffffffffff0; sub rax, 0x11; shr rax, 4; lea rdx, [rax + 1]; mov qword ptr [rip + 0x9afd3], rdx; ret; 
0x000000000047ae47: and rax, 0xfffffffffffffff8; mov rdx, qword ptr [rax]; lea rax, [rax + 8]; mov qword ptr [r9], rdx; pop rbx; ret; 
0x000000000047db64: and rax, 0xfffffffffffffff8; mov rdx, qword ptr [rax]; lea rax, [rax + 8]; mov qword ptr [rcx], rdx; ret; 
0x000000000043fad7: and rax, 0xfffffffffffffffe; mov rsi, qword ptr [rax + 8]; test sil, 1; jne 0x3fb00; ret; 
0x0000000000473234: and rax, qword ptr [rip + 0x3c0c5]; cmp rax, rdx; lea rdx, [rip + 0x3ab]; lea rax, [rip + 0x74]; cmove rax, rdx; ret; 
0x0000000000418964: and rax, qword ptr [rip + 0x96995]; cmp rax, rdx; lea rdx, [rip + 0x1c8bb]; lea rax, [rip + 0x1c474]; cmove rax, rdx; ret; 
0x0000000000418924: and rax, qword ptr [rip + 0x969d5]; cmp rax, rdx; lea rdx, [rip + 0x7a9b]; lea rax, [rip + 0x75c4]; cmove rax, rdx; ret; 
0x000000000045ff7d: and rax, rcx; je 0x60140; bsr rax, rax; add rax, rdi; ret; 
0x0000000000407986: and rax, rcx; xor rax, rdx; movzx edx, byte ptr [rdi]; test dl, dl; jne 0x796c; ret; 
0x0000000000467c12: and rdi, rax; and rsi, rax; cmp rdi, rsi; jne 0x67c20; pop rbx; ret; 
0x00000000004117c4: and rdx, 0xfffffffffffffff0; test rax, rax; mov eax, 0x10; cmovne rax, rdx; mov qword ptr [rip + 0x9d9bd], rax; ret; 
0x000000000046010d: and rdx, r8; cmovne rcx, rdi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx + rsi]; ret; 
0x0000000000467c15: and rsi, rax; cmp rdi, rsi; jne 0x67c20; pop rbx; ret; 
0x0000000000460201: and rsi, rax; je 0x60140; bsr rax, rsi; add rax, rdi; ret; 
0x000000000046000b: and rsi, rcx; je 0x60140; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x000000000040a188: bnd call qword ptr [rax + 0x70]; 
0x000000000040c579: bnd call qword ptr [rbp + 0x70]; 
0x00000000004520ce: bnd call qword ptr [rbx + 0x38]; 
0x0000000000461098: bnd je 0x6109f; test edx, edx; jne 0x61090; ret; 
0x00000000004356d1: bsf eax, eax; add rax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000420381: bsf eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x00000000004356f1: bsf eax, eax; add rax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000420391: bsf eax, eax; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x000000000043573d: bsf eax, eax; add rax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000004203bf: bsf eax, eax; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000004352a4: bsf eax, eax; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x000000000041ff5a: bsf eax, eax; add rax, rdi; add rax, rcx; ret; 
0x0000000000435606: bsf eax, eax; add rax, rdi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000000420416: bsf eax, eax; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x000000000041fe80: bsf eax, eax; add rax, rdi; ret; 
0x0000000000461691: bsf eax, eax; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x00000000004356c1: bsf eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000420371: bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000004202f1: bsf eax, eax; cmp rdx, rax; jbe 0x20360; add rax, rdi; vzeroupper; ret; 
0x00000000004737e1: bsf eax, eax; cmp rdx, rax; jbe 0x73850; add rax, rdi; vzeroupper; ret; 
0x000000000041fe90: bsf eax, eax; lea rax, [rax + rdi + 0x10]; ret; 
0x000000000041fea0: bsf eax, eax; lea rax, [rax + rdi + 0x20]; ret; 
0x000000000041fe70: bsf eax, eax; lea rax, [rax + rdi - 0x10]; ret; 
0x000000000041fdcf: bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000434e33: bsf eax, eax; lea rax, [rdi + rax]; ret; 
0x0000000000434c13: bsf eax, eax; mov edx, 0; lea rax, [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000041fc49: bsf eax, eax; sub rdx, rax; jbe 0x1fef0; add rax, rdi; add rax, rcx; ret; 
0x000000000041feb0: bsf eax, eax; sub rdx, rax; jbe 0x1fef0; add rax, rdi; ret; 
0x000000000041fec0: bsf eax, eax; sub rdx, rax; jbe 0x1fef0; lea rax, [rdi + rax + 0x10]; ret; 
0x000000000041fed0: bsf eax, eax; sub rdx, rax; jbe 0x1fef0; lea rax, [rdi + rax + 0x20]; ret; 
0x000000000041fee0: bsf eax, eax; sub rdx, rax; jbe 0x1fef0; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000473339: bsf eax, eax; sub rdx, rax; jbe 0x735e0; add rax, rdi; add rax, rcx; ret; 
0x00000000004735a0: bsf eax, eax; sub rdx, rax; jbe 0x735e0; add rax, rdi; ret; 
0x00000000004735b0: bsf eax, eax; sub rdx, rax; jbe 0x735e0; lea rax, [rdi + rax + 0x10]; ret; 
0x00000000004735c0: bsf eax, eax; sub rdx, rax; jbe 0x735e0; lea rax, [rdi + rax + 0x20]; ret; 
0x00000000004735d0: bsf eax, eax; sub rdx, rax; jbe 0x735e0; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000435456: bsf eax, edx; ret; 
0x0000000000461147: bsf eax, edx; shr rax, 2; ret; 
0x0000000000420cb1: bsf ecx, eax; movzx eax, byte ptr [rdi + rcx + 0x20]; movzx edx, byte ptr [rsi + rcx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000420cd1: bsf ecx, eax; movzx eax, byte ptr [rdi + rcx + 0x40]; movzx edx, byte ptr [rsi + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000420c97: bsf ecx, eax; movzx eax, byte ptr [rdi + rcx + 0x60]; movzx edx, byte ptr [rsi + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000000420a21: bsf ecx, eax; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000419f7a: bsf ecx, ecx; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x000000000041a040: bsf ecx, edi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x000000000041b494: bsf ecx, edi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000041b4f9: bsf ecx, esi; movzx eax, byte ptr [rax + rcx + 0x60]; movzx edx, byte ptr [rdx + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x000000000041b4bd: bsf edi, ecx; movzx eax, byte ptr [rax + rdi + 0x20]; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000041b4dd: bsf edi, ecx; movzx eax, byte ptr [rax + rdi + 0x40]; movzx edx, byte ptr [rdx + rdi + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000419e0c: bsf edx, eax; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; ret; 
0x000000000041b331: bsf edx, ecx; movzx eax, byte ptr [rdi + rdx + 0x20]; movzx edx, byte ptr [rsi + rdx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000041b351: bsf edx, ecx; movzx eax, byte ptr [rdi + rdx + 0x40]; movzx edx, byte ptr [rsi + rdx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000041b371: bsf edx, ecx; movzx eax, byte ptr [rdi + rdx + 0x60]; movzx edx, byte ptr [rsi + rdx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x000000000041b313: bsf edx, ecx; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x00000000004355b2: bsf edx, edx; add rax, rdx; sub rax, rdi; ret; 
0x0000000000461257: bsf edx, edx; add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x0000000000439561: bsf edx, edx; lea r11, [rip + 0x4a7e5]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439529: bsf edx, edx; lea r11, [rip + 0x4a81d]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439504: bsf edx, edx; lea r11, [rip + 0x4a842]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f41: bsf edx, edx; lea r11, [rip + 0x4ad85]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f09: bsf edx, edx; lea r11, [rip + 0x4adbd]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438ee4: bsf edx, edx; lea r11, [rip + 0x4ade2]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438ec7: bsf edx, edx; lea r11, [rip + 0x4adff]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000419da1: bsf edx, edx; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000434f50: bsf rax, rax; lea rax, [rdi + rax]; ret; 
0x0000000000434d30: bsf rax, rax; mov edx, 0; lea rax, [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x00000000004354a2: bsf rax, rdx; ret; 
0x0000000000461146: bsf rax, rdx; shr rax, 2; ret; 
0x0000000000419f79: bsf rcx, rcx; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x000000000041a03f: bsf rcx, rdi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x000000000041b563: bsf rcx, rdi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000419e0b: bsf rdx, rax; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; ret; 
0x00000000004355b1: bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000000461256: bsf rdx, rdx; add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x0000000000439560: bsf rdx, rdx; lea r11, [rip + 0x4a7e5]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439528: bsf rdx, rdx; lea r11, [rip + 0x4a81d]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439503: bsf rdx, rdx; lea r11, [rip + 0x4a842]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f40: bsf rdx, rdx; lea r11, [rip + 0x4ad85]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f08: bsf rdx, rdx; lea r11, [rip + 0x4adbd]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438ee3: bsf rdx, rdx; lea r11, [rip + 0x4ade2]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438ec6: bsf rdx, rdx; lea r11, [rip + 0x4adff]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000419da0: bsf rdx, rdx; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000045ff87: bsr eax, eax; add rax, rdi; ret; 
0x0000000000460361: bsr eax, eax; lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x000000000046020b: bsr eax, esi; add rax, rdi; ret; 
0x0000000000460119: bsr esi, esi; lea rax, [rcx + rsi]; ret; 
0x0000000000460015: bsr esi, esi; lea rax, [rdi + rsi]; ret; 
0x000000000045ff86: bsr rax, rax; add rax, rdi; ret; 
0x000000000046020a: bsr rax, rsi; add rax, rdi; ret; 
0x0000000000460118: bsr rsi, rsi; lea rax, [rcx + rsi]; ret; 
0x0000000000460014: bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x0000000000420a8c: bswap eax; bswap ecx; mov al, byte ptr [rdi + rdx - 1]; mov cl, byte ptr [rsi + rdx - 1]; sub eax, ecx; ret; 
0x0000000000420a8e: bswap ecx; mov al, byte ptr [rdi + rdx - 1]; mov cl, byte ptr [rsi + rdx - 1]; sub eax, ecx; ret; 
0x00000000004523bd: btc dword ptr [rax], eax; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000478441: bts eax, 0x30; mov qword ptr [rdi + 8], rax; mov eax, 2; ret; 
0x00000000004782e1: bts edx, 0x34; mov eax, 1; mov qword ptr [rdi], rdx; ret; 
0x00000000004605a3: bts edx, ebx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000000461253: bts edx, ebx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x0000000000460504: bts edx, esi; sar rdx, cl; test rdx, rdx; je 0x60520; bsf rax, rdx; ret; 
0x0000000000478440: bts rax, 0x30; mov qword ptr [rdi + 8], rax; mov eax, 2; ret; 
0x00000000004782e0: bts rdx, 0x34; mov eax, 1; mov qword ptr [rdi], rdx; ret; 
0x00000000004605a2: bts rdx, r11; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000000461252: bts rdx, r11; bsf rdx, rdx; add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x0000000000460503: bts rdx, rsi; sar rdx, cl; test rdx, rdx; je 0x60520; bsf rax, rdx; ret; 
0x000000000047e40d: call 0x10072015; test byte ptr [rcx - 0x76fffffe], bh; ret 0xb60f; 
0x000000000040c569: call 0x111487d; add byte ptr [rax], al; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x000000000046b3a8: call 0x16730; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000046c6d8: call 0x16730; mov qword ptr [rbx], 0; mov qword ptr [rbx + 8], 0; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x00000000004016eb: call 0x16730; mov qword ptr [rip + 0xadfdd], 0; pop rdx; ret; 
0x0000000000401ccc: call 0x16730; nop; leave; ret; 
0x00000000004804cd: call 0x16730; test rbx, rbx; jne 0x804bd; pop rbx; ret; 
0x0000000000457183: call 0x18c9f4d0; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000401bb5: call 0x21f0; hlt; nop dword ptr [rax + rax]; ret; 
0x0000000000401aeb: call 0x26f89e27; ja 0x18dc; lea rdx, [rip + 0x823e7]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000004209d4: call 0x2978ce8; add byte ptr [rax], al; xor eax, eax; vzeroupper; ret; 
0x000000000045d139: call 0x29fe545e; ja 0x5d150; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000473f63: call 0x2df0; nop dword ptr [rax + rax]; ret; 
0x0000000000442bd8: call 0x2df0; nop dword ptr [rax]; lea rax, [rip + 0x6a639]; ret; 
0x0000000000408678: call 0x2df0; xor r8d, r8d; mov rax, r8; ret; 
0x000000000045b03f: call 0x394e488c; ret; 
0x0000000000455157: call 0x3d92997c; and byte ptr [rbp + 5], al; add byte ptr [rax - 0x68], cl; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000473b5b: call 0x40bb0; mov eax, dword ptr [rip + 0x3b6ba]; ret; 
0x0000000000462204: call 0x40bb0; nop dword ptr [rax]; mov eax, 0xc; syscall; 
0x000000000044d1d7: call 0x40bb0; nop dword ptr [rax]; mov rax, qword ptr [rip + 0x62241]; ret; 
0x000000000047877e: call 0x40bb0; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; mov eax, 0x26; syscall; 
0x0000000000461fda: call 0x40bb0; nop; mov eax, 0x3f; syscall; 
0x0000000000409acb: call 0x415cdc2d; pop rbp; pop r14; ret; 
0x0000000000409aee: call 0x415cdc50; pop rbp; pop r14; ret; 
0x000000000043fdf2: call 0x41603f54; pop rbp; ret; 
0x0000000000444a78: call 0x42c50; mov rax, qword ptr [rbp - 0x70]; mov rdi, r12; call rax; 
0x000000000040941b: call 0x44009420; mov eax, eax; pop rbx; pop rbp; ret; 
0x0000000000446124: call 0x45c30; or dword ptr [rip + 0x692e4], 2; add rsp, 8; ret; 
0x0000000000401340: call 0x45f19146; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000401396: call 0x45f1919c; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004013ec: call 0x45f191f2; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000401442: call 0x45f19248; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004014a3: call 0x45f192a9; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004014fa: call 0x45f19300; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000401556: call 0x45f1935c; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004015ac: call 0x45f193b2; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000401602: call 0x45f19408; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000478443: call 0x4790cc78; or byte ptr [rax + 2], bh; ret; 
0x0000000000480a47: call 0x48ec3b91; add esp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000435bb4: call 0x48ec46c9; mov eax, edi; ret; 
0x0000000000435c94: call 0x48ec47a9; mov eax, edx; ret; 
0x000000000044fa21: call 0x4904fa25; add eax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x0000000000421e25: call 0x4e712e1d; call 0xf6906e1; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004298f0: call 0x4ef2a8e7; movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000042c410: call 0x4ef2d407; movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000411770: call 0x508e5f79; add dword ptr [rax - 0x77], ecx; adc eax, 0x9afd3; ret; 
0x000000000040d6ec: call 0x5c42344c; ret; 
0x000000000041759a: call 0x5c42d2fa; pop r13; pop r14; ret; 
0x000000000043fddd: call 0x5c455b3d; pop r13; ret; 
0x000000000045ce53: call 0x5c472bb3; pop r13; pop r14; ret; 
0x0000000000460a5c: call 0x5c4767bc; pop r13; jmp rax; 
0x0000000000473ea4: call 0x5c489c04; pop r13; ret; 
0x000000000040b7e6: call 0x5d421546; pop r14; pop r15; ret; 
0x000000000045d9ed: call 0x5e450; add rsp, 8; mov eax, 1; pop rbx; pop rbp; ret; 
0x000000000043ebc8: call 0x5f260; mov edi, dword ptr [rsp + 0xc]; mov r8d, eax; mov eax, 3; syscall; 
0x000000000043ebea: call 0x5f2c0; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000043ea8c: call 0x5f2c0; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000044f951: call 0x6504f955; mov qword ptr [rdx], rax; ret; 
0x000000000044f9c3: call 0x6504f9c7; add rax, qword ptr [0]; ret; 
0x000000000047887c: call 0x65180; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000046d268: call 0x66af0; mov qword ptr [rbx + 0x10], rax; pop rax; pop rdx; pop rbx; ret; 
0x000000000047a1b3: call 0x66af0; mov qword ptr [rbx], rax; pop rax; pop rdx; pop rbx; ret; 
0x0000000000467b80: call 0x67a80; test eax, eax; jne 0x67b8b; pop rbx; ret; 
0x000000000046a4b8: call 0x69de0; add rsp, 0xd8; ret; 
0x000000000044da01: call 0x6d2d0; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x0000000000478534: call 0x74340; mov qword ptr [rbx + 0x10], rax; pop rax; pop rdx; pop rbx; ret; 
0x000000000046cf3d: call 0x74340; mov qword ptr [rbx + 0x18], rax; pop rax; pop rdx; pop rbx; ret; 
0x00000000004614c5: call 0x74d898cc; adc eax, 0xe180d188; pcmpeqb mm3, qword ptr [rsi]; ret; 
0x0000000000422308: call 0x75ca5b1d; adc ah, byte ptr [rip + 0xffff]; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000040df20: call 0x77171b87; sub cl, byte ptr [rdi]; mov dh, 0xc0; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x000000000045cae1: call 0x772f0706; xor dword ptr [rdi], ecx; mov dh, 0xc0; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000004615e4: call 0x77fedaeb; ret; 
0x000000000046169c: call 0x77fedba3; ret; 
0x00000000004616c0: call 0x77fedbc7; ret; 
0x00000000004616e0: call 0x77fedbe7; ret; 
0x000000000046172c: call 0x77fedc33; ret; 
0x00000000004617cd: call 0x77fedcd4; ret; 
0x0000000000461908: call 0x77fede0f; ret; 
0x000000000046193a: call 0x77fede41; ret; 
0x0000000000461951: call 0x77fede58; ret; 
0x0000000000461975: call 0x77fede7c; ret; 
0x0000000000461995: call 0x77fede9c; ret; 
0x00000000004619b5: call 0x77fedebc; ret; 
0x00000000004619c5: call 0x77fedecc; ret; 
0x00000000004619ec: call 0x77fedef3; ret; 
0x0000000000461a10: call 0x77fedf17; ret; 
0x0000000000461a30: call 0x77fedf37; ret; 
0x0000000000461a7c: call 0x77fedf83; ret; 
0x00000000004786e3: call 0x7a400; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000047862f: call 0x7a4f0; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x000000000047a713: call 0x7ab30; mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x0000000000401c61: call 0x7f900; mov byte ptr [rip + 0xac5d3], 1; pop rbp; ret; 
0x000000000047cf3b: call 0x7f940; test rax, rax; cmovne rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000044d9ed: call 0x84762f3; pop rbx; ret; 
0x000000000044d9d5: call 0x84862db; cmp eax, -3; je 0x4d9f8; pop rbx; ret; 
0x0000000000480247: call 0x8cc8594; pop rbx; pop rbp; ret; 
0x0000000000401dbd: call 0x9cc0; nop; pop rbp; ret; 
0x0000000000456e56: call 0x9fdf18b; mov eax, 0xffffffff; jbe 0x56e30; mov qword ptr [rdi], rsi; ret; 
0x000000000045d0c6: call 0x9fe53fb; mov eax, 0xffffffff; jbe 0x5d0a0; mov qword ptr [rdi], rsi; ret; 
0x000000000040ff12: call 0xa397f18; je 0xff28; cmp rax, rsi; ja 0xff10; lea eax, [rdx + rdi]; ret; 
0x0000000000402ef5: call 0xaf8b1fd; ja 0x2f23; lea rdx, [rip + 0x7e391]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000045e928: call 0xc130; mov esi, r15d; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x000000000040daa5: call 0xec60; mov dword ptr [rbx + 0x70], 0xffffffff; pop rbx; ret; 
0x0000000000421e2a: call 0xf6906e1; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043d2ea: call 0xfe455fb; movsxd rcx, dword ptr [rsi + rax*4]; add rcx, rsi; jmp rcx; 
0x000000000040a4cf: call 0xffffffff8b490047; and al, 8; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x000000000040c665: call 0xffffffff8b490edd; and al, 8; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x00000000004681f1: call 0xffffffff8b4f81f5; mov byte ptr [r9 - 0x77], r9b; xchg dword ptr [rax], ebx; add al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000478d8d: call 0xffffffffaf16d596; ret; 
0x000000000047cd19: call 0xffffffffbee9566a; or al, byte ptr [rax]; add byte ptr [rax], al; mov edi, 1; call rax; 
0x000000000047cd44: call 0xffffffffbee95695; or al, byte ptr [rax]; add byte ptr [rax], al; mov edi, 1; call rax; 
0x000000000047cde1: call 0xffffffffbee95732; sbb al, byte ptr [rax]; add byte ptr [rax], al; mov edi, 1; call rax; 
0x0000000000420c82: call 0xffffffffc52c8286; std; xlatb; ret; 
0x000000000044ff4e: call 0xffffffffc7b40e9b; lea r12, [rcx + rax]; mov rdi, r12; call rbx; 
0x00000000004534e2: call 0xffffffffc80534dd; test dword ptr [rax], eax; idiv edi; call qword ptr [rax]; 
0x000000000040c1cc: call 0xffffffffceebd55c; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000047a9b1: call 0xffffffffd28ceeb7; jne 0x7a9e1; add rsp, 0x38; pop rbx; pop r14; ret; 
0x0000000000472336: call 0xffffffffe3f12337; clc; jmp qword ptr [rsi - 0x70]; 
0x000000000041176c: call 0xffffffffe8c25f82; add al, 0x48; lea edx, [rax + 1]; mov qword ptr [rip + 0x9afd3], rdx; ret; 
0x00000000004715ce: call 0xffffffffe98a5dd4; add al, 0xc7; add al, 0x30; add byte ptr [rax], al; add byte ptr [rcx + 0x39], cl; ret 0x840f; 
0x00000000004117fb: call 0xffffffffeac2610b; add eax, dword ptr [rcx + 0x31]; ret 0x2b8; 
0x0000000000423da3: call 0xfffffffff060c8f4; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000426773: call 0xfffffffff060f2c4; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423c73: call 0xfffffffff061c5c4; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000423cb1: call 0xfffffffff061c602; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423ce9: call 0xfffffffff061c63a; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000423d27: call 0xfffffffff061c678; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423d5f: call 0xfffffffff061c6b0; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423d87: call 0xfffffffff061c6d8; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423daf: call 0xfffffffff061c700; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000426643: call 0xfffffffff061ef94; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000426681: call 0xfffffffff061efd2; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004266b9: call 0xfffffffff061f00a; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004266f7: call 0xfffffffff061f048; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042672f: call 0xfffffffff061f080; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000426757: call 0xfffffffff061f0a8; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042677f: call 0xfffffffff061f0d0; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000047d24e: call 0xfffffffff07d5d9f; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000047d407: call 0xfffffffff07d5f58; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000047d55e: call 0xfffffffff07d60af; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000047d5a7: call 0xfffffffff07d60f8; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000047d730: call 0xfffffffff07d6281; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000047d780: call 0xfffffffff07d62d1; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000047d813: call 0xfffffffff07d6364; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x00000000004422d5: call 0xfffffffff60422dd; ret 0x7402; 
0x0000000000463fae: call 0xfffffffff6063fb6; ret 0x7402; 
0x000000000043d31c: call 0xfffffffffc03f82f; add eax, dword ptr [rax]; ret; 
0x000000000043d367: call 0xfffffffffc03f872; inc dword ptr [rbx]; ret; 
0x0000000000475057: call 0xffffffffff57dd5f; test eax, eax; je 0x75076; lea rbx, [rbp + rdx*8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000047f849: call 0xffffffffffc00000; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000040a4df: call qword ptr [rax + 0x18]; 
0x00000000004167ae: call qword ptr [rax + 0x18c48348]; ret; 
0x0000000000453d45: call qword ptr [rax + 0x38]; 
0x0000000000454067: call qword ptr [rax + 0x48]; 
0x0000000000403b82: call qword ptr [rax + 0x50]; 
0x000000000045e973: call qword ptr [rax + 0x68]; 
0x000000000040a189: call qword ptr [rax + 0x70]; 
0x000000000047db0b: call qword ptr [rax + 0x74]; 
0x000000000047f66e: call qword ptr [rax + 0x8c48348]; pop rbx; pop rbp; ret; 
0x000000000046a34e: call qword ptr [rax + 0x90d8d48]; ret 2; 
0x000000000045e93e: call qword ptr [rax - 0x1413d6b7]; nop; nop dword ptr [rax]; xor eax, eax; ret; 
0x0000000000459e82: call qword ptr [rax - 0x18]; 
0x0000000000459e60: call qword ptr [rax - 0x75]; 
0x000000000045406f: call qword ptr [rax - 1]; 
0x000000000041567c: call qword ptr [rax]; 
0x000000000040d8ec: call qword ptr [rbp + 0x18]; 
0x000000000040f540: call qword ptr [rbp + 0x20]; 
0x000000000040fe40: call qword ptr [rbp + 0x30]; 
0x00000000004514b3: call qword ptr [rbp + 0x38]; 
0x0000000000401cac: call qword ptr [rbp + 0x48]; 
0x000000000047803f: call qword ptr [rbp + 0x49]; 
0x0000000000440cb8: call qword ptr [rbp + 0x53]; 
0x0000000000409dbb: call qword ptr [rbp + 0x58]; 
0x0000000000409790: call qword ptr [rbp + 0x60]; 
0x0000000000415d76: call qword ptr [rbp + 0x64]; 
0x0000000000409e75: call qword ptr [rbp + 0x68]; 
0x000000000040c57a: call qword ptr [rbp + 0x70]; 
0x000000000044057f: call qword ptr [rbp - 0x41]; 
0x00000000004023ea: call qword ptr [rbx + 0x10]; 
0x000000000040f5da: call qword ptr [rbx + 0x18]; 
0x00000000004520cf: call qword ptr [rbx + 0x38]; 
0x000000000040d408: call qword ptr [rbx + 0x40]; 
0x000000000047d0ba: call qword ptr [rbx + 0x48]; 
0x000000000045433f: call qword ptr [rbx + 0xf]; 
0x0000000000454076: call qword ptr [rbx - 0x18]; 
0x0000000000454076: call qword ptr [rbx - 0x18]; ret; 
0x00000000004084b8: call qword ptr [rbx]; 
0x0000000000452297: call qword ptr [rcx + 0x38]; 
0x000000000046e4d5: call qword ptr [rcx]; 
0x0000000000410022: call qword ptr [rdi + 0x18]; 
0x00000000004542c5: call qword ptr [rdi + 0x38]; 
0x0000000000410394: call qword ptr [rdi + 0x58]; 
0x0000000000467b40: call qword ptr [rip + 0x455fa]; xor eax, eax; add rsp, 8; ret; 
0x0000000000456c8c: call qword ptr [rsi + 0x38]; 
0x0000000000401d3d: call r8; mov eax, 0; leave; ret; 
0x0000000000401010: call rax; 
0x0000000000401010: call rax; add rsp, 8; ret; 
0x0000000000401d3e: call rax; mov eax, 0; leave; ret; 
0x000000000043dffb: call rbx; 
0x00000000004020b9: call rcx; 
0x0000000000448b5d: call rdi; 
0x00000000004083ab: call rdx; 
0x00000000004452e8: call rsi; 
0x000000000040bcca: call rsp; 
0x0000000000425633: cdq; fld dword ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000414c03: cdq; jnp 0x14c0f; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000441473: cdq; std; dec dword ptr [rax - 0x77]; or byte ptr [r8 - 0x77], cl; ret 0x8548; 
0x000000000046cdc3: cdq; sub byte ptr [rax + rax], al; lea rax, [rdi - 1]; cmp rax, -3; jbe 0x6cdd8; ret; 
0x0000000000453f90: cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000045e82c: clc; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 2], al; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x0000000000457f8d: clc; add cl, byte ptr [rax + 0x39]; ret 0x850f; 
0x000000000040ab95: clc; add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret; 
0x000000000045a09e: clc; add cl, byte ptr [rax - 0x77]; ret 0x51ff; 
0x000000000044da03: clc; add dword ptr [rax], eax; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000043e86b: clc; add dword ptr [rdi + 0x29], esi; mov eax, 4; syscall; 
0x000000000046205b: clc; add dword ptr [rdi + 0x29], esi; mov eax, 6; syscall; 
0x000000000043e8ba: clc; add dword ptr [rdi + 0x2a], esi; mov eax, 5; syscall; 
0x000000000040e6ef: clc; add dword ptr [rdi + 0x30], edi; ret; 
0x0000000000410d17: clc; add dword ptr [rdi + 1], edi; ret; 
0x0000000000423594: clc; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000047881d: clc; add ebx, dword ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000041fc57: clc; add rax, rcx; ret; 
0x00000000004615db: clc; add rax, rcx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000043560b: clc; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000000420184: clc; add rax, rcx; vzeroupper; ret; 
0x00000000004438ec: clc; add rsp, 0x1d0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000471d34: clc; clc; jmp qword ptr [rsi + 0xf]; 
0x00000000004218bd: clc; cmp rcx, rax; jne 0x222f3; xor eax, eax; ret; 
0x0000000000413968: clc; dec dword ptr [rax - 0x77]; ret 0x840f; 
0x00000000004531b6: clc; dec dword ptr [rax - 0x77]; ret; 
0x000000000047bb74: clc; dec dword ptr [rcx + 0x63]; add al, 0x86; add rax, r14; jmp rax; 
0x000000000047afd2: clc; dec dword ptr [rdi]; mov dh, 0xc0; movsxd rax, dword ptr [rbp + rax*4]; add rax, rbp; jmp rax; 
0x000000000047b149: clc; dec dword ptr [rdi]; mov dh, 0xd2; movsxd rax, dword ptr [r13 + rdx*4]; add rax, r13; jmp rax; 
0x000000000047b186: clc; dec dword ptr [rdi]; mov dh, 0xd2; movsxd rax, dword ptr [r14 + rdx*4]; add rax, r14; jmp rax; 
0x00000000004763c1: clc; dec dword ptr [rdi]; test byte ptr [rsi + rdi*8 - 0x76be0001], ch; ret 0xe883; 
0x0000000000468224: clc; fild word ptr [rdx]; add byte ptr [rdx + 0x63], cl; add al, 0xa6; add rax, rsi; jmp rax; 
0x0000000000458ab3: clc; idiv bh; dec dword ptr [rax + 0x39]; ret 0x850f; 
0x000000000045862b: clc; idiv bh; dec dword ptr [rbp + 0x63]; ret 0x8948; 
0x000000000045755f: clc; idiv bh; inc esi; test eax, edx; idiv bh; jmp qword ptr [rax]; 
0x000000000047b1a9: clc; inc dword ptr [rbx - 0x72b7fe15]; push rdi; add ecx, dword ptr [rax + 0x63]; ret; 
0x0000000000401aee: clc; ja 0x18dc; lea rdx, [rip + 0x823e7]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000042bf94: clc; jbe 0x2bf9c; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000047f8d4: clc; jmp qword ptr [rsi + 0x2e]; 
0x00000000004740c0: clc; jmp qword ptr [rsi + 0x66]; 
0x0000000000471d35: clc; jmp qword ptr [rsi + 0xf]; 
0x000000000047233c: clc; jmp qword ptr [rsi - 0x70]; 
0x000000000040df2f: clc; jmp rax; 
0x0000000000415df7: clc; lea ecx, [r8 + 0x280]; shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x00000000004277c6: clc; lea r11, [rip + 0x5b802]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427610: clc; lea r11, [rip + 0x5b9b8]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424d02: clc; lea r11, [rip + 0x5e106]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424c28: clc; lea r11, [rip + 0x5e1e0]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000047d256: clc; leave; ret; 
0x0000000000423dc7: clc; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042471b: clc; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042491b: clc; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424b1b: clc; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423dab: clc; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004246ef: clc; mov qword ptr [rdi - 0x1d], r10; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004248ef: clc; mov qword ptr [rdi - 0x1e], r10; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424aef: clc; mov qword ptr [rdi - 0x1f], r10; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423d7f: clc; mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424737: clc; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000429687: clc; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000424937: clc; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004295f7: clc; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000424b37: clc; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000429567: clc; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000423de3: clc; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043ceee: clc; mov qword ptr [rdi], rcx; ret; 
0x000000000043d06d: clc; mov qword ptr [rdi], rcx; vzeroupper; ret; 
0x000000000042d01c: clc; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000043c18a: clc; mov qword ptr [rdi], rsi; ret; 
0x0000000000421e3f: clc; mov rax, qword ptr [rdi - 8]; cmp rcx, rax; jne 0x222f3; xor eax, eax; ret; 
0x000000000047d40f: clc; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x00000000004218b9: clc; mov rcx, qword ptr [rsi - 8]; cmp rcx, rax; jne 0x222f3; xor eax, eax; ret; 
0x000000000046d5a4: clc; mov rdi, rdx; cmp rax, 9; ja 0x6d580; mov rax, r8; ret; 
0x000000000047ae4a: clc; mov rdx, qword ptr [rax]; lea rax, [rax + 8]; mov qword ptr [r9], rdx; pop rbx; ret; 
0x000000000047db67: clc; mov rdx, qword ptr [rax]; lea rax, [rax + 8]; mov qword ptr [rcx], rdx; ret; 
0x000000000043c182: clc; mov rsi, qword ptr [rsi]; mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x0000000000420602: clc; movzx eax, al; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x0000000000402ef8: clc; or dh, byte ptr [rdi + 0x27]; lea rdx, [rip + 0x7e391]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000456e59: clc; or dword ptr [rax - 1], edi; jbe 0x56e30; mov qword ptr [rdi], rsi; ret; 
0x000000000045d0c9: clc; or dword ptr [rax - 1], edi; jbe 0x5d0a0; mov qword ptr [rdi], rsi; ret; 
0x0000000000417881: clc; or dword ptr [rdi + 0x4b], esi; lea rdx, [rip + 0x6b29c]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000046d5aa: clc; or dword ptr [rdi - 0x2e], esi; mov rax, r8; ret; 
0x0000000000411f92: clc; pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x000000000040fee0: clc; push qword ptr [rbp - 0x45]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000410c72: clc; ret; 
0x0000000000476f9a: clc; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x000000000046125f: clc; shr rax, 2; ret; 
0x000000000046cdcd: clc; std; jbe 0x6cdd8; ret; 
0x000000000044d9db: clc; std; je 0x4d9f8; pop rbx; ret; 
0x000000000045d13c: clc; sub dword ptr [rdi + 0x10], esi; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000478084: clc; sub rax, qword ptr fs:[0x28]; jne 0x780d1; leave; ret; 
0x0000000000461696: clc; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x00000000004356c6: clc; sub rax, rdx; vzeroupper; ret; 
0x00000000004202fb: clc; vzeroupper; ret; 
0x00000000004231a4: cld; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043d33b: cld; add eax, dword ptr [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000000043d320: cld; add eax, dword ptr [rax]; ret; 
0x000000000040bf32: cld; and eax, 0x89483a74; ret 0x8948; 
0x000000000048018e: cld; call qword ptr [rbp + 0x53]; 
0x000000000044057e: cld; call qword ptr [rbp - 0x41]; 
0x000000000043b541: cld; cmp eax, ecx; jne 0x3b750; xor eax, eax; ret; 
0x00000000004218e6: cld; cmp ecx, eax; jne 0x222ff; xor eax, eax; ret; 
0x0000000000473299: cld; dec dword ptr [rax + 0x21]; ret 0x8d48; 
0x000000000043e305: cld; dec dword ptr [rax - 0x77]; ret; 
0x00000000004802dd: cld; dec dword ptr [rax - 0x7d]; ret; 
0x00000000004532d6: cld; in eax, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000043d41a: cld; inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x000000000043d36b: cld; inc dword ptr [rbx]; ret; 
0x000000000043e253: cld; jmp qword ptr [rsi + 0x2e]; 
0x000000000043d43f: cld; jmp qword ptr [rsi + 0x66]; 
0x000000000044e2a8: cld; jmp qword ptr [rsi + 0xf]; 
0x0000000000453eac: cld; jmp qword ptr [rsi - 0x70]; 
0x0000000000424552: cld; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424755: cld; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000424955: cld; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000424b55: cld; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043cef6: cld; mov dword ptr [rdi], ecx; ret; 
0x000000000043d078: cld; mov dword ptr [rdi], ecx; vzeroupper; ret; 
0x000000000042d02e: cld; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x000000000043c198: cld; mov dword ptr [rdi], esi; ret; 
0x00000000004218e3: cld; mov eax, dword ptr [rdi - 4]; cmp ecx, eax; jne 0x222ff; xor eax, eax; ret; 
0x000000000043b53e: cld; mov ecx, dword ptr [rsi - 4]; cmp eax, ecx; jne 0x3b750; xor eax, eax; ret; 
0x0000000000421b45: cld; mov ecx, dword ptr [rsi - 4]; cmp ecx, eax; jne 0x222ff; xor eax, eax; ret; 
0x000000000043c192: cld; mov esi, dword ptr [rsi]; mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], esi; ret; 
0x0000000000423f8a: cld; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000042416a: cld; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000042434a: cld; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000042452a: cld; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000042414e: cld; mov qword ptr [rdi - 0x1a], r10; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000042432e: cld; mov qword ptr [rdi - 0x1b], r10; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000042450e: cld; mov qword ptr [rdi - 0x1c], r10; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424186: cld; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000429816: cld; mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000424366: cld; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000429796: cld; mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000424546: cld; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000429716: cld; mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000423fa6: cld; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000429896: cld; mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004500d2: cld; mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x0000000000403d00: cld; ret 0xffbf; 
0x0000000000423e31: cld; ret; 
0x000000000042d19d: cld; vmovups zmmword ptr [r9 - 0xc0], zmm13; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000042cf63: cld; vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000042d45f: cld; vmovups zmmword ptr [rdi - 0x140], zmm12; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000043be5b: cld; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043ca22: cld; vzeroupper; ret; 
0x00000000004732a7: cli; add al, 0x4c; cmovne eax, eax; mov rax, r8; ret; 
0x000000000043cedc: cli; add al, 0x73; adc eax, dword ptr [rax + 0x157701fa]; jb 0x3cee9; mov byte ptr [rdi], cl; ret; 
0x0000000000418752: cli; add al, byte ptr [rax]; lea rax, [rip + 0x24143]; cmove rax, rdx; ret; 
0x000000000040672f: cli; add al, byte ptr [rcx - 0xccc1e]; inc dword ptr [rcx]; ret 0xd089; 
0x000000000040de26: cli; add ch, al; ret; 
0x000000000040a9c6: cli; add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret 0x2948; 
0x000000000043bede: cli; add dh, byte ptr [rdx + 8]; mov word ptr [rdi], cx; mov word ptr [rsi - 2], cx; ret; 
0x000000000043cee1: cli; add dword ptr [rdi + 0x15], esi; jb 0x3cee9; mov byte ptr [rdi], cl; ret; 
0x000000000043c172: cli; add dword ptr [rdi + 0x26], esi; jb 0x3c17d; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000043d04f: cli; add dword ptr [rdi + 0x2c], esi; jb 0x3d057; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x000000000043d217: cli; add dword ptr [rdi + 0x3a], esi; jb 0x3d21f; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x000000000043c4d2: cli; add dword ptr [rdi + 0x3b], esi; jb 0x3c4dd; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000043c922: cli; add dword ptr [rdi + 0x53], esi; jb 0x3c92d; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000043beeb: cli; add dword ptr [rdx + 2], esi; mov byte ptr [rdi], cl; ret; 
0x000000000042d04c: cli; add dword ptr [rdx + 4], esi; mov cl, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x00000000004233a6: cli; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043e068: cli; add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xc085; 
0x000000000043e0c4: cli; add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xd284; 
0x000000000043cde0: cli; and byte ptr [rdi + 0x74], dh; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043ce40: cli; and byte ptr [rdi + 0xb], dh; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043bea7: cli; and byte ptr [rdx + 0xa], dh; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x0000000000453d44: cli; call qword ptr [rax + 0x38]; 
0x0000000000418772: cli; cmp byte ptr [rdx], al; add byte ptr [rax - 0x73], cl; add eax, 0x23993; cmove rax, rdx; ret; 
0x0000000000451267: cli; dec dword ptr [rax - 0x77]; ret 0x2949; 
0x00000000004592a1: cli; dec dword ptr [rax - 0x77]; ret 0x3ee9; 
0x000000000046246b: cli; dec dword ptr [rax - 0x77]; ret 0x8b48; 
0x00000000004581e4: cli; dec dword ptr [rax - 0x77]; ret 0xb848; 
0x000000000045bd7d: cli; dec dword ptr [rax - 0x77]; ret 0xc3e9; 
0x000000000046c248: cli; dec dword ptr [rax - 0x77]; ret; 
0x000000000045ef97: cli; dec dword ptr [rbx - 0x14f3db8c]; ret; 
0x000000000046a209: cli; dec dword ptr [rdi]; test ch, ah; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0xf48; 
0x000000000043d33f: cli; inc dword ptr [rax]; add byte ptr [rax], al; cmove rax, rcx; ret; 
0x000000000045e92b: cli; inc dword ptr [rcx + rcx*4 - 2]; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x000000000043cf98: cli; ja 0x3cfaa; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x000000000043cf48: cli; ja 0x3cfb3; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x000000000043be94: cli; jb 0x3bea6; vmovups zmmword ptr [rdi], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x0000000000418512: cli; jg 0x18515; add byte ptr [rax - 0x73], cl; adc eax, 0x21af3; cmovne rax, rdx; ret; 
0x000000000042d007: cli; jg 0x2d011; vmovdqu xmmword ptr [r9 - 0x10], xmm1; ret; 
0x0000000000435aab: cli; jg 0x35ac5; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; vzeroupper; ret; 
0x0000000000439cbb: cli; jg 0x39cd5; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000043beb6: cli; jg 0x3bec0; vmovdqu xmmword ptr [rsi - 0x10], xmm0; ret; 
0x000000000043c4e9: cli; jg 0x3c4f3; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000043c951: cli; jg 0x3c95b; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000043d062: cli; jg 0x3d06c; vzeroupper; ret; 
0x000000000043d238: cli; jg 0x3d242; vzeroupper; ret; 
0x000000000045dbe4: cli; jmp qword ptr [rsi + 0x2e]; 
0x0000000000461028: cli; jmp qword ptr [rsi + 0xf]; 
0x0000000000459a1c: cli; jmp qword ptr [rsi - 0x70]; 
0x000000000046c4a9: cli; jp 0x6c520; adc ecx, dword ptr [rdi]; mov dh, 0x45; add cl, byte ptr [rax - 0x7d]; ret; 
0x000000000045f4b8: cli; lcall [rdx + 0x31]; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000424958: cli; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000424952: cli; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000046d51d: cli; mov rdi, rax; cmp rdx, rcx; jae 0x6d508; mov rax, r8; ret; 
0x000000000047f318: cli; mov rsi, qword ptr [r12 + rbp*8 + 0x10]; mov rdi, r13; call rax; 
0x00000000004543c0: cli; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x4f0], ecx; call qword ptr [rbx + 0x38]; 
0x000000000045550d: cli; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x510], ecx; mov qword ptr [rbp - 0x508], r10; call qword ptr [rax + 0x38]; 
0x000000000040d4f0: cli; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x00000000004541ee: cli; mov rsi, r8; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x0000000000420608: cli; movzx edx, dl; sub eax, edx; ret; 
0x000000000041eb96: cli; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000468942: cli; or byte ptr [rax], al; add byte ptr [rcx], bh; ret 0x850f; 
0x000000000043bec0: cli; or byte ptr [rdx + 0xa], dh; vmovq qword ptr [rdi], xmm0; vmovq qword ptr [rsi - 8], xmm0; ret; 
0x0000000000467b42: cli; push rbp; add al, 0; xor eax, eax; add rsp, 8; ret; 
0x000000000043ce12: cli; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x000000000041162f: cli; setae al; ret; 
0x00000000004354f9: cli; test rdx, rdx; je 0x35510; bsf rax, rdx; ret; 
0x0000000000435498: cli; test rdx, rdx; je 0x35520; bsf rax, rdx; ret; 
0x00000000004604f8: cli; test rdx, rdx; je 0x60520; bsf rax, rdx; ret; 
0x0000000000460488: cli; test rdx, rdx; je 0x60530; bsf rax, rdx; ret; 
0x00000000004611a8: cli; test rdx, rdx; je 0x611d0; bsf rax, rdx; shr rax, 2; ret; 
0x000000000046113c: cli; test rdx, rdx; je 0x611e0; bsf rax, rdx; shr rax, 2; ret; 
0x000000000042d46d: cli; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x0000000000423834: cmc; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000045272f: cmc; add eax, 0xe9830000; add dword ptr [rax - 0x8ef43], eax; jmp qword ptr [rax]; 
0x00000000004614e1: cmc; and ch, 0xf; je 0x61500; add rax, 2; ret; 
0x00000000004744ef: cmc; cld; jmp qword ptr [rsi + 0xf]; 
0x000000000047449b: cmc; cld; jmp qword ptr [rsi - 0x70]; 
0x000000000042979a: cmc; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004241de: cmc; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000429793: cmc; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000424347: cmc; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424363: cmc; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043b283: cmc; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x0000000000473297: cmc; popfq; cld; dec dword ptr [rax + 0x21]; ret 0x8d48; 
0x0000000000456b0f: cmc; sti; dec dword ptr [rcx - 0x77]; ret 0x8548; 
0x000000000043b287: cmc; sub eax, edx; ret; 
0x0000000000467f69: cmc; test esi, esi; jne 0x67f70; call rax; 
0x00000000004738cd: cmova edx, eax; mov eax, 0xd9; syscall; 
0x00000000004738cd: cmova edx, eax; mov eax, 0xd9; syscall; cmp rax, -0x1000; ja 0x738e0; ret; 
0x00000000004738cc: cmova rdx, rax; mov eax, 0xd9; syscall; 
0x00000000004738cc: cmova rdx, rax; mov eax, 0xd9; syscall; cmp rax, -0x1000; ja 0x738e0; ret; 
0x00000000004115d9: cmovae eax, dword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x00000000004115d8: cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000411628: cmovbe edx, eax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x0000000000411627: cmovbe rdx, rax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x000000000046a801: cmove eax, eax; mov rax, r8; pop rbx; ret; 
0x000000000043d345: cmove eax, ecx; ret; 
0x0000000000417af3: cmove eax, edx; add rsp, 8; ret; 
0x0000000000417c9d: cmove eax, edx; ret; 
0x0000000000478879: cmove edx, eax; call 0x65180; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000046a800: cmove r8, rax; mov rax, r8; pop rbx; ret; 
0x000000000043d344: cmove rax, rcx; ret; 
0x0000000000417af2: cmove rax, rdx; add rsp, 8; ret; 
0x0000000000417c9c: cmove rax, rdx; ret; 
0x000000000045e3bb: cmovg eax, edx; test rax, rax; jne 0x5e3b0; mov rax, r8; ret; 
0x000000000040ef2b: cmovg eax, edx; test rax, rax; jne 0xef20; mov rax, r8; ret; 
0x000000000045e3ba: cmovg r8, rdx; test rax, rax; jne 0x5e3b0; mov rax, r8; ret; 
0x000000000040ef2a: cmovg r8, rdx; test rax, rax; jne 0xef20; mov rax, r8; ret; 
0x0000000000440e48: cmovl ecx, dword ptr [rbx + 0x6d49805]; add byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x0000000000439c9a: cmovl ecx, dword ptr [rcx + 0x48f9174c]; lea eax, [rdi + rdx]; vzeroupper; ret; 
0x000000000047cf44: cmovne eax, dword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x00000000004732aa: cmovne eax, eax; mov rax, r8; ret; 
0x000000000040bc30: cmovne eax, ecx; ret; 
0x00000000004117d1: cmovne eax, edx; mov qword ptr [rip + 0x9d9bd], rax; ret; 
0x000000000041744d: cmovne eax, edx; ret; 
0x0000000000435084: cmovne eax, edx; vzeroupper; ret; 
0x0000000000460111: cmovne ecx, edi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx + rsi]; ret; 
0x0000000000460115: cmovne esi, edx; bsr rsi, rsi; lea rax, [rcx + rsi]; ret; 
0x00000000004732a9: cmovne r8, rax; mov rax, r8; ret; 
0x000000000047cf43: cmovne rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000040bc2f: cmovne rax, rcx; ret; 
0x00000000004117d0: cmovne rax, rdx; mov qword ptr [rip + 0x9d9bd], rax; ret; 
0x000000000041744c: cmovne rax, rdx; ret; 
0x0000000000435083: cmovne rax, rdx; vzeroupper; ret; 
0x0000000000460110: cmovne rcx, rdi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx + rsi]; ret; 
0x0000000000460114: cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx + rsi]; ret; 
0x0000000000403654: cmovns eax, dword ptr [rbx - 0x76b30f20]; ret 0x48b; 
0x0000000000444c92: cmovs eax, dword ptr [rbx - 0x76b30f20]; and byte ptr [rax - 0x77], cl; ret; 
0x0000000000402840: cmovs eax, dword ptr [rcx + 0x90c4]; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000044623c: cmovs eax, edx; ret; 
0x000000000042d015: cmovs ecx, dword ptr [rbx + 0x498b4836]; clc; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x0000000000412b6e: cmovs ecx, dword ptr [rbx - 0x173ef7be]; add al, 0x39; ret; 
0x000000000043d2ee: cmovs esp, dword ptr [rbx + 0xc]; xchg byte ptr [rax + 1], cl; int1; jmp rcx; 
0x000000000043d380: cmovs esp, dword ptr [rbx + 4]; xchg eax, esi; add rax, rsi; jmp rax; 
0x000000000041b4c8: cmp ah, byte ptr [rax]; sub eax, edx; vzeroupper; ret; 
0x000000000043bdd2: cmp ah, byte ptr [rbx - 0x25]; cmp cl, byte ptr [rax + 0x63]; leave; add rax, rcx; sub rax, rdi; ret; 
0x00000000004328fa: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg ah, bl; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000043345a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rax], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000432c3a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rcx - 0x7cb80000], bl; ret 0xe910; 
0x000000000043241a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rdx - 0x7cb80000], bh; ret 0xe910; 
0x0000000000432f7a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000043275a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rcx], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000431f3a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rdx - 0x7cb80000], bl; ret 0xe910; 
0x000000000043311a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rbx + rax - 0x7cb80000], bh; ret 0xe910; 
0x000000000043227a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rdx + rdx], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004323b0: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], ah; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004330b0: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], ah; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000432bd0: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], al; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004333f0: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg dh, ah; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004326f0: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg dh, ah; or eax, 0x83480000; ret 0x4910; 
0x0000000000432210: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg dh, al; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000432f10: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg dh, al; add eax, 0x83480000; ret 0x4910; 
0x00000000004731e6: cmp ah, byte ptr [rbx]; adc dh, byte ptr [rbx - 0xc]; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000004025cb: cmp al, 0; add byte ptr [rax], al; nop; xor edi, edi; mov eax, edx; syscall; 
0x000000000040df22: cmp al, 0x16; ja 0xdf50; movzx eax, al; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x000000000040f0f7: cmp al, 0x24; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000000413ad6: cmp al, 0x24; call rax; 
0x00000000004809b0: cmp al, 0x24; clc; jmp qword ptr [rsi + 0x2e]; 
0x0000000000460afb: cmp al, 0x24; lea r9, [rsp + 0x28]; call rbx; 
0x0000000000407de2: cmp al, 0x24; mov rdi, r12; call rcx; 
0x0000000000407c63: cmp al, 0x24; mov rdx, r14; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000045cae3: cmp al, 0x29; ja 0x5cb18; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000047ce4f: cmp al, 0x32; or byte ptr [rdi], cl; test dword ptr [rip + 0x48fff848], eax; mov eax, dword ptr [rax]; add rsp, 8; ret; 
0x000000000047fbf8: cmp al, 0x50; jne 0x7fc1b; xor eax, eax; add rsp, 8; ret; 
0x0000000000406f94: cmp al, 0x82; add rdi, r10; jmp rdi; 
0x000000000047cea2: cmp al, 8; jne 0x1662; mov qword ptr [rcx], rdx; add rsp, 8; ret; 
0x0000000000417cfc: cmp al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; adc eax, 0x526a; cmovne rax, rdx; ret; 
0x00000000004188ad: cmp al, byte ptr [rbx - 0x72b7f71e]; add eax, 0x9aa8; lea rdx, [rip + 0xf011]; cmovne rax, rdx; ret; 
0x000000000041872d: cmp al, byte ptr [rbx - 0x72b7f71e]; add eax, 0x9c08; lea rdx, [rip + 0xf171]; cmovne rax, rdx; ret; 
0x00000000004185bd: cmp al, byte ptr [rbx - 0x72b7f71e]; add eax, 0xc768; lea rdx, [rip + 0x11dd1]; cmovne rax, rdx; ret; 
0x0000000000418603: cmp al, byte ptr [rdx]; add byte ptr [rax - 0x73], cl; add eax, 0x23b13; cmove rax, rdx; ret; 
0x000000000043b5ee: cmp al, byte ptr [rsi - 1]; jne 0x3b765; xor eax, eax; ret; 
0x0000000000421a4b: cmp al, cl; jne 0x22320; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000043b6a2: cmp al, cl; jne 0x3b765; cmp eax, ecx; jne 0x3b765; xor eax, eax; ret; 
0x000000000043b75f: cmp al, cl; jne 0x3b765; cmp eax, ecx; sbb eax, eax; sbb eax, -1; ret; 
0x000000000041fe76: cmp al, dh; ret; 
0x000000000041fe75: cmp al, r14b; ret; 
0x000000000043fb68: cmp bl, byte ptr [rbx + 0x5d]; ret; 
0x000000000040a41d: cmp byte ptr [r8 - 0x75], cl; push rbx; adc byte ptr [rax + 1], cl; ret 0x2b48; 
0x000000000047e796: cmp byte ptr [rax + 0x39], cl; ret 0x3c74; 
0x000000000047e7cb: cmp byte ptr [rax + 0x39], cl; ret 0xcb75; 
0x000000000040295b: cmp byte ptr [rax + 0x39], cl; ret; 
0x000000000041feb7: cmp byte ptr [rax + 1], cl; clc; ret; 
0x000000000043fdaf: cmp byte ptr [rax - 0x73], cl; push rbx; or byte ptr [rax - 0x7d], cl; ret; 
0x000000000046cef5: cmp byte ptr [rax - 0x75], cl; and al, 0x40; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000046ce83: cmp byte ptr [rax - 0x75], cl; and al, 0x40; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000449890: cmp byte ptr [rax - 0x75], cl; je 0x498b9; mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x00000000004076fe: cmp byte ptr [rax - 0x75], cl; je 0x7727; xor byte ptr [rcx - 0x7d], cl; ret 0x4102; 
0x00000000004077e8: cmp byte ptr [rax - 0x75], cl; je 0x7811; xor byte ptr [rcx - 0x7d], cl; ret 0x4102; 
0x0000000000412a6e: cmp byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x77], r9b; ret; 
0x000000000040a41e: cmp byte ptr [rax - 0x75], cl; push rbx; adc byte ptr [rax + 1], cl; ret 0x2b48; 
0x0000000000457f7f: cmp byte ptr [rax - 0x77], cl; ret 0x8b49; 
0x000000000040ff14: cmp byte ptr [rax], 0xa; je 0xff28; cmp rax, rsi; ja 0xff10; lea eax, [rdx + rdi]; ret; 
0x000000000041b4c3: cmp byte ptr [rax], ah; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000041fea6: cmp byte ptr [rax], ah; ret; 
0x0000000000412210: cmp byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0x9a56e; lea rax, [rip + 0x344f]; mov qword ptr [rip + 0x9a558], rax; ret; 
0x00000000004461b7: cmp byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x000000000047ad41: cmp byte ptr [rax], al; je 0x7ad94; add rsp, 0x18; ret; 
0x000000000040f443: cmp byte ptr [rax], al; je 0xf450; ret; 
0x000000000043bd0a: cmp byte ptr [rax], al; ret 0xf66; 
0x0000000000434c20: cmp byte ptr [rax], dh; cmovne rax, rdx; ret; 
0x000000000041fe96: cmp byte ptr [rax], dl; ret; 
0x000000000041fe95: cmp byte ptr [rax], r10b; ret; 
0x000000000041b4c2: cmp byte ptr [rax], r12b; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000041fea5: cmp byte ptr [rax], r12b; ret; 
0x0000000000434c1f: cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000044f5ae: cmp byte ptr [rbp + 0x39], al; ret 0x820f; 
0x000000000047a9bb: cmp byte ptr [rbx + 0x41], bl; pop rsi; ret; 
0x000000000041079b: cmp byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000040b910: cmp byte ptr [rbx + 0x5d], bl; ret; 
0x000000000045e9ab: cmp byte ptr [rcx + 0x5d5b7453], cl; pop r12; ret; 
0x000000000040f4b9: cmp byte ptr [rcx + rcx*4 + 0x63], cl; mov dword ptr [rbx], eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000045ea31: cmp byte ptr [rcx - 0x47a48bbd], cl; add dword ptr [rax], eax; add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x000000000046b826: cmp byte ptr [rcx - 0x7d], cl; ret 0x4908; 
0x000000000044ee34: cmp byte ptr [rcx], al; add byte ptr [rax], al; movsxd rcx, dword ptr [rdi + r9*4]; add rcx, rdi; jmp rcx; 
0x00000000004222b0: cmp byte ptr [rdi], dl; ret 0x2373; 
0x0000000000422299: cmp byte ptr [rdi], dl; ret 0x3a73; 
0x0000000000422282: cmp byte ptr [rdi], dl; ret 0x5173; 
0x0000000000420d3e: cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042179d: cmp byte ptr [rdi], dl; ret; 
0x000000000047ce4e: cmp byte ptr [rdx + rsi], 8; jne 0x165d; mov rax, qword ptr [rax]; add rsp, 8; ret; 
0x0000000000418773: cmp byte ptr [rdx], al; add byte ptr [rax - 0x73], cl; add eax, 0x23993; cmove rax, rdx; ret; 
0x000000000045f035: cmp byte ptr [rdx], cl; je 0x5f048; cmp rax, rsi; ja 0x5f030; lea eax, [rdx + rdi]; ret; 
0x000000000040ff15: cmp byte ptr [rdx], cl; je 0xff28; cmp rax, rsi; ja 0xff10; lea eax, [rdx + rdi]; ret; 
0x0000000000440e40: cmp byte ptr [rip + 0x6d499], 0; jne 0x40e58; mov r8, qword ptr [rip + 0x6d498]; mov rax, r8; ret; 
0x0000000000440d50: cmp byte ptr [rip + 0x6d589], 0; mov r8, qword ptr [rip + 0x6d58a]; jne 0x40d70; lea rax, [r8 + 1]; mov qword ptr [rip + 0x6d57d], rax; ret; 
0x0000000000473974: cmp byte ptr [rsi + 0xc730003], bh; mov rdx, qword ptr [rip + 0x3be37]; add word ptr [rdx + rax*2], 1; ret; 
0x00000000004227aa: cmp ch, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000047274a: cmp cl, bh; add eax, dword ptr [rax]; syscall; 
0x000000000046d8a6: cmp cl, bh; dec dword ptr [rax - 0x77]; ret 0x2949; 
0x000000000043bdd5: cmp cl, byte ptr [rax + 0x63]; leave; add rax, rcx; sub rax, rdi; ret; 
0x000000000043b864: cmp cl, byte ptr [rax + rdx + 2]; jne 0x3b880; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x3b860; ret; 
0x000000000043b914: cmp cl, byte ptr [rax + rdx + 2]; jne 0x3b930; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x3b910; ret; 
0x0000000000411bf2: cmp cl, byte ptr [rax - 0x75]; push rax; or dh, dh; ret 0x7502; 
0x000000000040bf35: cmp cl, byte ptr [rax - 0x77]; ret 0x8948; 
0x000000000043bd1f: cmp cl, byte ptr [rax - 0x7d]; rcl byte ptr [rax], 0x29; cmp edx, ecx; jle 0x3bd3c; movsxd rax, ecx; ret; 
0x00000000004581e2: cmp cl, byte ptr [rsi - 0x76b70006]; ret 0xb848; 
0x000000000047836d: cmp cx, 0x7fff; jne 0x78358; mov eax, 1; ret; 
0x000000000040c133: cmp dh, 9; add byte ptr [rax], al; je 0xc13b; ret; 
0x0000000000435081: cmp dh, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000043d21a: cmp dh, byte ptr [rdx + 2]; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x000000000043bea6: cmp dl, 0x20; jb 0x3beb5; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x000000000043be93: cmp dl, 0x40; jb 0x3bea6; vmovups zmmword ptr [rdi], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043c171: cmp dl, 1; ja 0x3c19c; jb 0x3c17d; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000043c4d1: cmp dl, 1; ja 0x3c511; jb 0x3c4dd; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000043c921: cmp dl, 1; ja 0x3c979; jb 0x3c92d; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000043cee0: cmp dl, 1; ja 0x3cefa; jb 0x3cee9; mov byte ptr [rdi], cl; ret; 
0x000000000043d04e: cmp dl, 1; ja 0x3d07f; jb 0x3d057; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x000000000043d216: cmp dl, 1; ja 0x3d255; jb 0x3d21f; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x000000000042d04b: cmp dl, 1; jb 0x2d054; mov cl, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000043beea: cmp dl, 1; jb 0x3bef1; mov byte ptr [rdi], cl; ret; 
0x000000000043bedd: cmp dl, 2; jb 0x3beea; mov word ptr [rdi], cx; mov word ptr [rsi - 2], cx; ret; 
0x000000000043bed2: cmp dl, 4; jb 0x3bedd; mov dword ptr [rdi], ecx; mov dword ptr [rsi - 4], ecx; ret; 
0x000000000043bebf: cmp dl, 8; jb 0x3bece; vmovq qword ptr [rdi], xmm0; vmovq qword ptr [rsi - 8], xmm0; ret; 
0x000000000045e958: cmp dword ptr [rax + 0x30], 0; je 0x5e960; ret; 
0x000000000045f034: cmp dword ptr [rax], 0xa; je 0x5f048; cmp rax, rsi; ja 0x5f030; lea eax, [rdx + rdi]; ret; 
0x000000000046c38b: cmp dword ptr [rbp - 7], ecx; dec dword ptr [rax + 1]; ret; 
0x000000000047b8e0: cmp dword ptr [rbx + 8], 5; ja 0x7b958; mov eax, dword ptr [rbx + 8]; movsxd rax, dword ptr [r15 + rax*4]; add rax, r15; jmp rax; 
0x00000000004292d8: cmp dword ptr [rbx - 1], -1; dec dword ptr [rax - 0x7f]; ret 0x80; 
0x000000000047ad3f: cmp dword ptr [rcx + 0x38], 0; je 0x7ad94; add rsp, 0x18; ret; 
0x00000000004185a3: cmp dword ptr [rcx + 1], ecx; add byte ptr [rax + 0x2c7408e6], al; ret; 
0x000000000043faab: cmp dword ptr [rcx - 0xa], eax; or byte ptr [rcx], al; jne 0x3faf0; ret; 
0x00000000004115d5: cmp dword ptr [rdi + 0x10], eax; cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x000000000040f441: cmp dword ptr [rdi + 0x38], 0; je 0xf450; ret; 
0x000000000040df0c: cmp dword ptr [rdi], eax; add byte ptr [rdi], cl; mov dh, 0x42; add dword ptr [rax - 0x7d], ecx; ret 0x3c01; 
0x0000000000471f98: cmp dword ptr [rdi], ecx; test ah, ah; add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret 0xffe8; 
0x000000000044f92c: cmp dword ptr [rdi], esi; je 0x4f938; ret; 
0x000000000040bc2d: cmp dword ptr [rdx + 0x48], eax; cmovne eax, ecx; ret; 
0x0000000000478c93: cmp dword ptr [rdx - 0x76b70002], edi; ret; 
0x000000000040c131: cmp dword ptr [rip + 0x9fe80], 0; je 0xc13b; ret; 
0x000000000047d96a: cmp dword ptr [rsi + 8], ecx; ja 0x7d971; sbb eax, eax; ret; 
0x0000000000417aef: cmp eax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x00000000004413af: cmp eax, -1; cmove rax, rdx; ret; 
0x000000000040fedf: cmp eax, -1; jne 0xfe9f; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000046cdcc: cmp eax, -3; jbe 0x6cdd8; ret; 
0x000000000044d9da: cmp eax, -3; je 0x4d9f8; pop rbx; ret; 
0x0000000000442ce3: cmp eax, 0x16; ja 0x42d00; movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x0000000000442d2a: cmp eax, 0x17; ja 0x42d00; movsxd rax, dword ptr [rbp + rax*4]; add rax, rbp; jmp rax; 
0x0000000000441bf5: cmp eax, 0x1e; ja 0x41c20; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000411684: cmp eax, 0x2000000; jbe 0x11690; ret; 
0x0000000000473f5e: cmp eax, 0x2451d; call 0x2df0; nop dword ptr [rax + rax]; ret; 
0x0000000000401aed: cmp eax, 0x26; ja 0x18dc; lea rdx, [rip + 0x823e7]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000045d13b: cmp eax, 0x29; ja 0x5d150; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000468ad0: cmp eax, 0x2d7e3; movsxd rax, dword ptr [rdi + r12*4]; add rax, rdi; jmp rax; 
0x0000000000472749: cmp eax, 0x3cf3a; syscall; 
0x00000000004724c5: cmp eax, 0x3d1ba; syscall; 
0x00000000004705d9: cmp eax, 0x3f092; syscall; 
0x0000000000411744: cmp eax, 0x408; jbe 0x11750; ret; 
0x000000000043f5a8: cmp eax, 0x410000; je 0x3f5d8; mov eax, 0x101; syscall; 
0x0000000000442bd3: cmp eax, 0x426c8; call 0x2df0; nop dword ptr [rax]; lea rax, [rip + 0x6a639]; ret; 
0x000000000046cdc2: cmp eax, 0x42899; lea rax, [rdi - 1]; cmp rax, -3; jbe 0x6cdd8; ret; 
0x0000000000441a61: cmp eax, 0x4310c; mov eax, 0x15; syscall; 
0x00000000004551ce: cmp eax, 0x544ad; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000045515b: cmp eax, 0x54520; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000453f8b: cmp eax, 0x556f0; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000450939: cmp eax, 0x5eca2; syscall; 
0x0000000000450874: cmp eax, 0x5ed67; syscall; 
0x00000000004506d7: cmp eax, 0x5ef04; syscall; 
0x0000000000450608: cmp eax, 0x5efd3; syscall; 
0x0000000000445389: cmp eax, 0x6a04a; syscall; 
0x000000000044521d: cmp eax, 0x6a1b6; syscall; 
0x0000000000445125: cmp eax, 0x6a2ae; syscall; 
0x0000000000440e41: cmp eax, 0x6d499; add byte ptr [rbp + 0xf], dh; mov r8, qword ptr [rip + 0x6d498]; mov rax, r8; ret; 
0x000000000043ddc1: cmp eax, 0x71612; syscall; 
0x0000000000408673: cmp eax, 0x79155; call 0x2df0; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000460274: cmp eax, 0x89000001; ret 0x8948; 
0x0000000000434b9f: cmp eax, 0x8b000529; or al, 0x8a; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x00000000004186f9: cmp eax, 0x8d480002; add eax, 0x23d5d; cmove rax, rdx; ret; 
0x0000000000417a25: cmp eax, 0x94d76; syscall; 
0x0000000000415d0d: cmp eax, 0x96a8e; syscall; 
0x0000000000415cd5: cmp eax, 0x96ac6; syscall; 
0x00000000004157b5: cmp eax, 0x96fe6; syscall; 
0x0000000000415471: cmp eax, 0x9732a; syscall; 
0x0000000000417428: cmp eax, 0x97d42; add dword ptr [rax - 0x77], ecx; ret 0x2d74; 
0x0000000000416930: cmp eax, 0x9885b; syscall; 
0x0000000000413da1: cmp eax, 0x989fa; syscall; 
0x0000000000413da1: cmp eax, 0x989fa; syscall; pop rbp; ret; 
0x0000000000413d71: cmp eax, 0x98a2a; syscall; 
0x0000000000416009: cmp eax, 0x99172; syscall; 
0x0000000000416009: cmp eax, 0x99172; syscall; pop rbx; ret; 
0x000000000041433f: cmp eax, 0x9ae4c; syscall; 
0x00000000004142c3: cmp eax, 0x9aeb8; syscall; 
0x000000000041401e: cmp eax, 0x9b16d; syscall; 
0x0000000000412181: cmp eax, 0x9d00a; syscall; 
0x0000000000410d30: cmp eax, 0x9e3db; syscall; 
0x0000000000410d30: cmp eax, 0x9e3db; syscall; ret; 
0x0000000000410837: cmp eax, 0x9e8d4; syscall; 
0x00000000004104ec: cmp eax, 0x9ec1f; syscall; 
0x00000000004101a9: cmp eax, 0x9ef62; syscall; 
0x000000000040eea3: cmp eax, 0xa0268; syscall; 
0x000000000040ebe3: cmp eax, 0xa0528; syscall; 
0x000000000040e737: cmp eax, 0xa09d4; syscall; 
0x000000000040e737: cmp eax, 0xa09d4; syscall; ret; 
0x00000000004117b4: cmp eax, 0xa0; jbe 0x117c0; ret; 
0x00000000004096a5: cmp eax, 0xa5d2e; syscall; 
0x0000000000408774: cmp eax, 0xa654f; syscall; 
0x000000000040854d: cmp eax, 0xa6776; syscall; 
0x0000000000408512: cmp eax, 0xa67b1; syscall; 
0x000000000040843e: cmp eax, 0xa6885; syscall; 
0x0000000000406512: cmp eax, 0xa8751; syscall; 
0x0000000000404c3f: cmp eax, 0xa9fec; syscall; 
0x0000000000402ef7: cmp eax, 0xa; ja 0x2f23; lea rdx, [rip + 0x7e391]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000403c56: cmp eax, 0xaaf25; syscall; 
0x0000000000403c2d: cmp eax, 0xaaf4e; syscall; 
0x0000000000403b24: cmp eax, 0xab057; syscall; 
0x0000000000401206: cmp eax, 0xada75; syscall; 
0x0000000000411784: cmp eax, 0xffff; jbe 0x11790; ret; 
0x000000000043e27d: cmp eax, 0xfffff000; ja 0x3e2a0; hlt; mov eax, esi; syscall; 
0x000000000043e877: cmp eax, 0xfffff000; ja 0x3e880; ret; 
0x000000000043e8c6: cmp eax, 0xfffff000; ja 0x3e8d0; ret; 
0x000000000043ea3f: cmp eax, 0xfffff000; ja 0x3eaa0; ret; 
0x000000000043eae4: cmp eax, 0xfffff000; ja 0x3eb40; ret; 
0x000000000043eb78: cmp eax, 0xfffff000; ja 0x3eb80; ret; 
0x000000000043ebb4: cmp eax, 0xfffff000; ja 0x3ec00; ret; 
0x000000000043f378: cmp eax, 0xfffff000; ja 0x3f380; ret; 
0x000000000043f625: cmp eax, 0xfffff000; ja 0x3f630; ret; 
0x000000000043f658: cmp eax, 0xfffff000; ja 0x3f660; ret; 
0x000000000043f691: cmp eax, 0xfffff000; ja 0x3f6a0; ret; 
0x000000000043f7f3: cmp eax, 0xfffff000; ja 0x3f860; pop rbx; pop rbp; ret; 
0x0000000000461ae8: cmp eax, 0xfffff000; ja 0x61abc; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000462067: cmp eax, 0xfffff000; ja 0x62070; ret; 
0x00000000004620bc: cmp eax, 0xfffff000; ja 0x620c8; ret; 
0x00000000004738d8: cmp eax, 0xfffff000; ja 0x738e0; ret; 
0x000000000047391b: cmp eax, 0xfffff000; ja 0x73928; ret; 
0x000000000043e7e8: cmp eax, 0xfffff001; jae 0x3e7f0; ret; 
0x000000000043f888: cmp eax, 0xfffff001; jae 0x3f890; ret; 
0x000000000043f8b8: cmp eax, 0xfffff001; jae 0x3f8c0; ret; 
0x000000000043f8e8: cmp eax, 0xfffff001; jae 0x3f8f0; ret; 
0x0000000000440b4b: cmp eax, 0xfffff001; jae 0x40b53; ret; 
0x0000000000440b78: cmp eax, 0xfffff001; jae 0x40b80; ret; 
0x0000000000461fe8: cmp eax, 0xfffff001; jae 0x61ff0; ret; 
0x0000000000478798: cmp eax, 0xfffff001; jae 0x787a0; ret; 
0x000000000043e86a: cmp eax, 1; ja 0x3e898; mov eax, 4; syscall; 
0x000000000043e8b9: cmp eax, 1; ja 0x3e8e8; mov eax, 5; syscall; 
0x000000000046205a: cmp eax, 1; ja 0x62088; mov eax, 6; syscall; 
0x000000000043d7f6: cmp eax, 1; je 0x3d808; cmp eax, 2; je 0x3d810; xor eax, eax; ret; 
0x0000000000410d16: cmp eax, 1; jg 0x10d1c; ret; 
0x00000000004727d2: cmp eax, 1; jg 0x727d8; ret; 
0x000000000040e6ee: cmp eax, 1; jg 0xe723; ret; 
0x000000000043d7fb: cmp eax, 2; je 0x3d810; xor eax, eax; ret; 
0x000000000045f2ea: cmp eax, 4; je 0x5f2f0; ret; 
0x0000000000417880: cmp eax, 9; ja 0x178d0; lea rdx, [rip + 0x6b29c]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000046d5a9: cmp eax, 9; ja 0x6d580; mov rax, r8; ret; 
0x0000000000456e58: cmp eax, 9; mov eax, 0xffffffff; jbe 0x56e30; mov qword ptr [rdi], rsi; ret; 
0x000000000045d0c8: cmp eax, 9; mov eax, 0xffffffff; jbe 0x5d0a0; mov qword ptr [rdi], rsi; ret; 
0x00000000004413f4: cmp eax, dword ptr [rcx + rsi + 0x10]; jae 0x413a1; xor eax, eax; ret; 
0x000000000043f7e4: cmp eax, dword ptr [rcx - 0x77]; fimul dword ptr [rax - 0x77]; out dx, eax; mov eax, 9; syscall; 
0x000000000040d785: cmp eax, dword ptr [rdi + 0x10]; jae 0xd790; movzx eax, byte ptr [rax]; ret; 
0x0000000000418879: cmp eax, dword ptr [rdx]; add byte ptr [rax - 0x73], cl; add eax, 0x23bed; cmove rax, rdx; ret; 
0x0000000000473972: cmp eax, dword ptr [rip + 0x3be38]; jae 0x73986; mov rdx, qword ptr [rip + 0x3be37]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000440df9: cmp eax, eax; ja 0x40e08; add rsp, 8; ret; 
0x000000000040a4ce: cmp eax, ebp; jae 0xa52d; mov rax, qword ptr [rsp + 8]; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x000000000040c568: cmp eax, ebp; jae 0xc680; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x000000000040c664: cmp eax, ebp; jae 0xc6b0; mov rax, qword ptr [rsp + 8]; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x000000000040f6a5: cmp eax, ecx; jbe 0xf6b8; mov rax, qword ptr [rbx + 0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000043b542: cmp eax, ecx; jne 0x3b750; xor eax, eax; ret; 
0x000000000043b6aa: cmp eax, ecx; jne 0x3b765; xor eax, eax; ret; 
0x000000000043b763: cmp eax, ecx; sbb eax, eax; sbb eax, -1; ret; 
0x000000000045e3b8: cmp eax, edx; cmovg r8, rdx; test rax, rax; jne 0x5e3b0; mov rax, r8; ret; 
0x000000000040ef28: cmp eax, edx; cmovg r8, rdx; test rax, rax; jne 0xef20; mov rax, r8; ret; 
0x0000000000410d8b: cmp eax, edx; jae 0x10db0; movzx eax, byte ptr [rax]; ret; 
0x0000000000452836: cmp eax, edx; jbe 0x533d0; mov rdx, r12; mov rsi, r13; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x0000000000452286: cmp eax, edx; jbe 0x5353a; mov rdx, r13; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000045dfc4: cmp eax, edx; jbe 0x5dff9; movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x000000000045e104: cmp eax, edx; jbe 0x5e139; movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x000000000045e719: cmp eax, edx; jbe 0x5e758; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000045e828: cmp eax, edx; jbe 0x5e928; mov esi, r15d; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x000000000045ef5e: cmp eax, edx; jbe 0x5ef90; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000045eff8: cmp eax, edx; jbe 0x5f010; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x00000000004094de: cmp eax, edx; jbe 0x9640; xor esi, esi; mov rdi, rbp; call qword ptr [rbx + 0x10]; 
0x0000000000409789: cmp eax, edx; jbe 0x97e8; mov rdi, rbx; call qword ptr [rbp + 0x60]; 
0x0000000000409e6e: cmp eax, edx; jbe 0x9ee4; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040d3fb: cmp eax, edx; jbe 0xd413; mov rdx, r12; mov rsi, r15; mov rdi, rbp; call qword ptr [rbx + 0x40]; 
0x000000000040efd3: cmp eax, edx; jbe 0xf030; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x18]; 
0x000000000040f0c9: cmp eax, edx; jbe 0xf0e0; mov rax, qword ptr [rbx + 0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000040f487: cmp eax, edx; jbe 0xf4f0; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040f539: cmp eax, edx; jbe 0xf560; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000040f5c9: cmp eax, edx; jbe 0xf638; movzx esi, byte ptr [r12]; lea r15, [r12 + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x000000000040fe39: cmp eax, edx; jbe 0xfe70; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000040fed0: cmp eax, edx; jbe 0xfef0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x0000000000411c29: cmp eax, edx; jne 0x11c2e; ret; 
0x000000000041896c: cmp eax, edx; lea rdx, [rip + 0x1c8bb]; lea rax, [rip + 0x1c474]; cmove rax, rdx; ret; 
0x0000000000417c8c: cmp eax, edx; lea rdx, [rip + 0x1d92b]; lea rax, [rip + 0x1d784]; cmove rax, rdx; ret; 
0x000000000047323c: cmp eax, edx; lea rdx, [rip + 0x3ab]; lea rax, [rip + 0x74]; cmove rax, rdx; ret; 
0x000000000041892c: cmp eax, edx; lea rdx, [rip + 0x7a9b]; lea rax, [rip + 0x75c4]; cmove rax, rdx; ret; 
0x00000000004184bc: cmp eax, edx; lea rdx, [rip + 0x7c3b]; lea rax, [rip + 0x7704]; cmove rax, rdx; ret; 
0x000000000045f6ec: cmp eax, edx; lea rdx, [rip + 0xb2b]; lea rax, [rip + 0x834]; cmove rax, rdx; ret; 
0x000000000046094c: cmp eax, edx; lea rdx, [rip + 0xc3b]; lea rax, [rip + 0x994]; cmove rax, rdx; ret; 
0x000000000045f6ac: cmp eax, edx; lea rdx, [rip + 0xf5b]; lea rax, [rip + 0xd34]; cmove rax, rdx; ret; 
0x000000000045f03a: cmp eax, esi; ja 0x5f030; lea eax, [rdx + rdi]; ret; 
0x000000000040ff1a: cmp eax, esi; ja 0xff10; lea eax, [rdx + rdi]; ret; 
0x00000000004765e4: cmp eax, esi; je 0x765f0; ret; 
0x000000000046d232: cmp ebp, edi; jmp qword ptr [rsi + 0x66]; 
0x000000000047c9bf: cmp ebx, -1; jmp qword ptr [rsi + 0x66]; 
0x000000000045f286: cmp ebx, 0xa; je 0x5f28c; ret; 
0x0000000000415f24: cmp ebx, ebp; jne 0x15f08; pop rbx; pop rbp; pop r12; ret; 
0x0000000000423ad3: cmp ebx, esi; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004084ad: cmp ebx, esp; jae 0x84c3; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000045d1d0: cmp ecx, 0x2e; ja 0x5d1f4; lea rsi, [rip + 0x37f4c]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x0000000000402773: cmp ecx, 0x45; ja 0x2788; lea rsi, [rip + 0x7e959]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000047836e: cmp ecx, 0xe4757fff; mov eax, 1; ret; 
0x00000000004620af: cmp ecx, 1; ja 0x620e0; mov eax, 0x106; syscall; 
0x0000000000451836: cmp ecx, 7; ja 0x51e30; movsxd rcx, dword ptr [rdx + rcx*4]; add rcx, rdx; jmp rcx; 
0x00000000004574b6: cmp ecx, 7; ja 0x57d20; movsxd rcx, dword ptr [rdx + rcx*4]; add rcx, rdx; jmp rcx; 
0x0000000000476a26: cmp ecx, dword ptr [rax + 0x28]; jae 0x76a10; mov eax, 1; ret; 
0x0000000000460951: cmp ecx, dword ptr [rax + rax]; add byte ptr [rax - 0x73], cl; add eax, 0x994; cmove rax, rdx; ret; 
0x0000000000444248: cmp ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000421ec5: cmp ecx, eax; jne 0x222f3; movzx eax, byte ptr [rdi - 1]; movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x000000000042196b: cmp ecx, eax; jne 0x222f3; movzx eax, byte ptr [rdi - 1]; movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x00000000004218bf: cmp ecx, eax; jne 0x222f3; xor eax, eax; ret; 
0x00000000004219b6: cmp ecx, eax; jne 0x222ff; movzx eax, byte ptr [rdi - 1]; movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x00000000004218e7: cmp ecx, eax; jne 0x222ff; xor eax, eax; ret; 
0x0000000000421bb8: cmp ecx, eax; jne 0x2230a; movzx eax, byte ptr [rdi - 1]; movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x0000000000476a64: cmp ecx, eax; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x000000000046c7a8: cmp ecx, edx; je 0x6c700; mov eax, edx; sub eax, ecx; ret; 
0x000000000046a6c6: cmp ecx, edx; jne 0x6a6a0; mov eax, dword ptr [rcx]; ret; 
0x00000000004184c1: cmp edi, dword ptr [rax + rax]; lea rax, [rip + 0x7704]; cmove rax, rdx; ret; 
0x0000000000416ac1: cmp edi, dword ptr [rsi - 0x6917fffa]; mov al, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000462227: cmp edi, eax; ja 0x62250; xor eax, eax; ret; 
0x0000000000450276: cmp edi, eax; jne 0x50260; mov rsi, qword ptr [rsp + 0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x000000000046d04e: cmp edi, ebp; jmp qword ptr [rsi + 0x66]; 
0x00000000004704ea: cmp edi, ecx; ja 0x704d0; mov eax, r8d; ret; 
0x000000000043c159: cmp edi, ecx; jb 0x3c2c4; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043c4b4: cmp edi, ecx; jb 0x3c681; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043c8ff: cmp edi, ecx; jb 0x3cb3c; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000044cfe1: cmp edi, edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000043c0f7: cmp edi, edx; jb 0x3c0fe; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000467c19: cmp edi, esi; jne 0x67c20; pop rbx; ret; 
0x000000000043ce3f: cmp edx, 0x20; ja 0x3ce4f; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043cddf: cmp edx, 0x20; ja 0x3ce58; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045d226: cmp edx, 0x37; ja 0x5d3a0; lea rcx, [rip + 0x37fae]; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000043cf97: cmp edx, 0x40; ja 0x3cfaa; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x000000000043cf47: cmp edx, 0x40; ja 0x3cfb3; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x00000000004738c1: cmp edx, 0x7fffffff; mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x000000000043d33e: cmp edx, 0xff; cmove rax, rcx; ret; 
0x00000000004359b6: cmp edx, 1; ja 0x35a50; je 0x35a40; mov byte ptr [rdi], 0; vzeroupper; ret; 
0x00000000004732a6: cmp edx, 4; cmovne r8, rax; mov rax, r8; ret; 
0x000000000045ea80: cmp edx, dword ptr [rax + 0x18]; jbe 0x5eaa4; mov rax, qword ptr [rax + 0xe0]; mov esi, 0xffffffff; call qword ptr [rax + 0x18]; 
0x0000000000441509: cmp edx, dword ptr [rdi + 0x18]; ja 0x41524; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x000000000044152f: cmp edx, dword ptr [rdi + 0x18]; jg 0x41524; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000420305: cmp edx, eax; jbe 0x20360; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000420325: cmp edx, eax; jbe 0x20360; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000420345: cmp edx, eax; jbe 0x20360; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000004202f5: cmp edx, eax; jbe 0x20360; add rax, rdi; vzeroupper; ret; 
0x00000000004737f5: cmp edx, eax; jbe 0x73850; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000473815: cmp edx, eax; jbe 0x73850; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000473835: cmp edx, eax; jbe 0x73850; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000004737e5: cmp edx, eax; jbe 0x73850; add rax, rdi; vzeroupper; ret; 
0x000000000047314e: cmp edx, eax; jg 0x73160; pcmpistri xmm1, xmm1, 0x3a; cmp edx, ecx; jle 0x73200; ret; 
0x000000000046d522: cmp edx, ecx; jae 0x6d508; mov rax, r8; ret; 
0x000000000043bd26: cmp edx, ecx; jle 0x3bd3c; movsxd rax, ecx; ret; 
0x0000000000473158: cmp edx, ecx; jle 0x73200; ret; 
0x000000000043d032: cmp edx, ecx; jne 0x3d017; vzeroupper; ret; 
0x000000000043d1f5: cmp edx, ecx; jne 0x3d1d2; vzeroupper; ret; 
0x000000000045dbe3: cmp edx, edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000041162e: cmp edx, edi; setae al; ret; 
0x0000000000461097: cmp edx, esi; je 0x6109f; test edx, edx; jne 0x61090; ret; 
0x000000000040568d: cmp esi, 0x8348ffff; ret 0xeb04; 
0x000000000044d9b4: cmp esi, 3; je 0x4d9c0; ret; 
0x000000000043f3d5: cmp esi, 9; je 0x3f400; mov eax, 0x48; syscall; 
0x000000000043f464: cmp esi, 9; je 0x3f490; mov eax, 0x48; syscall; 
0x000000000043c4d5: cmp esi, dword ptr [rdx + 5]; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x0000000000460805: cmp esi, eax; jbe 0x60880; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000041185f: cmp esi, edx; jb 0x11840; mov byte ptr [r8 + rsi], r10b; mov rax, r8; ret; 
0x0000000000425393: cmp esp, ebx; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000047ad3e: cmp qword ptr [r9 + 0x38], 0; je 0x7ad94; add rsp, 0x18; ret; 
0x000000000045e957: cmp qword ptr [rax + 0x30], 0; je 0x5e960; ret; 
0x00000000004115d4: cmp qword ptr [rdi + 0x10], rax; cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x000000000040f440: cmp qword ptr [rdi + 0x38], 0; je 0xf450; ret; 
0x0000000000471f97: cmp qword ptr [rdi], rcx; test ah, ah; add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret 0xffe8; 
0x000000000044f92b: cmp qword ptr [rdi], rsi; je 0x4f938; ret; 
0x000000000040bc2c: cmp qword ptr [rdx + 0x48], r8; cmovne eax, ecx; ret; 
0x000000000040c130: cmp qword ptr [rip + 0x9fe80], 0; je 0xc13b; ret; 
0x000000000047d969: cmp qword ptr [rsi + 8], rcx; ja 0x7d971; sbb eax, eax; ret; 
0x000000000044f92a: cmp qword ptr fs:[rdi], rsi; je 0x4f938; ret; 
0x000000000043c920: cmp r10b, 1; ja 0x3c979; jb 0x3c92d; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000045f285: cmp r11d, 0xa; je 0x5f28c; ret; 
0x0000000000450275: cmp r15, rax; jne 0x50260; mov rsi, qword ptr [rsp + 0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x00000000004413f3: cmp r8, qword ptr [rcx + rsi + 0x10]; jae 0x413a1; xor eax, eax; ret; 
0x000000000045e3b7: cmp r8, rdx; cmovg r8, rdx; test rax, rax; jne 0x5e3b0; mov rax, r8; ret; 
0x000000000040ef27: cmp r8, rdx; cmovg r8, rdx; test rax, rax; jne 0xef20; mov rax, r8; ret; 
0x000000000043e869: cmp r8d, 1; ja 0x3e898; mov eax, 4; syscall; 
0x000000000043e8b8: cmp r8d, 1; ja 0x3e8e8; mov eax, 5; syscall; 
0x0000000000462059: cmp r8d, 1; ja 0x62088; mov eax, 6; syscall; 
0x00000000004620ae: cmp r9d, 1; ja 0x620e0; mov eax, 0x106; syscall; 
0x000000000043e27c: cmp rax, -0x1000; ja 0x3e2a0; hlt; mov eax, esi; syscall; 
0x000000000043e876: cmp rax, -0x1000; ja 0x3e880; ret; 
0x000000000043e8c5: cmp rax, -0x1000; ja 0x3e8d0; ret; 
0x000000000043ea3e: cmp rax, -0x1000; ja 0x3eaa0; ret; 
0x000000000043eae3: cmp rax, -0x1000; ja 0x3eb40; ret; 
0x000000000043eb77: cmp rax, -0x1000; ja 0x3eb80; ret; 
0x000000000043ebb3: cmp rax, -0x1000; ja 0x3ec00; ret; 
0x000000000043f377: cmp rax, -0x1000; ja 0x3f380; ret; 
0x000000000043f624: cmp rax, -0x1000; ja 0x3f630; ret; 
0x000000000043f657: cmp rax, -0x1000; ja 0x3f660; ret; 
0x000000000043f690: cmp rax, -0x1000; ja 0x3f6a0; ret; 
0x000000000043f7f2: cmp rax, -0x1000; ja 0x3f860; pop rbx; pop rbp; ret; 
0x0000000000461ae7: cmp rax, -0x1000; ja 0x61abc; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000462066: cmp rax, -0x1000; ja 0x62070; ret; 
0x00000000004620bb: cmp rax, -0x1000; ja 0x620c8; ret; 
0x00000000004738d7: cmp rax, -0x1000; ja 0x738e0; ret; 
0x000000000047391a: cmp rax, -0x1000; ja 0x73928; ret; 
0x000000000043e7e7: cmp rax, -0xfff; jae 0x3e7f0; ret; 
0x000000000043f887: cmp rax, -0xfff; jae 0x3f890; ret; 
0x000000000043f8b7: cmp rax, -0xfff; jae 0x3f8c0; ret; 
0x000000000043f8e7: cmp rax, -0xfff; jae 0x3f8f0; ret; 
0x0000000000440b4a: cmp rax, -0xfff; jae 0x40b53; ret; 
0x0000000000440b77: cmp rax, -0xfff; jae 0x40b80; ret; 
0x0000000000461fe7: cmp rax, -0xfff; jae 0x61ff0; ret; 
0x0000000000478797: cmp rax, -0xfff; jae 0x787a0; ret; 
0x0000000000417aee: cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x00000000004413ae: cmp rax, -1; cmove rax, rdx; ret; 
0x000000000046cdcb: cmp rax, -3; jbe 0x6cdd8; ret; 
0x0000000000442ce2: cmp rax, 0x16; ja 0x42d00; movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x0000000000442d29: cmp rax, 0x17; ja 0x42d00; movsxd rax, dword ptr [rbp + rax*4]; add rax, rbp; jmp rax; 
0x0000000000441bf4: cmp rax, 0x1e; ja 0x41c20; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000411683: cmp rax, 0x2000000; jbe 0x11690; ret; 
0x0000000000411743: cmp rax, 0x408; jbe 0x11750; ret; 
0x00000000004117b3: cmp rax, 0xa0; jbe 0x117c0; ret; 
0x0000000000411783: cmp rax, 0xffff; jbe 0x11790; ret; 
0x000000000046d5a8: cmp rax, 9; ja 0x6d580; mov rax, r8; ret; 
0x000000000040d784: cmp rax, qword ptr [rdi + 0x10]; jae 0xd790; movzx eax, byte ptr [rax]; ret; 
0x0000000000473971: cmp rax, qword ptr [rip + 0x3be38]; jae 0x73986; mov rdx, qword ptr [rip + 0x3be37]; add word ptr [rdx + rax*2], 1; ret; 
0x000000000040a4cd: cmp rax, r13; jae 0xa52d; mov rax, qword ptr [rsp + 8]; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x000000000040c567: cmp rax, r13; jae 0xc680; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x000000000040c663: cmp rax, r13; jae 0xc6b0; mov rax, qword ptr [rsp + 8]; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x0000000000440df8: cmp rax, r8; ja 0x40e08; add rsp, 8; ret; 
0x000000000040f6a4: cmp rax, rcx; jbe 0xf6b8; mov rax, qword ptr [rbx + 0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000000410d8a: cmp rax, rdx; jae 0x10db0; movzx eax, byte ptr [rax]; ret; 
0x0000000000452835: cmp rax, rdx; jbe 0x533d0; mov rdx, r12; mov rsi, r13; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x0000000000452285: cmp rax, rdx; jbe 0x5353a; mov rdx, r13; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000045dfc3: cmp rax, rdx; jbe 0x5dff9; movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x000000000045e103: cmp rax, rdx; jbe 0x5e139; movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x000000000045e718: cmp rax, rdx; jbe 0x5e758; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000045e827: cmp rax, rdx; jbe 0x5e928; mov esi, r15d; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x000000000045ef5d: cmp rax, rdx; jbe 0x5ef90; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000045eff7: cmp rax, rdx; jbe 0x5f010; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x00000000004094dd: cmp rax, rdx; jbe 0x9640; xor esi, esi; mov rdi, rbp; call qword ptr [rbx + 0x10]; 
0x0000000000409788: cmp rax, rdx; jbe 0x97e8; mov rdi, rbx; call qword ptr [rbp + 0x60]; 
0x0000000000409e6d: cmp rax, rdx; jbe 0x9ee4; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040d3fa: cmp rax, rdx; jbe 0xd413; mov rdx, r12; mov rsi, r15; mov rdi, rbp; call qword ptr [rbx + 0x40]; 
0x000000000040efd2: cmp rax, rdx; jbe 0xf030; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x18]; 
0x000000000040f0c8: cmp rax, rdx; jbe 0xf0e0; mov rax, qword ptr [rbx + 0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000040f486: cmp rax, rdx; jbe 0xf4f0; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040f538: cmp rax, rdx; jbe 0xf560; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000040f5c8: cmp rax, rdx; jbe 0xf638; movzx esi, byte ptr [r12]; lea r15, [r12 + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x000000000040fe38: cmp rax, rdx; jbe 0xfe70; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000040fecf: cmp rax, rdx; jbe 0xfef0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x0000000000411c28: cmp rax, rdx; jne 0x11c2e; ret; 
0x000000000041896b: cmp rax, rdx; lea rdx, [rip + 0x1c8bb]; lea rax, [rip + 0x1c474]; cmove rax, rdx; ret; 
0x0000000000417c8b: cmp rax, rdx; lea rdx, [rip + 0x1d92b]; lea rax, [rip + 0x1d784]; cmove rax, rdx; ret; 
0x000000000047323b: cmp rax, rdx; lea rdx, [rip + 0x3ab]; lea rax, [rip + 0x74]; cmove rax, rdx; ret; 
0x000000000041892b: cmp rax, rdx; lea rdx, [rip + 0x7a9b]; lea rax, [rip + 0x75c4]; cmove rax, rdx; ret; 
0x00000000004184bb: cmp rax, rdx; lea rdx, [rip + 0x7c3b]; lea rax, [rip + 0x7704]; cmove rax, rdx; ret; 
0x000000000045f6eb: cmp rax, rdx; lea rdx, [rip + 0xb2b]; lea rax, [rip + 0x834]; cmove rax, rdx; ret; 
0x000000000046094b: cmp rax, rdx; lea rdx, [rip + 0xc3b]; lea rax, [rip + 0x994]; cmove rax, rdx; ret; 
0x000000000045f6ab: cmp rax, rdx; lea rdx, [rip + 0xf5b]; lea rax, [rip + 0xd34]; cmove rax, rdx; ret; 
0x000000000045f039: cmp rax, rsi; ja 0x5f030; lea eax, [rdx + rdi]; ret; 
0x000000000040ff19: cmp rax, rsi; ja 0xff10; lea eax, [rdx + rdi]; ret; 
0x00000000004765e3: cmp rax, rsi; je 0x765f0; ret; 
0x00000000004084ac: cmp rbx, r12; jae 0x84c3; nop dword ptr [rax]; call qword ptr [rbx]; 
0x0000000000415f23: cmp rbx, rbp; jne 0x15f08; pop rbx; pop rbp; pop r12; ret; 
0x0000000000476a25: cmp rcx, qword ptr [rax + 0x28]; jae 0x76a10; mov eax, 1; ret; 
0x0000000000421ec4: cmp rcx, rax; jne 0x222f3; movzx eax, byte ptr [rdi - 1]; movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x000000000042196a: cmp rcx, rax; jne 0x222f3; movzx eax, byte ptr [rdi - 1]; movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x00000000004218be: cmp rcx, rax; jne 0x222f3; xor eax, eax; ret; 
0x0000000000476a63: cmp rcx, rax; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x000000000046a6c5: cmp rcx, rdx; jne 0x6a6a0; mov eax, dword ptr [rcx]; ret; 
0x000000000043c158: cmp rdi, r9; jb 0x3c2c4; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043c4b3: cmp rdi, r9; jb 0x3c681; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043c8fe: cmp rdi, r9; jb 0x3cb3c; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000462226: cmp rdi, rax; ja 0x62250; xor eax, eax; ret; 
0x000000000043c0f6: cmp rdi, rdx; jb 0x3c0fe; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000467c18: cmp rdi, rsi; jne 0x67c20; pop rbx; ret; 
0x000000000043ce3e: cmp rdx, 0x20; ja 0x3ce4f; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043cdde: cmp rdx, 0x20; ja 0x3ce58; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043cf96: cmp rdx, 0x40; ja 0x3cfaa; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x000000000043cf46: cmp rdx, 0x40; ja 0x3cfb3; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x00000000004738c0: cmp rdx, 0x7fffffff; mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x00000000004732a5: cmp rdx, 4; cmovne r8, rax; mov rax, r8; ret; 
0x000000000045ea7f: cmp rdx, qword ptr [rax + 0x18]; jbe 0x5eaa4; mov rax, qword ptr [rax + 0xe0]; mov esi, 0xffffffff; call qword ptr [rax + 0x18]; 
0x0000000000441508: cmp rdx, qword ptr [rdi + 0x18]; ja 0x41524; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x000000000044152e: cmp rdx, qword ptr [rdi + 0x18]; jg 0x41524; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000420304: cmp rdx, rax; jbe 0x20360; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000420324: cmp rdx, rax; jbe 0x20360; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000420344: cmp rdx, rax; jbe 0x20360; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000004202f4: cmp rdx, rax; jbe 0x20360; add rax, rdi; vzeroupper; ret; 
0x00000000004737f4: cmp rdx, rax; jbe 0x73850; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000473814: cmp rdx, rax; jbe 0x73850; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000473834: cmp rdx, rax; jbe 0x73850; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000004737e4: cmp rdx, rax; jbe 0x73850; add rax, rdi; vzeroupper; ret; 
0x000000000046d521: cmp rdx, rcx; jae 0x6d508; mov rax, r8; ret; 
0x000000000043d031: cmp rdx, rcx; jne 0x3d017; vzeroupper; ret; 
0x000000000043d1f4: cmp rdx, rcx; jne 0x3d1d2; vzeroupper; ret; 
0x000000000041162d: cmp rdx, rdi; setae al; ret; 
0x0000000000460804: cmp rsi, rax; jbe 0x60880; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000041185e: cmp rsi, rdx; jb 0x11840; mov byte ptr [r8 + rsi], r10b; mov rax, r8; ret; 
0x0000000000435080: cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000428b57: cmpsb byte ptr [rsi], byte ptr [rdi]; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000421d49: cmpsb byte ptr [rsi], byte ptr [rdi]; add eax, 0xc0310000; ret; 
0x000000000046822b: cmpsb byte ptr [rsi], byte ptr [rdi]; add rax, rsi; jmp rax; 
0x000000000046c0c6: cmpsb byte ptr [rsi], byte ptr [rdi]; jp 0x6c0c9; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000047aeab: cmpsb byte ptr [rsi], byte ptr [rdi]; mov rdx, qword ptr [rdx]; mov qword ptr [r9], rdx; pop rbx; ret; 
0x0000000000432a36: cmpsb byte ptr [rsi], byte ptr [rdi]; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004016dc: cmpsb byte ptr [rsi], byte ptr [rdi]; seta al; sbb al, 0; test al, al; jne 0x16e7; ret; 
0x0000000000428b56: cmpsb byte ptr ss:[rsi], byte ptr [rdi]; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000439552: cmpsd dword ptr [rsi], dword ptr [rdi]; add al, 0; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000004289d7: cmpsd dword ptr [rsi], dword ptr [rdi]; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000468ad8: cmpsd dword ptr [rsi], dword ptr [rdi]; add rax, rdi; jmp rax; 
0x0000000000463405: cmpsd dword ptr [rsi], dword ptr [rdi]; fdiv st(1), st(0); dec dword ptr [rax + 0x39]; ret; 
0x0000000000454de2: cmpsd dword ptr [rsi], dword ptr [rdi]; idiv bh; jmp qword ptr [rsi + 0x2e]; 
0x0000000000422e65: cmpsd dword ptr [rsi], dword ptr [rdi]; inc dword ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004413f9: cmpsd dword ptr [rsi], dword ptr [rdi]; xor eax, eax; ret; 
0x0000000000414511: cmpxchg dword ptr [rip + 0x98288], edx; lea rax, [rip + 0x98281]; add rsp, 0x10; pop rbp; ret; 
0x000000000047cab0: cwde; add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000453f91: cwde; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000443068: cwde; ret 6; 
0x000000000047ab9c: cwde; sbb al, byte ptr [rdx]; add bl, dh; divps xmm0, xmmword ptr [rip + 0x21a94]; ret; 
0x00000000004370b1: dec byte ptr [r8 + 0x29]; ret 0x280f; 
0x00000000004370b2: dec byte ptr [rax + 0x29]; ret 0x280f; 
0x000000000042d5c2: dec byte ptr [rax + 0x6f]; pop rcx; jmp qword ptr [rdx - 0x2f]; 
0x000000000043ca15: dec byte ptr [rax + 0x7f]; je 0x3ca31; std; vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7; vzeroupper; ret; 
0x000000000043cbf3: dec byte ptr [rax + 0x7f]; jg 0x3cbfb; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000043cd7d: dec byte ptr [rax + 0x7f]; jg 0x3cd85; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000043ca1d: dec byte ptr [rax + 0x7f]; jl 0x3ca39; cld; vzeroupper; ret; 
0x000000000043cb26: dec byte ptr [rax + 0x7f]; jns 0x3cb29; vmovdqu64 zmmword ptr [rcx - 0xc0], zmm8; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000043ccb1: dec byte ptr [rax + 0x7f]; jns 0x3ccb4; vmovdqu64 zmmword ptr [rcx - 0xc0], zmm8; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000043cb2d: dec byte ptr [rax + 0x7f]; std; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000043fb76: dec byte ptr [rax + 9]; ret; 
0x00000000004420c9: dec byte ptr [rax - 0x75]; adc byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x000000000043fada: dec byte ptr [rax - 0x75]; jo 0x3fae7; test sil, 1; jne 0x3fb00; ret; 
0x00000000004753b9: dec byte ptr [rax - 0x75]; or byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x000000000040d404: dec byte ptr [rax - 0x77]; out dx, eax; call qword ptr [rbx + 0x40]; 
0x0000000000403559: dec byte ptr [rax - 0x77]; ret 0x8d48; 
0x000000000045e832: dec byte ptr [rcx + rcx*4 - 0x11]; call qword ptr [rbx + 0x18]; 
0x000000000045005a: dec byte ptr [rcx + rcx*4 - 0x19]; mov rdx, rbp; call rbx; 
0x0000000000452028: dec byte ptr [rcx + rcx*4 - 9]; mov dword ptr [rbp - 0x934], r8d; call rax; 
0x000000000043fb98: dec byte ptr [rcx - 0x77]; adc byte ptr [r9 + 9], cl; ror dword ptr [rcx + rcx*4 + 0x48], 1; or bl, ch; ret; 
0x000000000040c134: dec byte ptr [rcx]; add byte ptr [rax], al; je 0xc13b; ret; 
0x000000000043f3d6: dec byte ptr [rcx]; je 0x3f400; mov eax, 0x48; syscall; 
0x000000000043f465: dec byte ptr [rcx]; je 0x3f490; mov eax, 0x48; syscall; 
0x000000000043c1a0: dec byte ptr [rdi]; mov bh, 0x36; mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x0000000000401d36: dec dl; mov edi, 0; call r8; mov eax, 0; leave; ret; 
0x000000000044eab9: dec dword ptr [r15]; mov dh, 0x53; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000046eb57: dec dword ptr [r8 - 0x77]; ret 0xf748; 
0x000000000046cdc9: dec dword ptr [r8 - 0x7d]; clc; std; jbe 0x6cdd8; ret; 
0x00000000004134a0: dec dword ptr [r9 - 0x7b]; ret; 
0x000000000047329a: dec dword ptr [rax + 0x21]; ret 0x8d48; 
0x00000000004371f2: dec dword ptr [rax + 0x29]; ret 0x280f; 
0x0000000000411a04: dec dword ptr [rax + 0x29]; ret 0x8d49; 
0x0000000000458698: dec dword ptr [rax + 0x29]; ret 0xb8; 
0x0000000000460007: dec dword ptr [rax + 0x31]; ror dword ptr [rax + 0x21], 0xce; je 0x60140; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x000000000043ed74: dec dword ptr [rax + 0x39]; je 0x3ed9d; or byte ptr [rdi], cl; xchg eax, ebp; ret 0x8948; 
0x000000000040cccd: dec dword ptr [rax + 0x39]; ret 0x830f; 
0x0000000000452d6e: dec dword ptr [rax + 0x39]; ret 0x850f; 
0x000000000040705f: dec dword ptr [rax + 0x39]; ret; 
0x00000000004530da: dec dword ptr [rax + 0x63]; ret 0x8545; 
0x000000000043d469: dec dword ptr [rax + 0x63]; ret 0xfac1; 
0x000000000046a28b: dec dword ptr [rax + 0x63]; ret; 
0x000000000044d737: dec dword ptr [rax + 0x63]; ror byte ptr [rcx - 0x2d94b73b], 1; push -0x1605feb4; ret 0xfffe; 
0x0000000000460209: dec dword ptr [rax + 0xf]; mov ebp, 0xf80148c6; ret; 
0x000000000044fedb: dec dword ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret 0x148; 
0x000000000046c38e: dec dword ptr [rax + 1]; ret; 
0x000000000044fa24: dec dword ptr [rax + 5]; add byte ptr [rdx], al; add byte ptr [rax], al; mov qword ptr fs:[rdx], rax; ret; 
0x000000000046ab5d: dec dword ptr [rax + 9]; ret 0x1075; 
0x000000000046aeea: dec dword ptr [rax + 9]; ret 0x850f; 
0x00000000004809db: dec dword ptr [rax - 0x39]; add eax, 0x2ebf1; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x00000000004805e6: dec dword ptr [rax - 0x39]; add eax, 0x2ee3e; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000046cde7: dec dword ptr [rax - 0x39]; add eax, 0x4286d; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x00000000004806ea: dec dword ptr [rax - 0x39]; ret 0x9180; 
0x000000000048078b: dec dword ptr [rax - 0x39]; ret 0xa280; 
0x0000000000480710: dec dword ptr [rax - 0x39]; ret 0xa300; 
0x0000000000480739: dec dword ptr [rax - 0x39]; ret 0xa4c0; 
0x0000000000480762: dec dword ptr [rax - 0x39]; ret 0xa540; 
0x00000000004807b4: dec dword ptr [rax - 0x39]; ret 0xaa80; 
0x00000000004807dd: dec dword ptr [rax - 0x39]; ret 0xaae0; 
0x0000000000480806: dec dword ptr [rax - 0x39]; ret 0xab60; 
0x000000000048082f: dec dword ptr [rax - 0x39]; ret 0xac20; 
0x0000000000480858: dec dword ptr [rax - 0x39]; ret 0xaca0; 
0x0000000000480881: dec dword ptr [rax - 0x39]; ret 0xad00; 
0x00000000004806c1: dec dword ptr [rax - 0x39]; ret 0xadc0; 
0x000000000046e3e6: dec dword ptr [rax - 0x39]; ret 0xffe8; 
0x000000000046c869: dec dword ptr [rax - 0x39]; ret 0xffff; 
0x0000000000403cdf: dec dword ptr [rax - 0x39]; ret; 
0x000000000047c7b8: dec dword ptr [rax - 0x46]; mov eax, 0xf; syscall; 
0x000000000047fc3f: dec dword ptr [rax - 0x73]; adc eax, 0x1cfd1; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000047db1f: dec dword ptr [rax - 0x73]; adc eax, 0x1f0b1; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000047ae16: dec dword ptr [rax - 0x73]; adc eax, 0x21822; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000401af5: dec dword ptr [rax - 0x73]; adc eax, 0x823e7; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000041848d: dec dword ptr [rax - 0x73]; add eax, 0x232eb; cmove rax, rdx; ret; 
0x0000000000468d46: dec dword ptr [rax - 0x75]; adc byte ptr [r9 + 3], cl; add eax, dword ptr [rbp - 0x7b]; sal byte ptr [rbp + 0x10], cl; mov qword ptr [rbp - 0xd8], r11; call rax; 
0x000000000047f311: dec dword ptr [rax - 0x75]; add al, 0x24; mov rdx, r15; mov rsi, qword ptr [r12 + rbp*8 + 0x10]; mov rdi, r13; call rax; 
0x00000000004687c2: dec dword ptr [rax - 0x75]; add dword ptr [rsi - 0x7b], esp; test byte ptr [rdi], 0x84; sar ebx, 0xff; dec dword ptr [rcx + 1]; ret 0xb58b; 
0x0000000000478080: dec dword ptr [rax - 0x75]; clc; sub rax, qword ptr fs:[0x28]; jne 0x780d1; leave; ret; 
0x000000000040a41a: dec dword ptr [rax - 0x75]; cmp byte ptr [r8 - 0x75], cl; push rbx; adc byte ptr [rax + 1], cl; ret 0x2b48; 
0x0000000000468aa0: dec dword ptr [rax - 0x75]; mov byte ptr [r9 - 0x77], r9b; ret 0x8949; 
0x00000000004681f3: dec dword ptr [rax - 0x75]; mov byte ptr [r9 - 0x77], r9b; xchg dword ptr [rax], ebx; add al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x00000000004580c2: dec dword ptr [rax - 0x75]; mov ebp, 0xfffff738; mov rdx, r10; mov rsi, r15; mov byte ptr [rbp - 0x94c], r9b; call rax; 
0x00000000004484ed: dec dword ptr [rax - 0x75]; mov word ptr [rax + rax*4], fs; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000040d77f: dec dword ptr [rax - 0x75]; or byte ptr [r8 + 0x3b], r9b; adc byte ptr [r11 + 6], r14b; movzx eax, byte ptr [rax]; ret; 
0x0000000000476961: dec dword ptr [rax - 0x75]; or byte ptr [rcx - 0x75], r9b; adc byte ptr [rax + 1], cl; ret 0x3949; 
0x000000000040f0ec: dec dword ptr [rax - 0x75]; sbb byte ptr [r11 + 0x480c2474], cl; mov edi, dword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000047cc0f: dec dword ptr [rax - 0x75]; test byte ptr [rax + rdi*2], ah; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000444a7c: dec dword ptr [rax - 0x75]; xchg eax, r8d; mov rdi, r12; call rax; 
0x000000000043fc6b: dec dword ptr [rax - 0x77]; adc al, 0x24; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x000000000046d26c: dec dword ptr [rax - 0x77]; adc byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x00000000004160fa: dec dword ptr [rax - 0x77]; add eax, 0x9667e; ret; 
0x00000000004160ec: dec dword ptr [rax - 0x77]; add eax, 0x96694; lea rax, [rip - 0xa8b]; mov qword ptr [rip + 0x9667e], rax; ret; 
0x000000000047a1b7: dec dword ptr [rax - 0x77]; add ebx, dword ptr [rax + 0x5a]; pop rbx; ret; 
0x000000000046963d: dec dword ptr [rax - 0x77]; mov r8b, 0xf; xchg eax, ebp; ret 0x2148; 
0x0000000000441476: dec dword ptr [rax - 0x77]; or byte ptr [r8 - 0x77], cl; ret 0x8548; 
0x000000000040a4db: dec dword ptr [rax - 0x77]; out dx, eax; call qword ptr [rax + 0x18]; 
0x0000000000413ac9: dec dword ptr [rax - 0x77]; push rsp; and al, 0x10; mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp], rdi; call rax; 
0x000000000046a26b: dec dword ptr [rax - 0x77]; ret 0x1ce8; 
0x00000000004542d1: dec dword ptr [rax - 0x77]; ret 0x2948; 
0x0000000000451268: dec dword ptr [rax - 0x77]; ret 0x2949; 
0x0000000000412e70: dec dword ptr [rax - 0x77]; ret 0x394c; 
0x00000000004592a2: dec dword ptr [rax - 0x77]; ret 0x3ee9; 
0x0000000000464955: dec dword ptr [rax - 0x77]; ret 0x8348; 
0x0000000000413969: dec dword ptr [rax - 0x77]; ret 0x840f; 
0x000000000040d850: dec dword ptr [rax - 0x77]; ret 0x8548; 
0x000000000046c5e9: dec dword ptr [rax - 0x77]; ret 0x8948; 
0x000000000040562e: dec dword ptr [rax - 0x77]; ret 0x8949; 
0x000000000046246c: dec dword ptr [rax - 0x77]; ret 0x8b48; 
0x000000000040bfaa: dec dword ptr [rax - 0x77]; ret 0x92eb; 
0x00000000004581e5: dec dword ptr [rax - 0x77]; ret 0xb848; 
0x000000000040402b: dec dword ptr [rax - 0x77]; ret 0xc031; 
0x000000000045bd7e: dec dword ptr [rax - 0x77]; ret 0xc3e9; 
0x0000000000417a71: dec dword ptr [rax - 0x77]; ret 0xcb8; 
0x0000000000448705: dec dword ptr [rax - 0x77]; ret 0xebe9; 
0x000000000040662f: dec dword ptr [rax - 0x77]; ret 0xf748; 
0x00000000004044de: dec dword ptr [rax - 0x77]; ret; 
0x000000000047855e: dec dword ptr [rax - 0x77]; shr eax, 0x19; mov ch, 0xfc; jmp qword ptr [rsi + 0xf]; 
0x00000000004686cd: dec dword ptr [rax - 0x7b]; ror byte ptr [rax + 0xf], 0x44; ret; 
0x000000000046287f: dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x8e; ret; 
0x0000000000472caf: dec dword ptr [rax - 0x7b]; sal byte ptr [rdx + rcx + 0x48], 0x8d; adc eax, 0x3ae04; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x000000000046d4cd: dec dword ptr [rax - 0x7b]; sal byte ptr [rdx + rcx + 0x48], 0x8d; or eax, 0x405a6; mov qword ptr [rax], rcx; pop rbp; ret; 
0x0000000000472f4e: dec dword ptr [rax - 0x7b]; sal byte ptr [rsp + rcx + 0x5b], 0x5d; pop r12; ret; 
0x00000000004531b3: dec dword ptr [rax - 0x7d]; clc; dec dword ptr [rax - 0x77]; ret; 
0x000000000046cdca: dec dword ptr [rax - 0x7d]; clc; std; jbe 0x6cdd8; ret; 
0x00000000004732a4: dec dword ptr [rax - 0x7d]; cli; add al, 0x4c; cmovne eax, eax; mov rax, r8; ret; 
0x0000000000446338: dec dword ptr [rax - 0x7d]; ret 0x4001; 
0x0000000000406e89: dec dword ptr [rax - 0x7d]; ret 0x8908; 
0x0000000000405690: dec dword ptr [rax - 0x7d]; ret 0xeb04; 
0x000000000040506c: dec dword ptr [rax - 0x7d]; ret; 
0x000000000044e268: dec dword ptr [rax - 0x7d]; rol byte ptr [rcx], 0x83; ret 0x4801; 
0x00000000004292dc: dec dword ptr [rax - 0x7f]; ret 0x80; 
0x0000000000411c79: dec dword ptr [rax - 9]; fisttp dword ptr [rax + 0x21]; ret; 
0x000000000046396d: dec dword ptr [rax - 9]; fmul dword ptr [rax + 0x21]; ret 0x3948; 
0x000000000046abaf: dec dword ptr [rax]; add byte ptr [rcx + rbp*8], dl; ret; 
0x000000000045862e: dec dword ptr [rbp + 0x63]; ret 0x8948; 
0x0000000000406773: dec dword ptr [rbp - 0x73]; je 0x677e; add dword ptr [rax - 9], ecx; ror byte ptr [rax + 1], 1; ret; 
0x0000000000446d7a: dec dword ptr [rbp - 0x77]; fld qword ptr [rcx - 0x77]; ret 0x8ee9; 
0x000000000046945b: dec dword ptr [rbx + 0x45e9e15]; add dh, dh; ret 0xf04; 
0x000000000045ef98: dec dword ptr [rbx - 0x14f3db8c]; ret; 
0x000000000045edbd: dec dword ptr [rbx - 0x3b7cb7fe]; or byte ptr [rbx + 0x5d], bl; ret; 
0x000000000045233b: dec dword ptr [rbx - 0x8df4b]; inc dword ptr [rbp - 0x7b]; in al, 0xf; lahf; ret; 
0x000000000045286a: dec dword ptr [rbx - 0x8df7b]; inc dword ptr [rcx]; ret; 
0x00000000004683d1: dec dword ptr [rcx + 0x39]; ret 0x860f; 
0x000000000047bb75: dec dword ptr [rcx + 0x63]; add al, 0x86; add rax, r14; jmp rax; 
0x000000000044e7b4: dec dword ptr [rcx + 1]; ret 0x8d48; 
0x00000000004687ce: dec dword ptr [rcx + 1]; ret 0xb58b; 
0x0000000000470160: dec dword ptr [rcx + rcx*4 + 0x44]; ret 0xe9f8; 
0x0000000000423f6e: dec dword ptr [rcx + rcx*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x000000000046e751: dec dword ptr [rcx + rcx*4 + 4]; ret 0x85c7; 
0x0000000000453d38: dec dword ptr [rcx + rcx*4 - 0x12]; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x0000000000440f83: dec dword ptr [rcx + rcx*4 - 0x20]; pop rbx; pop rbp; pop r12; ret; 
0x00000000004580c9: dec dword ptr [rcx + rcx*4 - 0x2e]; mov rsi, r15; mov byte ptr [rbp - 0x94c], r9b; call rax; 
0x0000000000452022: dec dword ptr [rcx + rcx*4 - 0x2e]; mov rsi, r15; mov rdi, r14; mov dword ptr [rbp - 0x934], r8d; call rax; 
0x000000000046f44e: dec dword ptr [rcx + rcx*4 - 0x3e]; mov rsi, r13; mov rdi, r12; mov qword ptr [rbp - 0xe8], r8; call rax; 
0x00000000004543bd: dec dword ptr [rcx + rcx*4 - 6]; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x4f0], ecx; call qword ptr [rbx + 0x38]; 
0x000000000045550a: dec dword ptr [rcx + rcx*4 - 6]; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x510], ecx; mov qword ptr [rbp - 0x508], r10; call qword ptr [rax + 0x38]; 
0x00000000004541eb: dec dword ptr [rcx + rcx*4 - 6]; mov rsi, r8; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x000000000046fd2a: dec dword ptr [rcx - 0x10773]; inc dword ptr [rax - 0x14343]; jmp qword ptr [rdi - 0x75]; 
0x0000000000463866: dec dword ptr [rcx - 0x1334b]; jmp qword ptr [rsi - 0x7d]; 
0x000000000047dc2f: dec dword ptr [rcx - 0x39]; ret 0xffff; 
0x000000000047af2c: dec dword ptr [rcx - 0x39]; ret; 
0x000000000047d9bf: dec dword ptr [rcx - 0x75]; adc cl, byte ptr [rax - 0x75]; and al, 8; mov qword ptr [rsp + 0x10], r10; call rax; 
0x0000000000456674: dec dword ptr [rcx - 0x75]; push rsi; or byte ptr [rax - 0x73], cl; or byte ptr [rcx - 0x77], cl; or cl, r13b; ret 0xfffd; 
0x0000000000455f33: dec dword ptr [rcx - 0x75]; push rsi; or byte ptr [rax - 0x73], cl; or byte ptr [rcx - 0x77], cl; or cl, r13b; ret; 
0x000000000045fea3: dec dword ptr [rcx - 0x77]; add byte ptr [r8 - 0x77], r9b; ret 0x8548; 
0x0000000000468698: dec dword ptr [rcx - 0x77]; ret 0x8349; 
0x00000000004546dc: dec dword ptr [rcx - 0x77]; ret 0x8548; 
0x000000000045476d: dec dword ptr [rcx - 0x77]; ret 0x8b48; 
0x0000000000454727: dec dword ptr [rcx - 0x77]; ret 0xbd83; 
0x00000000004758ee: dec dword ptr [rcx - 0x77]; ret; 
0x000000000045dbdd: dec dword ptr [rcx - 0x77]; shr cl, 0x8a; cmp edx, edi; jmp qword ptr [rsi + 0x2e]; 
0x00000000004096fb: dec dword ptr [rcx - 0x77]; shr cl, 0xff; jnp 0x9702; jmp qword ptr [rsi + 0x2e]; 
0x00000000004134a1: dec dword ptr [rcx - 0x7b]; ret; 
0x0000000000448d53: dec dword ptr [rcx - 0x7d]; ret; 
0x00000000004118ef: dec dword ptr [rcx - 9]; ret; 
0x00000000004782b1: dec dword ptr [rdi]; add byte ptr [rax + 0x21], cl; ret 0xc148; 
0x000000000046dc57: dec dword ptr [rdi]; lahf; ret 0x87e; 
0x000000000046dff6: dec dword ptr [rdi]; lahf; ret 0x8f0f; 
0x0000000000453551: dec dword ptr [rdi]; mov bh, 0x9d; pop rsp; idiv edi; jmp qword ptr [rsi - 0x77]; 
0x000000000040f22f: dec dword ptr [rdi]; mov dh, 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000046c692: dec dword ptr [rdi]; mov dh, 0x45; add ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000044eaba: dec dword ptr [rdi]; mov dh, 0x53; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000047afd3: dec dword ptr [rdi]; mov dh, 0xc0; movsxd rax, dword ptr [rbp + rax*4]; add rax, rbp; jmp rax; 
0x000000000047b14a: dec dword ptr [rdi]; mov dh, 0xd2; movsxd rax, dword ptr [r13 + rdx*4]; add rax, r13; jmp rax; 
0x000000000047b187: dec dword ptr [rdi]; mov dh, 0xd2; movsxd rax, dword ptr [r14 + rdx*4]; add rax, r14; jmp rax; 
0x000000000047e410: dec dword ptr [rdi]; test byte ptr [rcx - 0x76fffffe], bh; ret 0xb60f; 
0x00000000004490c2: dec dword ptr [rdi]; test byte ptr [rcx], dh; add al, byte ptr [rax]; add bh, dh; ret 0; 
0x00000000004763c2: dec dword ptr [rdi]; test byte ptr [rsi + rdi*8 - 0x76be0001], ch; ret 0xe883; 
0x000000000046a20a: dec dword ptr [rdi]; test ch, ah; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0xf48; 
0x00000000004700cb: dec dword ptr [rdi]; test dword ptr [rbp - 0x1600000e], edx; in eax, 0xff; jmp qword ptr [rsi + 0xf]; 
0x00000000004564fa: dec dword ptr [rdi]; test dword ptr [rbp*8 - 0x6d160001], eax; fcos; jmp qword ptr [rsi + 0x2e]; 
0x0000000000420c76: dec dword ptr [rdi]; test dword ptr [rbx - 0x3a000003], esp; std; xlatb; ret 0xe883; 
0x000000000043b5f0: dec dword ptr [rdi]; test dword ptr [rsi + 1], ebp; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000045ad38: dec dword ptr [rdx]; add byte ptr [rax], al; add cl, ch; sahf; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x00000000004371f1: dec qword ptr [r8 + 0x29]; ret 0x280f; 
0x0000000000460006: dec qword ptr [rax + 0x31]; ror dword ptr [rax + 0x21], 0xce; je 0x60140; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x0000000000478355: div byte ptr [rbp + 0x28]; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x000000000045f148: div byte ptr [rbp + 0x45]; lea rdx, [r8 + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000467f6b: div byte ptr [rbp + 2]; call rax; 
0x00000000004603f2: div byte ptr [rbp + 4]; xor rax, rax; ret; 
0x0000000000440397: div byte ptr [rbp + 6]; ret; 
0x000000000044fae5: div byte ptr [rbp + 8]; mov dword ptr [rbx + 0x40], esi; xor eax, eax; pop rbx; ret; 
0x000000000047836a: div byte ptr [rbp - 0xf]; cmp cx, 0x7fff; jne 0x78358; mov eax, 1; ret; 
0x000000000047855c: div byte ptr [rcx]; dec dword ptr [rax - 0x77]; shr eax, 0x19; mov ch, 0xfc; jmp qword ptr [rsi + 0xf]; 
0x000000000044543c: div byte ptr [rcx]; jmp qword ptr [rsi + 0xf]; 
0x000000000044d9b1: div byte ptr [rsp + rcx - 0x7d]; inc byte ptr [rbx]; je 0x4d9c0; ret; 
0x0000000000467c1a: div dword ptr [rbp + 3]; pop rbx; ret; 
0x0000000000459a15: div dword ptr [rcx - 0x2d17fffd]; xchg eax, ebx; cli; jmp qword ptr [rsi - 0x70]; 
0x00000000004704fd: div ecx; add r8d, eax; mov eax, r8d; ret; 
0x000000000043d41d: div ecx; mov eax, eax; ret; 
0x000000000043d406: div esi; mov eax, eax; ret; 
0x000000000047aba1: divps xmm0, xmmword ptr [rip + 0x21a94]; ret; 
0x000000000047aba0: divss xmm0, dword ptr [rip + 0x21a94]; ret; 
0x000000000040da79: fadd dword ptr [rax]; add byte ptr [rax], al; lea rcx, [rip + 0xa01bc]; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x00000000004099fb: fadd dword ptr [rax]; add byte ptr [rax], al; mov rdx, qword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x0000000000408f79: fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000046a7fd: fadd dword ptr [rbx + rbx*8 - 0x3fbbf0b4]; mov rax, r8; pop rbx; ret; 
0x0000000000448525: fadd dword ptr [rbx]; add al, ch; ret; 
0x0000000000472949: fadd dword ptr [rcx]; add byte ptr [rax], al; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000004256e6: fadd dword ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000439db0: fadd qword ptr [rcx]; add byte ptr [rax], al; test dl, 0x40; jne 0x39d70; lea rax, [rdi + 7]; ret; 
0x00000000004252f6: fadd qword ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004292ed: fbld tbyte ptr [rax + 0x63490005]; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000421941: fbld tbyte ptr [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042193f: fbstp tbyte ptr [rdx - 0x10f09921]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044f90b: fchs; add eax, 0x54800; add al, byte ptr [rax]; add byte ptr [rax - 0x7f], cl; ret 0x200; 
0x000000000043572b: fcmovnb st(0), st(5); std; xlatb; ret; 
0x0000000000410f36: fcomp dword ptr [rbp + 0x41]; pop rsp; pop r13; pop r14; pop r15; ret; 
0x0000000000465e0b: fcomp dword ptr [rbx + 0x5d]; pop r12; pop r13; pop r14; ret; 
0x000000000040db87: fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000041424e: fcos; dec dword ptr [rax - 0x77]; ret; 
0x0000000000456503: fcos; jmp qword ptr [rsi + 0x2e]; 
0x000000000045c35f: fcos; jmp qword ptr [rsi + 0xf]; 
0x000000000045c3db: fcos; jmp qword ptr [rsi - 0x70]; 
0x0000000000421e0f: fdiv dword ptr [rdx - 0x10f09928]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000421c0f: fdiv qword ptr [rdx - 0x10f09924]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004751c4: fdiv st(0), st(0); jmp qword ptr [rsi + 0xf]; 
0x0000000000463406: fdiv st(1), st(0); dec dword ptr [rax + 0x39]; ret; 
0x0000000000472f2f: fdiv st(4), st(0); jmp qword ptr [rsi + 0x2e]; 
0x0000000000413db3: fdivp st(7); jmp qword ptr [rsi + 0x2e]; 
0x0000000000459837: fdivp st(7); jmp qword ptr [rsi + 0xf]; 
0x000000000045e92a: fdivr st(2); inc dword ptr [rcx + rcx*4 - 2]; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x000000000047618f: fdivr st(4); jmp qword ptr [rsi + 0x2e]; 
0x000000000043b768: fdivr st(7); ret; 
0x0000000000439f12: fiadd dword ptr [rax]; add byte ptr [rax], al; test ah, 0x40; jne 0x3a000; lea rax, [rdi + 0xf]; ret; 
0x00000000004254e4: fiadd dword ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000417bf2: fiadd word ptr [rcx]; add byte ptr [rax - 0x73], cl; adc eax, 0x1e0a4; cmovne rax, rdx; ret; 
0x000000000042017e: fiadd word ptr [rcx]; add byte ptr [rax], al; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000000425159: fiadd word ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000041fabf: fidiv dword ptr [rbx - 0x32]; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x0000000000421d0f: fidiv dword ptr [rdx - 0x10f09926]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044f34e: fidiv word ptr [rbx - 4]; jmp qword ptr [rsi + 0xf]; 
0x0000000000421a0f: fidiv word ptr [rdx - 0x10f09922]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000045810b: fidivr dword ptr [rcx]; ret 0x820f; 
0x00000000004518bf: fidivr dword ptr [rcx]; ret 0x830f; 
0x000000000040c015: fidivr word ptr [rdi + 2]; mov eax, r10d; syscall; 
0x000000000047c4dc: fild dword ptr [rax + rax]; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000047aa17: fild dword ptr [rcx + 0xf]; xchg eax, ebp; ret 0x94c; 
0x000000000046a139: fild dword ptr [rcx - 0x75]; add byte ptr [r11 - 0x78f0d008], r8b; push -0x76ffffff; ret 0xc083; 
0x0000000000425446: fild dword ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000468225: fild word ptr [rdx]; add byte ptr [rdx + 0x63], cl; add al, 0xa6; add rax, rsi; jmp rax; 
0x0000000000425030: fild word ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000412798: fimul dword ptr [rax + 0x21]; ret 0x8948; 
0x00000000004605a5: fimul dword ptr [rax + 0xf]; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x0000000000461255: fimul dword ptr [rax + 0xf]; mov esp, 0xd00148d2; sub rax, rdi; shr rax, 2; ret; 
0x000000000041e9b6: fimul dword ptr [rax + rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043f7e7: fimul dword ptr [rax - 0x77]; out dx, eax; mov eax, 9; syscall; 
0x000000000040bf3e: fimul dword ptr [rax - 0x77]; ret; 
0x000000000045b1d3: fimul dword ptr [rcx + 0x29]; ret 0xb8; 
0x000000000045b842: fimul dword ptr [rcx + 0x29]; ret 0xf4c; 
0x00000000004524eb: fimul dword ptr [rcx + rcx*4 - 0x1a]; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000045b021: fimul dword ptr [rcx + rcx*4 - 0x32]; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x0000000000423ff1: fimul word ptr [r9 + r9*4 + 0x57]; out 0x4c, al; mov dword ptr [rdi - 0x12], ebx; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423ff2: fimul word ptr [rcx + rcx*4 + 0x57]; out 0x4c, al; mov dword ptr [rdi - 0x12], ebx; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000045a098: fimul word ptr [rcx + rcx*4 - 0x19]; sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x0000000000448e61: fimul word ptr [rdi]; sbb dword ptr [rsp + rax - 0x7cb80000], -0x40; add dword ptr [rax - 0x7d], ecx; ret 0x4901; 
0x000000000046c5e6: fimul word ptr [rdx - 7]; dec dword ptr [rax - 0x77]; ret 0x8948; 
0x0000000000473fbe: fist dword ptr [rax - 0x3f6a74b8]; add al, byte ptr [rax]; add byte ptr [rcx + 0x148b48d8], cl; ret 0xb60f; 
0x0000000000416c79: fistp qword ptr [rax + 0xca]; syscall; 
0x000000000041110d: fistp word ptr [rdi + rdi*8]; jmp qword ptr [rsi + 0x66]; 
0x0000000000411c7c: fisttp dword ptr [rax + 0x21]; ret; 
0x00000000004774e1: fisttp dword ptr [rax - 0x77]; ret; 
0x000000000047ac0d: fisttp dword ptr [rbx + 3]; add byte ptr [rax], cl; mov byte ptr [rip + 0x34bd5], 8; mov byte ptr [rip + 0x34bcf], 8; mov byte ptr [rip + 0x34bc9], 8; ret; 
0x00000000004545c5: fisttp dword ptr [rcx - 0x77]; ret 0x5de9; 
0x00000000004774fb: fisttp dword ptr [rcx - 0x77]; ret 0x8b4a; 
0x0000000000449edd: fisttp dword ptr [rcx - 0x7d]; ret; 
0x000000000046a7ff: fisttp dword ptr [rdi + rcx + 0x44]; ror byte ptr [rcx + rcx*4 - 0x40], 0x5b; ret; 
0x000000000045e715: fisttp dword ptr [rdx]; cmp rax, rdx; jbe 0x5e758; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000045ef5a: fisttp dword ptr [rdx]; cmp rax, rdx; jbe 0x5ef90; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000045eff4: fisttp dword ptr [rdx]; cmp rax, rdx; jbe 0x5f010; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x0000000000409785: fisttp dword ptr [rdx]; cmp rax, rdx; jbe 0x97e8; mov rdi, rbx; call qword ptr [rbp + 0x60]; 
0x0000000000409e6a: fisttp dword ptr [rdx]; cmp rax, rdx; jbe 0x9ee4; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040efcf: fisttp dword ptr [rdx]; cmp rax, rdx; jbe 0xf030; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x18]; 
0x000000000040f483: fisttp dword ptr [rdx]; cmp rax, rdx; jbe 0xf4f0; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040f535: fisttp dword ptr [rdx]; cmp rax, rdx; jbe 0xf560; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000040fe35: fisttp dword ptr [rdx]; cmp rax, rdx; jbe 0xfe70; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000040fecc: fisttp dword ptr [rdx]; cmp rax, rdx; jbe 0xfef0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x0000000000401be9: fisttp dword ptr [rdx]; jmp rax; 
0x00000000004241d1: fisttp qword ptr [r9 + r9*4 + 0x57]; in eax, 0x4c; mov dword ptr [rdi - 0x13], ebx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043bca2: fisttp qword ptr [rax - 1]; ror byte ptr [rax - 1], 0xc0; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x00000000004241d2: fisttp qword ptr [rcx + rcx*4 + 0x57]; in eax, 0x4c; mov dword ptr [rdi - 0x13], ebx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000459bbc: fisttp qword ptr [rcx - 0x3f]; std; add cl, byte ptr [rcx + rcx*4 - 0x16]; call qword ptr [rax + 0x38]; 
0x0000000000423e21: fisttp word ptr [r9 + r9*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423f1d: fisttp word ptr [r9 + r9*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000423e69: fisttp word ptr [r9 + r9*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000040a185: fisttp word ptr [rax + 0x29]; bnd call qword ptr [rax + 0x70]; 
0x000000000040c576: fisttp word ptr [rax + 0x29]; bnd call qword ptr [rbp + 0x70]; 
0x0000000000461be1: fisttp word ptr [rax - 0x39]; ret; 
0x0000000000402bfb: fisttp word ptr [rax - 0x7d]; ret; 
0x000000000047757f: fisttp word ptr [rax]; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x0000000000423e22: fisttp word ptr [rcx + rcx*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423f1e: fisttp word ptr [rcx + rcx*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000423e6a: fisttp word ptr [rcx + rcx*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000406059: fisttp word ptr [rdi]; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000433d6d: fisttp word ptr [rip - 0x7cb80000]; ret 0x4910; 
0x0000000000461ac4: fisub dword ptr [rcx + rcx*4 + 0x10]; mov eax, 0xffffffff; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000421d11: fisub dword ptr [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000439d4f: fisub dword ptr [rsi + 0xf]; xlatb; shl byte ptr [rsi + 0xf], 0xd7; ror dword ptr [rcx], cl; ret 0xe074; 
0x0000000000421a11: fisub word ptr [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000439d91: fisubr word ptr [rax - 0x297af0f0]; add dword ptr [rax], eax; add dh, dh; ret 0x7510; 
0x0000000000451ede: fisubr word ptr [rsp + rax]; add al, ch; or dword ptr [rdi], ecx; sti; jmp qword ptr [rsi + 0xf]; 
0x00000000004738d1: fld dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x00000000004738d1: fld dword ptr [rax]; add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x738e0; ret; 
0x0000000000417c92: fld dword ptr [rcx]; add byte ptr [rax - 0x73], cl; add eax, 0x1d784; cmove rax, rdx; ret; 
0x0000000000425634: fld dword ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000044e13f: fld qword ptr [rax]; lea rax, [rip + 0x5db18]; mov rax, qword ptr [rax + rbx*8]; test rax, rax; je 0x4e153; call rax; 
0x000000000048063d: fld qword ptr [rax]; mov rax, qword ptr [rax + rbx*8]; test rax, rax; je 0x8064a; call rax; 
0x0000000000461ee2: fld qword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000411862: fld qword ptr [rbp - 0x78]; adc al, 0x30; mov rax, r8; ret; 
0x0000000000446d7d: fld qword ptr [rcx - 0x77]; ret 0x8ee9; 
0x000000000042524a: fld qword ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000460242: fld st(5); std; xlatb; retf 0xfdc5; xlatb; ret; 
0x00000000004187c9: fld xword ptr [rdx + 9]; add byte ptr [rdx], al; lea rax, [rip + 0x1d3eb]; lea rdx, [rip + 0x1ec74]; cmovne rax, rdx; ret; 
0x000000000045a143: fldcw word ptr [rsi - 6]; dec dword ptr [rax - 0x77]; ret 0xb848; 
0x00000000004734a9: fldenv [rsi + 0xf]; jbe 0x734fd; xor byte ptr [rsi + 0xf], ah; xlatb; ret; 
0x000000000041fdb9: fldenv [rsi + 0xf]; je 0x1fe0d; xor byte ptr [rsi + 0xf], ah; xlatb; ret; 
0x0000000000420097: fldenv [rsi + 0xf]; je 0x200eb; xor byte ptr [rsi + 0xf], ah; xlatb; ret; 
0x0000000000421d91: fldenv [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000041fcb1: fldenv [rsi + 0xf]; xlatb; ret; 
0x000000000047a54d: fldpi; adc r10, r11; mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x000000000044f58d: fldpi; or ecx, dword ptr [rax - 0x7d]; ret 0x8301; 
0x000000000047812d: fldpi; sbb r10, r11; mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000000478274: fmul dword ptr [rax + 0x11]; rcr byte ptr [rbp + 0x5b], 1; ret; 
0x0000000000463970: fmul dword ptr [rax + 0x21]; ret 0x3948; 
0x000000000045a095: fmul dword ptr [rax - 0x77]; fimul word ptr [rcx + rcx*4 - 0x19]; sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x000000000043eca4: fmul dword ptr [rax - 0x77]; std; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x0000000000448d24: fmul dword ptr [rax - 0x7d]; rol byte ptr [rax + rcx*2], 0x39; ret; 
0x00000000004547e9: fmul dword ptr [rdi]; test al, dh; or eax, 0xeb830000; add dword ptr [rax - 0x50743], eax; jmp qword ptr [rax]; 
0x000000000045272c: fmul dword ptr [rdi]; test ch, dh; add eax, 0xe9830000; add dword ptr [rax - 0x8ef43], eax; jmp qword ptr [rax]; 
0x00000000004243c1: fmul qword ptr [r9 + r9*4 + 0x57]; in al, 0x4c; mov dword ptr [rdi - 0x14], ebx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004243c2: fmul qword ptr [rcx + rcx*4 + 0x57]; in al, 0x4c; mov dword ptr [rdi - 0x14], ebx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000418b69: fmul qword ptr [rcx - 0x7d]; ret 0x7f10; 
0x000000000042d9ef: fmul qword ptr [rcx - 0x7d]; ret 0xf10; 
0x0000000000410d31: fninit; or dword ptr [rax], eax; syscall; 
0x0000000000410d31: fninit; or dword ptr [rax], eax; syscall; ret; 
0x0000000000460240: fnsave dword ptr [rcx + rbx*8 - 0x3b]; std; xlatb; retf 0xfdc5; xlatb; ret; 
0x0000000000421b0f: fnsave dword ptr [rdx - 0x10f09923]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000421d8f: fnstenv [rdx - 0x10f09927]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000041858f: fnstsw dword ptr [rsi]; add al, byte ptr [rax]; cmove rax, rdx; ret; 
0x0000000000423833: fprem1; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000475494: fprem; jmp qword ptr [rsi + 0xf]; 
0x0000000000421b11: frstor dword ptr [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004016f3: fstp st(7); or al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x000000000043bdd4: fstp xword ptr [rdx]; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000000043e7f8: fsub dword ptr [rcx + rcx*4 + 1]; or rax, 0xffffffffffffffff; ret; 
0x000000000043e888: fsub dword ptr [rcx + rcx*4 + 2]; mov eax, 0xffffffff; ret; 
0x000000000043eaa8: fsub dword ptr [rcx + rcx*4 + 2]; mov rax, -1; ret; 
0x0000000000421e11: fsub dword ptr [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000435f24: fsub dword ptr [rsi + 0xf]; xlatb; ret; 
0x000000000045100d: fsub dword ptr [rsi - 0x70]; mov eax, r8d; ret; 
0x0000000000421c11: fsub qword ptr [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000434d8c: fsub qword ptr [rsi + 0xf]; xlatb; ret; 
0x0000000000418baf: fsub st(1), st(0); imul edi, edi, -1; jmp qword ptr [rsi + 0x66]; 
0x000000000044420e: fsubp st(3); sti; jmp qword ptr [rsi + 0x2e]; 
0x000000000043f424: fsubr st(3); ret 0xf66; 
0x00000000004209ce: fucomi st(4); vptest ymm5, ymm0; jae 0x20c70; xor eax, eax; vzeroupper; ret; 
0x000000000047cc0a: fucomip st(0); movabs al, byte ptr [0x7824848b48ffffea]; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000415f3b: fucomip st(0); push qword ptr [rsi - 0x26140001]; nop dword ptr [rax + rax]; ret; 
0x000000000045d747: fucomip st(0); ret; 
0x00000000004265f3: fxch st(1); add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000045a8c2: hlt; add al, 0; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000423984: hlt; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042971a: hlt; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004243ce: hlt; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043e284: hlt; mov eax, esi; syscall; 
0x0000000000429713: hlt; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000424527: hlt; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424543: hlt; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004731eb: hlt; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000000043b273: hlt; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x0000000000401bba: hlt; nop dword ptr [rax + rax]; ret; 
0x000000000046e418: hlt; or dword ptr [rax], eax; add byte ptr [rax - 0x14343], al; jmp qword ptr [rsi + 0xf]; 
0x000000000043b277: hlt; sub eax, edx; ret; 
0x0000000000458ab4: idiv bh; dec dword ptr [rax + 0x39]; ret 0x850f; 
0x000000000045862c: idiv bh; dec dword ptr [rbp + 0x63]; ret 0x8948; 
0x0000000000452020: idiv bh; dec dword ptr [rcx + rcx*4 - 0x2e]; mov rsi, r15; mov rdi, r14; mov dword ptr [rbp - 0x934], r8d; call rax; 
0x000000000047b886: idiv bh; dec dword ptr [rcx - 0x77]; ret; 
0x0000000000458393: idiv bh; inc dword ptr [rbp - 0x7b]; ror byte ptr [rdi], 0x84; ret; 
0x0000000000458111: idiv bh; inc dword ptr [rcx]; ret; 
0x00000000004534e3: idiv bh; inc edi; test dword ptr [rax], eax; idiv edi; call qword ptr [rax]; 
0x0000000000457560: idiv bh; inc esi; test eax, edx; idiv bh; jmp qword ptr [rax]; 
0x0000000000457566: idiv bh; jmp qword ptr [rax]; 
0x0000000000454de3: idiv bh; jmp qword ptr [rsi + 0x2e]; 
0x00000000004053d7: idiv bh; jmp qword ptr [rsi + 0xf]; 
0x0000000000456a53: idiv bl; dec dword ptr [rcx - 0x77]; ret 0x8548; 
0x000000000047aea9: idiv byte ptr [rcx - 0x5a]; mov rdx, qword ptr [rdx]; mov qword ptr [r9], rdx; pop rbx; ret; 
0x0000000000446236: idiv byte ptr [rdx - 1]; cmovs eax, edx; ret; 
0x000000000047cea1: idiv dword ptr [rax + rcx]; jne 0x1662; mov qword ptr [rcx], rdx; add rsp, 8; ret; 
0x000000000045259f: idiv edi; call qword ptr [rax]; 
0x0000000000458696: idiv edi; dec dword ptr [rax + 0x29]; ret 0xb8; 
0x0000000000452d6c: idiv edi; dec dword ptr [rax + 0x39]; ret 0x850f; 
0x00000000004531b1: idiv edi; dec dword ptr [rax - 0x7d]; clc; dec dword ptr [rax - 0x77]; ret; 
0x00000000004580c7: idiv edi; dec dword ptr [rcx + rcx*4 - 0x2e]; mov rsi, r15; mov byte ptr [rbp - 0x94c], r9b; call rax; 
0x0000000000452472: idiv edi; inc dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000045233f: idiv edi; inc dword ptr [rbp - 0x7b]; in al, 0xf; lahf; ret; 
0x000000000045286e: idiv edi; inc dword ptr [rcx]; ret; 
0x00000000004525b2: idiv edi; jmp qword ptr [rax]; 
0x00000000004428e3: idiv edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000040531f: idiv edi; jmp qword ptr [rsi + 0xf]; 
0x000000000045ab1b: idiv edi; jmp qword ptr [rsi - 0x70]; 
0x0000000000453556: idiv edi; jmp qword ptr [rsi - 0x77]; 
0x00000000004776e7: imul al; ret; 
0x000000000041874a: imul cx, word ptr [rcx], 0; add cl, byte ptr [rax - 0x73]; adc eax, 0x240fa; lea rax, [rip + 0x24143]; cmove rax, rdx; ret; 
0x000000000043d2e6: imul eax, dword ptr [rax + rax], -0x3f; call 0xfe455fb; movsxd rcx, dword ptr [rsi + rax*4]; add rcx, rsi; jmp rcx; 
0x000000000043d2b6: imul eax, dword ptr [rax + rax], 0x48; movsxd rax, dword ptr [rsi + rdi*4]; add rax, rsi; jmp rax; 
0x000000000043d432: imul eax, dword ptr [rax + rax], 0xce3d8d48; imul eax, dword ptr [rax + rax], 0xfc59afe8; jmp qword ptr [rsi + 0x66]; 
0x000000000043d439: imul eax, dword ptr [rax + rax], 0xfc59afe8; jmp qword ptr [rsi + 0x66]; 
0x000000000040f5cc: imul eax, dword ptr [rcx + 0xf], -0x4a; xor al, 0x24; lea r15, [r12 + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x0000000000461db9: imul eax, dword ptr [rcx + rax], 0x48; add esp, 8; pop rbx; pop rbp; ret; 
0x000000000043e944: imul eax, dword ptr [rcx + rcx*4 - 0x1e], 0x48; mov esi, ebp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000000439dd1: imul eax, dword ptr [rcx], 0; add dh, dh; ret 0x7502; 
0x000000000042d30a: imul eax, dword ptr [rip + 0x487c5162], 0x62067111; push rcx; jl 0x2d35f; adc dword ptr [rcx + 7], edi; ret; 
0x000000000044ff50: imul eax, edi; lea r12, [rcx + rax]; mov rdi, r12; call rbx; 
0x00000000004539c7: imul eax; ret; 
0x000000000046c864: imul eax; stc; dec dword ptr [rax - 0x39]; ret 0xffff; 
0x000000000045e141: imul ebp, dword ptr [rdx], -2; jmp qword ptr [rsi + 0x2e]; 
0x000000000045f362: imul ecx, dword ptr [rax], 0x5b; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000479b9c: imul ecx, dword ptr [rax], 0xf; test byte ptr [rax + rax + 0x438b0000], al; adc byte ptr [rbp + 0x51840fc0], al; add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x000000000040acd4: imul ecx, dword ptr [rcx + 0x2b], 0x47; and byte ptr [rax + 1], cl; ret; 
0x000000000041876b: imul ecx, dword ptr [rcx], 0; add cl, byte ptr [rax - 0x73]; adc eax, 0x238fa; lea rax, [rip + 0x23993]; cmove rax, rdx; ret; 
0x00000000004186f1: imul ecx, dword ptr [rcx], 0; add cl, byte ptr [rax - 0x73]; adc eax, 0x23d24; lea rax, [rip + 0x23d5d]; cmove rax, rdx; ret; 
0x000000000041874b: imul ecx, dword ptr [rcx], 0; add cl, byte ptr [rax - 0x73]; adc eax, 0x240fa; lea rax, [rip + 0x24143]; cmove rax, rdx; ret; 
0x0000000000418723: imul ecx, dword ptr [rcx], 0; add dh, byte ptr [rdi + rdi - 0xa]; ret 0x7520; 
0x00000000004188eb: imul ecx, dword ptr [rcx], 0x8d480200; adc eax, 0x2378a; lea rax, [rip + 0x23823]; cmove rax, rdx; ret; 
0x00000000004188cb: imul ecx, dword ptr [rcx], 0x8d480200; adc eax, 0x23f8a; lea rax, [rip + 0x23fd3]; cmove rax, rdx; ret; 
0x0000000000418968: imul ecx, dword ptr [rcx], 0xd0394800; lea rdx, [rip + 0x1c8bb]; lea rax, [rip + 0x1c474]; cmove rax, rdx; ret; 
0x0000000000418928: imul ecx, dword ptr [rcx], 0xd0394800; lea rdx, [rip + 0x7a9b]; lea rax, [rip + 0x75c4]; cmove rax, rdx; ret; 
0x000000000045b3b6: imul edi, ebp, -1; jmp qword ptr [rsi + 0xf]; 
0x000000000042d1a3: imul edi, ebp, 0x487c5162; adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000042cf69: imul edi, ebp, 0x487cd162; adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x0000000000411a01: imul edi, edi, -1; dec dword ptr [rax + 0x29]; ret 0x8d49; 
0x0000000000418bb1: imul edi, edi, -1; jmp qword ptr [rsi + 0x66]; 
0x000000000040e747: imul edi, edi, 0x3145ffff; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000404786: imul edi, esi, -1; jmp qword ptr [rsi + 0xf]; 
0x00000000004231a3: imul edi, esp, 0x63490005; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000040ca91: imul edx, dword ptr [rdx], 0xa; add byte ptr [rbx + 0xc08b], cl; add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x00000000004554e1: imul edx, dword ptr [rsi], 0; add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x0000000000425f63: imul edx, eax, 0x63490005; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000471b9e: imul esi, ecx, -1; jmp qword ptr [rsi + 0xf]; 
0x0000000000454e1e: imul esi, esi, -1; jmp qword ptr [rsi + 0xf]; 
0x0000000000411b4c: imul esp, dword ptr [rbx*2 + 0x10438941], 0x41; mov dword ptr [rbx + 0x14], 0; ret; 
0x0000000000438e9c: imul esp, dword ptr [rsi + 0xf], 0x74; ret 0xff3; 
0x0000000000456ad3: imul esp, ecx, 0x14e80003; ret; 
0x000000000041876a: imul r9d, dword ptr [rcx], 0; add cl, byte ptr [rax - 0x73]; adc eax, 0x238fa; lea rax, [rip + 0x23993]; cmove rax, rdx; ret; 
0x000000000044ff4f: imul rax, rdi; lea r12, [rcx + rax]; mov rdi, r12; call rbx; 
0x0000000000461ade: in al, 0; add byte ptr [rax], al; syscall; 
0x0000000000417b98: in al, 0x24; add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x0000000000480a4a: in al, 0x48; add esp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000004742ea: in al, 0x48; add esp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000475173: in al, 0x48; add esp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000004243c6: in al, 0x4c; mov dword ptr [rdi - 0x14], ebx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000044dbdc: in al, 0x4c; mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x000000000047a17e: in al, 0x5b; mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x0000000000411d88: in al, 0x5b; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x0000000000402f25: in al, 0x5b; pop rbp; mov rax, r12; pop r12; ret; 
0x000000000045f776: in al, 0x5d; mov rax, r12; pop r12; pop r13; ret; 
0x0000000000435bac: in al, 0x74; or dword ptr [rax - 1], ecx; ret 0xc148; 
0x0000000000478373: in al, 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x00000000004296fa: in al, 0xf3; movq qword ptr [rdi - 0x10], mm1; ret; 
0x000000000043cece: in al, 0xf3; ret; 
0x0000000000452344: in al, 0xf; lahf; ret; 
0x000000000045b8c8: in al, 0xff; inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004478fc: in al, 3; add al, ch; in al, dx; mov ah, 0xfb; jmp qword ptr [rsi + 0x66]; 
0x0000000000410ca8: in al, 9; add byte ptr [rax - 0x77], cl; sbb eax, 0x9e466; add dword ptr [rip + 0x9e45b], 1; pop rbx; ret; 
0x0000000000410caf: in al, 9; add byte ptr [rbx + 0x9e45b05], al; add byte ptr [rcx], al; pop rbx; ret; 
0x0000000000410cb5: in al, 9; add byte ptr [rcx], al; pop rbx; ret; 
0x0000000000410d0b: in al, 9; add byte ptr [rcx], al; ret; 
0x000000000047f31c: in al, dx; adc byte ptr [rcx + rcx*4 - 0x11], cl; call rax; 
0x00000000004187d9: in al, dx; add dword ptr [rax], eax; cmovne rax, rdx; ret; 
0x0000000000450909: in al, dx; add eax, 0; add bl, ch; ret; 
0x00000000004508ef: in al, dx; add eax, 0xc0310100; add rsp, 8; ret; 
0x00000000004752b2: in al, dx; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ror dword ptr [rax], 0x83; ret 0x4801; 
0x0000000000458392: in al, dx; idiv bh; inc dword ptr [rbp - 0x7b]; ror byte ptr [rdi], 0x84; ret; 
0x0000000000404c40: in al, dx; lahf; or al, byte ptr [rax]; syscall; 
0x0000000000429af0: in al, dx; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x14], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000447900: in al, dx; mov ah, 0xfb; jmp qword ptr [rsi + 0x66]; 
0x000000000045f2e3: in al, dx; mov eax, r11d; and eax, 0xc; cmp eax, 4; je 0x5f2f0; ret; 
0x00000000004243ca: in al, dx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000046a817: in al, dx; mov rax, r8; mov qword ptr [r11], rdi; pop rbx; ret; 
0x0000000000429afa: in al, dx; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000440be3: in al, dx; nop word ptr cs:[rax + rax]; nop; ret; 
0x00000000004612cf: in al, dx; or al, ch; mov dl, 0xfd; stc; dec dword ptr [rax - 0x77]; ret 0x2948; 
0x0000000000467b3e: in al, dx; or bh, bh; adc eax, 0x455fa; xor eax, eax; add rsp, 8; ret; 
0x0000000000461a9a: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x4a015; test rax, rax; je 0x61ad8; call rax; 
0x0000000000415678: in al, dx; or byte ptr [rax - 0x7d], cl; call qword ptr [rax]; 
0x000000000041eda4: in al, dx; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000046b259: in al, dx; or byte ptr [rax], dl; add byte ptr [rax], al; mov rbp, rsp; mov rsi, rbp; syscall; 
0x00000000004104ee: in al, dx; or dword ptr [rax], eax; syscall; 
0x000000000046a185: in al, dx; ret 2; 
0x000000000047da69: in al, dx; sbb byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x77], cl; ret; 
0x000000000047a264: in al, dx; sbb byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000411710: in al, dx; scasd eax, dword ptr [rdi]; or dword ptr [rax], eax; ret; 
0x00000000004209cf: in al, dx; vptest ymm5, ymm0; jae 0x20c70; xor eax, eax; vzeroupper; ret; 
0x0000000000418500: in al, dx; xchg dword ptr [rax], eax; add bh, dh; ret 0; 
0x000000000042a3e0: in al, dx; xchg eax, esp; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000046b260: in eax, 0x48; mov esi, ebp; syscall; 
0x00000000004241d6: in eax, 0x4c; mov dword ptr [rdi - 0x13], ebx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000044aa07: in eax, 0x83; sti; inc dword ptr [rcx - 0x77]; ret; 
0x0000000000439567: in eax, 0xa7; add al, 0; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000476a2a: in eax, 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000043d399: in eax, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x000000000042977a: in eax, 0xf3; movq qword ptr [rdi - 0x10], mm1; ret; 
0x00000000004614e3: in eax, 0xf; je 0x61500; add rax, 2; ret; 
0x000000000040dca6: in eax, 0xff; dec dword ptr [rax + 0x39]; ret; 
0x0000000000455908: in eax, 0xff; inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004532d7: in eax, 0xff; jmp qword ptr [rsi + 0xf]; 
0x00000000004803bf: in eax, dx; add al, byte ptr [rax]; test rbx, rbx; jne 0x803a8; pop rbx; ret; 
0x00000000004740bf: in eax, dx; clc; jmp qword ptr [rsi + 0x66]; 
0x0000000000476a62: in eax, dx; cmp rcx, rax; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x00000000004508ee: in eax, dx; in al, dx; add eax, 0xc0310100; add rsp, 8; ret; 
0x0000000000480245: in eax, dx; jne 0x80230; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000429b70: in eax, dx; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x13], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000043ba92: in eax, dx; lea rax, [rcx - 1]; ret; 
0x00000000004276df: in eax, dx; mov eax, 0x63490005; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004241da: in eax, dx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000040ef32: in eax, dx; mov rax, r8; ret; 
0x0000000000429b7a: in eax, dx; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000043b872: in eax, dx; ret; 
0x000000000043bbe2: in eax, dx; sub rax, 1; ret; 
0x000000000045a2ea: inc byte ptr [rax + rax]; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x000000000044ecee: inc byte ptr [rax - 5]; jmp qword ptr [rsi + 0x66]; 
0x000000000044d9b5: inc byte ptr [rbx]; je 0x4d9c0; ret; 
0x0000000000422fb6: inc byte ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000046b1fc: inc dword ptr [r8 + 0x10]; pop rbx; pop rbp; ret; 
0x000000000046b1fd: inc dword ptr [rax + 0x10]; pop rbx; pop rbp; ret; 
0x0000000000440e3f: inc dword ptr [rax + 0x6d4993d]; add byte ptr [rax], al; jne 0x40e58; mov r8, qword ptr [rip + 0x6d498]; mov rax, r8; ret; 
0x0000000000459e0a: inc dword ptr [rax + rax]; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x000000000046ffb8: inc dword ptr [rax - 0x14343]; jmp qword ptr [rdi + 0x75]; 
0x000000000046fd30: inc dword ptr [rax - 0x14343]; jmp qword ptr [rdi - 0x75]; 
0x000000000044762d: inc dword ptr [rax - 0x78]; jl 0x47643; add ecx, dword ptr [rcx + 0x39]; ret 0xe075; 
0x000000000046e4cf: inc dword ptr [rax - 0x78f08206]; call qword ptr [rcx]; 
0x00000000004540f5: inc dword ptr [rax - 0x7af0dbc8]; ret 0xa; 
0x000000000046e412: inc dword ptr [rax - 0x7bf09a07]; hlt; or dword ptr [rax], eax; add byte ptr [rax - 0x14343], al; jmp qword ptr [rsi + 0xf]; 
0x0000000000452d27: inc dword ptr [rax - 0x8ef43]; jmp qword ptr [rax]; 
0x0000000000458a69: inc dword ptr [rax - 0x92f43]; jmp qword ptr [rax]; 
0x0000000000452474: inc dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000459c83: inc dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rcx - 0x39], cl; ret; 
0x0000000000422321: inc dword ptr [rax]; add byte ptr [rax], al; and ecx, 0xff; sub eax, ecx; ret; 
0x000000000043d340: inc dword ptr [rax]; add byte ptr [rax], al; cmove rax, rcx; ret; 
0x0000000000422327: inc dword ptr [rax]; add byte ptr [rax], al; sub eax, ecx; ret; 
0x0000000000411786: inc dword ptr [rax]; add byte ptr [rsi + 5], dh; ret; 
0x00000000004545c2: inc dword ptr [rbp + 0x31]; fisttp dword ptr [rcx - 0x77]; ret 0x5de9; 
0x000000000041622f: inc dword ptr [rbp + 0x31]; rcr byte ptr [rbx + 0x5d], 0x4c; mov eax, eax; pop r12; ret; 
0x00000000004724b0: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3d1ba]; syscall; 
0x00000000004506c2: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5ef04]; syscall; 
0x00000000004505f3: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5efd3]; syscall; 
0x0000000000445208: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a1b6]; syscall; 
0x0000000000445110: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a2ae]; syscall; 
0x0000000000417a10: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x94d76]; syscall; 
0x0000000000415cf8: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96a8e]; syscall; 
0x0000000000415cc0: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96ac6]; syscall; 
0x00000000004157a0: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96fe6]; syscall; 
0x000000000041432a: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ae4c]; syscall; 
0x00000000004142ae: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9aeb8]; syscall; 
0x0000000000414009: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9b16d]; syscall; 
0x0000000000410822: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9e8d4]; syscall; 
0x00000000004104d7: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ec1f]; syscall; 
0x000000000040ee8e: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa0268]; syscall; 
0x000000000040ebce: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa0528]; syscall; 
0x0000000000409690: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa5d2e]; syscall; 
0x0000000000408538: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa6776]; syscall; 
0x00000000004084fd: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa67b1]; syscall; 
0x0000000000408429: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa6885]; syscall; 
0x00000000004064fd: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa8751]; syscall; 
0x0000000000403c41: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xaaf25]; syscall; 
0x0000000000403c18: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xaaf4e]; syscall; 
0x0000000000403b0f: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xab057]; syscall; 
0x00000000004096e2: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004163b8: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004166aa: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000412dfe: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000416c69: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000004173cf: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, rcx; mov eax, 0xca; syscall; 
0x0000000000472810: inc dword ptr [rbp + 0x480e74c0]; lea eax, [rip + 0x3cea4]; mov qword ptr [rip + 0x3ce85], rax; add rsp, 8; ret; 
0x000000000046b48e: inc dword ptr [rbp + 0x481575c0]; mov dword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x41c66], 1; ret; 
0x000000000047505b: inc dword ptr [rbp + 0x481674c0]; lea ebx, [rbp + rdx*8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x0000000000467b84: inc dword ptr [rbp + 0x5b0275c0]; ret; 
0x0000000000478602: inc dword ptr [rbp - 0x3f6af040]; add rsp, 8; movzx eax, al; neg eax; ret; 
0x0000000000465981: inc dword ptr [rbp - 0x467bf040]; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000047b1a2: inc dword ptr [rbp - 0x7a7bf025]; clc; inc dword ptr [rbx - 0x72b7fe15]; push rdi; add ecx, dword ptr [rax + 0x63]; ret; 
0x0000000000452341: inc dword ptr [rbp - 0x7b]; in al, 0xf; lahf; ret; 
0x0000000000458395: inc dword ptr [rbp - 0x7b]; ror byte ptr [rdi], 0x84; ret; 
0x0000000000446128: inc dword ptr [rbx + 0x692e40d]; add byte ptr [rdx], al; add rsp, 8; ret; 
0x000000000045124d: inc dword ptr [rbx + 0xf4807e8]; mov esi, 0x8b4864c0; adc cl, byte ptr [rax - 0x75]; adc cl, byte ptr [rbx + rcx*4 + 0x74]; ret 0x4c40; 
0x000000000047b1aa: inc dword ptr [rbx - 0x72b7fe15]; push rdi; add ecx, dword ptr [rax + 0x63]; ret; 
0x000000000045a9a4: inc dword ptr [rbx - 0x7bf0d505]; ret 0x11; 
0x000000000046fa1a: inc dword ptr [rbx - 0x9b43]; jmp qword ptr [rsi + 0xf]; 
0x000000000043d41b: inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x000000000043d36c: inc dword ptr [rbx]; ret; 
0x0000000000449814: inc dword ptr [rcx + 0x7fff9]; add byte ptr [rdi], cl; xchg bh, bl; add byte ptr [rax], al; add byte ptr [rbp - 0x77], cl; ret; 
0x000000000047efa7: inc dword ptr [rcx + 0xf]; mov dh, 0x55; and byte ptr [rcx - 0x75], cl; insd dword ptr [rdi], dx; sbb dh, dh; ret 0xf01; 
0x0000000000459409: inc dword ptr [rcx + 0xf]; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0000000000445947: inc dword ptr [rcx + 0xf]; mov dh, 4; and al, 0x84; ror byte ptr [rdi], 0x84; ret; 
0x0000000000454cf2: inc dword ptr [rcx + 0xf]; mov esi, 0x358d48c7; ret 0x3ff; 
0x000000000047847a: inc dword ptr [rcx + rbp - 0x40]; mov dword ptr [rsi], eax; mov eax, 2; ret; 
0x000000000040ddf8: inc dword ptr [rcx + rcx*4 - 0x20]; pop rbx; pop rbp; pop r12; ret; 
0x000000000045e92c: inc dword ptr [rcx + rcx*4 - 2]; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x00000000004763c8: inc dword ptr [rcx - 0x77]; ret 0xe883; 
0x0000000000440824: inc dword ptr [rcx - 0x77]; ret 0xf883; 
0x0000000000447d54: inc dword ptr [rcx - 0x77]; ret 0xf9e9; 
0x000000000044aa0a: inc dword ptr [rcx - 0x77]; ret; 
0x00000000004722d1: inc dword ptr [rcx - 0x7d]; ret; 
0x0000000000454b88: inc dword ptr [rcx - 0x7d]; rol dword ptr [rcx], 0xe9; scasb al, byte ptr [rdi]; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x0000000000452597: inc dword ptr [rcx]; add byte ptr [rax], al; add bh, al; test dword ptr [rax], eax; idiv edi; call qword ptr [rax]; 
0x0000000000459bd5: inc dword ptr [rcx]; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000406736: inc dword ptr [rcx]; ret 0xd089; 
0x0000000000452870: inc dword ptr [rcx]; ret; 
0x0000000000422e66: inc dword ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043454d: inc dword ptr [rip - 0x7cb80000]; ret 0x4910; 
0x000000000043bcaa: inc eax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000043bca7: inc eax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000043bca4: inc eax; inc rax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x0000000000420c7c: inc ebp; std; xlatb; ret 0xe883; 
0x000000000043f8cf: inc ebx; nop word ptr cs:[rax + rax]; nop dword ptr [rax + rax]; mov eax, 0x1c; syscall; 
0x0000000000461fff: inc ebx; nop word ptr cs:[rax + rax]; nop dword ptr [rax + rax]; mov eax, 0x66; syscall; 
0x000000000043f89f: inc ebx; nop word ptr cs:[rax + rax]; nop dword ptr [rax + rax]; mov eax, 0xa; syscall; 
0x00000000004738f2: inc ebx; nop word ptr cs:[rax + rax]; nop; mov eax, 0x27; syscall; 
0x0000000000440b62: inc ebx; nop word ptr cs:[rax + rax]; nop; mov eax, 0x63; syscall; 
0x000000000043f642: inc ebx; nop word ptr cs:[rax + rax]; nop; mov eax, 1; syscall; 
0x0000000000452c3e: inc edi; test dword ptr [rax], eax; idiv edi; call qword ptr [rax]; 
0x000000000046f920: inc edi; test dword ptr [rdi + rdi*8 - 1], esp; jmp qword ptr [rsi]; 
0x00000000004529f6: inc esi; test dword ptr [rax], edx; idiv edi; jmp qword ptr [rax]; 
0x0000000000457562: inc esi; test eax, edx; idiv bh; jmp qword ptr [rax]; 
0x000000000043bca9: inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000043bca6: inc rax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000043bca3: inc rax; inc rax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000041f524: insb byte ptr [rdi], dx; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000406f87: insb byte ptr [rdi], dx; lea r10, [rip + 0x7a3d1]; mov r8d, r8d; movsxd rdi, dword ptr [r10 + r8*4]; add rdi, r10; jmp rdi; 
0x00000000004163f0: insb byte ptr [rdi], dx; mov bh, 0xff; jmp qword ptr [rsi + 0x66]; 
0x00000000004185b3: insb byte ptr [rdi], dx; or dword ptr [rax], eax; add dh, byte ptr [rdi + rdi - 0xa]; ret 0x7520; 
0x000000000047d24d: insd dword ptr [rdi], dx; call 0xfffffffff07d5d9f; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000047d406: insd dword ptr [rdi], dx; call 0xfffffffff07d5f58; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000047d55d: insd dword ptr [rdi], dx; call 0xfffffffff07d60af; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000047d5a6: insd dword ptr [rdi], dx; call 0xfffffffff07d60f8; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000047d72f: insd dword ptr [rdi], dx; call 0xfffffffff07d6281; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000047d77f: insd dword ptr [rdi], dx; call 0xfffffffff07d62d1; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000047d812: insd dword ptr [rdi], dx; call 0xfffffffff07d6364; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000046bfff: insd dword ptr [rdi], dx; jnp 0x6c002; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000041401f: insd dword ptr [rdi], dx; mov cl, 9; add byte ptr [rdi], cl; add eax, 0xfffee2e9; jmp qword ptr [rsi + 0xf]; 
0x000000000047efaf: insd dword ptr [rdi], dx; sbb dh, dh; ret 0xf01; 
0x000000000047f932: insd dword ptr [rdi], dx; stc; jmp qword ptr [rsi + 0x66]; 
0x000000000046cdeb: insd dword ptr [rdi], dx; sub byte ptr [rax + rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x0000000000462a63: int 0; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000461aee: int 0x48; add esp, 8; pop rbp; pop r12; ret; 
0x000000000041852f: int 0x48; lea eax, [rip + 0x83d9]; test byte ptr [rip + 0x96dc7], 1; je 0x184fd; ret; 
0x0000000000472899: int 0x66; nop dword ptr [rax + rax]; pop rbp; ret; 
0x00000000004025db: int 0xa; add dh, dh; ret 0x7404; 
0x00000000004442bb: int 0xfb; jmp qword ptr [rsi - 0x70]; 
0x000000000046287d: int 0xfd; dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x8e; ret; 
0x0000000000426204: int 5; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000421a4f: int 8; add byte ptr [rax], al; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000041873c: int1; add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x0000000000423c24: int1; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000045183b: int1; add eax, 0x63480000; or al, 0x8a; add rcx, rdx; jmp rcx; 
0x00000000004704fe: int1; add r8d, eax; mov eax, r8d; ret; 
0x0000000000419f78: int1; bsf rcx, rcx; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x000000000047836c: int1; cmp cx, 0x7fff; jne 0x78358; mov eax, 1; ret; 
0x000000000042d5c1: int1; dec byte ptr [rax + 0x6f]; pop rcx; jmp qword ptr [rdx - 0x2f]; 
0x000000000043cbf2: int1; dec byte ptr [rax + 0x7f]; jg 0x3cbfb; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000043cd7c: int1; dec byte ptr [rax + 0x7f]; jg 0x3cd85; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000043ca1c: int1; dec byte ptr [rax + 0x7f]; jl 0x3ca39; cld; vzeroupper; ret; 
0x000000000042cfa1: int1; jl 0x2cfec; adc dword ptr [rdi + 1], ecx; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000043be5d: int1; jl 0x3bea8; adc dword ptr [rsi - 3], edx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043be64: int1; jl 0x3beaf; adc dword ptr [rsi - 2], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043be6b: int1; jl 0x3beb6; adc dword ptr [rsi - 1], edx; ret; 
0x000000000043be7e: int1; jl 0x3bec9; adc dword ptr [rdi + 1], edx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043be85: int1; jl 0x3bed0; adc dword ptr [rsi - 2], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043be8c: int1; jl 0x3bed7; adc dword ptr [rsi - 1], edx; ret; 
0x000000000043be99: int1; jl 0x3bee4; adc dword ptr [rdi], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043be9f: int1; jl 0x3beea; adc dword ptr [rsi - 1], edx; ret; 
0x000000000043bf66: int1; jl 0x3bfb1; adc dword ptr [rsi - 3], edx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043bf6d: int1; jl 0x3bfb8; adc dword ptr [rsi - 2], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043bf74: int1; jl 0x3bfbf; adc dword ptr [rsi - 1], edx; ret; 
0x000000000043bfbe: int1; jl 0x3c009; adc dword ptr [rsi + 1], edx; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000043bfc5: int1; jl 0x3c010; adc dword ptr [rsi + 2], edx; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000043bfcc: int1; jl 0x3c017; adc dword ptr [rsi + 3], edx; ret; 
0x000000000043c05b: int1; jl 0x3c0a6; adc dword ptr [rsi + 5], edx; vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000043c062: int1; jl 0x3c0ad; adc dword ptr [rsi + 6], edx; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000043c069: int1; jl 0x3c0b4; adc dword ptr [rsi + 7], edx; ret; 
0x0000000000402785: int1; jmp rcx; 
0x0000000000439cc3: int1; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000043d41e: int1; mov eax, eax; ret; 
0x000000000047d1e9: int1; mov esi, 1; mov edi, 1; call rax; 
0x000000000042956b: int1; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042499f: int1; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000047cdde: int1; mov r8, r13; mov rcx, r12; mov esi, 0x1a; mov edi, 1; call rax; 
0x000000000047cd16: int1; mov r8, r13; mov rcx, r12; mov esi, 0xa; mov edi, 1; call rax; 
0x0000000000429563: int1; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000424b17: int1; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424b33: int1; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000444104: int1; mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; call rbx; 
0x000000000043b243: int1; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x0000000000472d27: int1; push rsi; add al, byte ptr [rax]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000045a9fb: int1; ret; 
0x00000000004413ee: int1; shl rcx, 4; cmp r8, qword ptr [rcx + rsi + 0x10]; jae 0x413a1; xor eax, eax; ret; 
0x000000000043b247: int1; sub eax, edx; ret; 
0x0000000000420a61: int1; sub rax, rcx; je 0x20a70; sbb eax, eax; or eax, 1; ret; 
0x0000000000476a20: int1; sub rcx, qword ptr [rax + 0x10]; cmp rcx, qword ptr [rax + 0x28]; jae 0x76a10; mov eax, 1; ret; 
0x0000000000439cb9: int1; vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000435aa9: int1; vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; vzeroupper; ret; 
0x0000000000435ab3: int1; vzeroupper; ret; 
0x0000000000401343: int1; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000043397d: iretd; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000047fc44: iretd; add dword ptr [rax], eax; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000426016: iretd; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004726f6: iretd; add eax, dword ptr [rax]; add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x000000000047274b: iretd; add eax, dword ptr [rax]; syscall; 
0x0000000000460113: iretd; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx + rsi]; ret; 
0x00000000004704eb: iretd; ja 0x704d0; mov eax, r8d; ret; 
0x000000000043c15a: iretd; jb 0x3c2c4; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043c4b5: iretd; jb 0x3c681; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043c900: iretd; jb 0x3cb3c; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043db9d: iretd; jbe 0x3dba0; add bl, ch; ret 0x1f0f; 
0x00000000004173df: iretd; mov eax, 0xca; syscall; 
0x0000000000416d8e: iretd; mov rax, -0x40; mov dword ptr fs:[rax], 0xc; xor eax, eax; pop rbx; ret; 
0x000000000041a042: iretd; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x000000000041b496: iretd; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000042a5bd: iretd; nop; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004109e5: ja 0x109ff; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x00000000004116b5: ja 0x11667; or dword ptr [rax], eax; add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rip + 0x9b069], eax; ret; 
0x0000000000417883: ja 0x178d0; lea rdx, [rip + 0x6b29c]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000417b2a: ja 0x17b35; add byte ptr [rax + 0x48], al; lea eax, [rip + 0x1d09b]; lea rdx, [rip + 0x221b4]; cmovne rax, rdx; ret; 
0x0000000000417b8a: ja 0x17b95; add byte ptr [rdx], al; lea rax, [rip + 0xdfb]; lea rdx, [rip + 0x24e4]; cmovne rax, rdx; ret; 
0x0000000000401af0: ja 0x18dc; lea rdx, [rip + 0x823e7]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000423795: ja 0x2378d; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426555: ja 0x26521; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000402776: ja 0x2788; lea rsi, [rip + 0x7e959]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000042d473: ja 0x2d46e; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x0000000000402efa: ja 0x2f23; lea rdx, [rip + 0x7e391]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000004359b9: ja 0x35a50; je 0x35a40; mov byte ptr [rdi], 0; vzeroupper; ret; 
0x0000000000438fe7: ja 0x38feb; ret; 
0x0000000000439003: ja 0x39009; mov dword ptr [rdi], ecx; ret; 
0x0000000000439044: ja 0x3904e; mov qword ptr [rdi], rcx; ret; 
0x00000000004390c9: ja 0x390db; ret; 
0x000000000043911f: ja 0x39135; ret; 
0x00000000004391a1: ja 0x391bb; ret; 
0x0000000000439607: ja 0x3960b; lea rax, [rdi + 2]; ret; 
0x0000000000439623: ja 0x39629; mov dword ptr [rdi], ecx; lea rax, [rdi + 4]; ret; 
0x0000000000439674: ja 0x3967e; mov qword ptr [rdi], rcx; lea rax, [rdi + 8]; ret; 
0x0000000000439759: ja 0x3976b; lea rax, [rdi + 0x10]; ret; 
0x00000000004397cf: ja 0x397e5; lea rax, [rdi + 0x14]; ret; 
0x0000000000439851: ja 0x3986b; lea rax, [rdi + 0x18]; ret; 
0x0000000000439ba9: ja 0x39c40; je 0x39c30; mov byte ptr [rdi], 0; lea rax, [rdi]; vzeroupper; ret; 
0x000000000043c174: ja 0x3c19c; jb 0x3c17d; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000043c12d: ja 0x3c1ad; movups xmm0, xmmword ptr [rsi]; movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000043c340: ja 0x3c362; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x000000000043c40e: ja 0x3c430; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x000000000043c4d4: ja 0x3c511; jb 0x3c4dd; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000043c718: ja 0x3c75a; vmovdqu ymmword ptr [rdi + 0x60], ymm7; vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x000000000043c834: ja 0x3c876; vmovdqu ymmword ptr [rdi + 0x60], ymm7; vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x000000000043c924: ja 0x3c979; jb 0x3c92d; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000043cbef: ja 0x3cbf3; vmovdqu64 zmmword ptr [rdi + 0xc0], zmm7; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000043cd79: ja 0x3cd7d; vmovdqu64 zmmword ptr [rdi + 0xc0], zmm7; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000043ce42: ja 0x3ce4f; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043cde2: ja 0x3ce58; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043ce5c: ja 0x3ce74; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x000000000043cee3: ja 0x3cefa; jb 0x3cee9; mov byte ptr [rdi], cl; ret; 
0x000000000043cf9a: ja 0x3cfaa; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x000000000043cf4a: ja 0x3cfb3; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x000000000043d051: ja 0x3d07f; jb 0x3d057; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x000000000043d133: ja 0x3d147; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000043d0d3: ja 0x3d150; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000043d219: ja 0x3d255; jb 0x3d21f; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x000000000043d2ac: ja 0x3d422; lea rsi, [rip + 0x46b87]; movsxd rax, dword ptr [rsi + rdi*4]; add rax, rsi; jmp rax; 
0x000000000043e282: ja 0x3e2a0; hlt; mov eax, esi; syscall; 
0x000000000043e46e: ja 0x3e4e8; lea rdx, [rip + 0x45f25]; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x000000000043e87c: ja 0x3e880; ret; 
0x000000000043e86d: ja 0x3e898; mov eax, 4; syscall; 
0x000000000043e86d: ja 0x3e898; mov eax, 4; syscall; cmp rax, -0x1000; ja 0x3e880; ret; 
0x000000000043e8cb: ja 0x3e8d0; ret; 
0x000000000043e8bc: ja 0x3e8e8; mov eax, 5; syscall; 
0x000000000043e8bc: ja 0x3e8e8; mov eax, 5; syscall; cmp rax, -0x1000; ja 0x3e8d0; ret; 
0x000000000043ea44: ja 0x3eaa0; ret; 
0x000000000043eae9: ja 0x3eb40; ret; 
0x000000000043eb7d: ja 0x3eb80; ret; 
0x000000000043ebb9: ja 0x3ec00; ret; 
0x000000000043f37d: ja 0x3f380; ret; 
0x000000000043f62a: ja 0x3f630; ret; 
0x000000000043f65d: ja 0x3f660; ret; 
0x000000000043f696: ja 0x3f6a0; ret; 
0x000000000043f7f8: ja 0x3f860; pop rbx; pop rbp; ret; 
0x0000000000440dfb: ja 0x40e08; add rsp, 8; ret; 
0x000000000044150c: ja 0x41524; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000441522: ja 0x41544; ret; 
0x0000000000441bf8: ja 0x41c20; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000442d2d: ja 0x42d00; movsxd rax, dword ptr [rbp + rax*4]; add rax, rbp; jmp rax; 
0x0000000000442ce6: ja 0x42d00; movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x000000000044ecea: ja 0x4ecef; add al, ch; inc byte ptr [rax - 5]; jmp qword ptr [rsi + 0x66]; 
0x000000000044ee32: ja 0x4ef70; movsxd rcx, dword ptr [rdi + r9*4]; add rcx, rdi; jmp rcx; 
0x000000000044fb50: ja 0x4fb72; mov r15, qword ptr [rdi + 0x28]; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x0000000000451839: ja 0x51e30; movsxd rcx, dword ptr [rdx + rcx*4]; add rcx, rdx; jmp rcx; 
0x00000000004520c3: ja 0x520dd; mov rdx, qword ptr [r15 + 0x20]; mov rdi, r14; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x00000000004524e5: ja 0x524f8; add byte ptr [rax], al; mov rdx, rbx; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x00000000004574b9: ja 0x57d20; movsxd rcx, dword ptr [rdx + rcx*4]; add rcx, rdx; jmp rcx; 
0x000000000045cae5: ja 0x5cb18; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000045cb8e: ja 0x5cbb6; lea rcx, [rip + 0x3834d]; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000045d13e: ja 0x5d150; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000045d1d3: ja 0x5d1f4; lea rsi, [rip + 0x37f4c]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000045d229: ja 0x5d3a0; lea rcx, [rip + 0x37fae]; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000045f03c: ja 0x5f030; lea eax, [rdx + rdi]; ret; 
0x0000000000460808: ja 0x60852; add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x0000000000461948: ja 0x61992; add eax, edi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000461aed: ja 0x61abc; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000046206c: ja 0x62070; ret; 
0x000000000046205d: ja 0x62088; mov eax, 6; syscall; 
0x000000000046205d: ja 0x62088; mov eax, 6; syscall; cmp rax, -0x1000; ja 0x62070; ret; 
0x00000000004620c1: ja 0x620c8; ret; 
0x00000000004620b2: ja 0x620e0; mov eax, 0x106; syscall; 
0x00000000004620b2: ja 0x620e0; mov eax, 0x106; syscall; cmp rax, -0x1000; ja 0x620c8; ret; 
0x000000000046221d: ja 0x62230; mov qword ptr [rip + 0x4d3d2], rax; cmp rdi, rax; ja 0x62250; xor eax, eax; ret; 
0x0000000000462229: ja 0x62250; xor eax, eax; ret; 
0x000000000046821b: ja 0x686b0; lea rsi, [rip + 0x2dff8]; movsxd rax, dword ptr [rsi + r12*4]; add rax, rsi; jmp rax; 
0x0000000000468ac8: ja 0x6936e; lea rdi, [rip + 0x2d7e3]; movsxd rax, dword ptr [rdi + r12*4]; add rax, rdi; jmp rax; 
0x000000000046d5ac: ja 0x6d580; mov rax, r8; ret; 
0x0000000000406f86: ja 0x6ff4; lea r10, [rip + 0x7a3d1]; mov r8d, r8d; movsxd rdi, dword ptr [r10 + r8*4]; add rdi, r10; jmp rdi; 
0x00000000004704ec: ja 0x704d0; mov eax, r8d; ret; 
0x00000000004738dd: ja 0x738e0; ret; 
0x0000000000473920: ja 0x73928; ret; 
0x0000000000475172: ja 0x75158; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000476ffe: ja 0x77049; shr ecx, cl; mov qword ptr [rdi], r9; ret; 
0x000000000047862a: ja 0x78634; mov rdi, qword ptr [rdi]; call 0x7a4f0; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x00000000004786de: ja 0x786e8; mov rdi, qword ptr [rdi]; call 0x7a400; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000047b8e4: ja 0x7b958; mov eax, dword ptr [rbx + 8]; movsxd rax, dword ptr [r15 + rax*4]; add rax, r15; jmp rax; 
0x000000000047d96d: ja 0x7d971; sbb eax, eax; ret; 
0x000000000040df24: ja 0xdf50; movzx eax, al; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x000000000040ff1c: ja 0xff10; lea eax, [rdx + rdi]; ret; 
0x0000000000410d8d: jae 0x10db0; movzx eax, byte ptr [rax]; ret; 
0x000000000041f71b: jae 0x1fa90; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x00000000004209d5: jae 0x20c70; xor eax, eax; vzeroupper; ret; 
0x000000000042a3b5: jae 0x2a450; lea r11, [rip + 0x592ce]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043cede: jae 0x3cef3; cmp dl, 1; ja 0x3cefa; jb 0x3cee9; mov byte ptr [rdi], cl; ret; 
0x000000000043e7ed: jae 0x3e7f0; ret; 
0x000000000043f88d: jae 0x3f890; ret; 
0x000000000043f8bd: jae 0x3f8c0; ret; 
0x000000000043f8ed: jae 0x3f8f0; ret; 
0x0000000000440b50: jae 0x40b53; ret; 
0x0000000000440b7d: jae 0x40b80; ret; 
0x00000000004413f8: jae 0x413a1; xor eax, eax; ret; 
0x000000000044f34f: jae 0x4f34d; jmp qword ptr [rsi + 0xf]; 
0x000000000044fae9: jae 0x4fb2b; xor eax, eax; pop rbx; ret; 
0x000000000044fb08: jae 0x4fb4a; pop rbx; ret; 
0x0000000000452e83: jae 0x52e8d; add byte ptr [rax], al; mov rdx, rbx; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000459e09: jae 0x59e0a; add al, 0; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x0000000000461fed: jae 0x61ff0; ret; 
0x000000000046cf3f: jae 0x6cf41; add byte ptr [rax - 0x77], cl; sbb byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x000000000046d524: jae 0x6d508; mov rax, r8; ret; 
0x00000000004731ea: jae 0x731e0; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000000473978: jae 0x73986; mov rdx, qword ptr [rip + 0x3be37]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000476a29: jae 0x76a10; mov eax, 1; ret; 
0x000000000047879d: jae 0x787a0; ret; 
0x00000000004084af: jae 0x84c3; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000040a17d: jae 0xa18f; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x000000000040a4d0: jae 0xa52d; mov rax, qword ptr [rsp + 8]; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x000000000040ba34: jae 0xba35; jmp qword ptr [rsi + 0xf]; 
0x000000000040c56a: jae 0xc680; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x000000000040c666: jae 0xc6b0; mov rax, qword ptr [rsp + 8]; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x000000000040d788: jae 0xd790; movzx eax, byte ptr [rax]; ret; 
0x000000000040d7aa: jae 0xd7f8; movzx eax, byte ptr [rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000411861: jb 0x11840; mov byte ptr [r8 + rsi], r10b; mov rax, r8; ret; 
0x000000000041600a: jb 0x15f9d; or dword ptr [rax], eax; syscall; 
0x000000000041600a: jb 0x15f9d; or dword ptr [rax], eax; syscall; pop rbx; ret; 
0x000000000042cfe7: jb 0x2cffd; vmovdqu ymm0, ymmword ptr [rsi]; vmovdqu ymm1, ymmword ptr [rcx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x000000000042d014: jb 0x2d025; mov rsi, qword ptr [rsi]; mov rcx, qword ptr [rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000042d028: jb 0x2d036; mov esi, dword ptr [rsi]; mov ecx, dword ptr [rcx - 4]; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x000000000042d039: jb 0x2d04b; mov si, word ptr [rsi]; mov cx, word ptr [rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x000000000042d04e: jb 0x2d054; mov cl, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000043be96: jb 0x3bea6; vmovups zmmword ptr [rdi], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043bea9: jb 0x3beb5; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x000000000043bec2: jb 0x3bece; vmovq qword ptr [rdi], xmm0; vmovq qword ptr [rsi - 8], xmm0; ret; 
0x000000000043bed5: jb 0x3bedd; mov dword ptr [rdi], ecx; mov dword ptr [rsi - 4], ecx; ret; 
0x000000000043bee0: jb 0x3beea; mov word ptr [rdi], cx; mov word ptr [rsi - 2], cx; ret; 
0x000000000043beed: jb 0x3bef1; mov byte ptr [rdi], cl; ret; 
0x000000000043c0f9: jb 0x3c0fe; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043c176: jb 0x3c17d; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000043c15b: jb 0x3c2c4; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043c4d6: jb 0x3c4dd; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000043c4b6: jb 0x3c681; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043c926: jb 0x3c92d; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000043c901: jb 0x3cb3c; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043cee5: jb 0x3cee9; mov byte ptr [rdi], cl; ret; 
0x000000000043d053: jb 0x3d057; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x000000000043d21b: jb 0x3d21f; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x0000000000441506: jb 0x41524; cmp rdx, qword ptr [rdi + 0x18]; ja 0x41524; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000450051: jb 0x5009b; nop dword ptr [rax + rax]; mov rsi, r15; mov rdi, r12; mov rdx, rbp; call rbx; 
0x000000000046213a: jb 0x62126; std; jmp qword ptr [rsi - 0x70]; 
0x0000000000464952: jb 0x6491b; stc; dec dword ptr [rax - 0x77]; ret 0x8348; 
0x000000000046a6c0: jb 0x6a6d0; mov rcx, rax; cmp rcx, rdx; jne 0x6a6a0; mov eax, dword ptr [rcx]; ret; 
0x000000000047b8e5: jb 0x7b872; or byte ptr [r9 + 0x63], cl; add al, 0x87; add rax, r15; jmp rax; 
0x0000000000409e71: jb 0x9ebb; mov edi, ebx; call qword ptr [rbp + 0x68]; 
0x0000000000411689: jbe 0x11690; ret; 
0x0000000000411749: jbe 0x11750; ret; 
0x0000000000411789: jbe 0x11790; ret; 
0x00000000004117b9: jbe 0x117c0; ret; 
0x0000000000415136: jbe 0x15141; add byte ptr [rax + 0x39], cl; ror dword ptr [rdi], cl; xchg eax, ebp; ret 0xb60f; 
0x0000000000417a26: jbe 0x17a75; or dword ptr [rax], eax; syscall; 
0x0000000000417bea: jbe 0x17bf5; add byte ptr [rdx], al; lea rax, [rip + 0x1deeb]; lea rdx, [rip + 0x1e0a4]; cmovne rax, rdx; ret; 
0x0000000000417c13: jbe 0x17c1e; add byte ptr [rax], dl; lea rdx, [rip + 0x240a2]; lea rax, [rip + 0x23ffb]; cmovne rax, rdx; ret; 
0x000000000041cf47: jbe 0x1cf54; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000041e6a7: jbe 0x1e6b4; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000041f687: jbe 0x1f694; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000041fa35: jbe 0x1fa90; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000041f8c1: jbe 0x1fa90; movzx eax, byte ptr [rax + rdi]; movzx edx, byte ptr [rdx + rdi]; sub eax, edx; vzeroupper; ret; 
0x000000000041fc4f: jbe 0x1fef0; add rax, rdi; add rax, rcx; ret; 
0x000000000041feb6: jbe 0x1fef0; add rax, rdi; ret; 
0x000000000041fec6: jbe 0x1fef0; lea rax, [rdi + rax + 0x10]; ret; 
0x000000000041fed6: jbe 0x1fef0; lea rax, [rdi + rax + 0x20]; ret; 
0x000000000041fee6: jbe 0x1fef0; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000420307: jbe 0x20360; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000420327: jbe 0x20360; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000420347: jbe 0x20360; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000004202f7: jbe 0x20360; add rax, rdi; vzeroupper; ret; 
0x0000000000402a7f: jbe 0x2a91; syscall; 
0x000000000042bf95: jbe 0x2bf9c; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043db9e: jbe 0x3dba0; add bl, ch; ret 0x1f0f; 
0x00000000004413ed: jbe 0x413e0; shl rcx, 4; cmp r8, qword ptr [rcx + rsi + 0x10]; jae 0x413a1; xor eax, eax; ret; 
0x000000000044b717: jbe 0x4b714; jmp qword ptr [rsi + 0xf]; 
0x0000000000452838: jbe 0x533d0; mov rdx, r12; mov rsi, r13; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x0000000000452b2c: jbe 0x53439; mov rdx, r12; mov rsi, r13; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x0000000000452288: jbe 0x5353a; mov rdx, r13; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x00000000004524e3: jbe 0x53660; mov rdx, rbx; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000452e81: jbe 0x536fa; mov rdx, rbx; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x00000000004541df: jbe 0x563de; mov dword ptr [rbp - 0x500], r9d; mov rdx, r15; mov rsi, r8; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x0000000000456e60: jbe 0x56e30; mov qword ptr [rdi], rsi; ret; 
0x000000000045b019: jbe 0x5bf6a; mov rdx, rbx; mov rsi, r9; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x000000000045d0d0: jbe 0x5d0a0; mov qword ptr [rdi], rsi; ret; 
0x000000000045dfc6: jbe 0x5dff9; movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x000000000045e106: jbe 0x5e139; movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x000000000045e71b: jbe 0x5e758; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000045e82a: jbe 0x5e928; mov esi, r15d; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x000000000045ea83: jbe 0x5eaa4; mov rax, qword ptr [rax + 0xe0]; mov esi, 0xffffffff; call qword ptr [rax + 0x18]; 
0x000000000045edb8: jbe 0x5ed15; mov eax, dword ptr [rdx]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000045ef60: jbe 0x5ef90; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000045effa: jbe 0x5f010; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x0000000000460827: jbe 0x60880; add rax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000460847: jbe 0x60880; add rax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000460867: jbe 0x60880; add rax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000460807: jbe 0x60880; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000461947: jbe 0x619c0; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000046c7a6: jbe 0x6c790; cmp ecx, edx; je 0x6c700; mov eax, edx; sub eax, ecx; ret; 
0x000000000046cdcf: jbe 0x6cdd8; ret; 
0x00000000004734ac: jbe 0x734fd; xor byte ptr [rsi + 0xf], ah; xlatb; ret; 
0x000000000047354e: jbe 0x7359f; adc byte ptr [rsi + 0xf], ah; xlatb; rol dword ptr [rbp + 0x315775c0], 0xc0; ret; 
0x000000000047333f: jbe 0x735e0; add rax, rdi; add rax, rcx; ret; 
0x00000000004735a6: jbe 0x735e0; add rax, rdi; ret; 
0x00000000004735b6: jbe 0x735e0; lea rax, [rdi + rax + 0x10]; ret; 
0x00000000004735c6: jbe 0x735e0; lea rax, [rdi + rax + 0x20]; ret; 
0x00000000004735d6: jbe 0x735e0; lea rax, [rdi + rax + 0x30]; ret; 
0x00000000004737f7: jbe 0x73850; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000473817: jbe 0x73850; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000473837: jbe 0x73850; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000004737e7: jbe 0x73850; add rax, rdi; vzeroupper; ret; 
0x0000000000474106: jbe 0x74101; cld; jmp qword ptr [rsi + 0xf]; 
0x000000000040854e: jbe 0x85b7; or al, byte ptr [rax]; syscall; 
0x00000000004094e0: jbe 0x9640; xor esi, esi; mov rdi, rbp; call qword ptr [rbx + 0x10]; 
0x000000000040978b: jbe 0x97e8; mov rdi, rbx; call qword ptr [rbp + 0x60]; 
0x0000000000409e70: jbe 0x9ee4; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040d3fd: jbe 0xd413; mov rdx, r12; mov rsi, r15; mov rdi, rbp; call qword ptr [rbx + 0x40]; 
0x000000000040d4e8: jbe 0xd5f8; mov rdx, r15; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x000000000040efd5: jbe 0xf030; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x18]; 
0x000000000040f0cb: jbe 0xf0e0; mov rax, qword ptr [rbx + 0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000040f489: jbe 0xf4f0; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040f53b: jbe 0xf560; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000040f5cb: jbe 0xf638; movzx esi, byte ptr [r12]; lea r15, [r12 + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x000000000040f6a7: jbe 0xf6b8; mov rax, qword ptr [rbx + 0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000040f8c9: jbe 0xf8e0; mov rax, qword ptr [rbx + 0x48]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x000000000040fe3b: jbe 0xfe70; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000040fed2: jbe 0xfef0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000040100e: je 0x1012; call rax; 
0x000000000040100e: je 0x1012; call rax; add rsp, 8; ret; 
0x00000000004108fb: je 0x1090d; mov rdx, rax; mov rax, qword ptr [rax]; test rax, rax; jne 0x108f8; ret; 
0x0000000000410d84: je 0x10d98; mov rax, qword ptr [rdi + 8]; cmp rax, rdx; jae 0x10db0; movzx eax, byte ptr [rax]; ret; 
0x0000000000411650: je 0x11670; xor r10d, r10d; mov edx, 2; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000000411b30: je 0x11b35; pop rbx; pop rbp; ret; 
0x00000000004127b9: je 0x127c8; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000041287c: je 0x12890; mov qword ptr [rdx + 0x28], rcx; mov rax, qword ptr [rdi + 0x28]; mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x0000000000413ac4: je 0x139b1; mov qword ptr [rsp + 0x10], rdx; mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp], rdi; call rax; 
0x00000000004152f2: je 0x152fd; add byte ptr [rax + 0x39], cl; ror dword ptr [rdi], cl; xchg eax, ebp; ret 0xb60f; 
0x0000000000416262: je 0x16288; sbb byte ptr [rbx + 0x5d], bl; pop r12; jmp rax; 
0x0000000000416fb2: je 0x16fd8; sub byte ptr [rcx + rcx*4 - 0x19], cl; call rax; 
0x0000000000417436: je 0x17440; lea rax, [rdx - 0x10]; ret; 
0x0000000000417431: je 0x17460; test rcx, rcx; je 0x17440; lea rax, [rdx - 0x10]; ret; 
0x0000000000417a7d: je 0x17a84; mov qword ptr [rbx], rdx; xor eax, eax; pop rbx; ret; 
0x0000000000417b25: je 0x17b40; test byte ptr [rip + 0x977d6], 0x40; lea rax, [rip + 0x1d09b]; lea rdx, [rip + 0x221b4]; cmovne rax, rdx; ret; 
0x0000000000417cf3: je 0x17d0a; and dh, 2; lea rax, [rip + 0x3a21]; lea rdx, [rip + 0x526a]; cmovne rax, rdx; ret; 
0x000000000041852e: je 0x184fd; lea rax, [rip + 0x83d9]; test byte ptr [rip + 0x96dc7], 1; je 0x184fd; ret; 
0x000000000041853e: je 0x184fd; ret; 
0x00000000004185aa: je 0x185d8; ret; 
0x000000000041865b: je 0x18678; test eax, eax; lea rdx, [rip + 0x248ca]; lea rax, [rip + 0x24913]; cmove rax, rdx; ret; 
0x000000000041871a: je 0x18748; ret; 
0x00000000004187d8: je 0x187c6; add dword ptr [rax], eax; cmovne rax, rdx; ret; 
0x000000000041881c: je 0x18833; and dh, 2; lea rax, [rip + 0x14e08]; lea rdx, [rip + 0x17041]; cmovne rax, rdx; ret; 
0x000000000041889a: je 0x188c8; ret; 
0x0000000000418978: je 0x1893e; add dword ptr [rax], eax; cmove rax, rdx; ret; 
0x0000000000419e09: je 0x19e20; bsf rdx, rax; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; ret; 
0x000000000041a039: je 0x19ed5; bsf rcx, rdi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x0000000000401bdb: je 0x1bf0; mov eax, 0; test rax, rax; je 0x1bf0; mov edi, 0x4adb30; jmp rax; 
0x0000000000401be5: je 0x1bf0; mov edi, 0x4adb30; jmp rax; 
0x0000000000401c1d: je 0x1c30; mov eax, 0; test rax, rax; je 0x1c30; mov edi, 0x4adb30; jmp rax; 
0x0000000000401c27: je 0x1c30; mov edi, 0x4adb30; jmp rax; 
0x0000000000401c5a: je 0x1c66; mov edi, 0x49cca8; call 0x7f900; mov byte ptr [rip + 0xac5d3], 1; pop rbp; ret; 
0x000000000041f66a: je 0x1f66d; xchg eax, edx; sub eax, edx; ret; 
0x000000000041fdbc: je 0x1fe0d; xor byte ptr [rsi + 0xf], ah; xlatb; ret; 
0x000000000041fe5e: je 0x1feaf; adc byte ptr [rsi + 0xf], ah; xlatb; rol dword ptr [rbp + 0x315775c0], 0xc0; ret; 
0x000000000041ff58: je 0x1ff70; bsf eax, eax; add rax, rdi; add rax, rcx; ret; 
0x000000000042009a: je 0x200eb; xor byte ptr [rsi + 0xf], ah; xlatb; ret; 
0x0000000000420413: je 0x20430; tzcnt eax, eax; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000000420a11: je 0x20a2a; vpmovmskb eax, ymm2; sub eax, -1; jne 0x20a20; vzeroupper; ret; 
0x0000000000420a65: je 0x20a70; sbb eax, eax; or eax, 1; ret; 
0x0000000000420b09: je 0x20adc; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x20a20; ret; 
0x0000000000420b47: je 0x20b60; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x20a20; ret; 
0x0000000000420c56: je 0x20c6f; vpmovmskb eax, ymm2; sub eax, -1; jne 0x20a20; vzeroupper; ret; 
0x0000000000422087: je 0x2208b; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000425158: je 0x25138; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000040259f: je 0x25c5; adc byte ptr [rax - 0x75], cl; and al, 0x18; call rax; 
0x000000000040283f: je 0x2850; add rsp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x0000000000434e31: je 0x34e40; bsf eax, eax; lea rax, [rdi + rax]; ret; 
0x00000000004352a1: je 0x352c0; tzcnt eax, eax; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x000000000043544c: je 0x3542e; pmovmskb edx, xmm4; test edx, edx; je 0x3545a; bsf eax, edx; ret; 
0x0000000000435454: je 0x3545a; bsf eax, edx; ret; 
0x00000000004354fd: je 0x35510; bsf rax, rdx; ret; 
0x000000000043549c: je 0x35520; bsf rax, rdx; ret; 
0x00000000004359bf: je 0x35a40; mov byte ptr [rdi], 0; vzeroupper; ret; 
0x0000000000439baf: je 0x39c30; mov byte ptr [rdi], 0; lea rax, [rdi]; vzeroupper; ret; 
0x000000000043bd58: je 0x3bd30; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000000043c0f0: je 0x3c0fd; lea rdx, [rsi + rcx]; cmp rdi, rdx; jb 0x3c0fe; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043c203: je 0x3c21c; ror byte ptr [rdi], 1; adc dword ptr [rdi + rdx - 0x40], edi; ret; 
0x000000000043ca18: je 0x3ca31; std; vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7; vzeroupper; ret; 
0x000000000043cde3: je 0x3cdd8; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043d3ad: je 0x3d2ca; lea eax, [rdx + rdx]; pop rbx; and eax, 0x7ff80000; ret; 
0x000000000043d35d: je 0x3d2ca; mov eax, ecx; pop rbx; shr eax, 6; and eax, 0x3fffc00; ret; 
0x000000000043d7f9: je 0x3d808; cmp eax, 2; je 0x3d810; xor eax, eax; ret; 
0x000000000043d7fe: je 0x3d810; xor eax, eax; ret; 
0x000000000043d854: je 0x3d838; ret; 
0x000000000043db99: je 0x3dbbf; or al, ch; iretd; jbe 0x3dba0; add bl, ch; ret 0x1f0f; 
0x000000000043dff2: je 0x3e018; sbb byte ptr [rcx + rcx*4 - 0x1f], cl; mov rdx, r13; call rbx; 
0x000000000043e171: je 0x3e197; sbb byte ptr [rbp + 0x31], al; ror byte ptr [rax - 0x77], 0xef; call rbx; 
0x000000000043ea6e: je 0x3ea94; adc byte ptr [rcx - 0x77], al; ror byte ptr [rbx + 0x3108247c], 0xc0; syscall; 
0x000000000043eca3: je 0x3ec7d; mov rbp, rdi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x000000000043ed77: je 0x3ed9d; or byte ptr [rdi], cl; xchg eax, ebp; ret 0x8948; 
0x000000000043f3d8: je 0x3f400; mov eax, 0x48; syscall; 
0x000000000043f467: je 0x3f490; mov eax, 0x48; syscall; 
0x000000000043f504: je 0x3f538; mov edx, r8d; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000043f5ad: je 0x3f5d8; mov eax, 0x101; syscall; 
0x000000000043f75a: je 0x3f75d; ret; 
0x000000000043f7e3: je 0x3f820; mov r10d, ebx; mov rdi, rbp; mov eax, 9; syscall; 
0x000000000043faaa: je 0x3fae5; test byte ptr [r10 + 8], 1; jne 0x3faf0; ret; 
0x000000000043faa4: je 0x3fae5; test byte ptr [rcx + 8], 1; je 0x3fae5; test byte ptr [r10 + 8], 1; jne 0x3faf0; ret; 
0x0000000000440393: je 0x4039a; test rsi, rsi; jne 0x403a0; ret; 
0x00000000004403b3: je 0x403ba; test rsi, rsi; jne 0x403c0; ret; 
0x0000000000441afa: je 0x41b08; lea rdi, [rcx + rsi + 0x20]; jmp rdx; 
0x0000000000441af5: je 0x41b08; test rdx, rdx; je 0x41b08; lea rdi, [rcx + rsi + 0x20]; jmp rdx; 
0x0000000000442bf8: je 0x42c00; ret; 
0x0000000000442c18: je 0x42c28; mov dword ptr [rip + 0x68ea0], eax; pop rbx; ret; 
0x0000000000446118: je 0x46120; ret; 
0x000000000044633f: je 0x46352; add ecx, dword ptr [rcx + 0x39]; ret; 
0x000000000044647c: je 0x464a2; push rax; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x00000000004469bb: je 0x469e1; pop rax; mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000446f26: je 0x46f4c; push rax; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x00000000004474f5: je 0x4751b; push rax; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000447ac6: je 0x47aec; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000449893: je 0x498b9; mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000044a510: je 0x4a536; push rax; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044b910: je 0x4b936; push rax; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044d9b2: je 0x4d9c0; cmp esi, 3; je 0x4d9c0; ret; 
0x000000000044d9b7: je 0x4d9c0; ret; 
0x000000000044d9ff: je 0x4d9df; call 0x6d2d0; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000044d9dd: je 0x4d9f8; pop rbx; ret; 
0x000000000044e14f: je 0x4e153; call rax; 
0x000000000044e391: je 0x4e395; call rax; 
0x000000000044ef9a: je 0x4ef9f; add al, ch; sti; jmp qword ptr [rsi + 0x66]; 
0x000000000044f31b: je 0x4f31f; call rax; 
0x000000000044f92e: je 0x4f938; ret; 
0x000000000045e95c: je 0x5e960; ret; 
0x000000000045e9ae: je 0x5ea0b; pop rbp; pop r12; ret; 
0x000000000045ea34: je 0x5ea91; mov eax, 1; pop rbp; pop r12; ret; 
0x000000000045ef6b: je 0x5ef70; and dword ptr [rbx], 0xffffffef; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000045ef91: je 0x5efb7; or al, 0xe8; xchg eax, edi; sar edx, 1; dec dword ptr [rbx - 0x14f3db8c]; ret; 
0x000000000045ef9a: je 0x5efc0; or al, 0xeb; ret; 
0x000000000045efc6: je 0x5efcb; and dword ptr [rbx], 0xffffffef; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000045f037: je 0x5f048; cmp rax, rsi; ja 0x5f030; lea eax, [rdx + rdi]; ret; 
0x000000000045f289: je 0x5f28c; ret; 
0x000000000045f2ed: je 0x5f2f0; ret; 
0x000000000045ff80: je 0x60140; bsr rax, rax; add rax, rdi; ret; 
0x0000000000460204: je 0x60140; bsr rax, rsi; add rax, rdi; ret; 
0x000000000046000e: je 0x60140; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x000000000046039f: je 0x60354; bsr eax, eax; lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x00000000004603c4: je 0x603e0; bsr eax, eax; lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x00000000004604f4: je 0x60503; sar rdx, cl; test rdx, rdx; je 0x60520; bsf rax, rdx; ret; 
0x00000000004604fc: je 0x60520; bsf rax, rdx; ret; 
0x000000000046048c: je 0x60530; bsf rax, rdx; ret; 
0x0000000000461099: je 0x6109f; test edx, edx; jne 0x61090; ret; 
0x00000000004611ac: je 0x611d0; bsf rax, rdx; shr rax, 2; ret; 
0x0000000000461140: je 0x611e0; bsf rax, rdx; shr rax, 2; ret; 
0x00000000004614c9: je 0x614e0; mov cl, dl; and cl, 0xf; je 0x614f0; ret; 
0x00000000004614d0: je 0x614f0; ret; 
0x00000000004614e5: je 0x61500; add rax, 2; ret; 
0x0000000000461aa6: je 0x61ad8; call rax; 
0x0000000000464b12: je 0x64af1; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000406776: je 0x677e; add dword ptr [rax - 9], ecx; ror byte ptr [rax + 1], 1; ret; 
0x0000000000467b3a: je 0x67b50; sub rsp, 8; call qword ptr [rip + 0x455fa]; xor eax, eax; add rsp, 8; ret; 
0x000000000046a816: je 0x6a804; mov rax, r8; mov qword ptr [r11], rdi; pop rbx; ret; 
0x000000000046b1f9: je 0x6b1fc; lock inc dword ptr [r8 + 0x10]; pop rbx; pop rbp; ret; 
0x000000000046c7aa: je 0x6c700; mov eax, edx; sub eax, ecx; ret; 
0x000000000046d4d1: je 0x6d4dd; lea rcx, [rip + 0x405a6]; mov qword ptr [rax], rcx; pop rbp; ret; 
0x00000000004704e5: je 0x704f8; movsx ecx, dl; cmp edi, ecx; ja 0x704d0; mov eax, r8d; ret; 
0x0000000000472813: je 0x72823; lea rax, [rip + 0x3cea4]; mov qword ptr [rip + 0x3ce85], rax; add rsp, 8; ret; 
0x0000000000472cb3: je 0x72cbf; lea rdx, [rip + 0x3ae04]; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x0000000000472f52: je 0x72f60; pop rbx; pop rbp; pop r12; ret; 
0x0000000000473248: je 0x7324a; add byte ptr [rax], al; cmove rax, rdx; ret; 
0x000000000047505e: je 0x75076; lea rbx, [rbp + rdx*8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000047511b: je 0x75134; add rsp, 8; mov eax, 1; pop rbx; pop rbp; ret; 
0x00000000004765e6: je 0x765f0; ret; 
0x0000000000476a61: je 0x76a50; cmp rcx, rax; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x00000000004076fc: je 0x7722; cmp byte ptr [rax - 0x75], cl; je 0x7727; xor byte ptr [rcx - 0x7d], cl; ret 0x4102; 
0x0000000000407701: je 0x7727; xor byte ptr [rcx - 0x7d], cl; ret 0x4102; 
0x00000000004077e6: je 0x780c; cmp byte ptr [rax - 0x75], cl; je 0x7811; xor byte ptr [rcx - 0x7d], cl; ret 0x4102; 
0x00000000004077eb: je 0x7811; xor byte ptr [rcx - 0x7d], cl; ret 0x4102; 
0x000000000047ab96: je 0x7aba8; movss xmm0, dword ptr [rip + 0x21a98]; divss xmm0, dword ptr [rip + 0x21a94]; ret; 
0x000000000047ad43: je 0x7ad94; add rsp, 0x18; ret; 
0x000000000047d83a: je 0x7d848; mov edi, 1; jmp rax; 
0x000000000047f31b: je 0x7f309; adc byte ptr [rcx + rcx*4 - 0x11], cl; call rax; 
0x0000000000480646: je 0x8064a; call rax; 
0x0000000000480903: je 0x8090c; call rax; 
0x00000000004808fa: je 0x80911; mov rax, qword ptr [rdi + 0x20]; test rax, rax; je 0x8090c; call rax; 
0x000000000040b3f9: je 0xb3af; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000040c138: je 0xc13b; ret; 
0x000000000040f0f2: je 0xf118; or al, 0x48; mov edi, dword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000040f445: je 0xf450; ret; 
0x000000000040fb3e: je 0xfb50; or dword ptr [rax + 0x74], 0x80; mov rax, qword ptr [rax + 0x68]; test rax, rax; jne 0xfb40; ret; 
0x000000000040fbfb: je 0xfc0c; mov qword ptr [rax], 0; mov qword ptr [rax + 8], 0; ret; 
0x000000000040fe46: je 0xfe4b; and dword ptr [rbx], 0xffffffef; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000040ff17: je 0xff28; cmp rax, rsi; ja 0xff10; lea eax, [rdx + rdi]; ret; 
0x0000000000410d19: jg 0x10d1c; ret; 
0x0000000000418513: jg 0x18515; add byte ptr [rax - 0x73], cl; adc eax, 0x21af3; cmovne rax, rdx; ret; 
0x000000000042277e: jg 0x227cf; ror byte ptr [rax - 0x7d], 0xef; lea r11, [rip + 0x60684]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042291d: jg 0x2291f; add rsi, rdx; lea r11, [rip + 0x604e7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004229be: jg 0x229c0; lea r11, [rip + 0x60449]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422a6d: jg 0x22a6f; add rsi, rdx; lea r11, [rip + 0x60397]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422bbd: jg 0x22bbf; add rsi, rdx; lea r11, [rip + 0x60247]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422c5e: jg 0x22c60; lea r11, [rip + 0x601a9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422d0d: jg 0x22d0f; add rsi, rdx; lea r11, [rip + 0x600f7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422e5d: jg 0x22e5f; add rsi, rdx; lea r11, [rip + 0x5ffa7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422efe: jg 0x22f00; lea r11, [rip + 0x5ff09]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422fad: jg 0x22faf; add rsi, rdx; lea r11, [rip + 0x5fe57]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042304e: jg 0x23050; lea r11, [rip + 0x5fdb9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004230fd: jg 0x230ff; add rsi, rdx; lea r11, [rip + 0x5fd07]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042319e: jg 0x231a0; lea r11, [rip + 0x5fc69]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423255: jg 0x23257; lea r11, [rip + 0x5fbb2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004232ee: jg 0x232f0; lea r11, [rip + 0x5fb19]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042339d: jg 0x2339f; add rsi, rdx; lea r11, [rip + 0x5fa67]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004234ed: jg 0x234ef; add rsi, rdx; lea r11, [rip + 0x5f917]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042358e: jg 0x23590; lea r11, [rip + 0x5f879]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042363d: jg 0x2363f; add rsi, rdx; lea r11, [rip + 0x5f7c7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004236de: jg 0x236e0; lea r11, [rip + 0x5f729]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042378d: jg 0x2378f; add rsi, rdx; lea r11, [rip + 0x5f677]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042382e: jg 0x23830; lea r11, [rip + 0x5f5d9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004238dd: jg 0x238df; add rsi, rdx; lea r11, [rip + 0x5f527]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042397e: jg 0x23980; lea r11, [rip + 0x5f489]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423a2d: jg 0x23a2f; add rsi, rdx; lea r11, [rip + 0x5f3d7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423ace: jg 0x23ad0; lea r11, [rip + 0x5f339]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423b7d: jg 0x23b7f; add rsi, rdx; lea r11, [rip + 0x5f287]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423c1e: jg 0x23c20; lea r11, [rip + 0x5f1e9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424589: jg 0x245da; ret; 
0x000000000042460f: jg 0x24658; ret; 
0x0000000000424789: jg 0x247da; ret 0x894c; 
0x000000000042480f: jg 0x24858; ret 0x894c; 
0x000000000042514e: jg 0x2519f; ror byte ptr [rax - 0x7d], 0xef; lea r11, [rip + 0x5de74]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004252ed: jg 0x252ef; add rsi, rdx; lea r11, [rip + 0x5dcd7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042538e: jg 0x25390; lea r11, [rip + 0x5dc39]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042543d: jg 0x2543f; add rsi, rdx; lea r11, [rip + 0x5db87]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004254de: jg 0x254e0; lea r11, [rip + 0x5dae9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042558d: jg 0x2558f; add rsi, rdx; lea r11, [rip + 0x5da37]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042562e: jg 0x25630; lea r11, [rip + 0x5d999]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004256dd: jg 0x256df; add rsi, rdx; lea r11, [rip + 0x5d8e7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042577e: jg 0x25780; lea r11, [rip + 0x5d849]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042582d: jg 0x2582f; add rsi, rdx; lea r11, [rip + 0x5d797]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004258ce: jg 0x258d0; lea r11, [rip + 0x5d6f9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042597d: jg 0x2597f; add rsi, rdx; lea r11, [rip + 0x5d647]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425a1e: jg 0x25a20; lea r11, [rip + 0x5d5a9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425acd: jg 0x25acf; add rsi, rdx; lea r11, [rip + 0x5d4f7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425b6e: jg 0x25b70; lea r11, [rip + 0x5d459]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425c25: jg 0x25c27; lea r11, [rip + 0x5d3a2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425cbe: jg 0x25cc0; lea r11, [rip + 0x5d309]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425d6d: jg 0x25d6f; add rsi, rdx; lea r11, [rip + 0x5d257]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425e0e: jg 0x25e10; lea r11, [rip + 0x5d1b9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425ebd: jg 0x25ebf; add rsi, rdx; lea r11, [rip + 0x5d107]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425f5e: jg 0x25f60; lea r11, [rip + 0x5d069]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042600d: jg 0x2600f; add rsi, rdx; lea r11, [rip + 0x5cfb7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004260ae: jg 0x260b0; lea r11, [rip + 0x5cf19]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042615d: jg 0x2615f; add rsi, rdx; lea r11, [rip + 0x5ce67]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004262ad: jg 0x262af; add rsi, rdx; lea r11, [rip + 0x5cd17]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042634e: jg 0x26350; lea r11, [rip + 0x5cc79]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004263fd: jg 0x263ff; add rsi, rdx; lea r11, [rip + 0x5cbc7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042649e: jg 0x264a0; lea r11, [rip + 0x5cb29]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042654d: jg 0x2654f; add rsi, rdx; lea r11, [rip + 0x5ca77]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004265ee: jg 0x265f0; lea r11, [rip + 0x5c9d9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426f59: jg 0x26faa; ret; 
0x0000000000426fdf: jg 0x27028; ret; 
0x0000000000427159: jg 0x271aa; ret 0x894c; 
0x00000000004271df: jg 0x27228; ret 0x894c; 
0x000000000042787e: jg 0x27840; sub rdx, 0x40; lea r11, [rip + 0x5b745]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429548: jg 0x29591; loope 0x2953f; movq qword ptr [rdi - 0x10], mm1; ret; 
0x00000000004295bf: jg 0x29608; ret 0xff2; 
0x000000000042964f: jg 0x29698; ret; 
0x00000000004296f8: jg 0x29741; in al, 0xf3; movq qword ptr [rdi - 0x10], mm1; ret; 
0x0000000000429778: jg 0x297c1; in eax, 0xf3; movq qword ptr [rdi - 0x10], mm1; ret; 
0x00000000004297f8: jg 0x29841; out 0xf3, al; movq qword ptr [rdi - 0x10], mm1; ret; 
0x0000000000429878: jg 0x298c1; out 0xf3, eax; movq qword ptr [rdi - 0x10], mm1; ret; 
0x0000000000429af8: jg 0x29b41; in al, dx; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429b78: jg 0x29bc1; in eax, dx; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429c08: jg 0x29c51; out dx, al; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429c88: jg 0x29cd1; out dx, eax; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429cfc: jg 0x29d05; ret; 
0x0000000000429d56: jg 0x29d67; ret; 
0x0000000000429d51: jg 0x29d9a; psllq mm1, qword ptr [rdi]; jg 0x29d67; ret; 
0x0000000000429dc6: jg 0x29dd7; ret; 
0x0000000000429e36: jg 0x29e47; ret; 
0x0000000000429e23: jg 0x29e6c; sbb eax, 0x46f00ff2; or eax, 0xef00ff2; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429e31: jg 0x29e7a; or eax, 0xf7f0ff3; ret; 
0x0000000000429ea6: jg 0x29eb7; ret; 
0x0000000000429ea1: jg 0x29eea; or al, 0xf3; movq qword ptr [rdi], mm1; ret; 
0x0000000000429f16: jg 0x29f27; ret; 
0x0000000000429f11: jg 0x29f5a; or esi, ebx; movq qword ptr [rdi], mm1; ret; 
0x0000000000429f86: jg 0x29f97; ret; 
0x0000000000429f81: jg 0x29fca; or dh, bl; movq qword ptr [rdi], mm1; ret; 
0x0000000000429ff6: jg 0x2a007; ret; 
0x0000000000429ff1: jg 0x2a03a; or ebx, esi; movq qword ptr [rdi], mm1; ret; 
0x000000000042a066: jg 0x2a077; ret; 
0x000000000042a061: jg 0x2a0aa; or bl, dh; movq qword ptr [rdi], mm1; ret; 
0x000000000042a0d6: jg 0x2a0e7; ret; 
0x000000000042a146: jg 0x2a157; ret; 
0x000000000042a1b6: jg 0x2a1c7; ret; 
0x000000000042a1a3: jg 0x2a1ec; adc eax, 0x46f00ff2; add eax, 0xef00ff2; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a1b1: jg 0x2a1fa; add eax, 0xf7f0ff3; ret; 
0x000000000042a226: jg 0x2a237; ret; 
0x000000000042a221: jg 0x2a26a; add al, 0xf3; movq qword ptr [rdi], mm1; ret; 
0x000000000042a296: jg 0x2a2a7; ret; 
0x000000000042a291: jg 0x2a2da; add esi, ebx; movq qword ptr [rdi], mm1; ret; 
0x000000000042a306: jg 0x2a317; ret; 
0x000000000042a301: jg 0x2a34a; add dh, bl; movq qword ptr [rdi], mm1; ret; 
0x000000000042a376: jg 0x2a387; ret; 
0x000000000042a371: jg 0x2a3ba; add ebx, esi; movq qword ptr [rdi], mm1; ret; 
0x000000000042c068: jg 0x2c0b1; loope 0x2c05f; movq qword ptr [rdi - 0x10], mm1; ret; 
0x000000000042c0df: jg 0x2c128; ret 0xff2; 
0x000000000042c16f: jg 0x2c1b8; ret; 
0x000000000042c218: jg 0x2c261; in al, 0xf3; movq qword ptr [rdi - 0x10], mm1; ret; 
0x000000000042c298: jg 0x2c2e1; in eax, 0xf3; movq qword ptr [rdi - 0x10], mm1; ret; 
0x000000000042c318: jg 0x2c361; out 0xf3, al; movq qword ptr [rdi - 0x10], mm1; ret; 
0x000000000042c398: jg 0x2c3e1; out 0xf3, eax; movq qword ptr [rdi - 0x10], mm1; ret; 
0x000000000042c618: jg 0x2c661; in al, dx; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000042c698: jg 0x2c6e1; in eax, dx; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000042c728: jg 0x2c771; out dx, al; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000042c7a8: jg 0x2c7f1; out dx, eax; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000042c81c: jg 0x2c825; ret; 
0x000000000042c876: jg 0x2c887; ret; 
0x000000000042c871: jg 0x2c8ba; psllq mm1, qword ptr [rdi]; jg 0x2c887; ret; 
0x000000000042c8e6: jg 0x2c8f7; ret; 
0x000000000042c956: jg 0x2c967; ret; 
0x000000000042c943: jg 0x2c98c; sbb eax, 0x46f00ff2; or eax, 0xef00ff2; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042c951: jg 0x2c99a; or eax, 0xf7f0ff3; ret; 
0x000000000042c9c6: jg 0x2c9d7; ret; 
0x000000000042c9c1: jg 0x2ca0a; or al, 0xf3; movq qword ptr [rdi], mm1; ret; 
0x000000000042ca36: jg 0x2ca47; ret; 
0x000000000042ca31: jg 0x2ca7a; or esi, ebx; movq qword ptr [rdi], mm1; ret; 
0x000000000042caa6: jg 0x2cab7; ret; 
0x000000000042caa1: jg 0x2caea; or dh, bl; movq qword ptr [rdi], mm1; ret; 
0x000000000042cb16: jg 0x2cb27; ret; 
0x000000000042cb11: jg 0x2cb5a; or ebx, esi; movq qword ptr [rdi], mm1; ret; 
0x000000000042cb86: jg 0x2cb97; ret; 
0x000000000042cb81: jg 0x2cbca; or bl, dh; movq qword ptr [rdi], mm1; ret; 
0x000000000042cbf6: jg 0x2cc07; ret; 
0x000000000042cc66: jg 0x2cc77; ret; 
0x000000000042ccd6: jg 0x2cce7; ret; 
0x000000000042ccc3: jg 0x2cd0c; adc eax, 0x46f00ff2; add eax, 0xef00ff2; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042ccd1: jg 0x2cd1a; add eax, 0xf7f0ff3; ret; 
0x000000000042cd46: jg 0x2cd57; ret; 
0x000000000042cd41: jg 0x2cd8a; add al, 0xf3; movq qword ptr [rdi], mm1; ret; 
0x000000000042cdb6: jg 0x2cdc7; ret; 
0x000000000042cdb1: jg 0x2cdfa; add esi, ebx; movq qword ptr [rdi], mm1; ret; 
0x000000000042ce26: jg 0x2ce37; ret; 
0x000000000042ce21: jg 0x2ce6a; add dh, bl; movq qword ptr [rdi], mm1; ret; 
0x000000000042ce96: jg 0x2cea7; ret; 
0x000000000042ce91: jg 0x2ceda; add ebx, esi; movq qword ptr [rdi], mm1; ret; 
0x000000000042cfd0: jg 0x2cfd9; vmovdqu ymmword ptr [rdi + 0x20], ymm1; vmovdqu ymmword ptr [r9 - 0x40], ymm2; vmovdqu ymmword ptr [r9 - 0x20], ymm3; ret; 
0x000000000042cff4: jg 0x2cffd; vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x000000000042d008: jg 0x2d011; vmovdqu xmmword ptr [r9 - 0x10], xmm1; ret; 
0x000000000042d47a: jg 0x2d474; ret; 
0x0000000000435aac: jg 0x35ac5; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; vzeroupper; ret; 
0x0000000000435acc: jg 0x35ae5; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; vzeroupper; ret; 
0x00000000004390b6: jg 0x390bf; ret; 
0x00000000004390c6: jg 0x390cf; mov byte ptr [rdi + 0x10], dh; ret; 
0x00000000004390da: jg 0x390e3; mov word ptr [rdi + 0x10], cx; ret; 
0x00000000004390f9: jg 0x39102; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000439109: jg 0x39112; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000439119: jg 0x39122; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x000000000043913a: jg 0x39143; mov qword ptr [rdi + 0xe], rcx; ret; 
0x000000000043915a: jg 0x39163; mov qword ptr [rdi + 0xf], rcx; ret; 
0x000000000043917a: jg 0x39183; mov qword ptr [rdi + 0x10], rcx; ret; 
0x000000000043919a: jg 0x391a3; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x00000000004391be: jg 0x391c7; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x00000000004391dd: jg 0x391e6; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x00000000004391fd: jg 0x39206; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x000000000043921b: jg 0x39224; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x000000000043923b: jg 0x39244; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x000000000043925b: jg 0x39264; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x000000000043927b: jg 0x39284; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000439746: jg 0x3974f; lea rax, [rdi + 0xf]; ret; 
0x0000000000439756: jg 0x3975f; mov byte ptr [rdi + 0x10], dh; lea rax, [rdi + 0x10]; ret; 
0x000000000043976a: jg 0x39773; mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x0000000000439789: jg 0x39792; mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x12]; ret; 
0x00000000004397a9: jg 0x397b2; mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x13]; ret; 
0x00000000004397c9: jg 0x397d2; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, [rdi + 0x14]; ret; 
0x00000000004397ea: jg 0x397f3; mov qword ptr [rdi + 0xe], rcx; lea rax, [rdi + 0x15]; ret; 
0x000000000043980a: jg 0x39813; mov qword ptr [rdi + 0xf], rcx; lea rax, [rdi + 0x16]; ret; 
0x000000000043982a: jg 0x39833; mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x000000000043984a: jg 0x39853; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x000000000043986e: jg 0x39877; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x000000000043988d: jg 0x39896; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; lea rax, [rdi + 0x1a]; ret; 
0x00000000004398ad: jg 0x398b6; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x00000000004398cb: jg 0x398d4; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x00000000004398eb: jg 0x398f4; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, [rdi + 0x1d]; ret; 
0x000000000043990b: jg 0x39914; movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, [rdi + 0x1e]; ret; 
0x00000000004398cf: jg 0x39928; or eax, 0x1c478d48; ret; 
0x000000000043992b: jg 0x39934; movdqu xmmword ptr [rdi + 0x10], xmm2; lea rax, [rdi + 0x1f]; ret; 
0x0000000000439cbc: jg 0x39cd5; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000439cdc: jg 0x39cf5; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000043beb7: jg 0x3bec0; vmovdqu xmmword ptr [rsi - 0x10], xmm0; ret; 
0x000000000043bead: jg 0x3bec6; vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x000000000043c344: jg 0x3c376; movups xmmword ptr [r11], xmm8; ret; 
0x000000000043c412: jg 0x3c444; movups xmmword ptr [r11], xmm8; ret; 
0x000000000043c453: jg 0x3c45c; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1; vzeroupper; ret; 
0x000000000043c48f: jg 0x3c498; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1; vzeroupper; ret; 
0x000000000043c4ea: jg 0x3c4f3; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000043c5b6: jg 0x3c5bf; vmovdqu ymmword ptr [rdi + 0x20], ymm1; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3; vzeroupper; ret; 
0x000000000043c67b: jg 0x3c6a0; vzeroupper; ret; 
0x000000000043c675: jg 0x3c6b8; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x000000000043c670: jg 0x3c6eb; rol ch, 0x7e; jg 0x3c6b8; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x000000000043c722: jg 0x3c727; vzeroupper; ret; 
0x000000000043c71d: jg 0x3c77f; vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x000000000043c7ae: jg 0x3c7d3; vzeroupper; ret; 
0x000000000043c7a8: jg 0x3c7eb; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x000000000043c7a3: jg 0x3c81e; rol ch, 0x7e; jg 0x3c7eb; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x000000000043c83e: jg 0x3c843; vzeroupper; ret; 
0x000000000043c88c: jg 0x3c895; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1; vzeroupper; ret; 
0x000000000043c839: jg 0x3c89b; vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x000000000043c8d8: jg 0x3c8e1; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1; vzeroupper; ret; 
0x000000000043c93a: jg 0x3c943; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1; vzeroupper; ret; 
0x000000000043c952: jg 0x3c95b; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000043ca48: jg 0x3ca51; vmovdqu64 zmmword ptr [rdi + 0x40], zmm1; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm2; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm3; vzeroupper; ret; 
0x000000000043cb36: jg 0x3cb5b; vzeroupper; ret; 
0x000000000043cb2f: jg 0x3cb72; std; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000043cb21: jg 0x3cb94; jmp qword ptr [rdx - 0xf]; 
0x000000000043cbf6: jg 0x3cbfb; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000043cbfc: jg 0x3cc01; vzeroupper; ret; 
0x000000000043cbbc: jg 0x3cc07; jmp qword ptr [rdx - 0x2f]; 
0x000000000043ccc1: jg 0x3cce6; vzeroupper; ret; 
0x000000000043ccba: jg 0x3ccfd; std; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000043ccac: jg 0x3cd1f; jmp qword ptr [rdx - 0xf]; 
0x000000000043cd80: jg 0x3cd85; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000043cd86: jg 0x3cd8b; vzeroupper; ret; 
0x000000000043cdec: jg 0x3cdf5; ret; 
0x000000000043ce4c: jg 0x3ce55; ret; 
0x000000000043ce60: jg 0x3ce69; movdqu xmmword ptr [rdi + 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x000000000043ce64: jg 0x3cead; adc bl, dh; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x000000000043cf54: jg 0x3cf5d; vzeroupper; ret; 
0x000000000043cfa4: jg 0x3cfad; vzeroupper; ret; 
0x000000000043cfbe: jg 0x3cfc7; vmovdqu ymmword ptr [rdi + 0x20], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0; vzeroupper; ret; 
0x000000000043d063: jg 0x3d06c; vzeroupper; ret; 
0x000000000043d0e1: jg 0x3d0ea; vzeroupper; ret; 
0x000000000043d141: jg 0x3d14a; vzeroupper; ret; 
0x000000000043d15d: jg 0x3d166; vmovdqu64 zmmword ptr [rdi + 0x40], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm0; vzeroupper; ret; 
0x000000000043d22b: jg 0x3d234; vzeroupper; ret; 
0x000000000043d239: jg 0x3d242; vzeroupper; ret; 
0x0000000000441532: jg 0x41524; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000443d21: jg 0x43d34; add byte ptr [rdi], cl; mov dh, 0x47; adc byte ptr [rdi], cl; xchg eax, ebp; ret; 
0x000000000044fb54: jg 0x4fb7e; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x00000000004518bd: jg 0x518e8; fidivr dword ptr [rcx]; ret 0x830f; 
0x0000000000458109: jg 0x58134; fidivr dword ptr [rcx]; ret 0x820f; 
0x000000000045d1d9: jg 0x5d1de; add byte ptr [rax + 0x63], cl; or al, 0x8e; add rcx, rsi; jmp rcx; 
0x000000000045d233: jg 0x5d238; add byte ptr [rax + 0x63], cl; adc al, 0x91; add rdx, rcx; jmp rdx; 
0x00000000004727d5: jg 0x727d8; ret; 
0x0000000000473150: jg 0x73160; pcmpistri xmm1, xmm1, 0x3a; cmp edx, ecx; jle 0x73200; ret; 
0x00000000004738cb: jg 0x73915; cmova edx, eax; mov eax, 0xd9; syscall; 
0x0000000000478371: jg 0x783e8; in al, 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000040e6f1: jg 0xe723; ret; 
0x00000000004209d2: jge 0x209eb; call 0x2978ce8; add byte ptr [rax], al; xor eax, eax; vzeroupper; ret; 
0x000000000042b937: jge 0x2b93e; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bb7a: jge 0x2bb81; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043cd3d: jge 0x3cd87; out 0x49, eax; jmp qword ptr [rdx - 0x2f]; 
0x000000000043fa51: jge 0x3fa53; call rbx; 
0x000000000043fa48: jge 0x3fa5a; test rdi, rdi; jne 0x3fa76; mov rdi, qword ptr [rbp]; call rbx; 
0x000000000043fe78: jge 0x3fe22; mov qword ptr [rbp - 0x50], r9; mov r15d, r14d; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x000000000044542f: jge 0x453ed; sti; jmp qword ptr [rsi + 0xf]; 
0x0000000000464ff8: jge 0x64fc2; add byte ptr [rax - 0x77], cl; ret; 
0x000000000047d255: jge 0x7d24f; leave; ret; 
0x000000000047d40e: jge 0x7d408; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000047d565: jge 0x7d55f; leave; ret; 
0x000000000047d5ae: jge 0x7d5a8; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000047d737: jge 0x7d731; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000047d787: jge 0x7d781; leave; ret; 
0x000000000047d81a: jge 0x7d814; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000040dc74: jge 0xdc76; sbb eax, 0xe6ebe074; nop dword ptr [rax + rax]; xor eax, eax; ret; 
0x00000000004184c2: jl 0x184c4; add byte ptr [rax - 0x73], cl; add eax, 0x7704; cmove rax, rdx; ret; 
0x000000000040259a: jl 0x25c0; or al, 0x48; mov esi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000042cf5f: jl 0x2cfa9; adc dword ptr [rcx - 4], esp; vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000042cf66: jl 0x2cfb0; adc dword ptr [rcx - 3], ebp; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000042cf6d: jl 0x2cfb7; adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000042cf74: jl 0x2cfbe; adc dword ptr [rcx - 1], edi; ret; 
0x000000000042cf9c: jl 0x2cfe6; adc dword ptr [rdi], eax; vmovups zmmword ptr [rdi + 0x40], zmm1; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000042cfa2: jl 0x2cfec; adc dword ptr [rdi + 1], ecx; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000042cfa9: jl 0x2cff3; adc dword ptr [rcx - 2], edx; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000042cfb0: jl 0x2cffa; adc dword ptr [rcx - 1], ebx; ret; 
0x000000000042d199: jl 0x2d1e3; adc dword ptr [rcx - 4], esp; vmovups zmmword ptr [r9 - 0xc0], zmm13; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000042d1a0: jl 0x2d1ea; adc dword ptr [rcx - 3], ebp; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000042d1a7: jl 0x2d1f1; adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000042d1ae: jl 0x2d1f8; adc dword ptr [rcx - 1], edi; ret; 
0x000000000042d307: jl 0x2d351; adc dword ptr [rcx + 5], ebp; vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000042d30e: jl 0x2d358; adc dword ptr [rcx + 6], esi; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000042d315: jl 0x2d35f; adc dword ptr [rcx + 7], edi; ret; 
0x000000000042d462: jl 0x2d4ac; adc dword ptr [rdi - 5], esp; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000042d469: jl 0x2d4b3; adc dword ptr [rdi - 6], ebp; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000042d470: jl 0x2d4ba; adc dword ptr [rdi - 7], esi; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000042d477: jl 0x2d4c1; adc dword ptr [rdi - 8], edi; ret; 
0x000000000043be57: jl 0x3bea1; adc dword ptr [rsi - 4], edx; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043be5e: jl 0x3bea8; adc dword ptr [rsi - 3], edx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043be65: jl 0x3beaf; adc dword ptr [rsi - 2], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043be6c: jl 0x3beb6; adc dword ptr [rsi - 1], edx; ret; 
0x000000000043be79: jl 0x3bec3; adc dword ptr [rdi], edx; vmovups zmmword ptr [rdi + 0x40], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043be7f: jl 0x3bec9; adc dword ptr [rdi + 1], edx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043be86: jl 0x3bed0; adc dword ptr [rsi - 2], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043be8d: jl 0x3bed7; adc dword ptr [rsi - 1], edx; ret; 
0x000000000043be9a: jl 0x3bee4; adc dword ptr [rdi], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043bea0: jl 0x3beea; adc dword ptr [rsi - 1], edx; ret; 
0x000000000043bf60: jl 0x3bfaa; adc dword ptr [rsi - 4], edx; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043bf67: jl 0x3bfb1; adc dword ptr [rsi - 3], edx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043bf6e: jl 0x3bfb8; adc dword ptr [rsi - 2], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043bf75: jl 0x3bfbf; adc dword ptr [rsi - 1], edx; ret; 
0x000000000043bfb9: jl 0x3c003; adc dword ptr [rsi], edx; vmovups zmmword ptr [rsi + 0x40], zmm2; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000043bfbf: jl 0x3c009; adc dword ptr [rsi + 1], edx; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000043bfc6: jl 0x3c010; adc dword ptr [rsi + 2], edx; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000043bfcd: jl 0x3c017; adc dword ptr [rsi + 3], edx; ret; 
0x000000000043c05c: jl 0x3c0a6; adc dword ptr [rsi + 5], edx; vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000043c063: jl 0x3c0ad; adc dword ptr [rsi + 6], edx; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000043c06a: jl 0x3c0b4; adc dword ptr [rsi + 7], edx; ret; 
0x000000000043ca20: jl 0x3ca39; cld; vzeroupper; ret; 
0x000000000043eb15: jl 0x3eb3b; or byte ptr [rax + 1], bh; syscall; 
0x000000000043ebce: jl 0x3ebf4; or al, 0x41; mov eax, eax; mov eax, 3; syscall; 
0x000000000043ed72: jl 0x3ed98; dec dword ptr [rax + 0x39]; je 0x3ed9d; or byte ptr [rdi], cl; xchg eax, ebp; ret 0x8948; 
0x000000000044152c: jl 0x41524; cmp rdx, qword ptr [rdi + 0x18]; jg 0x41524; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000443b53: jl 0x43b9d; mov ecx, dword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rcx; 
0x0000000000446481: jl 0x464a7; pop rax; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000446f2b: jl 0x46f51; pop rax; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x00000000004474fa: jl 0x47520; pop rax; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000447630: jl 0x47643; add ecx, dword ptr [rcx + 0x39]; ret 0xe075; 
0x0000000000447acb: jl 0x47af1; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000449898: jl 0x498be; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000044a515: jl 0x4a53b; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044b915: jl 0x4b93b; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044f5a8: jl 0x4f57b; or byte ptr [rbp + rcx*4 + 4], al; cmp byte ptr [rbp + 0x39], al; ret 0x820f; 
0x00000000004579b9: jl 0x579c0; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x4d], 0x63; ret; 
0x00000000004574b0: jl 0x57d80; cmp ecx, 7; ja 0x57d20; movsxd rcx, dword ptr [rdx + rcx*4]; add rcx, rdx; jmp rcx; 
0x0000000000460c14: jl 0x60c3a; adc byte ptr [rdx + 1], ch; xor edx, edx; push 1; lea r9, [rsp + 0x20]; call rbx; 
0x0000000000460c8e: jl 0x60cb4; adc byte ptr [rdx + 1], ch; push 0; lea rcx, [rax + 4]; lea r9, [rsp + 0x20]; call rbx; 
0x0000000000460d30: jl 0x60d30; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000046497f: jl 0x6499e; add eax, ebp; mov dword ptr [rdi], edx; sti; dec dword ptr [rax - 0x77]; ret 0x8548; 
0x0000000000470697: jl 0x706bd; sub byte ptr [rax + 0xe850f01], ch; or byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffb0; 
0x0000000000471f95: jl 0x71fbb; cmp qword ptr [rdi], rcx; test ah, ah; add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret 0xffe8; 
0x000000000040f5d4: jl 0xf5fa; add dword ptr [rcx + rcx*4 - 9], ecx; call qword ptr [rbx + 0x18]; 
0x00000000004101dd: jle 0x10070; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000410575: jle 0x102e0; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004107f5: jle 0x106c7; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000412724: jle 0x124d3; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000401342: jle 0x1335; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000401398: jle 0x138b; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004013ee: jle 0x13e1; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000401444: jle 0x1437; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000414567: jle 0x14500; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004145b7: jle 0x1453a; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004014a5: jle 0x1498; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004014fc: jle 0x14ef; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000401558: jle 0x154b; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004015ae: jle 0x15a1; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000401604: jle 0x15f7; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000415fc8: jle 0x15f9f; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000004160fe: jle 0x16166; or dword ptr [rax], eax; ret; 
0x0000000000420b05: jle 0x20b1d; vpcmpeqb xmm2, xmm2, xmm1; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x20a20; ret; 
0x000000000042b7b7: jle 0x2b7be; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b9fa: jle 0x2ba01; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043549e: jle 0x354a0; add byte ptr [rax], al; bsf rax, rdx; ret; 
0x000000000043bd28: jle 0x3bd3c; movsxd rax, ecx; ret; 
0x000000000043bed0: jle 0x3be93; cmp dl, 4; jb 0x3bedd; mov dword ptr [rdi], ecx; mov dword ptr [rsi - 4], ecx; ret; 
0x000000000043c12e: jle 0x3c13f; adc byte ptr [rsi], al; movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000043c674: jle 0x3c6f5; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x000000000043c7a7: jle 0x3c828; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x000000000044d9ea: jle 0x4da10; sub eax, 1; mov dword ptr [rdx + 8], eax; pop rbx; ret; 
0x0000000000456dc5: jle 0x56cd0; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004592a0: jle 0x5929c; dec dword ptr [rax - 0x77]; ret 0x3ee9; 
0x000000000045c9e5: jle 0x5c8df; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000045d975: jle 0x5d8db; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000045dbbf: jle 0x5db19; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000045de8c: jle 0x5dda2; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000045f4b6: jle 0x5f4d3; cli; lcall [rdx + 0x31]; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000046be77: jle 0x6be79; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000046d751: jle 0x6d64a; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000472f2e: jle 0x72f0c; cld; jmp qword ptr [rsi + 0x2e]; 
0x000000000047315a: jle 0x73200; ret; 
0x00000000004091f5: jle 0x91ab; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000409455: jle 0x9408; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004096dd: jle 0x94be; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000409815: jle 0x97d0; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004099a5: jle 0x991c; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000409ec5: jle 0x9d67; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000040a540: jle 0xa0e0; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000040c6c5: jle 0xc530; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000040e745: jle 0xe6b4; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000040eacc: jle 0xeae8; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000040eedb: jle 0xedaa; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004071b1: jmp qword ptr [rax]; 
0x000000000041614d: jmp qword ptr [rbp + 9]; 
0x0000000000472acd: jmp qword ptr [rbx - 7]; 
0x000000000046a996: jmp qword ptr [rdi + 0x6d]; 
0x000000000046ffbe: jmp qword ptr [rdi + 0x75]; 
0x000000000046fd36: jmp qword ptr [rdi - 0x75]; 
0x000000000042d2e2: jmp qword ptr [rdx + 0x51]; 
0x000000000042d443: jmp qword ptr [rdx + 0x71]; 
0x0000000000465785: jmp qword ptr [rdx + 4]; 
0x000000000042d3fb: jmp qword ptr [rdx - 0x2f]; 
0x000000000042cf41: jmp qword ptr [rdx - 0xf]; 
0x0000000000459a84: jmp qword ptr [rdx]; 
0x000000000046e9d8: jmp qword ptr [rsi + 0x25]; 
0x0000000000402901: jmp qword ptr [rsi + 0x2e]; 
0x0000000000471cf9: jmp qword ptr [rsi + 0x3d]; 
0x000000000043bd9c: jmp qword ptr [rsi + 0x41]; 
0x000000000043bae3: jmp qword ptr [rsi + 0x44]; 
0x0000000000427c1f: jmp qword ptr [rsi + 0x45]; 
0x0000000000402154: jmp qword ptr [rsi + 0x66]; 
0x0000000000402b79: jmp qword ptr [rsi + 0xf]; 
0x000000000040651d: jmp qword ptr [rsi - 0x70]; 
0x0000000000453558: jmp qword ptr [rsi - 0x77]; 
0x000000000046860c: jmp qword ptr [rsi - 0x7b]; 
0x000000000043f0a9: jmp qword ptr [rsi - 0x7d]; 
0x000000000045caaf: jmp qword ptr [rsi - 0x7f]; 
0x000000000046eef6: jmp qword ptr [rsi]; 
0x0000000000401b04: jmp rax; 
0x00000000004071e0: jmp rbx; 
0x0000000000402786: jmp rcx; 
0x0000000000406f99: jmp rdi; 
0x0000000000418a1a: jmp rdx; 
0x0000000000410906: jne 0x108f8; ret; 
0x0000000000410943: jne 0x10950; sub edx, dword ptr [rax + 0x18]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x0000000000410d06: jne 0x10d10; sub dword ptr [rip + 0x9e401], 1; ret; 
0x0000000000411967: jne 0x11948; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000411c2b: jne 0x11c2e; ret; 
0x0000000000411df8: jne 0x11e00; ret; 
0x0000000000401207: jne 0x11e3; or al, byte ptr [rax]; syscall; 
0x0000000000411f80: jne 0x11f6b; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x0000000000413d0e: jne 0x13d80; sub dword ptr [rip + 0x98a89], 1; pop rbp; ret; 
0x00000000004144c8: jne 0x144d0; add rsp, 0x10; pop rbp; ret; 
0x0000000000415f26: jne 0x15f08; pop rbx; pop rbp; pop r12; ret; 
0x0000000000415fb5: jne 0x15fe8; sub dword ptr [rip + 0x991c2], 1; pop rbx; ret; 
0x00000000004161a2: jne 0x163d5; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000047ce52: jne 0x165d; mov rax, qword ptr [rax]; add rsp, 8; ret; 
0x000000000047cea4: jne 0x1662; mov qword ptr [rcx], rdx; add rsp, 8; ret; 
0x00000000004168cb: jne 0x1690f; sub dword ptr [rip + 0x988bc], 1; pop rbx; pop rbp; pop r12; ret; 
0x00000000004016e4: jne 0x16e7; ret; 
0x0000000000417cda: jne 0x17ce5; add bh, dh; ret 0; 
0x000000000041850a: jne 0x18521; and dh, 2; lea rax, [rip + 0x7ffa]; lea rdx, [rip + 0x21af3]; cmovne rax, rdx; ret; 
0x00000000004185bc: jne 0x185f8; and edx, 8; lea rax, [rip + 0xc768]; lea rdx, [rip + 0x11dd1]; cmovne rax, rdx; ret; 
0x000000000041872c: jne 0x18768; and edx, 8; lea rax, [rip + 0x9c08]; lea rdx, [rip + 0xf171]; cmovne rax, rdx; ret; 
0x00000000004188ac: jne 0x188e8; and edx, 8; lea rax, [rip + 0x9aa8]; lea rdx, [rip + 0xf011]; cmovne rax, rdx; ret; 
0x000000000041a06c: jne 0x1a050; xor eax, eax; sub eax, ecx; ret; 
0x000000000041b61d: jne 0x1b600; sub eax, ecx; vzeroupper; ret; 
0x000000000041fa82: jne 0x1fa60; sub eax, ecx; vzeroupper; ret; 
0x000000000041fdc5: jne 0x1fea0; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x000000000041fe67: jne 0x1fec0; xor eax, eax; ret; 
0x000000000041fe37: jne 0x1fee0; xor eax, eax; ret; 
0x00000000004200a3: jne 0x200f0; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x00000000004202e3: jne 0x20300; xor eax, eax; vzeroupper; ret; 
0x00000000004202a6: jne 0x20340; xor eax, eax; vzeroupper; ret; 
0x0000000000420b14: jne 0x20a20; ret; 
0x0000000000420a1a: jne 0x20a20; vzeroupper; ret; 
0x0000000000421ec7: jne 0x222f3; movzx eax, byte ptr [rdi - 1]; movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x000000000042196d: jne 0x222f3; movzx eax, byte ptr [rdi - 1]; movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x00000000004218c1: jne 0x222f3; xor eax, eax; ret; 
0x00000000004219b8: jne 0x222ff; movzx eax, byte ptr [rdi - 1]; movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x00000000004218e9: jne 0x222ff; xor eax, eax; ret; 
0x0000000000421bba: jne 0x2230a; movzx eax, byte ptr [rdi - 1]; movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x0000000000421a4d: jne 0x22320; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000000439e80: jne 0x39d70; lea rax, [rdi + 0xb]; ret; 
0x0000000000439e3a: jne 0x39d70; lea rax, [rdi + 0xf]; ret; 
0x0000000000439de5: jne 0x39d70; lea rax, [rdi + 3]; ret; 
0x0000000000439db7: jne 0x39d70; lea rax, [rdi + 7]; ret; 
0x0000000000439d62: jne 0x39d74; nop word ptr cs:[rax + rax]; nop; xor rax, rax; ret; 
0x0000000000439ddc: jne 0x39f50; test dl, 4; jne 0x39d70; lea rax, [rdi + 3]; ret; 
0x0000000000439ebe: jne 0x39f80; test al, 0x40; jne 0x39f90; lea rax, [rdi + 7]; ret; 
0x0000000000439ec6: jne 0x39f90; lea rax, [rdi + 7]; ret; 
0x0000000000439dae: jne 0x39f90; test dl, 0x40; jne 0x39d70; lea rax, [rdi + 7]; ret; 
0x0000000000439e77: jne 0x39fc0; test dh, 4; jne 0x39d70; lea rax, [rdi + 0xb]; ret; 
0x0000000000439f10: jne 0x39ff0; test ah, 0x40; jne 0x3a000; lea rax, [rdi + 0xf]; ret; 
0x0000000000439f19: jne 0x3a000; lea rax, [rdi + 0xf]; ret; 
0x0000000000439e31: jne 0x3a000; test dh, 0x40; jne 0x39d70; lea rax, [rdi + 0xf]; ret; 
0x000000000043b215: jne 0x3b290; movzx eax, byte ptr [rdi - 9]; movzx edx, byte ptr [rsi - 9]; sub eax, edx; ret; 
0x000000000043b544: jne 0x3b750; xor eax, eax; ret; 
0x000000000043b6a4: jne 0x3b765; cmp eax, ecx; jne 0x3b765; xor eax, eax; ret; 
0x000000000043b761: jne 0x3b765; cmp eax, ecx; sbb eax, eax; sbb eax, -1; ret; 
0x000000000043b740: jne 0x3b765; movzx eax, byte ptr [rdi - 1]; cmp al, byte ptr [rsi - 1]; jne 0x3b765; xor eax, eax; ret; 
0x000000000043b5f1: jne 0x3b765; xor eax, eax; ret; 
0x000000000043b871: jne 0x3b860; ret; 
0x000000000043b868: jne 0x3b880; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x3b860; ret; 
0x000000000043b921: jne 0x3b910; ret; 
0x000000000043b918: jne 0x3b930; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x3b910; ret; 
0x000000000043ba91: jne 0x3ba80; lea rax, [rcx - 1]; ret; 
0x000000000043ba88: jne 0x3baa0; movzx edx, byte ptr [rsi + rax + 3]; test dl, dl; jne 0x3ba80; lea rax, [rcx - 1]; ret; 
0x000000000043bbe1: jne 0x3bbd0; sub rax, 1; ret; 
0x000000000043bbd8: jne 0x3bbf0; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x3bbd0; sub rax, 1; ret; 
0x000000000043ce03: jne 0x3ce09; mov rax, rdi; ret; 
0x000000000043d034: jne 0x3d017; vzeroupper; ret; 
0x000000000043d1f7: jne 0x3d1d2; vzeroupper; ret; 
0x000000000043d539: jne 0x3d4c2; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000043d93f: jne 0x3d964; add rsp, 0x20; pop rbx; ret; 
0x000000000043dd38: jne 0x3ddcd; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000043e847: jne 0x3e859; add rsp, 0x28; ret; 
0x000000000043e943: jne 0x3e9b0; mov edx, r12d; mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000043e971: jne 0x3ea23; add rsp, 0x68; pop rbp; pop r12; ret; 
0x000000000043ea3a: jne 0x3ea50; syscall; 
0x000000000043ea3a: jne 0x3ea50; syscall; cmp rax, -0x1000; ja 0x3eaa0; ret; 
0x000000000043eada: jne 0x3eaf0; mov eax, 1; syscall; 
0x000000000043ebaa: jne 0x3ebc0; mov eax, 3; syscall; 
0x000000000043f3f7: jne 0x3f443; add rsp, 0x68; ret; 
0x000000000043f486: jne 0x3f4cb; add rsp, 0x18; ret; 
0x000000000043f52e: jne 0x3f573; add rsp, 0x58; ret; 
0x000000000043f5cc: jne 0x3f613; add rsp, 0x58; ret; 
0x000000000043f7ba: jne 0x3f7c1; add rsp, 0x28; ret; 
0x000000000043fa44: jne 0x3fa68; mov rdi, qword ptr [rbp + 0x10]; test rdi, rdi; jne 0x3fa76; mov rdi, qword ptr [rbp]; call rbx; 
0x000000000043fa4d: jne 0x3fa76; mov rdi, qword ptr [rbp]; call rbx; 
0x000000000043fab1: jne 0x3faf0; ret; 
0x000000000043fae3: jne 0x3fb00; ret; 
0x0000000000440398: jne 0x403a0; ret; 
0x00000000004403b8: jne 0x403c0; ret; 
0x0000000000440a1a: jne 0x40a29; add rsp, 0x88; mov rax, r8; pop rbx; pop rbp; ret; 
0x0000000000440aaa: jne 0x40ab9; add rsp, 0x88; mov rax, r8; pop rbx; pop rbp; ret; 
0x0000000000440d5e: jne 0x40d70; lea rax, [r8 + 1]; mov qword ptr [rip + 0x6d57d], rax; ret; 
0x0000000000440e47: jne 0x40e58; mov r8, qword ptr [rip + 0x6d498]; mov rax, r8; ret; 
0x0000000000443b52: jne 0x43bd0; mov rcx, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rcx; 
0x0000000000443b94: jne 0x43be7; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000000443c46: jne 0x43c51; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x0000000000446d77: jne 0x46d39; sti; dec dword ptr [rbp - 0x77]; fld qword ptr [rcx - 0x77]; ret 0x8ee9; 
0x000000000044d330: jne 0x4d3f7; add rsp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000044d456: jne 0x4d48d; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000044fa71: jne 0x4fa78; add rsp, 0x18; ret; 
0x000000000044fae6: jne 0x4faf0; mov dword ptr [rbx + 0x40], esi; xor eax, eax; pop rbx; ret; 
0x000000000044fd0c: jne 0x4fd54; mov eax, r9d; add rsp, 0x148; ret; 
0x000000000044fdc2: jne 0x4fe08; mov r8, rsi; mov r10d, 8; mov rsi, r8; mov eax, 0xe; syscall; 
0x000000000044fdf4: jne 0x4fe86; add rsp, 0x98; ret; 
0x0000000000450278: jne 0x50260; mov rsi, qword ptr [rsp + 0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x00000000004508ea: jne 0x50918; sub dword ptr [rip + 0x5eced], 1; xor eax, eax; add rsp, 8; ret; 
0x0000000000450f84: jne 0x50f8e; add rsp, 0xd8; ret; 
0x000000000045d77c: jne 0x5d81a; add rsp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x000000000045e3c1: jne 0x5e3b0; mov rax, r8; ret; 
0x000000000045e96a: jne 0x5e9d0; mov rax, qword ptr [rax + 0xe0]; call qword ptr [rax + 0x68]; 
0x000000000045ec0b: jne 0x5eb86; add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000045ed7b: jne 0x5ecf6; add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000045f149: jne 0x5f190; lea rdx, [r8 + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000045f27f: jne 0x5f268; and r11d, 0xffffffbb; cmp r11d, 0xa; je 0x5f28c; ret; 
0x000000000045f2e2: jne 0x5f2d0; mov eax, r11d; and eax, 0xc; cmp eax, 4; je 0x5f2f0; ret; 
0x00000000004603f3: jne 0x603f9; xor rax, rax; ret; 
0x00000000004607f3: jne 0x60820; mov rax, r8; vzeroupper; ret; 
0x00000000004607ba: jne 0x60860; mov rax, r8; vzeroupper; ret; 
0x0000000000460c54: jne 0x60d2f; add rsp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x000000000046109d: jne 0x61090; ret; 
0x00000000004610a3: jne 0x610a9; xor rax, rax; ret; 
0x0000000000461933: jne 0x61960; mov rax, r8; shr rax, 2; vzeroupper; ret; 
0x00000000004618fd: jne 0x619a0; mov rax, r8; shr rax, 2; vzeroupper; ret; 
0x0000000000461c6b: jne 0x61ca4; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x0000000000461db6: jne 0x61de0; sub dword ptr [rbx + 4], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000461f9f: jne 0x61fda; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x000000000046212f: jne 0x62139; movzx eax, al; add rsp, 0x58; ret; 
0x00000000004621e4: jne 0x62204; mov eax, r9d; add rsp, 0x38; ret; 
0x000000000046232f: jne 0x62338; ret; 
0x0000000000467b87: jne 0x67b8b; pop rbx; ret; 
0x0000000000467c1b: jne 0x67c20; pop rbx; ret; 
0x0000000000467f6c: jne 0x67f70; call rax; 
0x000000000046839f: jne 0x683a3; call rax; 
0x0000000000468521: jne 0x68525; call rax; 
0x0000000000468c15: jne 0x68c19; call rax; 
0x0000000000468d51: jne 0x68d63; mov qword ptr [rbp - 0xd8], r11; call rax; 
0x0000000000469ea9: jne 0x69e20; movsxd rdx, ebx; mov edi, dword ptr [rbp - 0x460]; lea rsi, [rbp - 0x430]; mov eax, 0x14; syscall; 
0x000000000046a666: jne 0x6a650; mov eax, 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000046a6c8: jne 0x6a6a0; mov eax, dword ptr [rcx]; ret; 
0x000000000046b491: jne 0x6b4a8; mov qword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x41c66], 1; ret; 
0x000000000046c737: jne 0x6c707; movsx eax, byte ptr [rsi]; neg eax; ret; 
0x000000000046cfa1: jne 0x6cfcb; add rsp, 0x38; ret; 
0x000000000046d03b: jne 0x6d04c; add rsp, 0x38; ret; 
0x000000000046d117: jne 0x6d1a7; add rsp, 0x48; ret; 
0x000000000046d228: jne 0x6d230; add rsp, 0x20; pop rbx; ret; 
0x000000000046d325: jne 0x6d353; add rsp, 0x38; ret; 
0x000000000046d3cb: jne 0x6d3dc; add rsp, 0x38; ret; 
0x000000000046d48e: jne 0x6d496; add rsp, 0x30; pop rbp; ret; 
0x000000000046d60b: jne 0x6d61d; add rsp, 0x38; ret; 
0x00000000004726f1: jne 0x72728; sub dword ptr [rip + 0x3cf8e], 1; mov eax, r8d; pop rbx; ret; 
0x00000000004727c4: jne 0x727d0; sub dword ptr [rdi], 1; ret; 
0x0000000000472947: jne 0x72b25; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000472dba: jne 0x72de0; mov rdx, qword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x0000000000472e38: jne 0x72e3f; add rsp, 0x28; ret; 
0x0000000000472f26: jne 0x72f2d; add rsp, 0x38; ret; 
0x00000000004734b5: jne 0x73590; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000473557: jne 0x735b0; xor eax, eax; ret; 
0x0000000000473527: jne 0x735d0; xor eax, eax; ret; 
0x00000000004737d3: jne 0x737f0; xor eax, eax; vzeroupper; ret; 
0x0000000000473796: jne 0x73830; xor eax, eax; vzeroupper; ret; 
0x0000000000473c87: jne 0x73c8c; mov qword ptr [rbx], r8; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x0000000000474306: jne 0x74313; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000047808e: jne 0x780d1; leave; ret; 
0x00000000004782c3: jne 0x782e0; test rdx, rdx; jne 0x782f0; mov dword ptr [rsi], 0; mov eax, 1; ret; 
0x00000000004782c8: jne 0x782f0; mov dword ptr [rsi], 0; mov eax, 1; ret; 
0x0000000000478372: jne 0x78358; mov eax, 1; ret; 
0x000000000047836b: jne 0x7835e; cmp cx, 0x7fff; jne 0x78358; mov eax, 1; ret; 
0x0000000000478351: jne 0x78368; test rsi, rsi; jne 0x78380; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x0000000000478356: jne 0x78380; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x000000000047842c: jne 0x78450; test rax, rax; jne 0x78490; mov dword ptr [rsi], 0; mov eax, 2; ret; 
0x0000000000478431: jne 0x78490; mov dword ptr [rsi], 0; mov eax, 2; ret; 
0x00000000004785d1: jne 0x785d8; add rsp, 0x38; ret; 
0x00000000004786bd: jne 0x786c9; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000000478772: jne 0x7877e; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000000407991: jne 0x796c; ret; 
0x000000000047a4d9: jne 0x7a4e5; add rsp, 0x28; ret; 
0x000000000047a805: jne 0x7a70c; add rsp, 0x38; ret; 
0x000000000047a9b6: jne 0x7a9e1; add rsp, 0x38; pop rbx; pop r14; ret; 
0x000000000047ad3c: jne 0x7ad45; cmp qword ptr [r9 + 0x38], 0; je 0x7ad94; add rsp, 0x18; ret; 
0x0000000000407b02: jne 0x7b24; mov eax, r8d; add rsp, 0x118; ret; 
0x0000000000407c5f: jne 0x7c61; mov rdi, qword ptr [r12]; mov rdx, r14; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000047d251: jne 0x7d243; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000047d40a: jne 0x7d3fc; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000047d561: jne 0x7d553; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000047d5aa: jne 0x7d59c; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000047d733: jne 0x7d725; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000047d783: jne 0x7d775; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000047d816: jne 0x7d808; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000047f5d4: jne 0x7f5e0; ret; 
0x000000000047f914: jne 0x7f920; ret; 
0x000000000047fbfa: jne 0x7fc1b; xor eax, eax; add rsp, 8; ret; 
0x0000000000480246: jne 0x80230; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000480291: jne 0x80268; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004803c5: jne 0x803a8; pop rbx; ret; 
0x00000000004804cb: jne 0x804b8; call 0x16730; test rbx, rbx; jne 0x804bd; pop rbx; ret; 
0x00000000004804d5: jne 0x804bd; pop rbx; ret; 
0x000000000048098e: jne 0x80970; pop rbx; pop rbp; pop r12; ret; 
0x0000000000408f74: jne 0x8f7e; add rsp, 0xd8; ret; 
0x00000000004092b4: jne 0x92be; add rsp, 0xd8; ret; 
0x0000000000409416: jne 0x946d; add rsp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000409ef0: jne 0x9ef1; jmp qword ptr [rsi + 0x2e]; 
0x000000000040a653: jne 0xa676; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000040a865: jne 0xa86e; mov rdx, qword ptr [r15 + 0x40]; sub rdx, rsi; mov qword ptr [rsp + 8], rcx; mov rdi, r15; call rax; 
0x000000000040b050: jne 0xb0ea; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000040b907: jne 0xb9f4; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000040bc28: jne 0xbc38; mov eax, dword ptr [rdx + 0x4c]; cmp dword ptr [rdx + 0x48], eax; cmovne eax, ecx; ret; 
0x000000000040cac7: jne 0xcbb6; add rsp, 0xa8; pop rbx; pop rbp; ret; 
0x000000000040cede: jne 0xcee7; mov rdx, qword ptr [rbp + 0x40]; sub rdx, rsi; mov qword ptr [rsp], rcx; mov rdi, rbp; call rax; 
0x000000000040dc93: jne 0xdca0; xor eax, eax; ret; 
0x000000000040e6da: jne 0xe6e8; sub dword ptr [rip + 0xa0a2d], 1; ret; 
0x000000000040eb45: jne 0xec2d; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000000040edff: jne 0xef00; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000000040ef31: jne 0xef20; mov rax, r8; ret; 
0x000000000040fb4e: jne 0xfb40; ret; 
0x000000000040fee2: jne 0xfe9f; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000041873b: jno 0x1872e; add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x0000000000421b7e: jno 0x21b87; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042cf70: jno 0x2cf70; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000042d1aa: jno 0x2d1aa; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000042d311: jno 0x2d319; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000042d461: jno 0x2d4df; adc qword ptr [rdi - 5], rsp; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000042d468: jno 0x2d4e6; adc qword ptr [rdi - 6], rbp; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000042d46f: jno 0x2d4ed; adc qword ptr [rdi - 7], rsi; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000042d476: jno 0x2d4f4; adc qword ptr [rdi - 8], rdi; ret; 
0x0000000000434b6b: jno 0x34b96; add eax, 0x91148b00; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000043c2b4: jno 0x3c2a6; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000043c3a2: jno 0x3c394; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000043c66c: jno 0x3c64e; vmovdqu ymmword ptr [rcx - 0x40], ymm7; vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x000000000043c79f: jno 0x3c781; vmovdqu ymmword ptr [rcx - 0x40], ymm7; vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x000000000043cb2c: jno 0x3cb2c; jg 0x3cb72; std; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000043ccb7: jno 0x3ccb7; jg 0x3ccfd; std; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000045d22b: jno 0x5d22e; add byte ptr [rax], al; lea rcx, [rip + 0x37fae]; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x0000000000476ef4: jno 0x76f3f; shl ecx, cl; mov qword ptr [rdi], r9; ret; 
0x0000000000414c04: jnp 0x14c0f; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000417ae6: jnp 0x17aea; add byte ptr [rdx], bh; cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x000000000042bab7: jnp 0x2babe; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000044e7ac: jnp 0x4e7b1; add byte ptr [rcx - 0x8373], cl; dec dword ptr [rcx + 1]; ret 0x8d48; 
0x000000000045d3c2: jnp 0x5d3dc; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000464950: jnp 0x6493a; jb 0x6491b; stc; dec dword ptr [rax - 0x77]; ret 0x8348; 
0x000000000046c000: jnp 0x6c002; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000046d231: jnp 0x6d26c; std; jmp qword ptr [rsi + 0x66]; 
0x000000000047b8e1: jnp 0x7b8eb; add eax, 0x438b7277; or byte ptr [rcx + 0x63], cl; add al, 0x87; add rax, r15; jmp rax; 
0x0000000000409701: jnp 0x9702; jmp qword ptr [rsi + 0x2e]; 
0x0000000000409832: jnp 0x9833; jmp qword ptr [rsi + 0x2e]; 
0x000000000045b3d9: jnp 0xffffffff894744f3; adc dword ptr [rax - 0x77], ecx; ret 0xc148; 
0x00000000004708d1: jnp 0xffffffff894899eb; adc byte ptr [rax - 0x77], cl; ret 0xc148; 
0x00000000004707c9: jnp 0xffffffff89489de3; adc byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000471011: jnp 0xffffffff8948a12b; adc byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000411693: jns 0x11645; or dword ptr [rax], eax; mov dword ptr [rip + 0x9b093], 1; ret; 
0x0000000000423593: jns 0x2358d; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426353: jns 0x26321; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042cf77: jns 0x2cf78; ret; 
0x000000000042d1b1: jns 0x2d1b2; ret; 
0x000000000042d318: jns 0x2d321; ret; 
0x0000000000433827: jns 0x3388c; rcr dword ptr [rdx], 0xf; xchg byte ptr [rdi], bl; adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000433878: jns 0x338dd; rcr dword ptr [rdx], 0xf; xchg dh, cl; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000433977: jns 0x339dc; rcr dword ptr [rdx], 0xf; xchg bh, cl; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000433b16: jns 0x33b7b; rcr dword ptr [rdx], 0xf; xchg byte ptr [rax], dh; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000433d67: jns 0x33dcc; rcr dword ptr [rdx], 0xf; xchg bh, bl; or eax, 0x83480000; ret 0x4910; 
0x0000000000433f08: jns 0x33f6d; rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], bh; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000434007: jns 0x3406c; rcr dword ptr [rdx], 0xf; xchg byte ptr [rdi], bh; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000434058: jns 0x340bd; rcr dword ptr [rdx], 0xf; xchg dh, ch; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000434157: jns 0x341bc; rcr dword ptr [rdx], 0xf; xchg bh, ch; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000434547: jns 0x345ac; rcr dword ptr [rdx], 0xf; xchg bh, bh; add eax, 0x83480000; ret 0x4910; 
0x0000000000434838: jns 0x3489d; rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], cl; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000434937: jns 0x3499c; rcr dword ptr [rdx], 0xf; xchg byte ptr [rdi], cl; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043c2b8: jns 0x3c29a; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000043c3a6: jns 0x3c388; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000043c671: jns 0x3c633; vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x000000000043c7a4: jns 0x3c766; vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x000000000043cb29: jns 0x3cb29; vmovdqu64 zmmword ptr [rcx - 0xc0], zmm8; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000043ccb4: jns 0x3ccb4; vmovdqu64 zmmword ptr [rcx - 0xc0], zmm8; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000046c187: jns 0x6c189; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000047ad40: jns 0x7ad7a; add byte ptr [rdi + rcx*2 + 0x48], dh; add esp, 0x18; ret; 
0x000000000047aeaa: jns 0x7ae52; mov rdx, qword ptr [rdx]; mov qword ptr [r9], rdx; pop rbx; ret; 
0x00000000004156c6: jo 0x156d1; add al, ch; ret 0xfffd; 
0x0000000000427a5c: jo 0x27a17; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043d2ae: jo 0x3d2b1; add byte ptr [rax], al; lea rsi, [rip + 0x46b87]; movsxd rax, dword ptr [rsi + rdi*4]; add rax, rsi; jmp rax; 
0x000000000043fadd: jo 0x3fae7; test sil, 1; jne 0x3fb00; ret; 
0x000000000044057c: jo 0x405a6; cld; call qword ptr [rbp - 0x41]; 
0x000000000044699e: jo 0x46988; lodsb al, byte ptr [rsi]; ret 0xffff; 
0x000000000045e437: jo 0x5e449; mov qword ptr [rax + 0x40], rcx; mov qword ptr [rax], rdx; ret; 
0x000000000045f186: jo 0x5f1c8; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000460c5d: jo 0x60cba; pop rbp; pop r12; ret; 
0x00000000004083d6: jo 0x83f8; mov edi, ebp; ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x0000000000418602: jp 0x1863e; add al, byte ptr [rax]; lea rax, [rip + 0x23b13]; cmove rax, rdx; ret; 
0x0000000000418932: jp 0x18934; add byte ptr [rax - 0x73], cl; add eax, 0x75c4; cmove rax, rdx; ret; 
0x000000000042bc37: jp 0x2bc3e; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bde2: jp 0x2bde9; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004458b2: jp 0x458c2; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000046b382: jp 0x6b37d; jmp qword ptr [rsi + 0x2e]; 
0x000000000046c0c7: jp 0x6c0c9; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000046c4aa: jp 0x6c520; adc ecx, dword ptr [rdi]; mov dh, 0x45; add cl, byte ptr [rax - 0x7d]; ret; 
0x000000000043e46f: js 0x3e4b9; lea edx, [rip + 0x45f25]; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x000000000043f73e: js 0x3f6fd; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000044ff5e: js 0x502c0; mov rdi, qword ptr [rsp + 8]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x000000000045f182: js 0x5f194; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000047d066: js 0x7d06a; add byte ptr [rax], al; mov rax, rbp; pop rbx; pop rbp; ret; 
0x000000000047d073: js 0x7d077; add byte ptr [rax], al; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000047db56: js 0x7db78; mov qword ptr [r8], rdx; add rsp, 8; ret; 
0x000000000047fc76: js 0x7fc98; mov qword ptr [r8], rdx; add rsp, 8; ret; 
0x000000000040c229: js 0xc257; mov qword ptr [rbx + 0x90], rax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000041867d: lahf; add r8b, byte ptr [r8]; lea rax, [rip + 0x24738]; cmovne rax, rdx; ret; 
0x0000000000404c41: lahf; or al, byte ptr [rax]; syscall; 
0x00000000004342ad: lahf; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000411212: lahf; ret 0x3949; 
0x000000000046dc59: lahf; ret 0x87e; 
0x000000000046dff8: lahf; ret 0x8f0f; 
0x0000000000411302: lahf; ret 0xbe9; 
0x0000000000452346: lahf; ret; 
0x000000000043493d: lar eax, word ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000450732: lcall [rbp + 0x41]; pop rsp; pop r13; ret; 
0x000000000040f975: lcall [rbp + 0x41]; pop rsp; ret; 
0x000000000040b6c8: lcall [rbx + 0x5d]; pop r12; pop r13; ret; 
0x000000000045da18: lcall [rbx + 0x5d]; ret; 
0x000000000046b4ae: lcall [rbx + 0x64]; mov eax, dword ptr [rax]; ret; 
0x0000000000417c64: lcall [rdx + 0x31]; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000429cec: lddqu xmm0, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi + 0x10], xmm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000429f76: lddqu xmm0, xmmword ptr [rsi + 0xa]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xa], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429f06: lddqu xmm0, xmmword ptr [rsi + 0xb]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xb], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429e96: lddqu xmm0, xmmword ptr [rsi + 0xc]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xc], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429e26: lddqu xmm0, xmmword ptr [rsi + 0xd]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429db6: lddqu xmm0, xmmword ptr [rsi + 0xe]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xe], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429d46: lddqu xmm0, xmmword ptr [rsi + 0xf]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xf], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a366: lddqu xmm0, xmmword ptr [rsi + 1]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 1], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a2f6: lddqu xmm0, xmmword ptr [rsi + 2]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 2], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a286: lddqu xmm0, xmmword ptr [rsi + 3]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 3], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a216: lddqu xmm0, xmmword ptr [rsi + 4]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 4], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a1a6: lddqu xmm0, xmmword ptr [rsi + 5]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a136: lddqu xmm0, xmmword ptr [rsi + 6]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 6], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a0c6: lddqu xmm0, xmmword ptr [rsi + 7]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 7], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a056: lddqu xmm0, xmmword ptr [rsi + 8]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 8], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429fe6: lddqu xmm0, xmmword ptr [rsi + 9]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 9], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004294d6: lddqu xmm0, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x0000000000429c7c: lddqu xmm0, xmmword ptr [rsi - 0x11]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x11], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429bfc: lddqu xmm0, xmmword ptr [rsi - 0x12]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x12], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429b6c: lddqu xmm0, xmmword ptr [rsi - 0x13]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x13], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429aec: lddqu xmm0, xmmword ptr [rsi - 0x14]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x14], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429a6c: lddqu xmm0, xmmword ptr [rsi - 0x15]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x15], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004299ec: lddqu xmm0, xmmword ptr [rsi - 0x16]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x16], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000042996c: lddqu xmm0, xmmword ptr [rsi - 0x17]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x17], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004298ec: lddqu xmm0, xmmword ptr [rsi - 0x18]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000042986c: lddqu xmm0, xmmword ptr [rsi - 0x19]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x19], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004297ec: lddqu xmm0, xmmword ptr [rsi - 0x1a]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1a], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000042976c: lddqu xmm0, xmmword ptr [rsi - 0x1b]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1b], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004296ec: lddqu xmm0, xmmword ptr [rsi - 0x1c]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1c], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000042965c: lddqu xmm0, xmmword ptr [rsi - 0x1d]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1d], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004295cc: lddqu xmm0, xmmword ptr [rsi - 0x1e]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1e], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000042953c: lddqu xmm0, xmmword ptr [rsi - 0x1f]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1f], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004294cc: lddqu xmm0, xmmword ptr [rsi - 0x20]; movdqu xmmword ptr [rdi - 0x20], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x0000000000429cf6: lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000429c81: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x11], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429c01: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x12], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429b71: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x13], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429af1: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x14], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429a71: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x15], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004299f1: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x16], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429971: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x17], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004298f1: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429871: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x19], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004297f1: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1a], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429771: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1b], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004296f1: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1c], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429661: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1d], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004295d1: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1e], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429541: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1f], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429f7b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xa], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429f0b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xb], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429e9b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xc], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429e2b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429dbb: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xe], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429d4b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xf], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a36b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 1], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a2fb: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 2], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a28b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 3], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a21b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 4], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a1ab: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a13b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 6], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a0cb: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 7], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a05b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 8], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429feb: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 9], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000440d61: lea eax, [rax + 1]; mov qword ptr [rip + 0x6d57d], rax; ret; 
0x000000000047ae4f: lea eax, [rax + 8]; mov qword ptr [r9], rdx; pop rbx; ret; 
0x000000000047db6c: lea eax, [rax + 8]; mov qword ptr [rcx], rdx; ret; 
0x000000000041fe94: lea eax, [rax + rdi + 0x10]; ret; 
0x000000000041fea4: lea eax, [rax + rdi + 0x20]; ret; 
0x000000000041fe74: lea eax, [rax + rdi - 0x10]; ret; 
0x000000000046767b: lea eax, [rax + rdx*4]; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x000000000046764d: lea eax, [rax + rdx*4]; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000046011d: lea eax, [rcx + rsi]; ret; 
0x000000000040ff2b: lea eax, [rcx - 1]; ret; 
0x000000000043975c: lea eax, [rdi + 0x10]; ret; 
0x0000000000439771: lea eax, [rdi + 0x11]; ret; 
0x000000000043978f: lea eax, [rdi + 0x12]; ret; 
0x00000000004397af: lea eax, [rdi + 0x13]; ret; 
0x00000000004397d2: lea eax, [rdi + 0x14]; ret; 
0x00000000004397f1: lea eax, [rdi + 0x15]; ret; 
0x0000000000439811: lea eax, [rdi + 0x16]; ret; 
0x0000000000439831: lea eax, [rdi + 0x17]; ret; 
0x0000000000439854: lea eax, [rdi + 0x18]; ret; 
0x0000000000439879: lea eax, [rdi + 0x19]; ret; 
0x0000000000439897: lea eax, [rdi + 0x1a]; ret; 
0x00000000004398b7: lea eax, [rdi + 0x1b]; ret; 
0x00000000004398d3: lea eax, [rdi + 0x1c]; ret; 
0x00000000004398f3: lea eax, [rdi + 0x1d]; ret; 
0x0000000000439913: lea eax, [rdi + 0x1e]; ret; 
0x0000000000439933: lea eax, [rdi + 0x1f]; ret; 
0x00000000004396ad: lea eax, [rdi + 0xa]; ret; 
0x00000000004396cd: lea eax, [rdi + 0xb]; ret; 
0x00000000004396ef: lea eax, [rdi + 0xc]; ret; 
0x000000000043970f: lea eax, [rdi + 0xd]; ret; 
0x000000000043972f: lea eax, [rdi + 0xe]; ret; 
0x0000000000439749: lea eax, [rdi + 0xf]; ret; 
0x00000000004395f7: lea eax, [rdi + 1]; ret; 
0x0000000000439c37: lea eax, [rdi + 1]; vzeroupper; ret; 
0x000000000043960a: lea eax, [rdi + 2]; ret; 
0x0000000000439c4b: lea eax, [rdi + 2]; vzeroupper; ret; 
0x0000000000439615: lea eax, [rdi + 3]; ret; 
0x0000000000439c65: lea eax, [rdi + 3]; vzeroupper; ret; 
0x0000000000439628: lea eax, [rdi + 4]; ret; 
0x000000000043963d: lea eax, [rdi + 5]; ret; 
0x000000000043965b: lea eax, [rdi + 6]; ret; 
0x0000000000439667: lea eax, [rdi + 7]; ret; 
0x000000000043967a: lea eax, [rdi + 8]; ret; 
0x000000000043968f: lea eax, [rdi + 9]; ret; 
0x000000000041fec9: lea eax, [rdi + rax + 0x10]; ret; 
0x00000000004351b7: lea eax, [rdi + rax + 0x20]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000041fed9: lea eax, [rdi + rax + 0x20]; ret; 
0x000000000041fdd3: lea eax, [rdi + rax + 0x30]; ret; 
0x00000000004351d7: lea eax, [rdi + rax + 0x40]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000435215: lea eax, [rdi + rax + 0x60]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000460365: lea eax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x0000000000434c1c: lea eax, [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000043507d: lea eax, [rdi + rax]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000434e37: lea eax, [rdi + rax]; ret; 
0x0000000000439c7d: lea eax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000460019: lea eax, [rdi + rsi]; ret; 
0x000000000046cdc8: lea eax, [rdi - 1]; cmp rax, -3; jbe 0x6cdd8; ret; 
0x00000000004704f8: lea eax, [rdi - 1]; xor edx, edx; div ecx; add r8d, eax; mov eax, r8d; ret; 
0x00000000004395e3: lea eax, [rdi]; ret; 
0x0000000000439bb5: lea eax, [rdi]; vzeroupper; ret; 
0x0000000000438bcd: lea eax, [rdx + 0xa]; ret; 
0x0000000000438bed: lea eax, [rdx + 0xb]; ret; 
0x0000000000438c0f: lea eax, [rdx + 0xc]; ret; 
0x0000000000438c2f: lea eax, [rdx + 0xd]; ret; 
0x0000000000438c4f: lea eax, [rdx + 0xe]; ret; 
0x0000000000438adf: lea eax, [rdx + 0xf]; ret; 
0x0000000000438b07: lea eax, [rdx + 1]; ret; 
0x0000000000438b1d: lea eax, [rdx + 2]; ret; 
0x0000000000438b35: lea eax, [rdx + 3]; ret; 
0x0000000000438b4b: lea eax, [rdx + 4]; ret; 
0x0000000000438b5d: lea eax, [rdx + 5]; ret; 
0x0000000000438b7b: lea eax, [rdx + 6]; ret; 
0x000000000047db61: lea eax, [rdx + 7]; and rax, 0xfffffffffffffff8; mov rdx, qword ptr [rax]; lea rax, [rax + 8]; mov qword ptr [rcx], rdx; ret; 
0x0000000000438a87: lea eax, [rdx + 7]; ret; 
0x0000000000438b8d: lea eax, [rdx + 8]; ret; 
0x0000000000438bad: lea eax, [rdx + 9]; ret; 
0x000000000047396e: lea eax, [rdx + rcx]; cmp rax, qword ptr [rip + 0x3be38]; jae 0x73986; mov rdx, qword ptr [rip + 0x3be37]; add word ptr [rdx + rax*2], 1; ret; 
0x000000000040ff1e: lea eax, [rdx + rdi]; ret; 
0x000000000043d3b3: lea eax, [rdx + rdx]; pop rbx; and eax, 0x7ff80000; ret; 
0x0000000000417439: lea eax, [rdx - 0x10]; ret; 
0x0000000000438af5: lea eax, [rdx]; ret; 
0x000000000042a8b7: lea eax, [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000418891: lea eax, [rip + 0x14649]; and dh, 8; je 0x188c8; ret; 
0x0000000000418711: lea eax, [rip + 0x147a9]; and dh, 8; je 0x18748; ret; 
0x00000000004185a1: lea eax, [rip + 0x14939]; and dh, 8; je 0x185d8; ret; 
0x0000000000418822: lea eax, [rip + 0x14e08]; lea rdx, [rip + 0x17041]; cmovne rax, rdx; ret; 
0x0000000000418976: lea eax, [rip + 0x1c474]; cmove rax, rdx; ret; 
0x0000000000417b2f: lea eax, [rip + 0x1d09b]; lea rdx, [rip + 0x221b4]; cmovne rax, rdx; ret; 
0x00000000004187cf: lea eax, [rip + 0x1d3eb]; lea rdx, [rip + 0x1ec74]; cmovne rax, rdx; ret; 
0x0000000000417c96: lea eax, [rip + 0x1d784]; cmove rax, rdx; ret; 
0x0000000000417bef: lea eax, [rip + 0x1deeb]; lea rdx, [rip + 0x1e0a4]; cmovne rax, rdx; ret; 
0x000000000041848f: lea eax, [rip + 0x232eb]; cmove rax, rdx; ret; 
0x00000000004188f7: lea eax, [rip + 0x23823]; cmove rax, rdx; ret; 
0x0000000000418777: lea eax, [rip + 0x23993]; cmove rax, rdx; ret; 
0x0000000000418607: lea eax, [rip + 0x23b13]; cmove rax, rdx; ret; 
0x000000000041887d: lea eax, [rip + 0x23bed]; cmove rax, rdx; ret; 
0x00000000004186fd: lea eax, [rip + 0x23d5d]; cmove rax, rdx; ret; 
0x000000000041858d: lea eax, [rip + 0x23edd]; cmove rax, rdx; ret; 
0x00000000004188d7: lea eax, [rip + 0x23fd3]; cmove rax, rdx; ret; 
0x0000000000417c1f: lea eax, [rip + 0x23ffb]; cmovne rax, rdx; ret; 
0x0000000000418757: lea eax, [rip + 0x24143]; cmove rax, rdx; ret; 
0x0000000000418682: lea eax, [rip + 0x24738]; cmovne rax, rdx; ret; 
0x0000000000418667: lea eax, [rip + 0x24913]; cmove rax, rdx; ret; 
0x00000000004186ab: lea eax, [rip + 0x24a5f]; cmove rax, rdx; ret; 
0x000000000046105f: lea eax, [rip + 0x25b]; lea rdx, [rip + 0x34]; cmovne rax, rdx; ret; 
0x000000000041221b: lea eax, [rip + 0x344f]; mov qword ptr [rip + 0x9a558], rax; ret; 
0x0000000000417cf9: lea eax, [rip + 0x3a21]; lea rdx, [rip + 0x526a]; cmovne rax, rdx; ret; 
0x0000000000472831: lea eax, [rip + 0x3ce89]; mov qword ptr [rip + 0x3ce6a], rax; ret; 
0x0000000000472816: lea eax, [rip + 0x3cea4]; mov qword ptr [rip + 0x3ce85], rax; add rsp, 8; ret; 
0x000000000044e384: lea eax, [rip + 0x5d8d6]; mov rax, qword ptr [rax + r14*8]; test rax, rax; je 0x4e395; call rax; 
0x000000000044e142: lea eax, [rip + 0x5db18]; mov rax, qword ptr [rax + rbx*8]; test rax, rax; je 0x4e153; call rax; 
0x0000000000442be1: lea eax, [rip + 0x6a639]; ret; 
0x0000000000472fdf: lea eax, [rip + 0x6b]; cmovne rax, rdx; ret; 
0x0000000000473246: lea eax, [rip + 0x74]; cmove rax, rdx; ret; 
0x0000000000418936: lea eax, [rip + 0x75c4]; cmove rax, rdx; ret; 
0x00000000004184c6: lea eax, [rip + 0x7704]; cmove rax, rdx; ret; 
0x0000000000418510: lea eax, [rip + 0x7ffa]; lea rdx, [rip + 0x21af3]; cmovne rax, rdx; ret; 
0x000000000045f6f6: lea eax, [rip + 0x834]; cmove rax, rdx; ret; 
0x0000000000418531: lea eax, [rip + 0x83d9]; test byte ptr [rip + 0x96dc7], 1; je 0x184fd; ret; 
0x0000000000414519: lea eax, [rip + 0x98281]; add rsp, 0x10; pop rbp; ret; 
0x0000000000460956: lea eax, [rip + 0x994]; cmove rax, rdx; ret; 
0x00000000004188b2: lea eax, [rip + 0x9aa8]; lea rdx, [rip + 0xf011]; cmovne rax, rdx; ret; 
0x0000000000418732: lea eax, [rip + 0x9c08]; lea rdx, [rip + 0xf171]; cmovne rax, rdx; ret; 
0x00000000004185c2: lea eax, [rip + 0xc768]; lea rdx, [rip + 0x11dd1]; cmovne rax, rdx; ret; 
0x000000000045f6b6: lea eax, [rip + 0xd34]; cmove rax, rdx; ret; 
0x0000000000417b8f: lea eax, [rip + 0xdfb]; lea rdx, [rip + 0x24e4]; cmovne rax, rdx; ret; 
0x00000000004160e7: lea eax, [rip - 0x66d]; mov qword ptr [rip + 0x96694], rax; lea rax, [rip - 0xa8b]; mov qword ptr [rip + 0x9667e], rax; ret; 
0x00000000004160f5: lea eax, [rip - 0xa8b]; mov qword ptr [rip + 0x9667e], rax; ret; 
0x000000000043f3cc: lea eax, [rsp + 0x30]; mov qword ptr [rsp + 0x20], rax; cmp esi, 9; je 0x3f400; mov eax, 0x48; syscall; 
0x00000000004531af: lea ebx, [rax]; idiv edi; dec dword ptr [rax - 0x7d]; clc; dec dword ptr [rax - 0x77]; ret; 
0x0000000000475061: lea ebx, [rbp + rdx*8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000046e76e: lea ebx, [rdi + rdi*8 - 1]; jmp qword ptr [rsi + 0xf]; 
0x00000000004395c6: lea ebx, [rip + 0x4a784]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439591: lea ebx, [rip + 0x4a7b9]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439565: lea ebx, [rip + 0x4a7e5]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000043954f: lea ebx, [rip + 0x4a7fb]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000043952d: lea ebx, [rip + 0x4a81d]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439508: lea ebx, [rip + 0x4a842]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000004394eb: lea ebx, [rip + 0x4a85f]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439493: lea ebx, [rip + 0x4a8b7]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438fa6: lea ebx, [rip + 0x4ad24]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f71: lea ebx, [rip + 0x4ad59]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f45: lea ebx, [rip + 0x4ad85]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f2f: lea ebx, [rip + 0x4ad9b]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f0d: lea ebx, [rip + 0x4adbd]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438ee8: lea ebx, [rip + 0x4ade2]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438ecb: lea ebx, [rip + 0x4adff]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438e73: lea ebx, [rip + 0x4ae57]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000042bf92: lea ebx, [rip + 0x576f8]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bc34: lea ebx, [rip + 0x57a56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bddf: lea ebx, [rip + 0x57aeb]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bab4: lea ebx, [rip + 0x57bd6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bb77: lea ebx, [rip + 0x57d53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b934: lea ebx, [rip + 0x57d56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b9f7: lea ebx, [rip + 0x57ed3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b7b4: lea ebx, [rip + 0x57ed6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b877: lea ebx, [rip + 0x58053]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b634: lea ebx, [rip + 0x58056]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b6f8: lea ebx, [rip + 0x581d2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b4b4: lea ebx, [rip + 0x581d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b577: lea ebx, [rip + 0x58353]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b334: lea ebx, [rip + 0x58356]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b3f7: lea ebx, [rip + 0x584d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b1b4: lea ebx, [rip + 0x584d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b277: lea ebx, [rip + 0x58653]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b034: lea ebx, [rip + 0x58656]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b0f7: lea ebx, [rip + 0x587d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aeb4: lea ebx, [rip + 0x587d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042af77: lea ebx, [rip + 0x58953]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042ad34: lea ebx, [rip + 0x58956]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042adf7: lea ebx, [rip + 0x58ad3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042abb4: lea ebx, [rip + 0x58ad6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042ac77: lea ebx, [rip + 0x58c53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aa34: lea ebx, [rip + 0x58c56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aaf7: lea ebx, [rip + 0x58dd3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a8b4: lea ebx, [rip + 0x58dd6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a977: lea ebx, [rip + 0x58f53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a734: lea ebx, [rip + 0x58f56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a5bb: lea ebx, [rip + 0x590cf]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a7f7: lea ebx, [rip + 0x590d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a677: lea ebx, [rip + 0x59253]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a3bc: lea ebx, [rip + 0x592ce]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a53a: lea ebx, [rip + 0x59390]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a3de: lea ebx, [rip + 0x594ec]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042947e: lea ebx, [rip + 0x59d0c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429154: lea ebx, [rip + 0x5a036]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004292eb: lea ebx, [rip + 0x5a0df]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428fd4: lea ebx, [rip + 0x5a1b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429097: lea ebx, [rip + 0x5a333]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428e54: lea ebx, [rip + 0x5a336]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428f17: lea ebx, [rip + 0x5a4b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428cd4: lea ebx, [rip + 0x5a4b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428d97: lea ebx, [rip + 0x5a633]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428b54: lea ebx, [rip + 0x5a636]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428c18: lea ebx, [rip + 0x5a7b2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004289d4: lea ebx, [rip + 0x5a7b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428a97: lea ebx, [rip + 0x5a933]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428854: lea ebx, [rip + 0x5a936]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428917: lea ebx, [rip + 0x5aab3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004286d4: lea ebx, [rip + 0x5aab6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428797: lea ebx, [rip + 0x5ac33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428554: lea ebx, [rip + 0x5ac36]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428617: lea ebx, [rip + 0x5adb3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004283d4: lea ebx, [rip + 0x5adb6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428497: lea ebx, [rip + 0x5af33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428254: lea ebx, [rip + 0x5af36]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428317: lea ebx, [rip + 0x5b0b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004280d4: lea ebx, [rip + 0x5b0b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428197: lea ebx, [rip + 0x5b233]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427f54: lea ebx, [rip + 0x5b236]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428017: lea ebx, [rip + 0x5b3b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427dd4: lea ebx, [rip + 0x5b3b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427e97: lea ebx, [rip + 0x5b533]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427c54: lea ebx, [rip + 0x5b536]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427adb: lea ebx, [rip + 0x5b6af]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427d17: lea ebx, [rip + 0x5b6b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427885: lea ebx, [rip + 0x5b745]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004277c8: lea ebx, [rip + 0x5b802]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427b97: lea ebx, [rip + 0x5b833]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004278fb: lea ebx, [rip + 0x5b88f]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004276dd: lea ebx, [rip + 0x5b8ed]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427a5a: lea ebx, [rip + 0x5b970]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427612: lea ebx, [rip + 0x5b9b8]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004278e8: lea ebx, [rip + 0x5bae2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004265f1: lea ebx, [rip + 0x5c9d9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426553: lea ebx, [rip + 0x5ca77]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004264a1: lea ebx, [rip + 0x5cb29]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426403: lea ebx, [rip + 0x5cbc7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426351: lea ebx, [rip + 0x5cc79]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004262b3: lea ebx, [rip + 0x5cd17]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426201: lea ebx, [rip + 0x5cdc9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426163: lea ebx, [rip + 0x5ce67]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004260b1: lea ebx, [rip + 0x5cf19]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426013: lea ebx, [rip + 0x5cfb7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425f61: lea ebx, [rip + 0x5d069]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425ec3: lea ebx, [rip + 0x5d107]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425e11: lea ebx, [rip + 0x5d1b9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425d73: lea ebx, [rip + 0x5d257]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425cc1: lea ebx, [rip + 0x5d309]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425c28: lea ebx, [rip + 0x5d3a2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425b71: lea ebx, [rip + 0x5d459]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425ad3: lea ebx, [rip + 0x5d4f7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425a21: lea ebx, [rip + 0x5d5a9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425983: lea ebx, [rip + 0x5d647]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004258d1: lea ebx, [rip + 0x5d6f9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425833: lea ebx, [rip + 0x5d797]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425781: lea ebx, [rip + 0x5d849]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004256e3: lea ebx, [rip + 0x5d8e7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425631: lea ebx, [rip + 0x5d999]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425593: lea ebx, [rip + 0x5da37]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004254e1: lea ebx, [rip + 0x5dae9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425443: lea ebx, [rip + 0x5db87]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425391: lea ebx, [rip + 0x5dc39]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004252f3: lea ebx, [rip + 0x5dcd7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425247: lea ebx, [rip + 0x5dd83]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425156: lea ebx, [rip + 0x5de74]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425097: lea ebx, [rip + 0x5df33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042502d: lea ebx, [rip + 0x5df9d]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424f3e: lea ebx, [rip + 0x5e08c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424d04: lea ebx, [rip + 0x5e106]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424e79: lea ebx, [rip + 0x5e151]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424c2a: lea ebx, [rip + 0x5e1e0]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423c21: lea ebx, [rip + 0x5f1e9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423b83: lea ebx, [rip + 0x5f287]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423ad1: lea ebx, [rip + 0x5f339]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423a33: lea ebx, [rip + 0x5f3d7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423981: lea ebx, [rip + 0x5f489]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004238e3: lea ebx, [rip + 0x5f527]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423831: lea ebx, [rip + 0x5f5d9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423793: lea ebx, [rip + 0x5f677]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004236e1: lea ebx, [rip + 0x5f729]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423643: lea ebx, [rip + 0x5f7c7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423591: lea ebx, [rip + 0x5f879]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004234f3: lea ebx, [rip + 0x5f917]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423441: lea ebx, [rip + 0x5f9c9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004233a3: lea ebx, [rip + 0x5fa67]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004232f1: lea ebx, [rip + 0x5fb19]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423258: lea ebx, [rip + 0x5fbb2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004231a1: lea ebx, [rip + 0x5fc69]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423103: lea ebx, [rip + 0x5fd07]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423051: lea ebx, [rip + 0x5fdb9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422fb3: lea ebx, [rip + 0x5fe57]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422f01: lea ebx, [rip + 0x5ff09]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422e63: lea ebx, [rip + 0x5ffa7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422db1: lea ebx, [rip + 0x60059]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422d13: lea ebx, [rip + 0x600f7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422c61: lea ebx, [rip + 0x601a9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422bc3: lea ebx, [rip + 0x60247]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422b11: lea ebx, [rip + 0x602f9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422a73: lea ebx, [rip + 0x60397]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004229c1: lea ebx, [rip + 0x60449]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422923: lea ebx, [rip + 0x604e7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422877: lea ebx, [rip + 0x60593]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422786: lea ebx, [rip + 0x60684]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004226c7: lea ebx, [rip + 0x60743]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042265d: lea ebx, [rip + 0x607ad]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042256e: lea ebx, [rip + 0x6089c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004224a9: lea ebx, [rip + 0x60961]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000421764: lea ebx, [rip + 0x61566]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x00000000004216ea: lea ebx, [rip + 0x615e0]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000042165b: lea ebx, [rip + 0x6166f]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421450: lea ebx, [rip + 0x6187a]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000042131e: lea ebx, [rip + 0x619ac]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421258: lea ebx, [rip + 0x61a72]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x00000000004211da: lea ebx, [rip + 0x61af0]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421143: lea ebx, [rip + 0x61b87]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420f47: lea ebx, [rip + 0x61d83]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420e16: lea ebx, [rip + 0x61eb4]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420d07: lea ebx, [rip + 0x61fc3]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000047d9e3: lea ebx, [rsp + rcx*8]; mov rax, qword ptr [rsp + 8]; mov rdx, r8; mov rdi, r15; mov rsi, qword ptr [rbx]; call rax; 
0x0000000000415df8: lea ecx, [r8 + 0x280]; shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x0000000000415df9: lea ecx, [rax + 0x280]; shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x0000000000460af6: lea ecx, [rax + 1]; mov rdi, qword ptr [r12]; lea r9, [rsp + 0x28]; call rbx; 
0x0000000000460c96: lea ecx, [rax + 4]; lea r9, [rsp + 0x20]; call rbx; 
0x000000000045cf31: lea ecx, [rbx + 0x40]; mov esi, 1; mov rdi, rbx; call rax; 
0x0000000000438e7e: lea ecx, [rbx + rcx]; jmp rcx; 
0x000000000041e830: lea ecx, [rdx + rcx - 0x10]; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x000000000045d230: lea ecx, [rip + 0x37fae]; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000045cb91: lea ecx, [rip + 0x3834d]; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000045cbef: lea ecx, [rip + 0x383ab]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000046d4d4: lea ecx, [rip + 0x405a6]; mov qword ptr [rax], rcx; pop rbp; ret; 
0x000000000045a8bf: lea ecx, [rip + 0x4f4bb]; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000459e07: lea ecx, [rip + 0x4ff73]; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x0000000000434b69: lea ecx, [rip + 0x52971]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000433754: lea ecx, [rip + 0x53d86]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x00000000004334f9: lea ecx, [rip + 0x53fe1]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000431c24: lea ecx, [rip + 0x558b6]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000040da7e: lea ecx, [rip + 0xa01bc]; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x0000000000440c4a: lea ecx, [rip - 0x60]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x000000000046233e: lea ecx, [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000462327: lea ecx, [rsi + rcx*4]; mov edx, dword ptr [rcx + rdx]; test edx, edx; jne 0x62338; ret; 
0x000000000043c155: lea ecx, [rsi + rdx]; cmp rdi, r9; jb 0x3c2c4; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043c4b0: lea ecx, [rsi + rdx]; cmp rdi, r9; jb 0x3c681; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043c8fb: lea ecx, [rsi + rdx]; cmp rdi, r9; jb 0x3cb3c; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000460c1e: lea ecx, [rsp + 0x20]; call rbx; 
0x0000000000460afe: lea ecx, [rsp + 0x28]; call rbx; 
0x0000000000460e18: lea ecx, [rsp + 0x30]; call rbx; 
0x0000000000441afd: lea edi, [rcx + rsi + 0x20]; jmp rdx; 
0x000000000043c0ff: lea edi, [rdi + rcx - 1]; lea rsi, [rsi + rcx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x000000000044e7b0: lea edi, [rdi + rdi*8 - 1]; dec dword ptr [rcx + 1]; ret 0x8d48; 
0x00000000004758ea: lea edi, [rdi + rdi*8 - 1]; dec dword ptr [rcx - 0x77]; ret; 
0x000000000042787d: lea edi, [rdi - 0x40]; sub rdx, 0x40; lea r11, [rip + 0x5b745]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000473f5d: lea edi, [rip + 0x2451d]; call 0x2df0; nop dword ptr [rax + rax]; ret; 
0x0000000000468acf: lea edi, [rip + 0x2d7e3]; movsxd rax, dword ptr [rdi + r12*4]; add rax, rdi; jmp rax; 
0x0000000000472748: lea edi, [rip + 0x3cf3a]; syscall; 
0x00000000004724c4: lea edi, [rip + 0x3d1ba]; syscall; 
0x00000000004705d8: lea edi, [rip + 0x3f092]; syscall; 
0x0000000000442bd2: lea edi, [rip + 0x426c8]; call 0x2df0; nop dword ptr [rax]; lea rax, [rip + 0x6a639]; ret; 
0x0000000000441a60: lea edi, [rip + 0x4310c]; mov eax, 0x15; syscall; 
0x00000000004551cd: lea edi, [rip + 0x544ad]; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000045515a: lea edi, [rip + 0x54520]; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000453f8a: lea edi, [rip + 0x556f0]; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000450938: lea edi, [rip + 0x5eca2]; syscall; 
0x0000000000450873: lea edi, [rip + 0x5ed67]; syscall; 
0x00000000004506d6: lea edi, [rip + 0x5ef04]; syscall; 
0x0000000000450607: lea edi, [rip + 0x5efd3]; syscall; 
0x0000000000445388: lea edi, [rip + 0x6a04a]; syscall; 
0x000000000044521c: lea edi, [rip + 0x6a1b6]; syscall; 
0x0000000000445124: lea edi, [rip + 0x6a2ae]; syscall; 
0x000000000043ddc0: lea edi, [rip + 0x71612]; syscall; 
0x0000000000408672: lea edi, [rip + 0x79155]; call 0x2df0; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000417a24: lea edi, [rip + 0x94d76]; syscall; 
0x0000000000415d0c: lea edi, [rip + 0x96a8e]; syscall; 
0x0000000000415cd4: lea edi, [rip + 0x96ac6]; syscall; 
0x00000000004157b4: lea edi, [rip + 0x96fe6]; syscall; 
0x0000000000415470: lea edi, [rip + 0x9732a]; syscall; 
0x000000000041692f: lea edi, [rip + 0x9885b]; syscall; 
0x0000000000413da0: lea edi, [rip + 0x989fa]; syscall; 
0x0000000000413da0: lea edi, [rip + 0x989fa]; syscall; pop rbp; ret; 
0x0000000000413d70: lea edi, [rip + 0x98a2a]; syscall; 
0x0000000000416008: lea edi, [rip + 0x99172]; syscall; 
0x0000000000416008: lea edi, [rip + 0x99172]; syscall; pop rbx; ret; 
0x000000000041433e: lea edi, [rip + 0x9ae4c]; syscall; 
0x00000000004142c2: lea edi, [rip + 0x9aeb8]; syscall; 
0x000000000041401d: lea edi, [rip + 0x9b16d]; syscall; 
0x0000000000412180: lea edi, [rip + 0x9d00a]; syscall; 
0x0000000000410d2f: lea edi, [rip + 0x9e3db]; syscall; 
0x0000000000410d2f: lea edi, [rip + 0x9e3db]; syscall; ret; 
0x0000000000410836: lea edi, [rip + 0x9e8d4]; syscall; 
0x00000000004104eb: lea edi, [rip + 0x9ec1f]; syscall; 
0x00000000004101a8: lea edi, [rip + 0x9ef62]; syscall; 
0x000000000040eea2: lea edi, [rip + 0xa0268]; syscall; 
0x000000000040ebe2: lea edi, [rip + 0xa0528]; syscall; 
0x000000000040e736: lea edi, [rip + 0xa09d4]; syscall; 
0x000000000040e736: lea edi, [rip + 0xa09d4]; syscall; ret; 
0x00000000004096a4: lea edi, [rip + 0xa5d2e]; syscall; 
0x0000000000408773: lea edi, [rip + 0xa654f]; syscall; 
0x000000000040854c: lea edi, [rip + 0xa6776]; syscall; 
0x0000000000408511: lea edi, [rip + 0xa67b1]; syscall; 
0x000000000040843d: lea edi, [rip + 0xa6885]; syscall; 
0x0000000000406511: lea edi, [rip + 0xa8751]; syscall; 
0x0000000000404c3e: lea edi, [rip + 0xa9fec]; syscall; 
0x0000000000403c55: lea edi, [rip + 0xaaf25]; syscall; 
0x0000000000403c2c: lea edi, [rip + 0xaaf4e]; syscall; 
0x0000000000403b23: lea edi, [rip + 0xab057]; syscall; 
0x0000000000401205: lea edi, [rip + 0xada75]; syscall; 
0x0000000000442d25: lea edi, [rsp + 1]; cmp rax, 0x17; ja 0x42d00; movsxd rax, dword ptr [rbp + rax*4]; add rax, rbp; jmp rax; 
0x000000000040f5d3: lea edi, [rsp + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x0000000000411773: lea edx, [rax + 1]; mov qword ptr [rip + 0x9afd3], rdx; ret; 
0x000000000045f17d: lea edx, [rax + rdx*4]; mov qword ptr [rax + 0x10], rdi; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000045f14c: lea edx, [rax + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000475059: lea edx, [rax - 1]; test eax, eax; je 0x75076; lea rbx, [rbp + rdx*8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000045cf2d: lea edx, [rbx + 0x34]; lea rcx, [rbx + 0x40]; mov esi, 1; mov rdi, rbx; call rax; 
0x00000000004224b4: lea edx, [rbx + rdx]; jmp rdx; 
0x00000000004265e8: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5c9d9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426498: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5cb29]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426348: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5cc79]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004260a8: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5cf19]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425f58: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d069]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425e08: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d1b9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425cb8: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d309]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425b68: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d459]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425a18: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d5a9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004258c8: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d6f9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425778: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d849]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425628: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d999]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004254d8: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5dae9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425388: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5dc39]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423c18: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f1e9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423ac8: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f339]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423978: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f489]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423828: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f5d9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004236d8: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f729]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423588: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f879]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004232e8: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5fb19]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423198: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5fc69]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423048: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5fdb9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422ef8: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5ff09]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422c58: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x601a9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004229b8: lea edx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x60449]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000472fd8: lea edx, [rip + 0x112]; lea rax, [rip + 0x6b]; cmovne rax, rdx; ret; 
0x00000000004185c9: lea edx, [rip + 0x11dd1]; cmovne rax, rdx; ret; 
0x0000000000418829: lea edx, [rip + 0x17041]; cmovne rax, rdx; ret; 
0x000000000041896f: lea edx, [rip + 0x1c8bb]; lea rax, [rip + 0x1c474]; cmove rax, rdx; ret; 
0x000000000047fc41: lea edx, [rip + 0x1cfd1]; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000417c8f: lea edx, [rip + 0x1d92b]; lea rax, [rip + 0x1d784]; cmove rax, rdx; ret; 
0x0000000000417bf6: lea edx, [rip + 0x1e0a4]; cmovne rax, rdx; ret; 
0x00000000004187d6: lea edx, [rip + 0x1ec74]; cmovne rax, rdx; ret; 
0x000000000047db21: lea edx, [rip + 0x1f0b1]; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000047ae18: lea edx, [rip + 0x21822]; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000418517: lea edx, [rip + 0x21af3]; cmovne rax, rdx; ret; 
0x0000000000417b36: lea edx, [rip + 0x221b4]; cmovne rax, rdx; ret; 
0x00000000004188f0: lea edx, [rip + 0x2378a]; lea rax, [rip + 0x23823]; cmove rax, rdx; ret; 
0x0000000000418770: lea edx, [rip + 0x238fa]; lea rax, [rip + 0x23993]; cmove rax, rdx; ret; 
0x0000000000418600: lea edx, [rip + 0x23a7a]; lea rax, [rip + 0x23b13]; cmove rax, rdx; ret; 
0x0000000000418876: lea edx, [rip + 0x23bb4]; lea rax, [rip + 0x23bed]; cmove rax, rdx; ret; 
0x00000000004186f6: lea edx, [rip + 0x23d24]; lea rax, [rip + 0x23d5d]; cmove rax, rdx; ret; 
0x0000000000418586: lea edx, [rip + 0x23ea4]; lea rax, [rip + 0x23edd]; cmove rax, rdx; ret; 
0x00000000004188d0: lea edx, [rip + 0x23f8a]; lea rax, [rip + 0x23fd3]; cmove rax, rdx; ret; 
0x0000000000417c18: lea edx, [rip + 0x240a2]; lea rax, [rip + 0x23ffb]; cmovne rax, rdx; ret; 
0x0000000000418750: lea edx, [rip + 0x240fa]; lea rax, [rip + 0x24143]; cmove rax, rdx; ret; 
0x000000000041867b: lea edx, [rip + 0x2479f]; lea rax, [rip + 0x24738]; cmovne rax, rdx; ret; 
0x0000000000418660: lea edx, [rip + 0x248ca]; lea rax, [rip + 0x24913]; cmove rax, rdx; ret; 
0x00000000004186a4: lea edx, [rip + 0x24a06]; lea rax, [rip + 0x24a5f]; cmove rax, rdx; ret; 
0x0000000000417b96: lea edx, [rip + 0x24e4]; cmovne rax, rdx; ret; 
0x0000000000472d25: lea edx, [rip + 0x256f1]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000461066: lea edx, [rip + 0x34]; cmovne rax, rdx; ret; 
0x000000000047323f: lea edx, [rip + 0x3ab]; lea rax, [rip + 0x74]; cmove rax, rdx; ret; 
0x0000000000472cb6: lea edx, [rip + 0x3ae04]; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x000000000043e471: lea edx, [rip + 0x45f25]; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x0000000000417d00: lea edx, [rip + 0x526a]; cmovne rax, rdx; ret; 
0x0000000000434bb7: lea edx, [rip + 0x52923]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000434b9d: lea edx, [rip + 0x5293d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000433547: lea edx, [rip + 0x53f93]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043352d: lea edx, [rip + 0x53fad]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000431997: lea edx, [rip + 0x55b43]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043197d: lea edx, [rip + 0x55b5d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000042f847: lea edx, [rip + 0x57c93]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000042f82d: lea edx, [rip + 0x57cad]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000417886: lea edx, [rip + 0x6b29c]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000406f89: lea edx, [rip + 0x7a3d1]; mov r8d, r8d; movsxd rdi, dword ptr [r10 + r8*4]; add rdi, r10; jmp rdi; 
0x000000000041892f: lea edx, [rip + 0x7a9b]; lea rax, [rip + 0x75c4]; cmove rax, rdx; ret; 
0x00000000004184bf: lea edx, [rip + 0x7c3b]; lea rax, [rip + 0x7704]; cmove rax, rdx; ret; 
0x0000000000402efd: lea edx, [rip + 0x7e391]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000401af7: lea edx, [rip + 0x823e7]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000045f6ef: lea edx, [rip + 0xb2b]; lea rax, [rip + 0x834]; cmove rax, rdx; ret; 
0x000000000046094f: lea edx, [rip + 0xc3b]; lea rax, [rip + 0x994]; cmove rax, rdx; ret; 
0x00000000004188b9: lea edx, [rip + 0xf011]; cmovne rax, rdx; ret; 
0x0000000000418739: lea edx, [rip + 0xf171]; cmovne rax, rdx; ret; 
0x000000000045f6af: lea edx, [rip + 0xf5b]; lea rax, [rip + 0xd34]; cmove rax, rdx; ret; 
0x0000000000418488: lea edx, [rip - 0x2fe]; lea rax, [rip + 0x232eb]; cmove rax, rdx; ret; 
0x000000000043c0f3: lea edx, [rsi + rcx]; cmp rdi, rdx; jb 0x3c0fe; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043f401: lea edx, [rsp + 8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x000000000044ff88: lea esi, [rax + rbp]; nop dword ptr [rax + rax]; mov rdx, rbp; mov rsi, r12; mov rdi, r15; call rbx; 
0x0000000000469eb9: lea esi, [rbp - 0x430]; mov eax, 0x14; syscall; 
0x0000000000479841: lea esi, [rbx + rax*8]; nop dword ptr [rax]; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x0000000000473f56: lea esi, [rip + 0x2450c]; lea rdi, [rip + 0x2451d]; call 0x2df0; nop dword ptr [rax + rax]; ret; 
0x0000000000468222: lea esi, [rip + 0x2dff8]; movsxd rax, dword ptr [rsi + r12*4]; add rax, rsi; jmp rax; 
0x000000000045d1d6: lea esi, [rip + 0x37f4c]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x0000000000442bcb: lea esi, [rip + 0x425c4]; lea rdi, [rip + 0x426c8]; call 0x2df0; nop dword ptr [rax]; lea rax, [rip + 0x6a639]; ret; 
0x000000000043d2b3: lea esi, [rip + 0x46b87]; movsxd rax, dword ptr [rsi + rdi*4]; add rax, rsi; jmp rax; 
0x000000000045a2e7: lea esi, [rip + 0x4fe93]; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x000000000040866b: lea esi, [rip + 0x7914f]; lea rdi, [rip + 0x79155]; call 0x2df0; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000402779: lea esi, [rip + 0x7e959]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000043c104: lea esi, [rsi + rcx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x000000000044ff54: lea esp, [rcx + rax]; mov rdi, r12; call rbx; 
0x0000000000406f88: lea r10, [rip + 0x7a3d1]; mov r8d, r8d; movsxd rdi, dword ptr [r10 + r8*4]; add rdi, r10; jmp rdi; 
0x00000000004395c5: lea r11, [rip + 0x4a784]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439590: lea r11, [rip + 0x4a7b9]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439564: lea r11, [rip + 0x4a7e5]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000043954e: lea r11, [rip + 0x4a7fb]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000043952c: lea r11, [rip + 0x4a81d]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439507: lea r11, [rip + 0x4a842]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000004394ea: lea r11, [rip + 0x4a85f]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439492: lea r11, [rip + 0x4a8b7]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438fa5: lea r11, [rip + 0x4ad24]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f70: lea r11, [rip + 0x4ad59]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f44: lea r11, [rip + 0x4ad85]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f2e: lea r11, [rip + 0x4ad9b]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f0c: lea r11, [rip + 0x4adbd]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438ee7: lea r11, [rip + 0x4ade2]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438eca: lea r11, [rip + 0x4adff]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438e72: lea r11, [rip + 0x4ae57]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000042bf91: lea r11, [rip + 0x576f8]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bc33: lea r11, [rip + 0x57a56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bdde: lea r11, [rip + 0x57aeb]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bab3: lea r11, [rip + 0x57bd6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bb76: lea r11, [rip + 0x57d53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b933: lea r11, [rip + 0x57d56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b9f6: lea r11, [rip + 0x57ed3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b7b3: lea r11, [rip + 0x57ed6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b876: lea r11, [rip + 0x58053]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b633: lea r11, [rip + 0x58056]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b6f7: lea r11, [rip + 0x581d2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b4b3: lea r11, [rip + 0x581d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b576: lea r11, [rip + 0x58353]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b333: lea r11, [rip + 0x58356]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b3f6: lea r11, [rip + 0x584d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b1b3: lea r11, [rip + 0x584d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b276: lea r11, [rip + 0x58653]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b033: lea r11, [rip + 0x58656]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b0f6: lea r11, [rip + 0x587d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aeb3: lea r11, [rip + 0x587d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042af76: lea r11, [rip + 0x58953]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042ad33: lea r11, [rip + 0x58956]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042adf6: lea r11, [rip + 0x58ad3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042abb3: lea r11, [rip + 0x58ad6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042ac76: lea r11, [rip + 0x58c53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aa33: lea r11, [rip + 0x58c56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aaf6: lea r11, [rip + 0x58dd3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a8b3: lea r11, [rip + 0x58dd6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a976: lea r11, [rip + 0x58f53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a733: lea r11, [rip + 0x58f56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a5ba: lea r11, [rip + 0x590cf]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a7f6: lea r11, [rip + 0x590d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a676: lea r11, [rip + 0x59253]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a3bb: lea r11, [rip + 0x592ce]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a539: lea r11, [rip + 0x59390]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a3dd: lea r11, [rip + 0x594ec]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042947d: lea r11, [rip + 0x59d0c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429153: lea r11, [rip + 0x5a036]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004292ea: lea r11, [rip + 0x5a0df]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428fd3: lea r11, [rip + 0x5a1b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429096: lea r11, [rip + 0x5a333]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428e53: lea r11, [rip + 0x5a336]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428f16: lea r11, [rip + 0x5a4b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428cd3: lea r11, [rip + 0x5a4b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428d96: lea r11, [rip + 0x5a633]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428b53: lea r11, [rip + 0x5a636]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428c17: lea r11, [rip + 0x5a7b2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004289d3: lea r11, [rip + 0x5a7b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428a96: lea r11, [rip + 0x5a933]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428853: lea r11, [rip + 0x5a936]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428916: lea r11, [rip + 0x5aab3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004286d3: lea r11, [rip + 0x5aab6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428796: lea r11, [rip + 0x5ac33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428553: lea r11, [rip + 0x5ac36]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428616: lea r11, [rip + 0x5adb3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004283d3: lea r11, [rip + 0x5adb6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428496: lea r11, [rip + 0x5af33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428253: lea r11, [rip + 0x5af36]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428316: lea r11, [rip + 0x5b0b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004280d3: lea r11, [rip + 0x5b0b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428196: lea r11, [rip + 0x5b233]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427f53: lea r11, [rip + 0x5b236]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428016: lea r11, [rip + 0x5b3b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427dd3: lea r11, [rip + 0x5b3b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427e96: lea r11, [rip + 0x5b533]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427c53: lea r11, [rip + 0x5b536]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427ada: lea r11, [rip + 0x5b6af]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427d16: lea r11, [rip + 0x5b6b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427884: lea r11, [rip + 0x5b745]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004277c7: lea r11, [rip + 0x5b802]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427b96: lea r11, [rip + 0x5b833]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004278fa: lea r11, [rip + 0x5b88f]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004276dc: lea r11, [rip + 0x5b8ed]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427a59: lea r11, [rip + 0x5b970]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427611: lea r11, [rip + 0x5b9b8]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004278e7: lea r11, [rip + 0x5bae2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004265f0: lea r11, [rip + 0x5c9d9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426552: lea r11, [rip + 0x5ca77]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004264a0: lea r11, [rip + 0x5cb29]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426402: lea r11, [rip + 0x5cbc7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426350: lea r11, [rip + 0x5cc79]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004262b2: lea r11, [rip + 0x5cd17]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426200: lea r11, [rip + 0x5cdc9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426162: lea r11, [rip + 0x5ce67]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004260b0: lea r11, [rip + 0x5cf19]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426012: lea r11, [rip + 0x5cfb7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425f60: lea r11, [rip + 0x5d069]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425ec2: lea r11, [rip + 0x5d107]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425e10: lea r11, [rip + 0x5d1b9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425d72: lea r11, [rip + 0x5d257]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425cc0: lea r11, [rip + 0x5d309]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425c27: lea r11, [rip + 0x5d3a2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425b70: lea r11, [rip + 0x5d459]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425ad2: lea r11, [rip + 0x5d4f7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425a20: lea r11, [rip + 0x5d5a9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425982: lea r11, [rip + 0x5d647]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004258d0: lea r11, [rip + 0x5d6f9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425832: lea r11, [rip + 0x5d797]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425780: lea r11, [rip + 0x5d849]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004256e2: lea r11, [rip + 0x5d8e7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425630: lea r11, [rip + 0x5d999]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425592: lea r11, [rip + 0x5da37]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004254e0: lea r11, [rip + 0x5dae9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425442: lea r11, [rip + 0x5db87]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425390: lea r11, [rip + 0x5dc39]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004252f2: lea r11, [rip + 0x5dcd7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425246: lea r11, [rip + 0x5dd83]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425155: lea r11, [rip + 0x5de74]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425096: lea r11, [rip + 0x5df33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042502c: lea r11, [rip + 0x5df9d]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424f3d: lea r11, [rip + 0x5e08c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424d03: lea r11, [rip + 0x5e106]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424e78: lea r11, [rip + 0x5e151]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424c29: lea r11, [rip + 0x5e1e0]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423c20: lea r11, [rip + 0x5f1e9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423b82: lea r11, [rip + 0x5f287]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423ad0: lea r11, [rip + 0x5f339]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423a32: lea r11, [rip + 0x5f3d7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423980: lea r11, [rip + 0x5f489]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004238e2: lea r11, [rip + 0x5f527]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423830: lea r11, [rip + 0x5f5d9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423792: lea r11, [rip + 0x5f677]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004236e0: lea r11, [rip + 0x5f729]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423642: lea r11, [rip + 0x5f7c7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423590: lea r11, [rip + 0x5f879]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004234f2: lea r11, [rip + 0x5f917]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423440: lea r11, [rip + 0x5f9c9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004233a2: lea r11, [rip + 0x5fa67]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004232f0: lea r11, [rip + 0x5fb19]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423257: lea r11, [rip + 0x5fbb2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004231a0: lea r11, [rip + 0x5fc69]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423102: lea r11, [rip + 0x5fd07]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423050: lea r11, [rip + 0x5fdb9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422fb2: lea r11, [rip + 0x5fe57]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422f00: lea r11, [rip + 0x5ff09]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422e62: lea r11, [rip + 0x5ffa7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422db0: lea r11, [rip + 0x60059]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422d12: lea r11, [rip + 0x600f7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422c60: lea r11, [rip + 0x601a9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422bc2: lea r11, [rip + 0x60247]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422b10: lea r11, [rip + 0x602f9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422a72: lea r11, [rip + 0x60397]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004229c0: lea r11, [rip + 0x60449]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422922: lea r11, [rip + 0x604e7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422876: lea r11, [rip + 0x60593]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422785: lea r11, [rip + 0x60684]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004226c6: lea r11, [rip + 0x60743]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042265c: lea r11, [rip + 0x607ad]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042256d: lea r11, [rip + 0x6089c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004224a8: lea r11, [rip + 0x60961]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000421763: lea r11, [rip + 0x61566]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x00000000004216e9: lea r11, [rip + 0x615e0]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000042165a: lea r11, [rip + 0x6166f]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000042144f: lea r11, [rip + 0x6187a]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000042131d: lea r11, [rip + 0x619ac]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421257: lea r11, [rip + 0x61a72]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x00000000004211d9: lea r11, [rip + 0x61af0]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421142: lea r11, [rip + 0x61b87]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420f46: lea r11, [rip + 0x61d83]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420e15: lea r11, [rip + 0x61eb4]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420d06: lea r11, [rip + 0x61fc3]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000044ff53: lea r12, [rcx + rax]; mov rdi, r12; call rbx; 
0x000000000044ff87: lea r14, [rax + r13]; nop dword ptr [rax + rax]; mov rdx, rbp; mov rsi, r12; mov rdi, r15; call rbx; 
0x0000000000479840: lea r14, [rbx + rax*8]; nop dword ptr [rax]; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x0000000000442d24: lea r15, [r12 + 1]; cmp rax, 0x17; ja 0x42d00; movsxd rax, dword ptr [rbp + rax*4]; add rax, rbp; jmp rax; 
0x000000000040f5d2: lea r15, [r12 + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x000000000043c154: lea r9, [rsi + rdx]; cmp rdi, r9; jb 0x3c2c4; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043c4af: lea r9, [rsi + rdx]; cmp rdi, r9; jb 0x3c681; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043c8fa: lea r9, [rsi + rdx]; cmp rdi, r9; jb 0x3cb3c; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000460c1d: lea r9, [rsp + 0x20]; call rbx; 
0x0000000000460afd: lea r9, [rsp + 0x28]; call rbx; 
0x0000000000460e17: lea r9, [rsp + 0x30]; call rbx; 
0x0000000000440d60: lea rax, [r8 + 1]; mov qword ptr [rip + 0x6d57d], rax; ret; 
0x000000000047ae4e: lea rax, [rax + 8]; mov qword ptr [r9], rdx; pop rbx; ret; 
0x000000000047db6b: lea rax, [rax + 8]; mov qword ptr [rcx], rdx; ret; 
0x000000000041fe93: lea rax, [rax + rdi + 0x10]; ret; 
0x000000000041fea3: lea rax, [rax + rdi + 0x20]; ret; 
0x000000000041fe73: lea rax, [rax + rdi - 0x10]; ret; 
0x000000000046767a: lea rax, [rax + rdx*4]; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x000000000046764c: lea rax, [rax + rdx*4]; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000046011c: lea rax, [rcx + rsi]; ret; 
0x000000000043ba93: lea rax, [rcx - 1]; ret; 
0x000000000043975b: lea rax, [rdi + 0x10]; ret; 
0x0000000000439770: lea rax, [rdi + 0x11]; ret; 
0x000000000043978e: lea rax, [rdi + 0x12]; ret; 
0x00000000004397ae: lea rax, [rdi + 0x13]; ret; 
0x00000000004397d1: lea rax, [rdi + 0x14]; ret; 
0x00000000004397f0: lea rax, [rdi + 0x15]; ret; 
0x0000000000439810: lea rax, [rdi + 0x16]; ret; 
0x0000000000439830: lea rax, [rdi + 0x17]; ret; 
0x0000000000439853: lea rax, [rdi + 0x18]; ret; 
0x0000000000439878: lea rax, [rdi + 0x19]; ret; 
0x0000000000439896: lea rax, [rdi + 0x1a]; ret; 
0x00000000004398b6: lea rax, [rdi + 0x1b]; ret; 
0x00000000004398d2: lea rax, [rdi + 0x1c]; ret; 
0x00000000004398f2: lea rax, [rdi + 0x1d]; ret; 
0x0000000000439912: lea rax, [rdi + 0x1e]; ret; 
0x0000000000439932: lea rax, [rdi + 0x1f]; ret; 
0x00000000004396ac: lea rax, [rdi + 0xa]; ret; 
0x00000000004396cc: lea rax, [rdi + 0xb]; ret; 
0x00000000004396ee: lea rax, [rdi + 0xc]; ret; 
0x000000000043970e: lea rax, [rdi + 0xd]; ret; 
0x000000000043972e: lea rax, [rdi + 0xe]; ret; 
0x0000000000439748: lea rax, [rdi + 0xf]; ret; 
0x00000000004395f6: lea rax, [rdi + 1]; ret; 
0x0000000000439c36: lea rax, [rdi + 1]; vzeroupper; ret; 
0x0000000000439609: lea rax, [rdi + 2]; ret; 
0x0000000000439c4a: lea rax, [rdi + 2]; vzeroupper; ret; 
0x0000000000439614: lea rax, [rdi + 3]; ret; 
0x0000000000439c64: lea rax, [rdi + 3]; vzeroupper; ret; 
0x0000000000439627: lea rax, [rdi + 4]; ret; 
0x000000000043963c: lea rax, [rdi + 5]; ret; 
0x000000000043965a: lea rax, [rdi + 6]; ret; 
0x0000000000439666: lea rax, [rdi + 7]; ret; 
0x0000000000439679: lea rax, [rdi + 8]; ret; 
0x000000000043968e: lea rax, [rdi + 9]; ret; 
0x000000000041fec8: lea rax, [rdi + rax + 0x10]; ret; 
0x00000000004351b6: lea rax, [rdi + rax + 0x20]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000041fed8: lea rax, [rdi + rax + 0x20]; ret; 
0x000000000041fdd2: lea rax, [rdi + rax + 0x30]; ret; 
0x00000000004351d6: lea rax, [rdi + rax + 0x40]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000435214: lea rax, [rdi + rax + 0x60]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000460364: lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x0000000000434c1b: lea rax, [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000043507c: lea rax, [rdi + rax]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000434e36: lea rax, [rdi + rax]; ret; 
0x0000000000439c7c: lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000460018: lea rax, [rdi + rsi]; ret; 
0x000000000046cdc7: lea rax, [rdi - 1]; cmp rax, -3; jbe 0x6cdd8; ret; 
0x00000000004395e2: lea rax, [rdi]; ret; 
0x0000000000439bb4: lea rax, [rdi]; vzeroupper; ret; 
0x0000000000438bcc: lea rax, [rdx + 0xa]; ret; 
0x0000000000438bec: lea rax, [rdx + 0xb]; ret; 
0x0000000000438c0e: lea rax, [rdx + 0xc]; ret; 
0x0000000000438c2e: lea rax, [rdx + 0xd]; ret; 
0x0000000000438c4e: lea rax, [rdx + 0xe]; ret; 
0x0000000000438ade: lea rax, [rdx + 0xf]; ret; 
0x0000000000438b06: lea rax, [rdx + 1]; ret; 
0x0000000000438b1c: lea rax, [rdx + 2]; ret; 
0x0000000000438b34: lea rax, [rdx + 3]; ret; 
0x0000000000438b4a: lea rax, [rdx + 4]; ret; 
0x0000000000438b5c: lea rax, [rdx + 5]; ret; 
0x0000000000438b7a: lea rax, [rdx + 6]; ret; 
0x000000000047db60: lea rax, [rdx + 7]; and rax, 0xfffffffffffffff8; mov rdx, qword ptr [rax]; lea rax, [rax + 8]; mov qword ptr [rcx], rdx; ret; 
0x0000000000438a86: lea rax, [rdx + 7]; ret; 
0x0000000000438b8c: lea rax, [rdx + 8]; ret; 
0x0000000000438bac: lea rax, [rdx + 9]; ret; 
0x000000000047396d: lea rax, [rdx + rcx]; cmp rax, qword ptr [rip + 0x3be38]; jae 0x73986; mov rdx, qword ptr [rip + 0x3be37]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000417438: lea rax, [rdx - 0x10]; ret; 
0x0000000000438af4: lea rax, [rdx]; ret; 
0x0000000000418890: lea rax, [rip + 0x14649]; and dh, 8; je 0x188c8; ret; 
0x0000000000418710: lea rax, [rip + 0x147a9]; and dh, 8; je 0x18748; ret; 
0x00000000004185a0: lea rax, [rip + 0x14939]; and dh, 8; je 0x185d8; ret; 
0x0000000000418821: lea rax, [rip + 0x14e08]; lea rdx, [rip + 0x17041]; cmovne rax, rdx; ret; 
0x0000000000418975: lea rax, [rip + 0x1c474]; cmove rax, rdx; ret; 
0x0000000000417b2e: lea rax, [rip + 0x1d09b]; lea rdx, [rip + 0x221b4]; cmovne rax, rdx; ret; 
0x00000000004187ce: lea rax, [rip + 0x1d3eb]; lea rdx, [rip + 0x1ec74]; cmovne rax, rdx; ret; 
0x0000000000417c95: lea rax, [rip + 0x1d784]; cmove rax, rdx; ret; 
0x0000000000417bee: lea rax, [rip + 0x1deeb]; lea rdx, [rip + 0x1e0a4]; cmovne rax, rdx; ret; 
0x000000000041848e: lea rax, [rip + 0x232eb]; cmove rax, rdx; ret; 
0x00000000004188f6: lea rax, [rip + 0x23823]; cmove rax, rdx; ret; 
0x0000000000418776: lea rax, [rip + 0x23993]; cmove rax, rdx; ret; 
0x0000000000418606: lea rax, [rip + 0x23b13]; cmove rax, rdx; ret; 
0x000000000041887c: lea rax, [rip + 0x23bed]; cmove rax, rdx; ret; 
0x00000000004186fc: lea rax, [rip + 0x23d5d]; cmove rax, rdx; ret; 
0x000000000041858c: lea rax, [rip + 0x23edd]; cmove rax, rdx; ret; 
0x00000000004188d6: lea rax, [rip + 0x23fd3]; cmove rax, rdx; ret; 
0x0000000000417c1e: lea rax, [rip + 0x23ffb]; cmovne rax, rdx; ret; 
0x0000000000418756: lea rax, [rip + 0x24143]; cmove rax, rdx; ret; 
0x0000000000418681: lea rax, [rip + 0x24738]; cmovne rax, rdx; ret; 
0x0000000000418666: lea rax, [rip + 0x24913]; cmove rax, rdx; ret; 
0x00000000004186aa: lea rax, [rip + 0x24a5f]; cmove rax, rdx; ret; 
0x000000000046105e: lea rax, [rip + 0x25b]; lea rdx, [rip + 0x34]; cmovne rax, rdx; ret; 
0x000000000041221a: lea rax, [rip + 0x344f]; mov qword ptr [rip + 0x9a558], rax; ret; 
0x0000000000417cf8: lea rax, [rip + 0x3a21]; lea rdx, [rip + 0x526a]; cmovne rax, rdx; ret; 
0x0000000000472830: lea rax, [rip + 0x3ce89]; mov qword ptr [rip + 0x3ce6a], rax; ret; 
0x0000000000472815: lea rax, [rip + 0x3cea4]; mov qword ptr [rip + 0x3ce85], rax; add rsp, 8; ret; 
0x000000000044e383: lea rax, [rip + 0x5d8d6]; mov rax, qword ptr [rax + r14*8]; test rax, rax; je 0x4e395; call rax; 
0x000000000044e141: lea rax, [rip + 0x5db18]; mov rax, qword ptr [rax + rbx*8]; test rax, rax; je 0x4e153; call rax; 
0x0000000000442be0: lea rax, [rip + 0x6a639]; ret; 
0x0000000000472fde: lea rax, [rip + 0x6b]; cmovne rax, rdx; ret; 
0x0000000000473245: lea rax, [rip + 0x74]; cmove rax, rdx; ret; 
0x0000000000418935: lea rax, [rip + 0x75c4]; cmove rax, rdx; ret; 
0x00000000004184c5: lea rax, [rip + 0x7704]; cmove rax, rdx; ret; 
0x000000000041850f: lea rax, [rip + 0x7ffa]; lea rdx, [rip + 0x21af3]; cmovne rax, rdx; ret; 
0x000000000045f6f5: lea rax, [rip + 0x834]; cmove rax, rdx; ret; 
0x0000000000418530: lea rax, [rip + 0x83d9]; test byte ptr [rip + 0x96dc7], 1; je 0x184fd; ret; 
0x0000000000414518: lea rax, [rip + 0x98281]; add rsp, 0x10; pop rbp; ret; 
0x0000000000460955: lea rax, [rip + 0x994]; cmove rax, rdx; ret; 
0x00000000004188b1: lea rax, [rip + 0x9aa8]; lea rdx, [rip + 0xf011]; cmovne rax, rdx; ret; 
0x0000000000418731: lea rax, [rip + 0x9c08]; lea rdx, [rip + 0xf171]; cmovne rax, rdx; ret; 
0x00000000004185c1: lea rax, [rip + 0xc768]; lea rdx, [rip + 0x11dd1]; cmovne rax, rdx; ret; 
0x000000000045f6b5: lea rax, [rip + 0xd34]; cmove rax, rdx; ret; 
0x0000000000417b8e: lea rax, [rip + 0xdfb]; lea rdx, [rip + 0x24e4]; cmovne rax, rdx; ret; 
0x00000000004160e6: lea rax, [rip - 0x66d]; mov qword ptr [rip + 0x96694], rax; lea rax, [rip - 0xa8b]; mov qword ptr [rip + 0x9667e], rax; ret; 
0x00000000004160f4: lea rax, [rip - 0xa8b]; mov qword ptr [rip + 0x9667e], rax; ret; 
0x000000000043f3cb: lea rax, [rsp + 0x30]; mov qword ptr [rsp + 0x20], rax; cmp esi, 9; je 0x3f400; mov eax, 0x48; syscall; 
0x000000000047d9e2: lea rbx, [r12 + r9*8]; mov rax, qword ptr [rsp + 8]; mov rdx, r8; mov rdi, r15; mov rsi, qword ptr [rbx]; call rax; 
0x0000000000475060: lea rbx, [rbp + rdx*8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x0000000000438e7d: lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000460af5: lea rcx, [rax + 1]; mov rdi, qword ptr [r12]; lea r9, [rsp + 0x28]; call rbx; 
0x0000000000460c95: lea rcx, [rax + 4]; lea r9, [rsp + 0x20]; call rbx; 
0x000000000045cf30: lea rcx, [rbx + 0x40]; mov esi, 1; mov rdi, rbx; call rax; 
0x000000000041e82f: lea rcx, [rdx + rcx - 0x10]; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x000000000045d22f: lea rcx, [rip + 0x37fae]; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000045cb90: lea rcx, [rip + 0x3834d]; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000045cbee: lea rcx, [rip + 0x383ab]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000046d4d3: lea rcx, [rip + 0x405a6]; mov qword ptr [rax], rcx; pop rbp; ret; 
0x000000000045a8be: lea rcx, [rip + 0x4f4bb]; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000459e06: lea rcx, [rip + 0x4ff73]; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x0000000000434b68: lea rcx, [rip + 0x52971]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000433753: lea rcx, [rip + 0x53d86]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x00000000004334f8: lea rcx, [rip + 0x53fe1]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000431c23: lea rcx, [rip + 0x558b6]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000040da7d: lea rcx, [rip + 0xa01bc]; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x0000000000440c49: lea rcx, [rip - 0x60]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x000000000046233d: lea rcx, [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000462326: lea rcx, [rsi + rcx*4]; mov edx, dword ptr [rcx + rdx]; test edx, edx; jne 0x62338; ret; 
0x000000000045cb8f: lea rcx, es:[rip + 0x3834d]; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000441afc: lea rdi, [rcx + rsi + 0x20]; jmp rdx; 
0x000000000043c0fe: lea rdi, [rdi + rcx - 1]; lea rsi, [rsi + rcx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x000000000042787c: lea rdi, [rdi - 0x40]; sub rdx, 0x40; lea r11, [rip + 0x5b745]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000473f5c: lea rdi, [rip + 0x2451d]; call 0x2df0; nop dword ptr [rax + rax]; ret; 
0x0000000000468ace: lea rdi, [rip + 0x2d7e3]; movsxd rax, dword ptr [rdi + r12*4]; add rax, rdi; jmp rax; 
0x0000000000472747: lea rdi, [rip + 0x3cf3a]; syscall; 
0x00000000004724c3: lea rdi, [rip + 0x3d1ba]; syscall; 
0x00000000004705d7: lea rdi, [rip + 0x3f092]; syscall; 
0x0000000000442bd1: lea rdi, [rip + 0x426c8]; call 0x2df0; nop dword ptr [rax]; lea rax, [rip + 0x6a639]; ret; 
0x0000000000441a5f: lea rdi, [rip + 0x4310c]; mov eax, 0x15; syscall; 
0x00000000004551cc: lea rdi, [rip + 0x544ad]; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000455159: lea rdi, [rip + 0x54520]; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000453f89: lea rdi, [rip + 0x556f0]; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000450937: lea rdi, [rip + 0x5eca2]; syscall; 
0x0000000000450872: lea rdi, [rip + 0x5ed67]; syscall; 
0x00000000004506d5: lea rdi, [rip + 0x5ef04]; syscall; 
0x0000000000450606: lea rdi, [rip + 0x5efd3]; syscall; 
0x0000000000445387: lea rdi, [rip + 0x6a04a]; syscall; 
0x000000000044521b: lea rdi, [rip + 0x6a1b6]; syscall; 
0x0000000000445123: lea rdi, [rip + 0x6a2ae]; syscall; 
0x000000000043ddbf: lea rdi, [rip + 0x71612]; syscall; 
0x0000000000408671: lea rdi, [rip + 0x79155]; call 0x2df0; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000417a23: lea rdi, [rip + 0x94d76]; syscall; 
0x0000000000415d0b: lea rdi, [rip + 0x96a8e]; syscall; 
0x0000000000415cd3: lea rdi, [rip + 0x96ac6]; syscall; 
0x00000000004157b3: lea rdi, [rip + 0x96fe6]; syscall; 
0x000000000041546f: lea rdi, [rip + 0x9732a]; syscall; 
0x000000000041692e: lea rdi, [rip + 0x9885b]; syscall; 
0x0000000000413d9f: lea rdi, [rip + 0x989fa]; syscall; 
0x0000000000413d9f: lea rdi, [rip + 0x989fa]; syscall; pop rbp; ret; 
0x0000000000413d6f: lea rdi, [rip + 0x98a2a]; syscall; 
0x0000000000416007: lea rdi, [rip + 0x99172]; syscall; 
0x0000000000416007: lea rdi, [rip + 0x99172]; syscall; pop rbx; ret; 
0x000000000041433d: lea rdi, [rip + 0x9ae4c]; syscall; 
0x00000000004142c1: lea rdi, [rip + 0x9aeb8]; syscall; 
0x000000000041401c: lea rdi, [rip + 0x9b16d]; syscall; 
0x000000000041217f: lea rdi, [rip + 0x9d00a]; syscall; 
0x0000000000410d2e: lea rdi, [rip + 0x9e3db]; syscall; 
0x0000000000410d2e: lea rdi, [rip + 0x9e3db]; syscall; ret; 
0x0000000000410835: lea rdi, [rip + 0x9e8d4]; syscall; 
0x00000000004104ea: lea rdi, [rip + 0x9ec1f]; syscall; 
0x00000000004101a7: lea rdi, [rip + 0x9ef62]; syscall; 
0x000000000040eea1: lea rdi, [rip + 0xa0268]; syscall; 
0x000000000040ebe1: lea rdi, [rip + 0xa0528]; syscall; 
0x000000000040e735: lea rdi, [rip + 0xa09d4]; syscall; 
0x000000000040e735: lea rdi, [rip + 0xa09d4]; syscall; ret; 
0x00000000004096a3: lea rdi, [rip + 0xa5d2e]; syscall; 
0x0000000000408772: lea rdi, [rip + 0xa654f]; syscall; 
0x000000000040854b: lea rdi, [rip + 0xa6776]; syscall; 
0x0000000000408510: lea rdi, [rip + 0xa67b1]; syscall; 
0x000000000040843c: lea rdi, [rip + 0xa6885]; syscall; 
0x0000000000406510: lea rdi, [rip + 0xa8751]; syscall; 
0x0000000000404c3d: lea rdi, [rip + 0xa9fec]; syscall; 
0x0000000000403c54: lea rdi, [rip + 0xaaf25]; syscall; 
0x0000000000403c2b: lea rdi, [rip + 0xaaf4e]; syscall; 
0x0000000000403b22: lea rdi, [rip + 0xab057]; syscall; 
0x0000000000401204: lea rdi, [rip + 0xada75]; syscall; 
0x00000000004224b3: lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000045f17c: lea rdx, [r8 + rdx*4]; mov qword ptr [rax + 0x10], rdi; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000045f14b: lea rdx, [r8 + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000411772: lea rdx, [rax + 1]; mov qword ptr [rip + 0x9afd3], rdx; ret; 
0x000000000045cf2c: lea rdx, [rbx + 0x34]; lea rcx, [rbx + 0x40]; mov esi, 1; mov rdi, rbx; call rax; 
0x00000000004265e7: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5c9d9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426497: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5cb29]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426347: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5cc79]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004260a7: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5cf19]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425f57: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d069]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425e07: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d1b9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425cb7: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d309]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425b67: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d459]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425a17: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d5a9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004258c7: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d6f9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425777: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d849]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425627: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d999]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004254d7: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5dae9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425387: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5dc39]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423c17: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f1e9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423ac7: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f339]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423977: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f489]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423827: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f5d9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004236d7: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f729]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423587: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f879]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004232e7: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5fb19]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423197: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5fc69]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423047: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5fdb9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422ef7: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5ff09]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422c57: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x601a9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004229b7: lea rdx, [rdx + 0x40]; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x60449]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000472fd7: lea rdx, [rip + 0x112]; lea rax, [rip + 0x6b]; cmovne rax, rdx; ret; 
0x00000000004185c8: lea rdx, [rip + 0x11dd1]; cmovne rax, rdx; ret; 
0x0000000000418828: lea rdx, [rip + 0x17041]; cmovne rax, rdx; ret; 
0x000000000041896e: lea rdx, [rip + 0x1c8bb]; lea rax, [rip + 0x1c474]; cmove rax, rdx; ret; 
0x000000000047fc40: lea rdx, [rip + 0x1cfd1]; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000417c8e: lea rdx, [rip + 0x1d92b]; lea rax, [rip + 0x1d784]; cmove rax, rdx; ret; 
0x0000000000417bf5: lea rdx, [rip + 0x1e0a4]; cmovne rax, rdx; ret; 
0x00000000004187d5: lea rdx, [rip + 0x1ec74]; cmovne rax, rdx; ret; 
0x000000000047db20: lea rdx, [rip + 0x1f0b1]; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000047ae17: lea rdx, [rip + 0x21822]; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000418516: lea rdx, [rip + 0x21af3]; cmovne rax, rdx; ret; 
0x0000000000417b35: lea rdx, [rip + 0x221b4]; cmovne rax, rdx; ret; 
0x00000000004188ef: lea rdx, [rip + 0x2378a]; lea rax, [rip + 0x23823]; cmove rax, rdx; ret; 
0x000000000041876f: lea rdx, [rip + 0x238fa]; lea rax, [rip + 0x23993]; cmove rax, rdx; ret; 
0x00000000004185ff: lea rdx, [rip + 0x23a7a]; lea rax, [rip + 0x23b13]; cmove rax, rdx; ret; 
0x0000000000418875: lea rdx, [rip + 0x23bb4]; lea rax, [rip + 0x23bed]; cmove rax, rdx; ret; 
0x00000000004186f5: lea rdx, [rip + 0x23d24]; lea rax, [rip + 0x23d5d]; cmove rax, rdx; ret; 
0x0000000000418585: lea rdx, [rip + 0x23ea4]; lea rax, [rip + 0x23edd]; cmove rax, rdx; ret; 
0x00000000004188cf: lea rdx, [rip + 0x23f8a]; lea rax, [rip + 0x23fd3]; cmove rax, rdx; ret; 
0x0000000000417c17: lea rdx, [rip + 0x240a2]; lea rax, [rip + 0x23ffb]; cmovne rax, rdx; ret; 
0x000000000041874f: lea rdx, [rip + 0x240fa]; lea rax, [rip + 0x24143]; cmove rax, rdx; ret; 
0x000000000041867a: lea rdx, [rip + 0x2479f]; lea rax, [rip + 0x24738]; cmovne rax, rdx; ret; 
0x000000000041865f: lea rdx, [rip + 0x248ca]; lea rax, [rip + 0x24913]; cmove rax, rdx; ret; 
0x00000000004186a3: lea rdx, [rip + 0x24a06]; lea rax, [rip + 0x24a5f]; cmove rax, rdx; ret; 
0x0000000000417b95: lea rdx, [rip + 0x24e4]; cmovne rax, rdx; ret; 
0x0000000000472d24: lea rdx, [rip + 0x256f1]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000461065: lea rdx, [rip + 0x34]; cmovne rax, rdx; ret; 
0x000000000047323e: lea rdx, [rip + 0x3ab]; lea rax, [rip + 0x74]; cmove rax, rdx; ret; 
0x0000000000472cb5: lea rdx, [rip + 0x3ae04]; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x000000000043e470: lea rdx, [rip + 0x45f25]; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x0000000000417cff: lea rdx, [rip + 0x526a]; cmovne rax, rdx; ret; 
0x0000000000434bb6: lea rdx, [rip + 0x52923]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000434b9c: lea rdx, [rip + 0x5293d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000433546: lea rdx, [rip + 0x53f93]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043352c: lea rdx, [rip + 0x53fad]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000431996: lea rdx, [rip + 0x55b43]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043197c: lea rdx, [rip + 0x55b5d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000042f846: lea rdx, [rip + 0x57c93]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000042f82c: lea rdx, [rip + 0x57cad]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000417885: lea rdx, [rip + 0x6b29c]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000041892e: lea rdx, [rip + 0x7a9b]; lea rax, [rip + 0x75c4]; cmove rax, rdx; ret; 
0x00000000004184be: lea rdx, [rip + 0x7c3b]; lea rax, [rip + 0x7704]; cmove rax, rdx; ret; 
0x0000000000402efc: lea rdx, [rip + 0x7e391]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000401af6: lea rdx, [rip + 0x823e7]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000045f6ee: lea rdx, [rip + 0xb2b]; lea rax, [rip + 0x834]; cmove rax, rdx; ret; 
0x000000000046094e: lea rdx, [rip + 0xc3b]; lea rax, [rip + 0x994]; cmove rax, rdx; ret; 
0x00000000004188b8: lea rdx, [rip + 0xf011]; cmovne rax, rdx; ret; 
0x0000000000418738: lea rdx, [rip + 0xf171]; cmovne rax, rdx; ret; 
0x000000000045f6ae: lea rdx, [rip + 0xf5b]; lea rax, [rip + 0xd34]; cmove rax, rdx; ret; 
0x0000000000418487: lea rdx, [rip - 0x2fe]; lea rax, [rip + 0x232eb]; cmove rax, rdx; ret; 
0x000000000043c0f2: lea rdx, [rsi + rcx]; cmp rdi, rdx; jb 0x3c0fe; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043f400: lea rdx, [rsp + 8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000000469eb8: lea rsi, [rbp - 0x430]; mov eax, 0x14; syscall; 
0x0000000000473f55: lea rsi, [rip + 0x2450c]; lea rdi, [rip + 0x2451d]; call 0x2df0; nop dword ptr [rax + rax]; ret; 
0x0000000000468221: lea rsi, [rip + 0x2dff8]; movsxd rax, dword ptr [rsi + r12*4]; add rax, rsi; jmp rax; 
0x000000000045d1d5: lea rsi, [rip + 0x37f4c]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x0000000000442bca: lea rsi, [rip + 0x425c4]; lea rdi, [rip + 0x426c8]; call 0x2df0; nop dword ptr [rax]; lea rax, [rip + 0x6a639]; ret; 
0x000000000043d2b2: lea rsi, [rip + 0x46b87]; movsxd rax, dword ptr [rsi + rdi*4]; add rax, rsi; jmp rax; 
0x000000000045a2e6: lea rsi, [rip + 0x4fe93]; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x000000000040866a: lea rsi, [rip + 0x7914f]; lea rdi, [rip + 0x79155]; call 0x2df0; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000402778: lea rsi, [rip + 0x7e959]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000043c103: lea rsi, [rsi + rcx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x000000000046c4c6: leave; add dword ptr [rax], eax; add byte ptr [rdi], cl; mov dh, 0x45; add cl, byte ptr [rax - 0x7d]; ret; 
0x00000000004265f4: leave; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004667e3: leave; add eax, 0x8949fffb; ret 0x8548; 
0x000000000043bd5c: leave; add rax, rcx; sub rax, rdi; ret; 
0x0000000000426203: leave; int 5; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000417435: leave; je 0x17440; lea rax, [rdx - 0x10]; ret; 
0x0000000000459e12: leave; jmp rax; 
0x000000000043b870: leave; jne 0x3b860; ret; 
0x000000000043b920: leave; jne 0x3b910; ret; 
0x000000000043bbe0: leave; jne 0x3bbd0; sub rax, 1; ret; 
0x000000000046839e: leave; jne 0x683a3; call rax; 
0x000000000040bc27: leave; jne 0xbc38; mov eax, dword ptr [rdx + 0x4c]; cmp dword ptr [rdx + 0x48], eax; cmovne eax, ecx; ret; 
0x0000000000420a8f: leave; mov al, byte ptr [rdi + rdx - 1]; mov cl, byte ptr [rsi + rdx - 1]; sub eax, ecx; ret; 
0x0000000000419f7c: leave; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x00000000004160af: leave; nop; or dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000401cd2: leave; ret; 
0x0000000000411793: leave; scasd eax, dword ptr [rdi]; or dword ptr [rax], eax; ret; 
0x0000000000423443: leave; stc; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000459d3b: leave; sti; jmp qword ptr [rsi - 0x70]; 
0x000000000044417c: leave; xor edx, edx; push rax; call rbx; 
0x0000000000438ecd: ljmp [rbp + 0x63490004]; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000045418f: ljmp [rcx]; ret; 
0x00000000004210ce: lock add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004188bc: lock add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x000000000047db24: lock add dword ptr [rax], eax; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000470572: lock add eax, dword ptr [rax]; add dword ptr [rbx + 0x44], ebx; mov eax, eax; pop rbp; pop r12; ret; 
0x00000000004705db: lock add eax, dword ptr [rax]; syscall; 
0x000000000046b1fb: lock inc dword ptr [r8 + 0x10]; pop rbx; pop rbp; ret; 
0x000000000045228a: lodsb al, byte ptr [rsi]; adc al, byte ptr [rax]; add byte ptr [rcx + rcx*4 - 0x16], cl; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000043b1f0: lodsb al, byte ptr [rsi]; add byte ptr [rax], al; add dh, dh; ret 0x7501; 
0x0000000000428557: lodsb al, byte ptr [rsi]; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004579b8: lodsb al, byte ptr [rsi]; jl 0x579c0; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x4d], 0x63; ret; 
0x000000000041e9e4: lodsb al, byte ptr [rsi]; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x00000000004469a0: lodsb al, byte ptr [rsi]; ret 0xffff; 
0x0000000000421320: lodsb al, byte ptr [rsi]; sbb dword ptr [rsi], eax; add byte ptr [rcx + 0x63], cl; or al, 0x93; add rcx, r11; jmp rcx; 
0x0000000000428556: lodsb al, byte ptr ss:[rsi]; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000438ece: lodsd eax, dword ptr [rsi]; add al, 0; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000004283d7: lodsd eax, dword ptr [rsi]; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000045862a: lodsd eax, dword ptr [rsi]; clc; idiv bh; dec dword ptr [rbp + 0x63]; ret 0x8948; 
0x0000000000477062: lodsd eax, dword ptr [rsi]; ret; 
0x0000000000424997: loope 0x249e5; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004249df: loope 0x24a2d; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424a1d: loope 0x24a6b; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424a55: loope 0x24aa3; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424a93: loope 0x24ae1; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424acb: loope 0x24b19; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424af3: loope 0x24b41; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424c2d: loope 0x24c34; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424d07: loope 0x24d0e; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424e7c: loope 0x24e83; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427367: loope 0x273b5; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004273af: loope 0x273fd; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004273ed: loope 0x2743b; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000427425: loope 0x27473; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000427463: loope 0x274b1; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042749b: loope 0x274e9; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004274c3: loope 0x27511; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042954a: loope 0x2953f; movq qword ptr [rdi - 0x10], mm1; ret; 
0x000000000042c06a: loope 0x2c05f; movq qword ptr [rdi - 0x10], mm1; ret; 
0x00000000004334fb: loope 0x3353c; add eax, 0x91148b00; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x00000000004355ac: loope 0x355ce; or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000000438f3e: loope 0x38ed0; bsf rdx, rdx; lea r11, [rip + 0x4ad85]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438fb5: loope 0x3901d; nop dword ptr cs:[rax + rax]; mov byte ptr [rdi], dh; ret; 
0x000000000043955e: loope 0x394f0; bsf rdx, rdx; lea r11, [rip + 0x4a7e5]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000004395d5: loope 0x3963d; nop dword ptr cs:[rax + rax]; mov byte ptr [rdi], dh; lea rax, [rdi]; ret; 
0x0000000000439ce3: loope 0x39d2d; lea eax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000439f1b: loope 0x39f1d; add byte ptr [rax], al; lea rax, [rdi + 0xf]; ret; 
0x000000000043d339: loope 0x3d33b; cld; add eax, dword ptr [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000000043dff7: loope 0x3e045; mov edx, ebp; call rbx; 
0x000000000043e169: loope 0x3e1d5; add byte ptr [rcx + rcx*4 - 0x16], cl; mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; mov rdi, rbp; call rbx; 
0x00000000004413f1: loope 0x413f7; cmp r8, qword ptr [rcx + rsi + 0x10]; jae 0x413a1; xor eax, eax; ret; 
0x0000000000444a7a: loope 0x44a7b; dec dword ptr [rax - 0x75]; xchg eax, r8d; mov rdi, r12; call rax; 
0x0000000000456a96: loope 0x56a9b; add al, ch; push rdx; ret; 
0x00000000004605f8: loope 0x6061a; or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x00000000004614ce: loope 0x614df; je 0x614f0; ret; 
0x0000000000476ef7: loope 0x76f45; mov dword ptr [rdi], ecx; ret; 
0x0000000000476f28: loope 0x76f76; mov dword ptr [rdi - 8], ecx; ret; 
0x0000000000476f9d: loope 0x76feb; mov dword ptr [rdi - 0x10], ecx; ret; 
0x000000000047cd1c: loope 0x7ccdc; or al, byte ptr [rax]; add byte ptr [rax], al; mov edi, 1; call rax; 
0x000000000047cd47: loope 0x7cd07; or al, byte ptr [rax]; add byte ptr [rax], al; mov edi, 1; call rax; 
0x000000000047cde4: loope 0x7cda4; sbb al, byte ptr [rax]; add byte ptr [rax], al; mov edi, 1; call rax; 
0x00000000004803c6: loope 0x80423; ret; 
0x0000000000417b38: mov ah, 0x21; add al, byte ptr [rax]; cmovne rax, rdx; ret; 
0x0000000000443887: mov ah, 0x24; ret 0; 
0x0000000000418878: mov ah, 0x3b; add al, byte ptr [rax]; lea rax, [rip + 0x23bed]; cmove rax, rdx; ret; 
0x00000000004091f6: mov ah, 0x45; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000040b3fa: mov ah, 0x48; add esp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000000406d78: mov ah, 0xf9; add byte ptr [rax], al; nop dword ptr [rax]; ret; 
0x0000000000447901: mov ah, 0xfb; jmp qword ptr [rsi + 0x66]; 
0x000000000047cf53: mov al, 0; add byte ptr [rax], al; ret; 
0x000000000043fe7d: mov al, 0x45; mov edi, esi; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x000000000040dc8e: mov al, 0x90; test rdx, rdx; jne 0xdca0; xor eax, eax; ret; 
0x0000000000403b76: mov al, 0xa; add al, ch; ret 0xda; 
0x00000000004351ff: mov al, 0xc5; std; xlatb; ret; 
0x0000000000469641: mov al, 0xf; xchg eax, ebp; ret 0x2148; 
0x0000000000416ac7: mov al, 0xff; jmp qword ptr [rsi + 0xf]; 
0x00000000004280d7: mov al, 5; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000411694: mov al, 9; add bh, al; add eax, 0x9b093; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000411706: mov al, 9; add byte ptr [rcx], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0x9afec; ret; 
0x00000000004116d6: mov al, 9; add byte ptr [rcx], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0x9b024; ret; 
0x000000000046d119: mov al, byte ptr [rax]; add byte ptr [rax], al; add rsp, 0x48; ret; 
0x0000000000413d8c: mov al, byte ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x989fa]; syscall; 
0x0000000000442c62: mov al, byte ptr [rbx + 0x2e660002]; nop dword ptr [rax + rax]; ret; 
0x0000000000438b16: mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; lea rax, [rdx + 2]; ret; 
0x0000000000437366: mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; mov rax, rdi; ret; 
0x0000000000438b44: mov al, byte ptr [rcx + 4]; mov byte ptr [rdx + 4], al; lea rax, [rdx + 4]; ret; 
0x0000000000437384: mov al, byte ptr [rcx + 4]; mov byte ptr [rdx + 4], al; mov rax, rdi; ret; 
0x0000000000438af0: mov al, byte ptr [rcx]; mov byte ptr [rdx], al; lea rax, [rdx]; ret; 
0x0000000000437340: mov al, byte ptr [rcx]; mov byte ptr [rdx], al; mov rax, rdi; ret; 
0x0000000000420a90: mov al, byte ptr [rdi + rdx - 1]; mov cl, byte ptr [rsi + rdx - 1]; sub eax, ecx; ret; 
0x000000000042abb7: mov al, byte ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000438b54: mov ax, word ptr [rcx + 4]; mov word ptr [rdx + 4], ax; lea rax, [rdx + 5]; ret; 
0x0000000000437394: mov ax, word ptr [rcx + 4]; mov word ptr [rdx + 4], ax; mov rax, rdi; ret; 
0x0000000000438b00: mov ax, word ptr [rcx]; mov word ptr [rdx], ax; lea rax, [rdx + 1]; ret; 
0x0000000000438b10: mov ax, word ptr [rcx]; mov word ptr [rdx], ax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; lea rax, [rdx + 2]; ret; 
0x0000000000437360: mov ax, word ptr [rcx]; mov word ptr [rdx], ax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; mov rax, rdi; ret; 
0x0000000000437350: mov ax, word ptr [rcx]; mov word ptr [rdx], ax; mov rax, rdi; ret; 
0x0000000000439c31: mov bh, 0x16; mov word ptr [rdi], dx; lea rax, [rdi + 1]; vzeroupper; ret; 
0x000000000042a311: mov bh, 0x16; mov word ptr [rdi], dx; ret; 
0x0000000000435a41: mov bh, 0x16; mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000043c1a2: mov bh, 0x36; mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x000000000047e408: mov bh, 0x47; and byte ptr [rsi - 0x3f], ah; call 0x10072015; test byte ptr [rcx - 0x76fffffe], bh; ret 0xb60f; 
0x0000000000439db8: mov bh, 0x48; lea eax, [rdi + 7]; ret; 
0x0000000000453553: mov bh, 0x9d; pop rsp; idiv edi; jmp qword ptr [rsi - 0x77]; 
0x0000000000439495: mov bh, 0xa8; add al, 0; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000403cfc: mov bh, 0xa; add al, ch; cld; ret 0xffbf; 
0x0000000000426015: mov bh, 0xcf; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000439c41: mov bh, 0xe; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; lea rax, [rdi + 2]; vzeroupper; ret; 
0x0000000000435a51: mov bh, 0xe; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x00000000004163f1: mov bh, 0xff; jmp qword ptr [rsi + 0x66]; 
0x0000000000427888: mov bh, 5; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004780d3: mov bh, ah; jmp qword ptr [rsi + 0x2e]; 
0x000000000045dbe2: mov bh, byte ptr [rcx]; cli; jmp qword ptr [rsi + 0x2e]; 
0x00000000004188d2: mov bh, byte ptr [rdi]; add al, byte ptr [rax]; lea rax, [rip + 0x23fd3]; cmove rax, rdx; ret; 
0x000000000046a34c: mov bh, cl; call qword ptr [rax + 0x90d8d48]; ret 2; 
0x000000000043b6ae: mov bl, 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000428f19: mov bl, 0xa4; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428919: mov bl, 0xaa; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428619: mov bl, 0xad; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428319: mov bl, 0xb0; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428019: mov bl, 0xb3; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427d19: mov bl, 0xb6; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000045c86b: mov bl, 0xd8; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xe228; 
0x0000000000445d8e: mov bl, 0xfb; dec dword ptr [rax - 0x77]; ret 0x8548; 
0x000000000044aa03: mov bl, 3; add al, ch; in eax, 0x83; sti; inc dword ptr [rcx - 0x77]; ret; 
0x00000000004726dc: mov bl, 3; add byte ptr [rcx + 0x63], cl; ror byte ptr [rax - 0x77], 0x5c; ret 0x64c0; 
0x0000000000427dd7: mov bl, 5; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000411863: mov byte ptr [r8 + rsi], r10b; mov rax, r8; ret; 
0x0000000000468aa3: mov byte ptr [r9 - 0x77], r9b; ret 0x8949; 
0x00000000004681f6: mov byte ptr [r9 - 0x77], r9b; xchg dword ptr [rax], ebx; add al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000040cd0f: mov byte ptr [rax + 0x48004adb], 0xc7; ret; 
0x000000000043b2c7: mov byte ptr [rax + 0x75], 0xc5; movzx eax, byte ptr [rdi - 9]; movzx edx, byte ptr [rsi - 9]; sub eax, edx; ret; 
0x00000000004023e4: mov byte ptr [rax + rax*2], al; add bl, ch; or bh, bh; push rbx; adc byte ptr [rax - 0x7d], cl; ret; 
0x0000000000411864: mov byte ptr [rax + rsi], dl; mov rax, r8; ret; 
0x0000000000446233: mov byte ptr [rax - 0x7c], 0xf6; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000000044fc31: mov byte ptr [rax], al; add byte ptr [rax], al; mov r10d, 8; mov eax, 0xd; syscall; 
0x0000000000440a1f: mov byte ptr [rax], al; add byte ptr [rax], al; mov rax, r8; pop rbx; pop rbp; ret; 
0x0000000000401f9c: mov byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000043ddac: mov byte ptr [rbp + 0x31], al; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x71612]; syscall; 
0x00000000004580d1: mov byte ptr [rbp - 0x94c], cl; call rax; 
0x00000000004580d0: mov byte ptr [rbp - 0x94c], r9b; call rax; 
0x0000000000468aa4: mov byte ptr [rcx - 0x77], cl; ret 0x8949; 
0x00000000004681f7: mov byte ptr [rcx - 0x77], cl; xchg dword ptr [rax], ebx; add al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000406aed: mov byte ptr [rcx], 0; mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x00000000004168d0: mov byte ptr [rcx], cl; add byte ptr [rcx], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000439758: mov byte ptr [rdi + 0x10], dh; lea rax, [rdi + 0x10]; ret; 
0x00000000004390c8: mov byte ptr [rdi + 0x10], dh; ret; 
0x00000000004397ce: mov byte ptr [rdi + 0x14], dh; lea rax, [rdi + 0x14]; ret; 
0x000000000043911e: mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000439850: mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x00000000004391a0: mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000441512: mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000439c46: mov byte ptr [rdi + 2], 0; lea rax, [rdi + 2]; vzeroupper; ret; 
0x0000000000435a56: mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x0000000000439606: mov byte ptr [rdi + 2], dh; lea rax, [rdi + 2]; ret; 
0x0000000000438fe6: mov byte ptr [rdi + 2], dh; ret; 
0x0000000000439622: mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; lea rax, [rdi + 4]; ret; 
0x0000000000439002: mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; ret; 
0x0000000000439673: mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; lea rax, [rdi + 8]; ret; 
0x0000000000439043: mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; ret; 
0x0000000000423f2b: mov byte ptr [rdi - 1], dl; ret; 
0x0000000000439bb1: mov byte ptr [rdi], 0; lea rax, [rdi]; vzeroupper; ret; 
0x00000000004359c1: mov byte ptr [rdi], 0; vzeroupper; ret; 
0x000000000042d052: mov byte ptr [rdi], cl; ret; 
0x000000000043d055: mov byte ptr [rdi], cl; vzeroupper; ret; 
0x00000000004395e0: mov byte ptr [rdi], dh; lea rax, [rdi]; ret; 
0x0000000000438fc0: mov byte ptr [rdi], dh; ret; 
0x000000000042a383: mov byte ptr [rdi], dl; ret; 
0x0000000000438b19: mov byte ptr [rdx + 2], al; lea rax, [rdx + 2]; ret; 
0x0000000000437369: mov byte ptr [rdx + 2], al; mov rax, rdi; ret; 
0x0000000000438b47: mov byte ptr [rdx + 4], al; lea rax, [rdx + 4]; ret; 
0x0000000000437387: mov byte ptr [rdx + 4], al; mov rax, rdi; ret; 
0x000000000043b1eb: mov byte ptr [rdx + rdx*8 + 0xac840f], 0; add dh, dh; ret 0x7501; 
0x0000000000414514: mov byte ptr [rdx - 0x72b7fff7], al; add eax, 0x98281; add rsp, 0x10; pop rbp; ret; 
0x0000000000438af2: mov byte ptr [rdx], al; lea rax, [rdx]; ret; 
0x0000000000437342: mov byte ptr [rdx], al; mov rax, rdi; ret; 
0x000000000040363f: mov byte ptr [rdx], cl; add byte ptr [rax + 0x29], cl; retf 0x8348; ret 0x481a; 
0x000000000047ac20: mov byte ptr [rip + 0x34bc9], 8; ret; 
0x000000000047ac19: mov byte ptr [rip + 0x34bcf], 8; mov byte ptr [rip + 0x34bc9], 8; ret; 
0x000000000047ac12: mov byte ptr [rip + 0x34bd5], 8; mov byte ptr [rip + 0x34bcf], 8; mov byte ptr [rip + 0x34bc9], 8; ret; 
0x000000000047ac0b: mov byte ptr [rip + 0x34bdb], 8; mov byte ptr [rip + 0x34bd5], 8; mov byte ptr [rip + 0x34bcf], 8; mov byte ptr [rip + 0x34bc9], 8; ret; 
0x000000000047ac04: mov byte ptr [rip + 0x34be1], 8; mov byte ptr [rip + 0x34bdb], 8; mov byte ptr [rip + 0x34bd5], 8; mov byte ptr [rip + 0x34bcf], 8; mov byte ptr [rip + 0x34bc9], 8; ret; 
0x0000000000401c66: mov byte ptr [rip + 0xac5d3], 1; pop rbp; ret; 
0x000000000045affb: mov byte ptr [rsi + rdx], ch; add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x0000000000457a93: mov byte ptr [rsi + rdx], dh; add dh, dh; ret 0xf40; 
0x00000000004490b8: mov byte ptr [rsi], cl; add al, byte ptr [rax]; add bh, dh; ret 0xf800; 
0x0000000000458694: mov ch, 0; idiv edi; dec dword ptr [rax + 0x29]; ret 0xb8; 
0x000000000045233d: mov ch, 0x20; idiv edi; inc dword ptr [rbp - 0x7b]; in al, 0xf; lahf; ret; 
0x0000000000478564: mov ch, 0xfc; jmp qword ptr [rsi + 0xf]; 
0x00000000004165ef: mov ch, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000427c57: mov ch, 5; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000421c46: mov ch, 6; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004614e0: mov ch, dh; and ch, 0xf; je 0x61500; add rax, 2; ret; 
0x0000000000444362: mov ch, dl; sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000414512: mov cl, 0x15; mov byte ptr [rdx - 0x72b7fff7], al; add eax, 0x98281; add rsp, 0x10; pop rbp; ret; 
0x0000000000409456: mov cl, 0x45; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000408513: mov cl, 0x67; or al, byte ptr [rax]; syscall; 
0x000000000047db23: mov cl, 0xf0; add dword ptr [rax], eax; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000405e7f: mov cl, 0xff; jmp qword ptr [rsi + 0x66]; 
0x0000000000450c6a: mov cl, 5; add byte ptr [rbx + rcx*4 + 4], cl; ret 0x8d48; 
0x0000000000414020: mov cl, 9; add byte ptr [rdi], cl; add eax, 0xfffee2e9; jmp qword ptr [rsi + 0xf]; 
0x000000000042f835: mov cl, byte ptr [rbx - 0x37d67dfc]; ret; 
0x000000000046e40c: mov cl, byte ptr [rcx - 0x14373]; inc dword ptr [rax - 0x7bf09a07]; hlt; or dword ptr [rax], eax; add byte ptr [rax - 0x14343], al; jmp qword ptr [rsi + 0xf]; 
0x0000000000413d13: mov cl, byte ptr [rcx]; add byte ptr [rcx], al; pop rbp; ret; 
0x0000000000420a94: mov cl, byte ptr [rsi + rdx - 1]; sub eax, ecx; ret; 
0x000000000042d050: mov cl, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x00000000004614cb: mov cl, dl; and cl, 0xf; je 0x614f0; ret; 
0x00000000004726f5: mov cs, edi; add eax, dword ptr [rax]; add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x0000000000402782: mov cs, word ptr [rax + 1]; int1; jmp rcx; 
0x00000000004101de: mov cs, word ptr [rbp + 0x45fffffe]; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000462329: mov cs, word ptr [rbx - 0x2d7aeeec]; jne 0x62338; ret; 
0x0000000000433dbe: mov cs, word ptr [rip - 0x7cb80000]; ret 0xe910; 
0x000000000042d03e: mov cx, word ptr [rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x0000000000439764: mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x00000000004390d4: mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000439868: mov cx, word ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x00000000004391b8: mov cx, word ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x0000000000424374: mov cx, word ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x000000000042a2a4: mov cx, word ptr [rsi]; mov word ptr [rdi + 1], dx; mov word ptr [rdi], cx; ret; 
0x0000000000439600: mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; lea rax, [rdi + 2]; ret; 
0x0000000000438fe0: mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; ret; 
0x000000000042d03d: mov cx, word ptr ss:[rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x000000000047dd32: mov dh, 0; add rsp, 0x18; pop rbx; pop rbp; mov eax, r8d; ret; 
0x000000000040d7ad: mov dh, 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000040d78b: mov dh, 0; ret; 
0x000000000040daa6: mov dh, 0x11; add byte ptr [rax], al; mov dword ptr [rbx + 0x70], 0xffffffff; pop rbx; ret; 
0x000000000042a381: mov dh, 0x16; mov byte ptr [rdi], dl; ret; 
0x00000000004205e4: mov dh, 0x16; sub eax, edx; ret; 
0x000000000040798d: mov dh, 0x17; test dl, dl; jne 0x796c; ret; 
0x000000000040f5cf: mov dh, 0x34; and al, 0x4d; lea edi, [rsp + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x000000000040789b: mov dh, 0x40; or dword ptr [rax + rax*8 - 0x38b7918c], eax; ret 0xfff8; 
0x000000000040df10: mov dh, 0x42; add dword ptr [rax - 0x7d], ecx; ret 0x3c01; 
0x00000000004060b1: mov dh, 0x42; add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x000000000040605b: mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000041b4c1: mov dh, 0x44; cmp byte ptr [rax], ah; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000046c4ae: mov dh, 0x45; add cl, byte ptr [rax - 0x7d]; ret; 
0x000000000046c694: mov dh, 0x45; add ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000443d25: mov dh, 0x47; adc byte ptr [rdi], cl; xchg eax, ebp; ret; 
0x000000000043b281: mov dh, 0x47; cmc; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x000000000043b271: mov dh, 0x47; hlt; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x000000000043b241: mov dh, 0x47; int1; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x000000000043b261: mov dh, 0x47; movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x000000000043b251: mov dh, 0x47; movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x0000000000451c3e: mov dh, 0x47; or al, 0x83; ret; 
0x0000000000448d51: mov dh, 0x50; dec dword ptr [rcx - 0x7d]; ret; 
0x0000000000406081: mov dh, 0x53; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000470d21: mov dh, 0x53; or al, 0xf6; ret 0xf01; 
0x000000000045d401: mov dh, 0x53; or al, 0xf6; ret 0xf04; 
0x000000000041b4c6: mov dh, 0x54; cmp ah, byte ptr [rax]; sub eax, edx; vzeroupper; ret; 
0x000000000047efaa: mov dh, 0x55; and byte ptr [rcx - 0x75], cl; insd dword ptr [rdi], dx; sbb dh, dh; ret 0xf01; 
0x000000000043b285: mov dh, 0x56; cmc; sub eax, edx; ret; 
0x000000000043b275: mov dh, 0x56; hlt; sub eax, edx; ret; 
0x000000000043b245: mov dh, 0x56; int1; sub eax, edx; ret; 
0x000000000043b255: mov dh, 0x56; sub eax, edx; ret; 
0x000000000047ecc5: mov dh, 0x57; and dh, dh; ret 0xf01; 
0x0000000000457a8d: mov dh, 0x57; or al, 0x84; ror byte ptr [rdi], cl; mov byte ptr [rsi + rdx], dh; add dh, dh; ret 0xf40; 
0x0000000000457a62: mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0000000000431c26: mov dh, 0x58; add eax, 0x81048b00; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000446336: mov dh, 0x70; dec dword ptr [rax - 0x7d]; ret 0x4001; 
0x000000000044762b: mov dh, 0x78; inc dword ptr [rax - 0x78]; jl 0x47643; add ecx, dword ptr [rcx + 0x39]; ret 0xe075; 
0x00000000004651eb: mov dh, 0x87; sbb eax, 0x89000003; ret 0xe8c0; 
0x0000000000428fd6: mov dh, 0xa1; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000451e46: mov dh, 0xa2; sti; jmp qword ptr [rsi + 0xf]; 
0x0000000000428cd6: mov dh, 0xa4; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004289d6: mov dh, 0xa7; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004286d6: mov dh, 0xaa; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004283d6: mov dh, 0xad; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004280d6: mov dh, 0xb0; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427dd6: mov dh, 0xb3; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000462132: mov dh, 0xc0; add rsp, 0x58; ret; 
0x000000000047afd5: mov dh, 0xc0; movsxd rax, dword ptr [rbp + rax*4]; add rax, rbp; jmp rax; 
0x000000000045cb98: mov dh, 0xc0; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000040df27: mov dh, 0xc0; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x000000000045cae8: mov dh, 0xc0; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000040dcb1: mov dh, 0xc0; neg eax; ret; 
0x0000000000472ba9: mov dh, 0xc0; pop rbp; pop r12; ret; 
0x0000000000420604: mov dh, 0xc0; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x000000000043d351: mov dh, 0xc1; pop rbx; ret; 
0x000000000043d301: mov dh, 0xc2; and dh, 0xf0; mov edx, 0; pop rbx; cmove rax, rdx; ret; 
0x000000000043ce0e: mov dh, 0xc6; mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x0000000000446232: mov dh, 0xc6; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000000043d391: mov dh, 0xd1; mov eax, 0; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x000000000047b14c: mov dh, 0xd2; movsxd rax, dword ptr [r13 + rdx*4]; add rax, r13; jmp rax; 
0x000000000047b189: mov dh, 0xd2; movsxd rax, dword ptr [r14 + rdx*4]; add rax, r14; jmp rax; 
0x000000000042060a: mov dh, 0xd2; sub eax, edx; ret; 
0x000000000043c179: mov dh, 0xe; mov byte ptr [rdi], cl; ret; 
0x0000000000419dc1: mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000041faa1: mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x0000000000420aa4: mov dh, 0xe; sub eax, ecx; ret; 
0x000000000046597f: mov dh, 0xf9; inc dword ptr [rbp - 0x467bf040]; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000004167ac: mov dh, 0xff; call qword ptr [rax + 0x18c48348]; ret; 
0x000000000045a8bb: mov dh, 4; add dword ptr [rax - 0x73], ecx; or eax, 0x4f4bb; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000459e03: mov dh, 4; add dword ptr [rax - 0x73], ecx; or eax, 0x4ff73; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x000000000044594a: mov dh, 4; and al, 0x84; ror byte ptr [rdi], 0x84; ret; 
0x0000000000427ade: mov dh, 5; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000434bb4: mov dh, 7; lea rdx, [rip + 0x52923]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000433544: mov dh, 7; lea rdx, [rip + 0x53f93]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000431994: mov dh, 7; lea rdx, [rip + 0x55b43]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000042f844: mov dh, 7; lea rdx, [rip + 0x57c93]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000420aa1: mov dh, 7; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x00000000004205e1: mov dh, 7; movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x0000000000419dc4: mov dh, 7; sub eax, ecx; ret; 
0x000000000041faa4: mov dh, 7; sub eax, ecx; vzeroupper; ret; 
0x00000000004188f2: mov dh, byte ptr [rdi]; add al, byte ptr [rax]; lea rax, [rip + 0x23823]; cmove rax, rdx; ret; 
0x0000000000428c1a: mov dl, 0xa7; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042325a: mov dl, 0xfb; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004612d2: mov dl, 0xfd; stc; dec dword ptr [rax - 0x77]; ret 0x2948; 
0x0000000000405e62: mov dl, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x0000000000427f57: mov dl, 5; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000417889: mov dl, 6; add byte ptr [rax + 0x63], cl; add al, 0x82; add rax, rdx; jmp rax; 
0x000000000047f84a: mov dl, 7; mov eax, 0xe0894cff; pop rbx; pop rbp; pop r12; ret; 
0x0000000000423fb0: mov dl, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x000000000040a541: mov ds, word ptr [rdx + 0x45fffffb]; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000409ec6: mov ds, word ptr [rsi + rdi*8 + 0x3145ffff]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000411b4f: mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x0000000000411b53: mov dword ptr [r11 + 0x14], 0; ret; 
0x0000000000411b4a: mov dword ptr [r11 + 0x24], ebp; pop rbp; mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x000000000042d046: mov dword ptr [r9 - 2], ecx; ret; 
0x000000000042d031: mov dword ptr [r9 - 4], ecx; ret; 
0x000000000045f1b1: mov dword ptr [rax + 0x10], ecx; lea rdx, [r8 + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000440c51: mov dword ptr [rax + 0x10], ecx; mov qword ptr [rax + 8], rdx; ret; 
0x000000000045f181: mov dword ptr [rax + 0x10], edi; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000045e3f9: mov dword ptr [rax + 0x10], edx; mov qword ptr [rax + 0x40], rcx; ret; 
0x000000000045e436: mov dword ptr [rax + 0x10], esi; mov qword ptr [rax + 0x40], rcx; mov qword ptr [rax], rdx; ret; 
0x000000000045eac8: mov dword ptr [rax + 0x18], edx; xor eax, eax; mov dword ptr [rbx], ecx; pop rbx; ret; 
0x0000000000412887: mov dword ptr [rax + 0x20], edx; add rsp, 8; ret; 
0x000000000045eac4: mov dword ptr [rax + 0x28], edx; mov qword ptr [rax + 0x18], rdx; xor eax, eax; mov dword ptr [rbx], ecx; pop rbx; ret; 
0x000000000045e9a9: mov dword ptr [rax + 0x38], esp; mov dword ptr [rbx + 0x74], edx; pop rbx; pop rbp; pop r12; ret; 
0x000000000045e43a: mov dword ptr [rax + 0x40], ecx; mov qword ptr [rax], rdx; ret; 
0x000000000045e3fd: mov dword ptr [rax + 0x40], ecx; ret; 
0x000000000045f185: mov dword ptr [rax + 0x40], esi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000045eb23: mov dword ptr [rax + 0x48], 0; pop rbx; ret; 
0x0000000000424f35: mov dword ptr [rax + 0x48], 0x148d601; xlatb; lea r11, [rip + 0x5e08c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424e70: mov dword ptr [rax + 0x48], 0x148d601; xlatb; lea r11, [rip + 0x5e151]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422565: mov dword ptr [rax + 0x48], 0x148d601; xlatb; lea r11, [rip + 0x6089c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004224a0: mov dword ptr [rax + 0x48], 0x148d601; xlatb; lea r11, [rip + 0x60961]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000045eb1b: mov dword ptr [rax + 0x50], 0; mov qword ptr [rax + 0x48], 0; pop rbx; ret; 
0x000000000040fc05: mov dword ptr [rax + 8], 0; ret; 
0x000000000045e3ee: mov dword ptr [rax + 8], ecx; mov rcx, qword ptr [rax + 0x10]; mov qword ptr [rax], rdx; mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x000000000045e432: mov dword ptr [rax + 8], edx; mov qword ptr [rax + 0x10], rsi; mov qword ptr [rax + 0x40], rcx; mov qword ptr [rax], rdx; ret; 
0x0000000000440c55: mov dword ptr [rax + 8], edx; ret; 
0x0000000000435a32: mov dword ptr [rax - 0x17], 0xffffff50; nop dword ptr [rax]; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000040fbfe: mov dword ptr [rax], 0; mov qword ptr [rax + 8], 0; ret; 
0x0000000000472d9d: mov dword ptr [rax], 0; mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000043e8a0: mov dword ptr [rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000043f808: mov dword ptr [rax], 0x16; mov rax, -1; ret; 
0x0000000000462258: mov dword ptr [rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000000416d97: mov dword ptr [rax], 0xc; xor eax, eax; pop rbx; ret; 
0x0000000000461cd8: mov dword ptr [rax], 2; xor eax, eax; ret; 
0x0000000000478396: mov dword ptr [rax], eax; mov eax, 0xffffc002; sub eax, ecx; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x00000000004783bb: mov dword ptr [rax], eax; mov eax, 1; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000000045ec25: mov dword ptr [rax], ecx; mov eax, dword ptr [rdx]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000046d4db: mov dword ptr [rax], ecx; pop rbp; ret; 
0x0000000000472d4d: mov dword ptr [rax], edi; pop rbx; ret; 
0x0000000000472cbd: mov dword ptr [rax], edx; add rsp, 8; ret; 
0x0000000000461ac6: mov dword ptr [rax], edx; mov eax, 0xffffffff; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000045e3f6: mov dword ptr [rax], edx; mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x0000000000472d41: mov dword ptr [rax], edx; pop rbx; ret; 
0x000000000045e43e: mov dword ptr [rax], edx; ret; 
0x000000000045f150: mov dword ptr [rax], edx; xor eax, eax; ret; 
0x000000000047d060: mov dword ptr [rbp + 8], eax; add rsp, 0x278; mov rax, rbp; pop rbx; pop rbp; ret; 
0x000000000044e13d: mov dword ptr [rbp + rbx*8], eax; lea rax, [rip + 0x5db18]; mov rax, qword ptr [rax + rbx*8]; test rax, rax; je 0x4e153; call rax; 
0x000000000048063b: mov dword ptr [rbp + rbx*8], edx; mov rax, qword ptr [rax + rbx*8]; test rax, rax; je 0x8064a; call rax; 
0x0000000000459ce3: mov dword ptr [rbp - 0x4d8], 0; mov dword ptr [rbp - 0x508], 0x20; jmp rax; 
0x000000000045a217: mov dword ptr [rbp - 0x4e0], ecx; mov rdx, rcx; mov rsi, r8; mov rdi, r12; mov dword ptr [rbp - 0x4e8], r9d; call qword ptr [rbx + 0x38]; 
0x000000000045a591: mov dword ptr [rbp - 0x4e0], ecx; mov rdx, rcx; mov rsi, r9; mov rdi, r12; call qword ptr [rbx + 0x38]; 
0x0000000000453e58: mov dword ptr [rbp - 0x4e8], 0; mov qword ptr [rbp - 0x4f8], rsi; jmp rax; 
0x000000000045a227: mov dword ptr [rbp - 0x4e8], ecx; call qword ptr [rbx + 0x38]; 
0x000000000045a226: mov dword ptr [rbp - 0x4e8], r9d; call qword ptr [rbx + 0x38]; 
0x000000000045abbf: mov dword ptr [rbp - 0x4f0], 1; mov dword ptr [rbp - 0x508], 0x20; movzx eax, byte ptr [rdi + rax]; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x00000000004543c7: mov dword ptr [rbp - 0x4f0], ecx; call qword ptr [rbx + 0x38]; 
0x00000000004552c8: mov dword ptr [rbp - 0x4f0], ecx; mov rdx, rcx; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x4f8], r9d; call qword ptr [rax + 0x38]; 
0x00000000004552d8: mov dword ptr [rbp - 0x4f8], ecx; call qword ptr [rax + 0x38]; 
0x00000000004543b8: mov dword ptr [rbp - 0x4f8], ecx; mov rdx, r15; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x4f0], ecx; call qword ptr [rbx + 0x38]; 
0x00000000004548dd: mov dword ptr [rbp - 0x4f8], ecx; mov rdx, rcx; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x500], r9d; call qword ptr [rbx + 0x38]; 
0x0000000000453e63: mov dword ptr [rbp - 0x4f8], esi; jmp rax; 
0x00000000004552d7: mov dword ptr [rbp - 0x4f8], r9d; call qword ptr [rax + 0x38]; 
0x00000000004543b7: mov dword ptr [rbp - 0x4f8], r9d; mov rdx, r15; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x4f0], ecx; call qword ptr [rbx + 0x38]; 
0x000000000045b462: mov dword ptr [rbp - 0x500], eax; call qword ptr [rax + 0x38]; 
0x00000000004548ed: mov dword ptr [rbp - 0x500], ecx; call qword ptr [rbx + 0x38]; 
0x00000000004541e6: mov dword ptr [rbp - 0x500], ecx; mov rdx, r15; mov rsi, r8; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x00000000004548ec: mov dword ptr [rbp - 0x500], r9d; call qword ptr [rbx + 0x38]; 
0x00000000004541e5: mov dword ptr [rbp - 0x500], r9d; mov rdx, r15; mov rsi, r8; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x0000000000459ced: mov dword ptr [rbp - 0x508], 0x20; jmp rax; 
0x000000000045abc9: mov dword ptr [rbp - 0x508], 0x20; movzx eax, byte ptr [rdi + rax]; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x000000000045b45b: mov dword ptr [rbp - 0x508], ecx; mov qword ptr [rbp - 0x500], r8; call qword ptr [rax + 0x38]; 
0x000000000045551b: mov dword ptr [rbp - 0x508], edx; call qword ptr [rax + 0x38]; 
0x000000000045b45a: mov dword ptr [rbp - 0x508], r9d; mov qword ptr [rbp - 0x500], r8; call qword ptr [rax + 0x38]; 
0x000000000043fe7b: mov dword ptr [rbp - 0x50], ecx; mov r15d, r14d; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x0000000000459cce: mov dword ptr [rbp - 0x510], 0; mov dword ptr [rbp - 0x51c], 0; mov qword ptr [rbp - 0x4d8], 0; mov dword ptr [rbp - 0x508], 0x20; jmp rax; 
0x000000000045a2d8: mov dword ptr [rbp - 0x510], 1; movzx eax, byte ptr [rsi + rax]; lea rsi, [rip + 0x4fe93]; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x0000000000455514: mov dword ptr [rbp - 0x510], ecx; mov qword ptr [rbp - 0x508], r10; call qword ptr [rax + 0x38]; 
0x0000000000453e43: mov dword ptr [rbp - 0x51c], 0; mov dword ptr [rbp - 0x520], 0; mov qword ptr [rbp - 0x4e8], 0; mov qword ptr [rbp - 0x4f8], rsi; jmp rax; 
0x0000000000459cd8: mov dword ptr [rbp - 0x51c], 0; mov qword ptr [rbp - 0x4d8], 0; mov dword ptr [rbp - 0x508], 0x20; jmp rax; 
0x0000000000453e4d: mov dword ptr [rbp - 0x520], 0; mov qword ptr [rbp - 0x4e8], 0; mov qword ptr [rbp - 0x4f8], rsi; jmp rax; 
0x0000000000444a75: mov dword ptr [rbp - 0x70], eax; call 0x42c50; mov rax, qword ptr [rbp - 0x70]; mov rdi, r12; call rax; 
0x000000000045202d: mov dword ptr [rbp - 0x934], eax; call rax; 
0x000000000045202c: mov dword ptr [rbp - 0x934], r8d; call rax; 
0x000000000045201d: mov dword ptr [rbp - 0x938], ecx; mov rdx, r10; mov rsi, r15; mov rdi, r14; mov dword ptr [rbp - 0x934], r8d; call rax; 
0x000000000045201c: mov dword ptr [rbp - 0x938], r9d; mov rdx, r10; mov rsi, r15; mov rdi, r14; mov dword ptr [rbp - 0x934], r8d; call rax; 
0x0000000000468d54: mov dword ptr [rbp - 0xd8], ebx; call rax; 
0x000000000046f459: mov dword ptr [rbp - 0xe8], eax; call rax; 
0x000000000046f449: mov dword ptr [rbp - 0xf0], ecx; mov rdx, r8; mov rsi, r13; mov rdi, r12; mov qword ptr [rbp - 0xe8], r8; call rax; 
0x000000000046f448: mov dword ptr [rbp - 0xf0], r9d; mov rdx, r8; mov rsi, r13; mov rdi, r12; mov qword ptr [rbp - 0xe8], r8; call rax; 
0x00000000004108ab: mov dword ptr [rbp], eax; mov qword ptr [rbx + 0x60], rbp; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000045f75a: mov dword ptr [rbp], eax; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000044da07: mov dword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x0000000000411b50: mov dword ptr [rbx + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x000000000040c297: mov dword ptr [rbx + 0x10], eax; mov rax, rbx; pop rbx; ret; 
0x000000000046d26e: mov dword ptr [rbx + 0x10], eax; pop rax; pop rdx; pop rbx; ret; 
0x000000000040c9ff: mov dword ptr [rbx + 0x10], eax; xor eax, eax; pop rbx; ret; 
0x0000000000411b54: mov dword ptr [rbx + 0x14], 0; ret; 
0x000000000040c28f: mov dword ptr [rbx + 0x18], eax; mov qword ptr [rbx + 8], rax; mov qword ptr [rbx + 0x10], rax; mov rax, rbx; pop rbx; ret; 
0x000000000046cf43: mov dword ptr [rbx + 0x18], eax; pop rax; pop rdx; pop rbx; ret; 
0x0000000000478635: mov dword ptr [rbx + 0x18], eax; pop rbx; ret; 
0x000000000045d3c1: mov dword ptr [rbx + 0x18], edi; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x00000000004786e9: mov dword ptr [rbx + 0x20], eax; pop rbx; ret; 
0x000000000040f012: mov dword ptr [rbx + 0x20], eax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000411b4b: mov dword ptr [rbx + 0x24], ebp; pop rbp; mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x000000000044fb07: mov dword ptr [rbx + 0x40], esi; pop rbx; ret; 
0x000000000044fae8: mov dword ptr [rbx + 0x40], esi; xor eax, eax; pop rbx; ret; 
0x000000000040f4bb: mov dword ptr [rbx + 0x40], esp; mov dword ptr [rbx], eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000040f081: mov dword ptr [rbx + 0x50], 0; pop rbx; ret; 
0x00000000004108af: mov dword ptr [rbx + 0x60], ebp; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000040daaa: mov dword ptr [rbx + 0x70], 0xffffffff; pop rbx; ret; 
0x000000000045ea32: mov dword ptr [rbx + 0x74], eax; pop rbx; mov eax, 1; pop rbp; pop r12; ret; 
0x000000000045e9ac: mov dword ptr [rbx + 0x74], edx; pop rbx; pop rbp; pop r12; ret; 
0x000000000040c22c: mov dword ptr [rbx + 0x90], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000040d6e4: mov dword ptr [rbx + 0x90], eax; mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x000000000040c9f4: mov dword ptr [rbx + 0x90], esi; mov qword ptr [rbx + 8], rax; mov qword ptr [rbx + 0x10], rax; xor eax, eax; pop rbx; ret; 
0x000000000046c6e5: mov dword ptr [rbx + 8], 0; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000044d9d7: mov dword ptr [rbx + 8], eax; cmp eax, -3; je 0x4d9f8; pop rbx; ret; 
0x000000000040c293: mov dword ptr [rbx + 8], eax; mov qword ptr [rbx + 0x10], rax; mov rax, rbx; pop rbx; ret; 
0x000000000040c9fb: mov dword ptr [rbx + 8], eax; mov qword ptr [rbx + 0x10], rax; xor eax, eax; pop rbx; ret; 
0x000000000047f4d5: mov dword ptr [rbx + rax], 0xe95d5b00; and byte ptr [rbx], cl; mov eax, 0xc48348ff; or byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000444333: mov dword ptr [rbx], 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000046c6de: mov dword ptr [rbx], 0; mov qword ptr [rbx + 8], 0; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000046b494: mov dword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x41c66], 1; ret; 
0x0000000000473c8a: mov dword ptr [rbx], eax; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x000000000047301a: mov dword ptr [rbx], eax; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000045f41d: mov dword ptr [rbx], eax; mov eax, 1; pop rbx; pop rbp; pop r12; ret; 
0x000000000047a1b9: mov dword ptr [rbx], eax; pop rax; pop rdx; pop rbx; ret; 
0x000000000040f94a: mov dword ptr [rbx], eax; pop rbx; mov eax, 1; pop rbp; pop r12; ret; 
0x000000000040f4be: mov dword ptr [rbx], eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000000472593: mov dword ptr [rbx], ebp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000045eacd: mov dword ptr [rbx], ecx; pop rbx; ret; 
0x000000000046a81c: mov dword ptr [rbx], edi; pop rbx; ret; 
0x0000000000417a80: mov dword ptr [rbx], edx; xor eax, eax; pop rbx; ret; 
0x0000000000412113: mov dword ptr [rbx], esp; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000040c1a3: mov dword ptr [rbx], esp; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000040c1a2: mov dword ptr [rbx], r12d; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000040fd1d: mov dword ptr [rcx + 0x50], 0; mov qword ptr [rcx + 0xe0], r8; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000040fd25: mov dword ptr [rcx + 0xe0], eax; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000046d68d: mov dword ptr [rcx + rdx*8], eax; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000411856: mov dword ptr [rcx - 0x78], 0x29481004; ret 0x3948; 
0x000000000042d047: mov dword ptr [rcx - 2], ecx; ret; 
0x000000000042d032: mov dword ptr [rcx - 4], ecx; ret; 
0x000000000042d021: mov dword ptr [rcx - 8], ecx; ret; 
0x000000000046c72f: mov dword ptr [rcx], 0x1c68348; test al, al; jne 0x6c707; movsx eax, byte ptr [rsi]; neg eax; ret; 
0x000000000047ee85: mov dword ptr [rcx], 0x89480000; ret 0x3948; 
0x000000000044eab6: mov dword ptr [rcx], 0xfff4788; mov dh, 0x53; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000043e7fa: mov dword ptr [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000047ceab: mov dword ptr [rcx], edx; add rsp, 8; ret; 
0x000000000044fa18: mov dword ptr [rcx], edx; mov rax, qword ptr [rax + 0x58]; mov rdx, -0x18; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000044f94c: mov dword ptr [rcx], edx; mov rdx, -0x18; mov qword ptr fs:[rdx], rax; ret; 
0x000000000047ae53: mov dword ptr [rcx], edx; pop rbx; ret; 
0x000000000047db70: mov dword ptr [rcx], edx; ret; 
0x000000000040ef8b: mov dword ptr [rdi + 0x10], eax; mov qword ptr [rdi + 0x18], rcx; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 8], rax; ret; 
0x000000000043976d: mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x11]; ret; 
0x00000000004397ab: mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x13]; ret; 
0x000000000043982d: mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x17]; ret; 
0x00000000004397cb: mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, [rdi + 0x14]; ret; 
0x000000000043911b: mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x000000000043984d: mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x000000000043919d: mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x18], dh; ret; 
0x00000000004390dd: mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000439890: mov dword ptr [rdi + 0x10], edx; mov dword ptr [rdi + 0x17], ecx; lea rax, [rdi + 0x1a]; ret; 
0x00000000004391e0: mov dword ptr [rdi + 0x10], edx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x00000000004398b0: mov dword ptr [rdi + 0x10], edx; mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x0000000000439200: mov dword ptr [rdi + 0x10], edx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000439871: mov dword ptr [rdi + 0x10], edx; mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x00000000004391c1: mov dword ptr [rdi + 0x10], edx; mov word ptr [rdi + 0x18], cx; ret; 
0x0000000000439893: mov dword ptr [rdi + 0x17], ecx; lea rax, [rdi + 0x1a]; ret; 
0x00000000004391e3: mov dword ptr [rdi + 0x17], ecx; ret; 
0x000000000040ef63: mov dword ptr [rdi + 0x18], eax; mov qword ptr [rdi + 8], rax; ret; 
0x0000000000439875: mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x19]; ret; 
0x00000000004398b3: mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x000000000040ef8f: mov dword ptr [rdi + 0x18], ecx; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 8], rax; ret; 
0x00000000004391c5: mov dword ptr [rdi + 0x18], ecx; ret; 
0x00000000004109a2: mov dword ptr [rdi + 0x18], edx; mov rcx, rdx; add rax, rcx; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x00000000004109e4: mov dword ptr [rdi + 0x18], esi; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000044150f: mov dword ptr [rdi + 0x20], edx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000441521: mov dword ptr [rdi + 0x20], esi; ret; 
0x000000000046767e: mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x0000000000467650: mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x0000000000467685: mov dword ptr [rdi + 0x308], eax; ret; 
0x0000000000467657: mov dword ptr [rdi + 0x310], eax; ret; 
0x000000000040ef5f: mov dword ptr [rdi + 0x48], edx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x000000000040ef93: mov dword ptr [rdi + 0x48], edx; mov qword ptr [rdi + 8], rax; ret; 
0x000000000040ef57: mov dword ptr [rdi + 0x58], eax; mov rax, qword ptr [rdi + 0x48]; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x000000000047cf01: mov dword ptr [rdi + 0x98], esi; ret; 
0x000000000040fa37: mov dword ptr [rdi + 0xa0], 0xffffffff; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000040fa42: mov dword ptr [rdi + 0xa8], 0; ret; 
0x00000000004099f9: mov dword ptr [rdi + 0xd8], edx; mov rdx, qword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x00000000004397ed: mov dword ptr [rdi + 0xe], ecx; lea rax, [rdi + 0x15]; ret; 
0x000000000043913d: mov dword ptr [rdi + 0xe], ecx; ret; 
0x000000000043978b: mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x12]; ret; 
0x000000000043980d: mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x16]; ret; 
0x00000000004390fb: mov dword ptr [rdi + 0xf], ecx; ret; 
0x000000000042a1c5: mov dword ptr [rdi + 1], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000042a008: mov dword ptr [rdi + 1], edx; mov qword ptr [rdi], rcx; ret; 
0x000000000042a2a8: mov dword ptr [rdi + 1], edx; mov word ptr [rdi], cx; ret; 
0x000000000042a155: mov dword ptr [rdi + 2], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000429f98: mov dword ptr [rdi + 2], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000439657: mov dword ptr [rdi + 3], edx; lea rax, [rdi + 6]; ret; 
0x000000000042a0e5: mov dword ptr [rdi + 3], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000429f28: mov dword ptr [rdi + 3], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000439027: mov dword ptr [rdi + 3], edx; ret; 
0x0000000000439639: mov dword ptr [rdi + 4], edx; lea rax, [rdi + 5]; ret; 
0x0000000000429eb8: mov dword ptr [rdi + 4], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000439019: mov dword ptr [rdi + 4], edx; ret; 
0x00000000004396eb: mov dword ptr [rdi + 5], edx; lea rax, [rdi + 0xc]; ret; 
0x0000000000429e48: mov dword ptr [rdi + 5], edx; mov qword ptr [rdi], rcx; ret; 
0x000000000043908b: mov dword ptr [rdi + 5], edx; ret; 
0x000000000043970b: mov dword ptr [rdi + 6], edx; lea rax, [rdi + 0xd]; ret; 
0x0000000000429dd8: mov dword ptr [rdi + 6], edx; mov qword ptr [rdi], rcx; ret; 
0x000000000043909b: mov dword ptr [rdi + 6], edx; ret; 
0x00000000004396a9: mov dword ptr [rdi + 7], edx; lea rax, [rdi + 0xa]; ret; 
0x000000000043972b: mov dword ptr [rdi + 7], edx; lea rax, [rdi + 0xe]; ret; 
0x0000000000429d68: mov dword ptr [rdi + 7], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000439069: mov dword ptr [rdi + 7], edx; ret; 
0x00000000004784ba: mov dword ptr [rdi + 8], eax; mov eax, 0xffffc002; sub eax, r8d; mov dword ptr [rsi], eax; mov eax, 2; ret; 
0x0000000000478446: mov dword ptr [rdi + 8], eax; mov eax, 2; ret; 
0x000000000040ef67: mov dword ptr [rdi + 8], eax; ret; 
0x00000000004770a8: mov dword ptr [rdi + 8], eax; shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x00000000004109ac: mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x0000000000477034: mov dword ptr [rdi + 8], ecx; ret; 
0x00000000004396c9: mov dword ptr [rdi + 8], edx; lea rax, [rdi + 0xb]; ret; 
0x000000000043968b: mov dword ptr [rdi + 8], edx; lea rax, [rdi + 9]; ret; 
0x0000000000478473: mov dword ptr [rdi + 8], edx; mov eax, 0xffffbfd1; sub eax, r8d; mov dword ptr [rsi], eax; mov eax, 2; ret; 
0x0000000000478270: mov dword ptr [rdi + 8], edx; mov eax, ebx; adc rax, rdx; pop rbp; pop rbx; ret; 
0x0000000000478134: mov dword ptr [rdi + 8], edx; mov eax, ecx; adc eax, eax; ret; 
0x000000000043905b: mov dword ptr [rdi + 8], edx; ret; 
0x000000000047757d: mov dword ptr [rdi + rbx*8 + 8], ecx; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x000000000043cefb: mov dword ptr [rdi + rdx - 2], ecx; mov word ptr [rdi], cx; ret; 
0x000000000043d080: mov dword ptr [rdi + rdx - 2], ecx; mov word ptr [rdi], cx; vzeroupper; ret; 
0x000000000043c1a5: mov dword ptr [rdi + rdx - 2], ecx; mov word ptr [rdi], si; ret; 
0x0000000000439c78: mov dword ptr [rdi + rdx - 3], ecx; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000435a78: mov dword ptr [rdi + rdx - 3], ecx; vzeroupper; ret; 
0x000000000043cef3: mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], ecx; ret; 
0x000000000043d075: mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], ecx; vzeroupper; ret; 
0x000000000043c195: mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], esi; ret; 
0x0000000000439c9c: mov dword ptr [rdi + rdx - 7], ecx; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000435a8c: mov dword ptr [rdi + rdx - 7], ecx; vzeroupper; ret; 
0x000000000043ceeb: mov dword ptr [rdi + rdx - 8], ecx; mov qword ptr [rdi], rcx; ret; 
0x000000000043d06a: mov dword ptr [rdi + rdx - 8], ecx; mov qword ptr [rdi], rcx; vzeroupper; ret; 
0x000000000043c187: mov dword ptr [rdi + rdx - 8], ecx; mov qword ptr [rdi], rsi; ret; 
0x000000000047ceb9: mov dword ptr [rdi + rsi*8], edx; add rsp, 8; ret; 
0x0000000000423c75: mov dword ptr [rdi - 0x10], ebx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000423cb3: mov dword ptr [rdi - 0x10], ebx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000476f9f: mov dword ptr [rdi - 0x10], ecx; ret; 
0x0000000000423e28: mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423f24: mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000423e70: mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423ff8: mov dword ptr [rdi - 0x12], ebx; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004241d8: mov dword ptr [rdi - 0x13], ebx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004243c8: mov dword ptr [rdi - 0x14], ebx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424599: mov dword ptr [rdi - 0x15], ebx; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424799: mov dword ptr [rdi - 0x16], ebx; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424999: mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423c71: mov dword ptr [rdi - 0x18], edx; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000423caf: mov dword ptr [rdi - 0x18], edx; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423e24: mov dword ptr [rdi - 0x19], edx; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423f20: mov dword ptr [rdi - 0x19], edx; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000423e6c: mov dword ptr [rdi - 0x19], edx; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423ff4: mov dword ptr [rdi - 0x1a], edx; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004241d4: mov dword ptr [rdi - 0x1b], edx; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004243c4: mov dword ptr [rdi - 0x1c], edx; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424595: mov dword ptr [rdi - 0x1d], edx; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424795: mov dword ptr [rdi - 0x1e], edx; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424995: mov dword ptr [rdi - 0x1f], edx; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423c6d: mov dword ptr [rdi - 0x20], ecx; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000423cab: mov dword ptr [rdi - 0x20], ecx; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423e20: mov dword ptr [rdi - 0x21], ecx; mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423f1c: mov dword ptr [rdi - 0x21], ecx; mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000423e68: mov dword ptr [rdi - 0x21], ecx; mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423ff0: mov dword ptr [rdi - 0x22], ecx; mov qword ptr [rdi - 0x1a], r10; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004241d0: mov dword ptr [rdi - 0x23], ecx; mov qword ptr [rdi - 0x1b], r10; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004243c0: mov dword ptr [rdi - 0x24], ecx; mov qword ptr [rdi - 0x1c], r10; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424591: mov dword ptr [rdi - 0x25], ecx; mov qword ptr [rdi - 0x1d], r10; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424791: mov dword ptr [rdi - 0x26], ecx; mov qword ptr [rdi - 0x1e], r10; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424991: mov dword ptr [rdi - 0x27], ecx; mov qword ptr [rdi - 0x1f], r10; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423c69: mov dword ptr [rdi - 0x28], eax; mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000423ca7: mov dword ptr [rdi - 0x28], eax; mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423ffc: mov dword ptr [rdi - 0xa], ecx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000429818: mov dword ptr [rdi - 0xa], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004241dc: mov dword ptr [rdi - 0xb], ecx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000429798: mov dword ptr [rdi - 0xb], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004243cc: mov dword ptr [rdi - 0xc], ecx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000429718: mov dword ptr [rdi - 0xc], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000042459d: mov dword ptr [rdi - 0xd], ecx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000429689: mov dword ptr [rdi - 0xd], edx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042479d: mov dword ptr [rdi - 0xe], ecx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004295f9: mov dword ptr [rdi - 0xe], edx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042499d: mov dword ptr [rdi - 0xf], ecx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000429569: mov dword ptr [rdi - 0xf], edx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042437d: mov dword ptr [rdi - 2], ecx; ret; 
0x0000000000424195: mov dword ptr [rdi - 2], edx; ret; 
0x0000000000424379: mov dword ptr [rdi - 3], edx; mov word ptr [rdi - 2], cx; ret; 
0x0000000000424759: mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000423e2f: mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424756: mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000424956: mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000424b56: mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000476f98: mov dword ptr [rdi - 8], eax; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x0000000000423c79: mov dword ptr [rdi - 8], ecx; ret; 
0x0000000000423cb7: mov dword ptr [rdi - 8], edx; ret; 
0x0000000000423e2c: mov dword ptr [rdi - 9], eax; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423f28: mov dword ptr [rdi - 9], ecx; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000423e74: mov dword ptr [rdi - 9], ecx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000429898: mov dword ptr [rdi - 9], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000440eb8: mov dword ptr [rdi], eax; mov rax, qword ptr [rip + 0x6d3f7]; mov qword ptr [rsi], rax; ret; 
0x0000000000476f24: mov dword ptr [rdi], eax; shl r9, cl; mov qword ptr [rdi - 8], r9; ret; 
0x000000000047702e: mov dword ptr [rdi], eax; shr r9, cl; mov qword ptr [rdi + 8], r9; ret; 
0x0000000000476f91: mov dword ptr [rdi], ebx; shld r8, r9, cl; mov qword ptr [rdi - 8], r8; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x00000000004770a1: mov dword ptr [rdi], ebx; shrd r8, r9, cl; mov qword ptr [rdi + 8], r8; shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x0000000000439625: mov dword ptr [rdi], ecx; lea rax, [rdi + 4]; ret; 
0x0000000000439677: mov dword ptr [rdi], ecx; lea rax, [rdi + 8]; ret; 
0x0000000000439c44: mov dword ptr [rdi], ecx; mov byte ptr [rdi + 2], 0; lea rax, [rdi + 2]; vzeroupper; ret; 
0x0000000000435a54: mov dword ptr [rdi], ecx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x0000000000439604: mov dword ptr [rdi], ecx; mov byte ptr [rdi + 2], dh; lea rax, [rdi + 2]; ret; 
0x0000000000438fe4: mov dword ptr [rdi], ecx; mov byte ptr [rdi + 2], dh; ret; 
0x0000000000439655: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; lea rax, [rdi + 6]; ret; 
0x0000000000439025: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; ret; 
0x00000000004396a7: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 7], edx; lea rax, [rdi + 0xa]; ret; 
0x0000000000439067: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 7], edx; ret; 
0x00000000004396c7: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 8], edx; lea rax, [rdi + 0xb]; ret; 
0x0000000000439077: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 8], edx; ret; 
0x000000000043bed7: mov dword ptr [rdi], ecx; mov dword ptr [rsi - 4], ecx; ret; 
0x0000000000439c72: mov dword ptr [rdi], ecx; mov ecx, dword ptr [rsi + rdx - 3]; mov dword ptr [rdi + rdx - 3], ecx; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000435a72: mov dword ptr [rdi], ecx; mov ecx, dword ptr [rsi + rdx - 3]; mov dword ptr [rdi + rdx - 3], ecx; vzeroupper; ret; 
0x00000000004396e8: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 5], rdx; lea rax, [rdi + 0xc]; ret; 
0x0000000000439088: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000439708: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 6], rdx; lea rax, [rdi + 0xd]; ret; 
0x0000000000439098: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 6], rdx; ret; 
0x0000000000439728: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 7], rdx; lea rax, [rdi + 0xe]; ret; 
0x00000000004390a8: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000439c99: mov dword ptr [rdi], ecx; mov qword ptr [rdi + rdx - 7], r9; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000435a89: mov dword ptr [rdi], ecx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x0000000000439636: mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; lea rax, [rdi + 5]; ret; 
0x0000000000439016: mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; ret; 
0x0000000000439688: mov dword ptr [rdi], ecx; mov word ptr [rdi + 8], dx; lea rax, [rdi + 9]; ret; 
0x0000000000439058: mov dword ptr [rdi], ecx; mov word ptr [rdi + 8], dx; ret; 
0x000000000043bee3: mov dword ptr [rdi], ecx; mov word ptr [rsi - 2], cx; ret; 
0x0000000000429d6c: mov dword ptr [rdi], ecx; ret; 
0x000000000043d06f: mov dword ptr [rdi], ecx; vzeroupper; ret; 
0x00000000004395f4: mov dword ptr [rdi], edx; lea rax, [rdi + 1]; ret; 
0x0000000000439c34: mov dword ptr [rdi], edx; lea rax, [rdi + 1]; vzeroupper; ret; 
0x0000000000439612: mov dword ptr [rdi], edx; lea rax, [rdi + 3]; ret; 
0x0000000000439c62: mov dword ptr [rdi], edx; lea rax, [rdi + 3]; vzeroupper; ret; 
0x0000000000439664: mov dword ptr [rdi], edx; lea rax, [rdi + 7]; ret; 
0x0000000000478306: mov dword ptr [rdi], edx; mov dword ptr [rsi], eax; mov eax, 1; ret; 
0x000000000042a074: mov dword ptr [rdi], edx; ret; 
0x0000000000464983: mov dword ptr [rdi], edx; sti; dec dword ptr [rax - 0x77]; ret 0x8548; 
0x0000000000435a44: mov dword ptr [rdi], edx; vzeroupper; ret; 
0x000000000042d02f: mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x000000000042d01e: mov dword ptr [rdi], esi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000042d043: mov dword ptr [rdi], esi; mov word ptr [r9 - 2], cx; ret; 
0x000000000043c18c: mov dword ptr [rdi], esi; ret; 
0x000000000041287f: mov dword ptr [rdx + 0x28], ecx; mov rax, qword ptr [rdi + 0x28]; mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x0000000000413d12: mov dword ptr [rdx + 0x5d010009], ecx; ret; 
0x000000000040da85: mov dword ptr [rdx + 0xe0], ecx; pop rbx; ret; 
0x0000000000409a07: mov dword ptr [rdx + 0xe0], ecx; ret; 
0x0000000000438b77: mov dword ptr [rdx + 3], eax; lea rax, [rdx + 6]; ret; 
0x00000000004373a7: mov dword ptr [rdx + 3], eax; mov rax, rdi; ret; 
0x0000000000438b59: mov dword ptr [rdx + 4], eax; lea rax, [rdx + 5]; ret; 
0x0000000000437399: mov dword ptr [rdx + 4], eax; mov rax, rdi; ret; 
0x0000000000438c0b: mov dword ptr [rdx + 5], eax; lea rax, [rdx + 0xc]; ret; 
0x0000000000438b89: mov dword ptr [rdx + 5], eax; lea rax, [rdx + 8]; ret; 
0x00000000004373b9: mov dword ptr [rdx + 5], eax; mov rax, rdi; ret; 
0x0000000000438c2b: mov dword ptr [rdx + 6], eax; lea rax, [rdx + 0xd]; ret; 
0x0000000000438ba9: mov dword ptr [rdx + 6], eax; lea rax, [rdx + 9]; ret; 
0x00000000004373c9: mov dword ptr [rdx + 6], eax; mov rax, rdi; ret; 
0x0000000000438bc9: mov dword ptr [rdx + 7], eax; lea rax, [rdx + 0xa]; ret; 
0x0000000000438c4b: mov dword ptr [rdx + 7], eax; lea rax, [rdx + 0xe]; ret; 
0x00000000004373d9: mov dword ptr [rdx + 7], eax; mov rax, rdi; ret; 
0x0000000000438be9: mov dword ptr [rdx + 8], eax; lea rax, [rdx + 0xb]; ret; 
0x0000000000438adb: mov dword ptr [rdx + 8], eax; lea rax, [rdx + 0xf]; ret; 
0x000000000043732b: mov dword ptr [rdx + 8], eax; mov rax, rdi; ret; 
0x000000000044d9ef: mov dword ptr [rdx + 8], eax; pop rbx; ret; 
0x0000000000478358: mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x00000000004783c2: mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000000438b04: mov dword ptr [rdx], eax; lea rax, [rdx + 1]; ret; 
0x0000000000438b32: mov dword ptr [rdx], eax; lea rax, [rdx + 3]; ret; 
0x0000000000438a84: mov dword ptr [rdx], eax; lea rax, [rdx + 7]; ret; 
0x0000000000438b14: mov dword ptr [rdx], eax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; lea rax, [rdx + 2]; ret; 
0x0000000000437364: mov dword ptr [rdx], eax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; mov rax, rdi; ret; 
0x0000000000438b42: mov dword ptr [rdx], eax; mov al, byte ptr [rcx + 4]; mov byte ptr [rdx + 4], al; lea rax, [rdx + 4]; ret; 
0x0000000000437382: mov dword ptr [rdx], eax; mov al, byte ptr [rcx + 4]; mov byte ptr [rdx + 4], al; mov rax, rdi; ret; 
0x0000000000438b52: mov dword ptr [rdx], eax; mov ax, word ptr [rcx + 4]; mov word ptr [rdx + 4], ax; lea rax, [rdx + 5]; ret; 
0x0000000000437392: mov dword ptr [rdx], eax; mov ax, word ptr [rcx + 4]; mov word ptr [rdx + 4], ax; mov rax, rdi; ret; 
0x000000000043e88a: mov dword ptr [rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000047839f: mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x0000000000438b72: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 3]; mov dword ptr [rdx + 3], eax; lea rax, [rdx + 6]; ret; 
0x00000000004373a2: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 3]; mov dword ptr [rdx + 3], eax; mov rax, rdi; ret; 
0x0000000000438b84: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; lea rax, [rdx + 8]; ret; 
0x00000000004373b4: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; mov rax, rdi; ret; 
0x0000000000438ba4: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; lea rax, [rdx + 9]; ret; 
0x00000000004373c4: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; mov rax, rdi; ret; 
0x0000000000438bc4: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; lea rax, [rdx + 0xa]; ret; 
0x00000000004373d4: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; mov rax, rdi; ret; 
0x0000000000438be4: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; lea rax, [rdx + 0xb]; ret; 
0x00000000004373e4: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; mov rax, rdi; ret; 
0x000000000043eaaa: mov dword ptr [rdx], eax; mov rax, -1; ret; 
0x0000000000438c04: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; lea rax, [rdx + 0xc]; ret; 
0x00000000004373f4: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x0000000000438c24: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; lea rax, [rdx + 0xd]; ret; 
0x0000000000437414: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x0000000000438c44: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; lea rax, [rdx + 0xe]; ret; 
0x0000000000437434: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000438ad4: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; lea rax, [rdx + 0xf]; ret; 
0x0000000000437324: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x00000000004372d4: mov dword ptr [rdx], eax; mov rax, rdi; ret; 
0x0000000000472dc1: mov dword ptr [rdx], eax; pop rbx; ret; 
0x0000000000410911: mov dword ptr [rdx], eax; ret; 
0x000000000045e739: mov dword ptr [rdx], ecx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000043fb67: mov dword ptr [rdx], edi; pop rbx; pop rbp; ret; 
0x000000000042ad37: mov dword ptr [rip + 0x14634900], eax; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004809dd: mov dword ptr [rip + 0x2ebf1], 0; add rsp, 8; ret; 
0x00000000004803bc: mov dword ptr [rip + 0x2ed2e], ebx; test rbx, rbx; jne 0x803a8; pop rbx; ret; 
0x00000000004805e8: mov dword ptr [rip + 0x2ee3e], 0; add rsp, 8; ret; 
0x0000000000472838: mov dword ptr [rip + 0x3ce6a], eax; ret; 
0x000000000047281d: mov dword ptr [rip + 0x3ce85], eax; add rsp, 8; ret; 
0x000000000046cde9: mov dword ptr [rip + 0x4286d], 0; add rsp, 8; ret; 
0x0000000000462220: mov dword ptr [rip + 0x4d3d2], eax; cmp rdi, rax; ja 0x62250; xor eax, eax; ret; 
0x000000000044f91d: mov dword ptr [rip + 0x5e0cd], eax; mov qword ptr [rip + 0x5e0ce], rdx; cmp qword ptr fs:[rdi], rsi; je 0x4f938; ret; 
0x000000000044f924: mov dword ptr [rip + 0x5e0ce], edx; cmp qword ptr fs:[rdi], rsi; je 0x4f938; ret; 
0x0000000000442c1a: mov dword ptr [rip + 0x68ea0], eax; pop rbx; ret; 
0x0000000000440b19: mov dword ptr [rip + 0x6c571], eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000440d65: mov dword ptr [rip + 0x6d57d], eax; ret; 
0x0000000000440d1b: mov dword ptr [rip + 0x6d58f], eax; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x00000000004160fc: mov dword ptr [rip + 0x9667e], eax; ret; 
0x00000000004160ee: mov dword ptr [rip + 0x96694], eax; lea rax, [rip - 0xa8b]; mov qword ptr [rip + 0x9667e], rax; ret; 
0x00000000004160ad: mov dword ptr [rip + 0x990c9], 0; ret; 
0x0000000000412222: mov dword ptr [rip + 0x9a558], eax; ret; 
0x0000000000412214: mov dword ptr [rip + 0x9a56e], eax; lea rax, [rip + 0x344f]; mov qword ptr [rip + 0x9a558], rax; ret; 
0x00000000004117a4: mov dword ptr [rip + 0x9afbe], eax; ret; 
0x0000000000411791: mov dword ptr [rip + 0x9afc9], eax; ret; 
0x0000000000411777: mov dword ptr [rip + 0x9afd3], edx; ret; 
0x0000000000411734: mov dword ptr [rip + 0x9afde], eax; ret; 
0x000000000041170e: mov dword ptr [rip + 0x9afec], eax; ret; 
0x0000000000411724: mov dword ptr [rip + 0x9aff6], eax; ret; 
0x00000000004116de: mov dword ptr [rip + 0x9b024], eax; ret; 
0x0000000000411703: mov dword ptr [rip + 0x9b027], 1; mov qword ptr [rip + 0x9afec], rax; ret; 
0x00000000004116bd: mov dword ptr [rip + 0x9b069], eax; ret; 
0x00000000004116b3: mov dword ptr [rip + 0x9b077], 1; mov dword ptr [rip + 0x9b069], eax; ret; 
0x0000000000411691: mov dword ptr [rip + 0x9b079], eax; mov dword ptr [rip + 0x9b093], 1; ret; 
0x0000000000411697: mov dword ptr [rip + 0x9b093], 1; ret; 
0x00000000004117d5: mov dword ptr [rip + 0x9d9bd], eax; ret; 
0x00000000004116f3: mov dword ptr [rip + 0x9da9b], eax; ret; 
0x0000000000410d4c: mov dword ptr [rip + 0x9e3c2], 0; ret; 
0x0000000000410cac: mov dword ptr [rip + 0x9e466], ebx; add dword ptr [rip + 0x9e45b], 1; pop rbx; ret; 
0x00000000004021da: mov dword ptr [rip + 0xad11c], edx; pop rbx; ret; 
0x00000000004021d4: mov dword ptr [rip + 0xad11e], ecx; mov dword ptr [rip + 0xad11c], edx; pop rbx; ret; 
0x00000000004021ce: mov dword ptr [rip + 0xad120], ebx; mov dword ptr [rip + 0xad11e], ecx; mov dword ptr [rip + 0xad11c], edx; pop rbx; ret; 
0x0000000000401f93: mov dword ptr [rip + 0xad387], eax; add rsp, 0x88; pop rbx; ret; 
0x00000000004016f1: mov dword ptr [rip + 0xadfdd], 0; pop rdx; ret; 
0x0000000000402a7e: mov dword ptr [rsi + 0x10], esi; syscall; 
0x0000000000402a72: mov dword ptr [rsi + 8], eax; mov eax, 0x9e; mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x000000000043bee6: mov dword ptr [rsi - 2], ecx; ret; 
0x000000000043bed9: mov dword ptr [rsi - 4], ecx; ret; 
0x00000000004782ca: mov dword ptr [rsi], 0; mov eax, 1; ret; 
0x0000000000478433: mov dword ptr [rsi], 0; mov eax, 2; ret; 
0x0000000000478308: mov dword ptr [rsi], eax; mov eax, 1; ret; 
0x000000000047847e: mov dword ptr [rsi], eax; mov eax, 2; ret; 
0x000000000047ceee: mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x0000000000440ec2: mov dword ptr [rsi], eax; ret; 
0x000000000044f941: mov dword ptr [rsi], ecx; mov rcx, -0x10; mov qword ptr fs:[rcx], rdx; mov rdx, -0x18; mov qword ptr fs:[rdx], rax; ret; 
0x0000000000402a7b: mov dword ptr [rsi], esi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x000000000043fc71: mov dword ptr [rsp + 0x10], ebx; call rax; 
0x000000000047d9c9: mov dword ptr [rsp + 0x10], edx; call rax; 
0x0000000000413acb: mov dword ptr [rsp + 0x10], edx; mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp], rdi; call rax; 
0x000000000046a4b4: mov dword ptr [rsp + 0x18], eax; call 0x69de0; add rsp, 0xd8; ret; 
0x0000000000413b29: mov dword ptr [rsp + 0x18], ecx; call rax; 
0x000000000043f3d1: mov dword ptr [rsp + 0x20], eax; cmp esi, 9; je 0x3f400; mov eax, 0x48; syscall; 
0x0000000000462156: mov dword ptr [rsp + 0x28], eax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000043ebe6: mov dword ptr [rsp + 0xc], eax; call 0x5f2c0; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000043fc65: mov dword ptr [rsp + 0xc], eax; mov rdi, r15; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x000000000043ebc4: mov dword ptr [rsp + 0xc], edi; call 0x5f260; mov edi, dword ptr [rsp + 0xc]; mov r8d, eax; mov eax, 3; syscall; 
0x000000000043fc64: mov dword ptr [rsp + 0xc], r8d; mov rdi, r15; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x000000000043ea88: mov dword ptr [rsp + 8], eax; call 0x5f2c0; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000440f6d: mov dword ptr [rsp + 8], eax; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000043f45e: mov dword ptr [rsp + 8], eax; xor eax, eax; cmp esi, 9; je 0x3f490; mov eax, 0x48; syscall; 
0x0000000000413ad0: mov dword ptr [rsp + 8], ecx; mov qword ptr [rsp], rdi; call rax; 
0x000000000040a86f: mov dword ptr [rsp + 8], ecx; mov rdi, r15; call rax; 
0x000000000044e37f: mov dword ptr [rsp - 0x80], eax; lea rax, [rip + 0x5d8d6]; mov rax, qword ptr [rax + r14*8]; test rax, rax; je 0x4e395; call rax; 
0x0000000000443baa: mov dword ptr [rsp], 0; mov rax, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x000000000047a710: mov dword ptr [rsp], eax; call 0x7ab30; mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000040cee8: mov dword ptr [rsp], ecx; mov rdi, rbp; call rax; 
0x0000000000413ad5: mov dword ptr [rsp], edi; call rax; 
0x000000000043fc6d: mov dword ptr [rsp], edx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x000000000045fe22: mov dword ptr [rsp], esi; pop r12; pop r13; pop r14; ret; 
0x00000000004782c9: mov dword ptr es:[rsi], 0; mov eax, 1; ret; 
0x000000000043e89f: mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000043f807: mov dword ptr fs:[rax], 0x16; mov rax, -1; ret; 
0x0000000000462257: mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000000416d96: mov dword ptr fs:[rax], 0xc; xor eax, eax; pop rbx; ret; 
0x0000000000461cd7: mov dword ptr fs:[rax], 2; xor eax, eax; ret; 
0x0000000000461ac5: mov dword ptr fs:[rax], edx; mov eax, 0xffffffff; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000043e7f9: mov dword ptr fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000043e889: mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000043eaa9: mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x000000000043c194: mov dword ptr ss:[rdi + rdx - 4], ecx; mov dword ptr [rdi], esi; ret; 
0x000000000042a2a0: mov dx, word ptr [rsi + 1]; mov cx, word ptr [rsi]; mov word ptr [rdi + 1], dx; mov word ptr [rdi], cx; ret; 
0x0000000000439632: mov dx, word ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; lea rax, [rdi + 5]; ret; 
0x0000000000439012: mov dx, word ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; ret; 
0x0000000000439683: mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; lea rax, [rdi + 9]; ret; 
0x0000000000439053: mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x0000000000424190: mov dx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x0000000000424370: mov dx, word ptr [rsi - 3]; mov cx, word ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x00000000004395f0: mov dx, word ptr [rsi]; mov word ptr [rdi], dx; lea rax, [rdi + 1]; ret; 
0x0000000000438fd0: mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x000000000043d393: mov eax, 0; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x0000000000401d40: mov eax, 0; leave; ret; 
0x0000000000401005: mov eax, 0; test rax, rax; je 0x1012; call rax; 
0x0000000000401bdd: mov eax, 0; test rax, rax; je 0x1bf0; mov edi, 0x4adb30; jmp rax; 
0x0000000000401c1f: mov eax, 0; test rax, rax; je 0x1c30; mov edi, 0x4adb30; jmp rax; 
0x000000000043e950: mov eax, 0x101; syscall; 
0x00000000004620b4: mov eax, 0x106; syscall; 
0x00000000004620b4: mov eax, 0x106; syscall; cmp rax, -0x1000; ja 0x620c8; ret; 
0x00000000004117cb: mov eax, 0x10; cmovne rax, rdx; mov qword ptr [rip + 0x9d9bd], rax; ret; 
0x000000000043d3e1: mov eax, 0x10; pop rbx; ret; 
0x000000000046215f: mov eax, 0x10; syscall; 
0x0000000000473913: mov eax, 0x11; syscall; 
0x0000000000473913: mov eax, 0x11; syscall; cmp rax, -0x1000; ja 0x73928; ret; 
0x000000000043f687: mov eax, 0x12e; xor edi, edi; syscall; 
0x000000000043f687: mov eax, 0x12e; xor edi, edi; syscall; cmp rax, -0x1000; ja 0x3f6a0; ret; 
0x0000000000469ebf: mov eax, 0x14; syscall; 
0x0000000000441a66: mov eax, 0x15; syscall; 
0x0000000000417a90: mov eax, 0x16; pop rbx; ret; 
0x0000000000417aca: mov eax, 0x16; ret; 
0x000000000047f8cf: mov eax, 0x181ee8ff; clc; jmp qword ptr [rsi + 0x2e]; 
0x000000000043e7e0: mov eax, 0x18; syscall; 
0x000000000043e7e0: mov eax, 0x18; syscall; cmp rax, -0xfff; jae 0x3e7f0; ret; 
0x0000000000440b43: mov eax, 0x19; syscall; 
0x0000000000440b43: mov eax, 0x19; syscall; cmp rax, -0xfff; jae 0x40b53; ret; 
0x000000000043f8e0: mov eax, 0x1c; syscall; 
0x000000000043f8e0: mov eax, 0x1c; syscall; cmp rax, -0xfff; jae 0x3f8f0; ret; 
0x000000000047f598: mov eax, 0x1f0f66ff; add byte ptr [rax], r8b; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000043d3da: mov eax, 0x20; pop rbx; ret; 
0x0000000000478790: mov eax, 0x26; syscall; 
0x0000000000478790: mov eax, 0x26; syscall; cmp rax, -0xfff; jae 0x787a0; ret; 
0x0000000000473900: mov eax, 0x27; syscall; 
0x0000000000473900: mov eax, 0x27; syscall; ret; 
0x000000000043d3d3: mov eax, 0x30; pop rbx; ret; 
0x0000000000461fe0: mov eax, 0x3f; syscall; 
0x0000000000461fe0: mov eax, 0x3f; syscall; cmp rax, -0xfff; jae 0x61ff0; ret; 
0x000000000043d3cc: mov eax, 0x40; pop rbx; ret; 
0x000000000044d339: mov eax, 0x44000000; mov eax, eax; pop rbp; pop r12; ret; 
0x000000000043f3da: mov eax, 0x48; syscall; 
0x000000000047cea6: mov eax, 0x48fff847; mov dword ptr [rcx], edx; add rsp, 8; ret; 
0x0000000000427614: mov eax, 0x490005b9; movsxd rdx, dword ptr [rbx + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043ecab: mov eax, 0x4f; syscall; 
0x000000000047615c: mov eax, 0x5d9066ff; ret; 
0x000000000043d3c5: mov eax, 0x60; pop rbx; ret; 
0x000000000046cb6d: mov eax, 0x62696c67; movsxd rbp, dword ptr [rip + 0x3349646c]; add byte ptr [rax + 9], cl; ret 0x2875; 
0x00000000004276e0: mov eax, 0x63490005; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000440b70: mov eax, 0x63; syscall; 
0x0000000000440b70: mov eax, 0x63; syscall; cmp rax, -0xfff; jae 0x40b80; ret; 
0x0000000000462010: mov eax, 0x66; syscall; 
0x0000000000462010: mov eax, 0x66; syscall; ret; 
0x0000000000462030: mov eax, 0x68; syscall; 
0x0000000000462030: mov eax, 0x68; syscall; ret; 
0x0000000000462020: mov eax, 0x6b; syscall; 
0x0000000000462020: mov eax, 0x6b; syscall; ret; 
0x0000000000462040: mov eax, 0x6c; syscall; 
0x0000000000462040: mov eax, 0x6c; syscall; ret; 
0x00000000004738c7: mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x000000000043d3ef: mov eax, 0x80; pop rbx; ret; 
0x0000000000402a75: mov eax, 0x9e; mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x000000000043f8b0: mov eax, 0xa; syscall; 
0x000000000043f8b0: mov eax, 0xa; syscall; cmp rax, -0xfff; jae 0x3f8c0; ret; 
0x000000000043f880: mov eax, 0xb; syscall; 
0x000000000043f880: mov eax, 0xb; syscall; cmp rax, -0xfff; jae 0x3f890; ret; 
0x0000000000407abc: mov eax, 0xba; syscall; 
0x000000000047f4de: mov eax, 0xc48348ff; or byte ptr [rbx + 0x5d], bl; ret; 
0x00000000004764b8: mov eax, 0xc48348ff; sbb byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000462210: mov eax, 0xc; syscall; 
0x0000000000472742: mov eax, 0xca; lea rdi, [rip + 0x3cf3a]; syscall; 
0x00000000004724be: mov eax, 0xca; lea rdi, [rip + 0x3d1ba]; syscall; 
0x00000000004705d2: mov eax, 0xca; lea rdi, [rip + 0x3f092]; syscall; 
0x0000000000450932: mov eax, 0xca; lea rdi, [rip + 0x5eca2]; syscall; 
0x000000000045086d: mov eax, 0xca; lea rdi, [rip + 0x5ed67]; syscall; 
0x00000000004506d0: mov eax, 0xca; lea rdi, [rip + 0x5ef04]; syscall; 
0x0000000000450601: mov eax, 0xca; lea rdi, [rip + 0x5efd3]; syscall; 
0x0000000000445382: mov eax, 0xca; lea rdi, [rip + 0x6a04a]; syscall; 
0x0000000000445216: mov eax, 0xca; lea rdi, [rip + 0x6a1b6]; syscall; 
0x000000000044511e: mov eax, 0xca; lea rdi, [rip + 0x6a2ae]; syscall; 
0x000000000043ddba: mov eax, 0xca; lea rdi, [rip + 0x71612]; syscall; 
0x0000000000417a1e: mov eax, 0xca; lea rdi, [rip + 0x94d76]; syscall; 
0x0000000000415d06: mov eax, 0xca; lea rdi, [rip + 0x96a8e]; syscall; 
0x0000000000415cce: mov eax, 0xca; lea rdi, [rip + 0x96ac6]; syscall; 
0x00000000004157ae: mov eax, 0xca; lea rdi, [rip + 0x96fe6]; syscall; 
0x000000000041546a: mov eax, 0xca; lea rdi, [rip + 0x9732a]; syscall; 
0x0000000000416929: mov eax, 0xca; lea rdi, [rip + 0x9885b]; syscall; 
0x0000000000413d9a: mov eax, 0xca; lea rdi, [rip + 0x989fa]; syscall; 
0x0000000000413d9a: mov eax, 0xca; lea rdi, [rip + 0x989fa]; syscall; pop rbp; ret; 
0x0000000000413d6a: mov eax, 0xca; lea rdi, [rip + 0x98a2a]; syscall; 
0x0000000000416002: mov eax, 0xca; lea rdi, [rip + 0x99172]; syscall; 
0x0000000000416002: mov eax, 0xca; lea rdi, [rip + 0x99172]; syscall; pop rbx; ret; 
0x0000000000414338: mov eax, 0xca; lea rdi, [rip + 0x9ae4c]; syscall; 
0x00000000004142bc: mov eax, 0xca; lea rdi, [rip + 0x9aeb8]; syscall; 
0x0000000000414017: mov eax, 0xca; lea rdi, [rip + 0x9b16d]; syscall; 
0x000000000041217a: mov eax, 0xca; lea rdi, [rip + 0x9d00a]; syscall; 
0x0000000000410d29: mov eax, 0xca; lea rdi, [rip + 0x9e3db]; syscall; 
0x0000000000410d29: mov eax, 0xca; lea rdi, [rip + 0x9e3db]; syscall; ret; 
0x0000000000410830: mov eax, 0xca; lea rdi, [rip + 0x9e8d4]; syscall; 
0x00000000004104e5: mov eax, 0xca; lea rdi, [rip + 0x9ec1f]; syscall; 
0x00000000004101a2: mov eax, 0xca; lea rdi, [rip + 0x9ef62]; syscall; 
0x000000000040ee9c: mov eax, 0xca; lea rdi, [rip + 0xa0268]; syscall; 
0x000000000040ebdc: mov eax, 0xca; lea rdi, [rip + 0xa0528]; syscall; 
0x000000000040e730: mov eax, 0xca; lea rdi, [rip + 0xa09d4]; syscall; 
0x000000000040e730: mov eax, 0xca; lea rdi, [rip + 0xa09d4]; syscall; ret; 
0x000000000040969e: mov eax, 0xca; lea rdi, [rip + 0xa5d2e]; syscall; 
0x000000000040876d: mov eax, 0xca; lea rdi, [rip + 0xa654f]; syscall; 
0x0000000000408546: mov eax, 0xca; lea rdi, [rip + 0xa6776]; syscall; 
0x000000000040850b: mov eax, 0xca; lea rdi, [rip + 0xa67b1]; syscall; 
0x0000000000408437: mov eax, 0xca; lea rdi, [rip + 0xa6885]; syscall; 
0x000000000040650b: mov eax, 0xca; lea rdi, [rip + 0xa8751]; syscall; 
0x0000000000404c38: mov eax, 0xca; lea rdi, [rip + 0xa9fec]; syscall; 
0x0000000000403c4f: mov eax, 0xca; lea rdi, [rip + 0xaaf25]; syscall; 
0x0000000000403c26: mov eax, 0xca; lea rdi, [rip + 0xaaf4e]; syscall; 
0x0000000000403b1d: mov eax, 0xca; lea rdi, [rip + 0xab057]; syscall; 
0x00000000004011ff: mov eax, 0xca; lea rdi, [rip + 0xada75]; syscall; 
0x0000000000401351: mov eax, 0xca; syscall; 
0x00000000004727e5: mov eax, 0xca; syscall; ret; 
0x000000000045f2f9: mov eax, 0xca; xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x00000000004738d0: mov eax, 0xd9; syscall; 
0x00000000004738d0: mov eax, 0xd9; syscall; cmp rax, -0x1000; ja 0x738e0; ret; 
0x000000000044fc3b: mov eax, 0xd; syscall; 
0x000000000047f84c: mov eax, 0xe0894cff; pop rbx; pop rbp; pop r12; ret; 
0x0000000000461add: mov eax, 0xe4; syscall; 
0x0000000000407aea: mov eax, 0xe; syscall; 
0x0000000000407ac8: mov eax, 0xea; syscall; 
0x0000000000421dd9: mov eax, 0xf66b8b2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044fb71: mov eax, 0xf; syscall; 
0x0000000000478476: mov eax, 0xffffbfd1; sub eax, r8d; mov dword ptr [rsi], eax; mov eax, 2; ret; 
0x0000000000478398: mov eax, 0xffffc002; sub eax, ecx; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x00000000004784bd: mov eax, 0xffffc002; sub eax, r8d; mov dword ptr [rsi], eax; mov eax, 2; ret; 
0x000000000044f961: mov eax, 0xffffffa8; movsxd rdi, edi; mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000043e899: mov eax, 0xffffffc0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000043f801: mov eax, 0xffffffc0; mov dword ptr fs:[rax], 0x16; mov rax, -1; ret; 
0x0000000000462251: mov eax, 0xffffffc0; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000000416d90: mov eax, 0xffffffc0; mov dword ptr fs:[rax], 0xc; xor eax, eax; pop rbx; ret; 
0x0000000000461cd1: mov eax, 0xffffffc0; mov dword ptr fs:[rax], 2; xor eax, eax; ret; 
0x000000000046b4a9: mov eax, 0xffffffc0; pop rbx; mov eax, dword ptr fs:[rax]; ret; 
0x000000000044f9c1: mov eax, 0xffffffe8; add rax, qword ptr fs:[0]; ret; 
0x000000000044f9a1: mov eax, 0xfffffff0; add rax, qword ptr fs:[0]; ret; 
0x000000000044f981: mov eax, 0xfffffff8; add rax, qword ptr fs:[0]; ret; 
0x0000000000461ac8: mov eax, 0xffffffff; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000456e5b: mov eax, 0xffffffff; jbe 0x56e30; mov qword ptr [rdi], rsi; ret; 
0x000000000045d0cb: mov eax, 0xffffffff; jbe 0x5d0a0; mov qword ptr [rdi], rsi; ret; 
0x000000000045072e: mov eax, 0xffffffff; pop rbp; pop r12; pop r13; ret; 
0x000000000040f971: mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x000000000040af70: mov eax, 0xffffffff; pop rbp; ret; 
0x000000000040b6c4: mov eax, 0xffffffff; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000045da14: mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000040ca13: mov eax, 0xffffffff; pop rbx; ret; 
0x000000000040bc38: mov eax, 0xffffffff; ret; 
0x000000000046a668: mov eax, 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000047d964: mov eax, 1; cmp qword ptr [rsi + 8], rcx; ja 0x7d971; sbb eax, eax; ret; 
0x00000000004783bd: mov eax, 1; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000004782e5: mov eax, 1; mov qword ptr [rdi], rdx; ret; 
0x00000000004725a9: mov eax, 1; pop rbp; pop r12; pop r13; ret; 
0x000000000040f94d: mov eax, 1; pop rbp; pop r12; ret; 
0x000000000045f41f: mov eax, 1; pop rbx; pop rbp; pop r12; ret; 
0x000000000045d9f6: mov eax, 1; pop rbx; pop rbp; ret; 
0x0000000000461521: mov eax, 1; ret; 
0x000000000043eadc: mov eax, 1; syscall; 
0x000000000043eadc: mov eax, 1; syscall; cmp rax, -0x1000; ja 0x3eb40; ret; 
0x000000000043f650: mov eax, 1; syscall; cmp rax, -0x1000; ja 0x3f660; ret; 
0x000000000045a940: mov eax, 1; xor edx, edx; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000461531: mov eax, 2; ret; 
0x0000000000461541: mov eax, 3; ret; 
0x000000000043ebac: mov eax, 3; syscall; 
0x000000000043ebac: mov eax, 3; syscall; cmp rax, -0x1000; ja 0x3ec00; ret; 
0x000000000043f370: mov eax, 3; syscall; cmp rax, -0x1000; ja 0x3f380; ret; 
0x0000000000461551: mov eax, 4; ret; 
0x000000000043e86f: mov eax, 4; syscall; 
0x000000000043e86f: mov eax, 4; syscall; cmp rax, -0x1000; ja 0x3e880; ret; 
0x0000000000461561: mov eax, 5; ret; 
0x000000000043e8be: mov eax, 5; syscall; 
0x000000000043e8be: mov eax, 5; syscall; cmp rax, -0x1000; ja 0x3e8d0; ret; 
0x0000000000461571: mov eax, 6; ret; 
0x000000000046205f: mov eax, 6; syscall; 
0x000000000046205f: mov eax, 6; syscall; cmp rax, -0x1000; ja 0x62070; ret; 
0x0000000000461581: mov eax, 7; ret; 
0x000000000043d3e8: mov eax, 8; pop rbx; ret; 
0x000000000043eb70: mov eax, 8; syscall; 
0x000000000043eb70: mov eax, 8; syscall; cmp rax, -0x1000; ja 0x3eb80; ret; 
0x000000000043f7eb: mov eax, 9; syscall; 
0x000000000043ea31: mov eax, dword ptr [0x18]; test eax, eax; jne 0x3ea50; syscall; 
0x00000000004083b9: mov eax, dword ptr [rax + 0x18]; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; call rax; 
0x000000000040af61: mov eax, dword ptr [rax + 0x20]; jmp rax; 
0x000000000044fa1b: mov eax, dword ptr [rax + 0x58]; mov rdx, -0x18; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000040fb48: mov eax, dword ptr [rax + 0x68]; test rax, rax; jne 0xfb40; ret; 
0x000000000045e96d: mov eax, dword ptr [rax + 0xe0]; call qword ptr [rax + 0x68]; 
0x000000000045ea86: mov eax, dword ptr [rax + 0xe0]; mov esi, 0xffffffff; call qword ptr [rax + 0x18]; 
0x000000000040af5a: mov eax, dword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x0000000000479808: mov eax, dword ptr [rax + 8]; mov rdx, r13; add rax, qword ptr [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x000000000046ce01: mov eax, dword ptr [rax + 8]; ret; 
0x000000000046ce11: mov eax, dword ptr [rax + 8]; sub rax, qword ptr fs:[0]; ret; 
0x000000000044e149: mov eax, dword ptr [rax + rbx*8]; test rax, rax; je 0x4e153; call rax; 
0x0000000000480640: mov eax, dword ptr [rax + rbx*8]; test rax, rax; je 0x8064a; call rax; 
0x000000000044f96f: mov eax, dword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000044e38b: mov eax, dword ptr [rax + rsi*8]; test rax, rax; je 0x4e395; call rax; 
0x000000000047ce59: mov eax, dword ptr [rax]; add rsp, 8; ret; 
0x000000000045e736: mov eax, dword ptr [rax]; mov qword ptr [rdx], rcx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000044f96c: mov eax, dword ptr [rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000046b4b1: mov eax, dword ptr [rax]; ret; 
0x0000000000410901: mov eax, dword ptr [rax]; test rax, rax; jne 0x108f8; ret; 
0x000000000045085f: mov eax, dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5ed67]; syscall; 
0x000000000040308c: mov eax, dword ptr [rbp + 8]; sub eax, dword ptr [rbx + 8]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000401cc6: mov eax, dword ptr [rbp - 0x20]; mov rdi, rax; call 0x16730; nop; leave; ret; 
0x000000000043fe82: mov eax, dword ptr [rbp - 0x60]; call rax; 
0x0000000000444a7e: mov eax, dword ptr [rbp - 0x70]; mov rdi, r12; call rax; 
0x0000000000478082: mov eax, dword ptr [rbp - 8]; sub rax, qword ptr fs:[0x28]; jne 0x780d1; leave; ret; 
0x0000000000468d48: mov eax, dword ptr [rbx + 0x10]; add rax, qword ptr [r11]; test r10d, r10d; jne 0x68d63; mov qword ptr [rbp - 0xd8], r11; call rax; 
0x0000000000467f61: mov eax, dword ptr [rbx + 0x10]; add rax, qword ptr [r15]; add r13, r14; test esi, esi; jne 0x67f70; call rax; 
0x0000000000468397: mov eax, dword ptr [rbx + 0x10]; add rax, qword ptr [r15]; test ecx, ecx; jne 0x683a3; call rax; 
0x0000000000468c0d: mov eax, dword ptr [rbx + 0x10]; add rax, qword ptr [r15]; test edx, edx; jne 0x68c19; call rax; 
0x0000000000468518: mov eax, dword ptr [rbx + 0x10]; add rax, qword ptr [r15]; test r11d, r11d; jne 0x68525; call rax; 
0x0000000000472d99: mov eax, dword ptr [rbx + 0x10]; mov qword ptr [rax], 0; mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000472d49: mov eax, dword ptr [rbx + 0x10]; mov qword ptr [rax], rdi; pop rbx; ret; 
0x0000000000472d39: mov eax, dword ptr [rbx + 0x10]; mov rdx, qword ptr [rdi + 0x30]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000040f0ce: mov eax, dword ptr [rbx + 0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000040f0ee: mov eax, dword ptr [rbx + 0x18]; mov esi, dword ptr [rsp + 0xc]; mov rdi, qword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000040cbf3: mov eax, dword ptr [rbx + 0x20]; add rsp, 8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x000000000040f326: mov eax, dword ptr [rbx + 0x28]; add rsp, 8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x000000000040f6aa: mov eax, dword ptr [rbx + 0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000040f8cc: mov eax, dword ptr [rbx + 0x48]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x0000000000472d21: mov eax, dword ptr [rbx + 8]; lea rdx, [rip + 0x256f1]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000047b8e6: mov eax, dword ptr [rbx + 8]; movsxd rax, dword ptr [r15 + rax*4]; add rax, r15; jmp rax; 
0x0000000000440b16: mov eax, dword ptr [rbx]; mov qword ptr [rip + 0x6c571], rax; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000438b74: mov eax, dword ptr [rcx + 3]; mov dword ptr [rdx + 3], eax; lea rax, [rdx + 6]; ret; 
0x00000000004373a4: mov eax, dword ptr [rcx + 3]; mov dword ptr [rdx + 3], eax; mov rax, rdi; ret; 
0x0000000000438b55: mov eax, dword ptr [rcx + 4]; mov word ptr [rdx + 4], ax; lea rax, [rdx + 5]; ret; 
0x0000000000437395: mov eax, dword ptr [rcx + 4]; mov word ptr [rdx + 4], ax; mov rax, rdi; ret; 
0x0000000000438b86: mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; lea rax, [rdx + 8]; ret; 
0x00000000004373b6: mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; mov rax, rdi; ret; 
0x0000000000438c07: mov eax, dword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; lea rax, [rdx + 0xc]; ret; 
0x00000000004373f7: mov eax, dword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x0000000000438ba6: mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; lea rax, [rdx + 9]; ret; 
0x00000000004373c6: mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; mov rax, rdi; ret; 
0x0000000000438c27: mov eax, dword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; lea rax, [rdx + 0xd]; ret; 
0x0000000000437417: mov eax, dword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x0000000000438bc6: mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; lea rax, [rdx + 0xa]; ret; 
0x00000000004373d6: mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; mov rax, rdi; ret; 
0x0000000000438c47: mov eax, dword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; lea rax, [rdx + 0xe]; ret; 
0x0000000000437437: mov eax, dword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000438be6: mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; lea rax, [rdx + 0xb]; ret; 
0x00000000004373e6: mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; mov rax, rdi; ret; 
0x0000000000438ad7: mov eax, dword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; lea rax, [rdx + 0xf]; ret; 
0x0000000000437327: mov eax, dword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x0000000000431c2a: mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000043d84e: mov eax, dword ptr [rcx + rax*4]; sub eax, dword ptr [rcx + rsi*4]; je 0x3d838; ret; 
0x0000000000433502: mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000045a8c6: mov eax, dword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000459e0e: mov eax, dword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x0000000000438b30: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; lea rax, [rdx + 3]; ret; 
0x0000000000438b40: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov al, byte ptr [rcx + 4]; mov byte ptr [rdx + 4], al; lea rax, [rdx + 4]; ret; 
0x0000000000437380: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov al, byte ptr [rcx + 4]; mov byte ptr [rdx + 4], al; mov rax, rdi; ret; 
0x0000000000438b50: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov ax, word ptr [rcx + 4]; mov word ptr [rdx + 4], ax; lea rax, [rdx + 5]; ret; 
0x0000000000437390: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov ax, word ptr [rcx + 4]; mov word ptr [rdx + 4], ax; mov rax, rdi; ret; 
0x0000000000438b70: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 3]; mov dword ptr [rdx + 3], eax; lea rax, [rdx + 6]; ret; 
0x00000000004373a0: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 3]; mov dword ptr [rdx + 3], eax; mov rax, rdi; ret; 
0x0000000000437370: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov rax, rdi; ret; 
0x0000000000438a81: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; lea rax, [rdx + 7]; ret; 
0x0000000000438b81: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; lea rax, [rdx + 8]; ret; 
0x00000000004373b1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; mov rax, rdi; ret; 
0x0000000000438ba1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; lea rax, [rdx + 9]; ret; 
0x00000000004373c1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; mov rax, rdi; ret; 
0x0000000000438bc1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; lea rax, [rdx + 0xa]; ret; 
0x00000000004373d1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; mov rax, rdi; ret; 
0x0000000000438be1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; lea rax, [rdx + 0xb]; ret; 
0x00000000004373e1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; mov rax, rdi; ret; 
0x0000000000438c01: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; lea rax, [rdx + 0xc]; ret; 
0x00000000004373f1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x0000000000438c21: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; lea rax, [rdx + 0xd]; ret; 
0x0000000000437411: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x0000000000438c41: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; lea rax, [rdx + 0xe]; ret; 
0x0000000000437431: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000438ad1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; lea rax, [rdx + 0xf]; ret; 
0x0000000000437321: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x00000000004372d1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, rdi; ret; 
0x0000000000438b01: mov eax, dword ptr [rcx]; mov word ptr [rdx], ax; lea rax, [rdx + 1]; ret; 
0x0000000000438b11: mov eax, dword ptr [rcx]; mov word ptr [rdx], ax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; lea rax, [rdx + 2]; ret; 
0x0000000000437361: mov eax, dword ptr [rcx]; mov word ptr [rdx], ax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; mov rax, rdi; ret; 
0x0000000000437351: mov eax, dword ptr [rcx]; mov word ptr [rdx], ax; mov rax, rdi; ret; 
0x000000000046a6ca: mov eax, dword ptr [rcx]; ret; 
0x0000000000410920: mov eax, dword ptr [rdi + 0x10]; sub eax, dword ptr [rsi + 0x10]; ret; 
0x0000000000410948: mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x000000000045f0f3: mov eax, dword ptr [rdi + 0x10]; sub r8d, eax; mov eax, r8d; ret; 
0x000000000044f312: mov eax, dword ptr [rdi + 0x20]; mov rbp, rdi; test rax, rax; je 0x4f31f; call rax; 
0x00000000004808fd: mov eax, dword ptr [rdi + 0x20]; test rax, rax; je 0x8090c; call rax; 
0x00000000004115d1: mov eax, dword ptr [rdi + 0x28]; cmp qword ptr [rdi + 0x10], rax; cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000412883: mov eax, dword ptr [rdi + 0x28]; mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x000000000040ef5b: mov eax, dword ptr [rdi + 0x48]; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x0000000000410c61: mov eax, dword ptr [rdi + 0x68]; ret; 
0x000000000047ce61: mov eax, dword ptr [rdi + 0x90]; ret; 
0x000000000047ced1: mov eax, dword ptr [rdi + 0x98]; ret; 
0x000000000045e951: mov eax, dword ptr [rdi + 0xa0]; cmp qword ptr [rax + 0x30], 0; je 0x5e960; ret; 
0x000000000047cf11: mov eax, dword ptr [rdi + 0xa0]; ret; 
0x000000000047cf61: mov eax, dword ptr [rdi + 0xa8]; ret; 
0x000000000047cf51: mov eax, dword ptr [rdi + 0xb0]; ret; 
0x000000000047cf21: mov eax, dword ptr [rdi + 0xb8]; ret; 
0x000000000047cee1: mov eax, dword ptr [rdi + 0xc0]; sar rax, 0x3f; and eax, 1; mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000040d781: mov eax, dword ptr [rdi + 8]; cmp rax, qword ptr [rdi + 0x10]; jae 0xd790; movzx eax, byte ptr [rax]; ret; 
0x0000000000410d87: mov eax, dword ptr [rdi + 8]; cmp rax, rdx; jae 0x10db0; movzx eax, byte ptr [rax]; ret; 
0x000000000047d831: mov eax, dword ptr [rdi + 8]; mov rsi, rdi; test rax, rax; je 0x7d848; mov edi, 1; jmp rax; 
0x0000000000453f97: mov eax, dword ptr [rdi + rax*8]; jmp rax; 
0x00000000004218e4: mov eax, dword ptr [rdi - 4]; cmp ecx, eax; jne 0x222ff; xor eax, eax; ret; 
0x000000000043b53c: mov eax, dword ptr [rdi - 4]; mov ecx, dword ptr [rsi - 4]; cmp eax, ecx; jne 0x3b750; xor eax, eax; ret; 
0x0000000000421b43: mov eax, dword ptr [rdi - 4]; mov ecx, dword ptr [rsi - 4]; cmp ecx, eax; jne 0x222ff; xor eax, eax; ret; 
0x0000000000421e41: mov eax, dword ptr [rdi - 8]; cmp rcx, rax; jne 0x222f3; xor eax, eax; ret; 
0x00000000004218b7: mov eax, dword ptr [rdi - 8]; mov rcx, qword ptr [rsi - 8]; cmp rcx, rax; jne 0x222f3; xor eax, eax; ret; 
0x0000000000411681: mov eax, dword ptr [rdi]; cmp rax, 0x2000000; jbe 0x11690; ret; 
0x0000000000411741: mov eax, dword ptr [rdi]; cmp rax, 0x408; jbe 0x11750; ret; 
0x00000000004117b1: mov eax, dword ptr [rdi]; cmp rax, 0xa0; jbe 0x117c0; ret; 
0x0000000000411781: mov eax, dword ptr [rdi]; cmp rax, 0xffff; jbe 0x11790; ret; 
0x00000000004765e1: mov eax, dword ptr [rdi]; cmp rax, rsi; je 0x765f0; ret; 
0x0000000000411701: mov eax, dword ptr [rdi]; mov dword ptr [rip + 0x9b027], 1; mov qword ptr [rip + 0x9afec], rax; ret; 
0x00000000004116b1: mov eax, dword ptr [rdi]; mov dword ptr [rip + 0x9b077], 1; mov dword ptr [rip + 0x9b069], eax; ret; 
0x00000000004116f1: mov eax, dword ptr [rdi]; mov dword ptr [rip + 0x9da9b], eax; ret; 
0x000000000041090e: mov eax, dword ptr [rdi]; mov qword ptr [rdx], rax; ret; 
0x00000000004117a1: mov eax, dword ptr [rdi]; mov qword ptr [rip + 0x9afbe], rax; ret; 
0x0000000000411731: mov eax, dword ptr [rdi]; mov qword ptr [rip + 0x9afde], rax; ret; 
0x0000000000411721: mov eax, dword ptr [rdi]; mov qword ptr [rip + 0x9aff6], rax; ret; 
0x000000000047f5d0: mov eax, dword ptr [rdi]; test eax, eax; jne 0x7f5e0; ret; 
0x000000000047f910: mov eax, dword ptr [rdi]; test eax, eax; jne 0x7f920; ret; 
0x000000000040bc2a: mov eax, dword ptr [rdx + 0x4c]; cmp dword ptr [rdx + 0x48], eax; cmovne eax, ecx; ret; 
0x000000000042f836: mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x00000000004413a6: mov eax, dword ptr [rdx + rax]; mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000045ec27: mov eax, dword ptr [rdx]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000473b60: mov eax, dword ptr [rip + 0x3b6ba]; ret; 
0x0000000000461a9d: mov eax, dword ptr [rip + 0x4a015]; test rax, rax; je 0x61ad8; call rax; 
0x000000000044d1e1: mov eax, dword ptr [rip + 0x62241]; ret; 
0x0000000000446110: mov eax, dword ptr [rip + 0x692fe]; test eax, eax; je 0x46120; ret; 
0x00000000004442e1: mov eax, dword ptr [rip + 0x6b101]; ret; 
0x00000000004442d1: mov eax, dword ptr [rip + 0x6b109]; ret; 
0x0000000000442bf0: mov eax, dword ptr [rip + 0x6c7ca]; test eax, eax; je 0x42c00; ret; 
0x0000000000440ebb: mov eax, dword ptr [rip + 0x6d3f7]; mov qword ptr [rsi], rax; ret; 
0x0000000000440eb1: mov eax, dword ptr [rip + 0x6d411]; mov qword ptr [rdi], rax; mov rax, qword ptr [rip + 0x6d3f7]; mov qword ptr [rsi], rax; ret; 
0x0000000000440e4a: mov eax, dword ptr [rip + 0x6d498]; mov rax, r8; ret; 
0x0000000000440d58: mov eax, dword ptr [rip + 0x6d58a]; jne 0x40d70; lea rax, [r8 + 1]; mov qword ptr [rip + 0x6d57d], rax; ret; 
0x000000000043f751: mov eax, dword ptr [rip + 0x6d9c1]; test rax, rax; je 0x3f75d; ret; 
0x0000000000440ac0: mov eax, dword ptr [rip + 0x6e75a]; mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x0000000000410c41: mov eax, dword ptr [rip + 0x9b4d9]; ret; 
0x0000000000411df0: mov eax, dword ptr [rip + 0x9d39e]; test eax, eax; jne 0x11e00; ret; 
0x0000000000417441: mov eax, dword ptr [rsi + rax + 8]; sub rdx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x000000000045a2ee: mov eax, dword ptr [rsi + rax*8]; jmp rax; 
0x000000000043fad5: mov eax, dword ptr [rsi]; and rax, 0xfffffffffffffffe; mov rsi, qword ptr [rax + 8]; test sil, 1; jne 0x3fb00; ret; 
0x0000000000443bb2: mov eax, dword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x00000000004025a3: mov eax, dword ptr [rsp + 0x18]; call rax; 
0x000000000043fc60: mov eax, dword ptr [rsp + 0x18]; mov dword ptr [rsp + 0xc], r8d; mov rdi, r15; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x0000000000446485: mov eax, dword ptr [rsp + 0x20]; call rax; 
0x0000000000446f2f: mov eax, dword ptr [rsp + 0x28]; call rax; 
0x000000000043ebef: mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000043ea92: mov eax, dword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000407c69: mov eax, dword ptr [rsp + 8]; call rax; 
0x000000000040a4d3: mov eax, dword ptr [rsp + 8]; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x000000000047d9c4: mov eax, dword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], r10; call rax; 
0x0000000000407bf6: mov eax, dword ptr [rsp + 8]; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000047d9e7: mov eax, dword ptr [rsp + 8]; mov rdx, r8; mov rdi, r15; mov rsi, qword ptr [rbx]; call rax; 
0x0000000000407d8c: mov eax, dword ptr [rsp + 8]; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000047a9ee: mov eax, dword ptr [rsp]; add rsp, 0x38; pop rbx; pop r14; ret; 
0x000000000047a719: mov eax, dword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000047f313: mov eax, dword ptr [rsp]; mov rdx, r15; mov rsi, qword ptr [r12 + rbp*8 + 0x10]; mov rdi, r13; call rax; 
0x0000000000475084: mov eax, dword ptr [rsp]; pop rbx; add rax, qword ptr [rdx + 8]; pop rbp; pop r12; jmp rax; 
0x000000000043ea30: mov eax, dword ptr fs:[0x18]; test eax, eax; jne 0x3ea50; syscall; 
0x000000000046b4b0: mov eax, dword ptr fs:[rax]; ret; 
0x000000000040ca96: mov eax, eax; add byte ptr [rax], al; add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x000000000040861a: mov eax, eax; add qword ptr [rip + 0xa669c], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000407b05: mov eax, eax; add rsp, 0x118; ret; 
0x000000000043ebd2: mov eax, eax; mov eax, 3; syscall; 
0x000000000043e9c6: mov eax, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000043eb12: mov eax, eax; mov edi, dword ptr [rsp + 8]; mov eax, 1; syscall; 
0x000000000043ea72: mov eax, eax; mov edi, dword ptr [rsp + 8]; xor eax, eax; syscall; 
0x000000000046a819: mov eax, eax; mov qword ptr [r11], rdi; pop rbx; ret; 
0x0000000000406f90: mov eax, eax; movsxd rdi, dword ptr [r10 + r8*4]; add rdi, r10; jmp rdi; 
0x00000000004164c3: mov eax, eax; pop r12; pop r13; ret; 
0x0000000000406b38: mov eax, eax; pop r12; ret; 
0x0000000000416527: mov eax, eax; pop r13; ret; 
0x0000000000409d69: mov eax, eax; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000040c1a7: mov eax, eax; pop rbp; pop r12; ret; 
0x0000000000472449: mov eax, eax; pop rbp; sub dword ptr [rip + 0x3d231], 1; pop r12; ret; 
0x0000000000408725: mov eax, eax; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000406af1: mov eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000040868c: mov eax, eax; pop rbx; pop rbp; ret; 
0x000000000046a805: mov eax, eax; pop rbx; ret; 
0x0000000000408681: mov eax, eax; ret; 
0x0000000000461904: mov eax, eax; shr rax, 2; vzeroupper; ret; 
0x00000000004607c1: mov eax, eax; vzeroupper; ret; 
0x000000000047cde0: mov eax, ebp; mov rcx, r12; mov esi, 0x1a; mov edi, 1; call rax; 
0x000000000047cd18: mov eax, ebp; mov rcx, r12; mov esi, 0xa; mov edi, 1; call rax; 
0x0000000000409aca: mov eax, ebp; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000043fdf1: mov eax, ebp; pop rbp; pop r12; pop r13; ret; 
0x0000000000460a5b: mov eax, ebp; pop rbx; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000043fddc: mov eax, ebp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000040d6eb: mov eax, ebp; pop rbx; pop rbp; pop r12; ret; 
0x000000000047d06b: mov eax, ebp; pop rbx; pop rbp; ret; 
0x0000000000478273: mov eax, ebx; adc rax, rdx; pop rbp; pop rbx; ret; 
0x000000000045f2e5: mov eax, ebx; and eax, 0xc; cmp eax, 4; je 0x5f2f0; ret; 
0x000000000047cbdf: mov eax, ebx; mov rcx, rbp; or esi, 2; mov edi, 1; call rax; 
0x000000000040db86: mov eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x000000000040c29b: mov eax, ebx; pop rbx; ret; 
0x0000000000415fd7: mov eax, ebx; syscall; 
0x0000000000478137: mov eax, ecx; adc eax, eax; ret; 
0x000000000044fd0f: mov eax, ecx; add rsp, 0x148; ret; 
0x00000000004621e7: mov eax, ecx; add rsp, 0x38; ret; 
0x000000000043d3ff: mov eax, ecx; and eax, 0x7ff80000; div esi; mov eax, eax; ret; 
0x000000000045f1ae: mov eax, ecx; mov qword ptr [rax + 0x10], rcx; lea rdx, [r8 + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000456f38: mov eax, ecx; pop r14; ret; 
0x0000000000456e87: mov eax, ecx; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000043d318: mov eax, ecx; pop rbx; shr eax, 0xe; and eax, 0x3fc00; ret; 
0x000000000043d363: mov eax, ecx; pop rbx; shr eax, 6; and eax, 0x3fffc00; ret; 
0x0000000000407ab5: mov eax, ecx; syscall; 
0x00000000004438eb: mov eax, edi; add rsp, 0x1d0; pop rbx; pop rbp; pop r12; ret; 
0x000000000046d5a3: mov eax, edi; mov rdi, rdx; cmp rax, 9; ja 0x6d580; mov rax, r8; ret; 
0x0000000000411f91: mov eax, edi; pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x0000000000410c71: mov eax, edi; ret; 
0x000000000043d336: mov eax, edx; and ecx, 0x3fc00; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000000046035c: mov eax, edx; mov rdi, rsi; bsr eax, eax; lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x000000000043d3c1: mov eax, edx; pop rbx; ret; 
0x0000000000435c99: mov eax, edx; ret; 
0x000000000046c7b0: mov eax, edx; sub eax, ecx; ret; 
0x00000000004025d2: mov eax, edx; syscall; 
0x000000000043d414: mov eax, edx; xor edx, edx; and eax, 0x3fffc00; div ecx; mov eax, eax; ret; 
0x000000000044fdc5: mov eax, esi; mov r10d, 8; mov rsi, r8; mov eax, 0xe; syscall; 
0x000000000044fb56: mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x000000000043e285: mov eax, esi; syscall; 
0x000000000047d1e5: mov eax, esp; mov rcx, r14; mov esi, 1; mov edi, 1; call rax; 
0x000000000045ef0e: mov eax, esp; pop r12; pop r13; pop r14; ret; 
0x000000000045f779: mov eax, esp; pop r12; pop r13; ret; 
0x0000000000402f29: mov eax, esp; pop r12; ret; 
0x000000000043f969: mov eax, esp; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000040c33e: mov eax, esp; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000411d8b: mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x000000000040b3e8: mov eax, esp; pop rbp; pop r12; ret; 
0x000000000043f709: mov eax, esp; pop rbx; pop r12; ret; 
0x000000000044095d: mov eax, esp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000402e8b: mov eax, esp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000478819: mov eax, esp; sar rax, 3; pop rbx; pop rbp; pop r12; ret; 
0x0000000000424f40: mov eax, fs; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000040c01b: mov eax, r10d; syscall; 
0x000000000045f2e4: mov eax, r11d; and eax, 0xc; cmp eax, 4; je 0x5f2f0; ret; 
0x0000000000443b9d: mov eax, r12d; pop r12; ret; 
0x000000000047a180: mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x000000000040b3e7: mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000046d694: mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000044095c: mov eax, r12d; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000409579: mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000000407b04: mov eax, r8d; add rsp, 0x118; ret; 
0x0000000000409d68: mov eax, r8d; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000044d33d: mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000000472448: mov eax, r8d; pop rbp; sub dword ptr [rip + 0x3d231], 1; pop r12; ret; 
0x0000000000408724: mov eax, r8d; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000004091af: mov eax, r8d; pop rbx; pop rbp; pop r12; ret; 
0x000000000040941f: mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000004726fa: mov eax, r8d; pop rbx; ret; 
0x0000000000451010: mov eax, r8d; ret; 
0x000000000044fd0e: mov eax, r9d; add rsp, 0x148; ret; 
0x00000000004621e6: mov eax, r9d; add rsp, 0x38; ret; 
0x0000000000438f0f: mov ebp, 0x490004ad; movsxd rcx, dword ptr [rbx + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000421ad4: mov ebp, 0x4e6f0ff3; mov ebp, 0xf66bdb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043f73f: mov ebp, 0x8c48348; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000421ad9: mov ebp, 0xf66bdb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000045ff88: mov ebp, 0xf80148c0; ret; 
0x000000000046020c: mov ebp, 0xf80148c6; ret; 
0x00000000004580c5: mov ebp, 0xfffff738; mov rdx, r10; mov rsi, r15; mov byte ptr [rbp - 0x94c], r9b; call rax; 
0x0000000000453d34: mov ebp, 0xfffffb30; mov rsi, r13; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x0000000000469eb3: mov ebp, 0xfffffba0; lea rsi, [rbp - 0x430]; mov eax, 0x14; syscall; 
0x000000000047d24c: mov ebp, dword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000047d405: mov ebp, dword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000047d411: mov ebp, dword ptr [rbp]; mov rsp, rcx; ret; 
0x0000000000459bbb: mov ebp, ebx; sar r13, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x000000000044fb5c: mov ebp, ecx; jmp rdx; 
0x000000000043eca6: mov ebp, edi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x0000000000461a96: mov ebp, edi; sub rsp, 8; mov rax, qword ptr [rip + 0x4a015]; test rax, rax; je 0x61ad8; call rax; 
0x000000000044f316: mov ebp, edi; test rax, rax; je 0x4f31f; call rax; 
0x000000000046b25f: mov ebp, esp; mov rsi, rbp; syscall; 
0x000000000044610b: mov ebx, 0x1f0fff; mov eax, dword ptr [rip + 0x692fe]; test eax, eax; je 0x46120; ret; 
0x0000000000417be9: mov ebx, 0x2000976; lea rax, [rip + 0x1deeb]; lea rdx, [rip + 0x1e0a4]; cmovne rax, rdx; ret; 
0x00000000004523be: mov ebx, 0x39480000; ret; 
0x0000000000418971: mov ebx, 0x480001c8; lea eax, [rip + 0x1c474]; cmove rax, rdx; ret; 
0x000000000045a8c1: mov ebx, 0x480004f4; mov eax, dword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x000000000040849f: mov ebx, 0x4ae228; mov r12, 0x4ae230; cmp rbx, r12; jae 0x84c3; nop dword ptr [rax]; call qword ptr [rbx]; 
0x0000000000406c24: mov ebx, 0x850f5f3c; out dx, eax; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000040fee3: mov ebx, 0x8c48348; pop rbx; pop rbp; ret; 
0x000000000045f284: mov ebx, 0xafb8341; je 0x5f28c; ret; 
0x00000000004165e9: mov ebx, 0xe80006c2; outsb dx, byte ptr [rsi]; mov ch, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000421c59: mov ebx, 0xf66bbb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044d48c: mov ebx, 0xff371ee8; jmp qword ptr [rsi + 0x66]; 
0x0000000000468511: mov ebx, dword ptr [rbp - 0xc4]; mov rax, qword ptr [rbx + 0x10]; add rax, qword ptr [r15]; test r11d, r11d; jne 0x68525; call rax; 
0x0000000000423dc1: mov ebx, dword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423da5: mov ebx, dword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000046ceed: mov ebx, dword ptr [rsp + 0x30]; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000046ce7b: mov ebx, dword ptr [rsp + 0x30]; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x000000000045e965: mov ebx, edi; test byte ptr [rdi], 2; jne 0x5e9d0; mov rax, qword ptr [rax + 0xe0]; call qword ptr [rax + 0x68]; 
0x0000000000472677: mov ecx, 0x1b85b; add byte ptr [rax], al; pop rbp; pop r12; pop r13; ret; 
0x0000000000407ab0: mov ecx, 0x27; mov eax, ecx; syscall; 
0x0000000000401ba7: mov ecx, 0x402bc0; mov rdi, 0x401cd4; call 0x21f0; hlt; nop dword ptr [rax + rax]; ret; 
0x0000000000439593: mov ecx, 0x490004a7; movsxd rcx, dword ptr [rbx + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000425e13: mov ecx, 0x490005d1; movsxd rdx, dword ptr [rbx + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423053: mov ecx, 0x490005fd; movsxd rdx, dword ptr [rbx + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427615: mov ecx, 0x63490005; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000047e413: mov ecx, 0x89000002; ret 0xb60f; 
0x0000000000478d11: mov ecx, 0x8948fffe; ret; 
0x0000000000409816: mov ecx, 0xbad23145; add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000421d59: mov ecx, 0xf66b9b2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043e7f1: mov ecx, 0xffffffc0; neg eax; mov dword ptr fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000044f944: mov ecx, 0xfffffff0; mov qword ptr fs:[rcx], rdx; mov rdx, -0x18; mov qword ptr fs:[rdx], rax; ret; 
0x000000000045a8c9: mov ecx, 1; jmp rax; 
0x000000000043f831: mov ecx, 9; xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x000000000045e3f2: mov ecx, dword ptr [rax + 0x10]; mov qword ptr [rax], rdx; mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x0000000000468390: mov ecx, dword ptr [rbp - 0xc4]; mov rax, qword ptr [rbx + 0x10]; add rax, qword ptr [r15]; test ecx, ecx; jne 0x683a3; call rax; 
0x000000000042d03f: mov ecx, dword ptr [rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x000000000042d02c: mov ecx, dword ptr [rcx - 4]; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x000000000042d01a: mov ecx, dword ptr [rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000047ce9f: mov ecx, dword ptr [rdi + rsi*8]; cmp al, 8; jne 0x1662; mov qword ptr [rcx], rdx; add rsp, 8; ret; 
0x000000000047d961: mov ecx, dword ptr [rdx + 8]; mov eax, 1; cmp qword ptr [rsi + 8], rcx; ja 0x7d971; sbb eax, eax; ret; 
0x000000000042f833: mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x00000000004397a4: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x13]; ret; 
0x00000000004397c4: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, [rdi + 0x14]; ret; 
0x0000000000439114: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000439104: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000439825: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x0000000000439845: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x0000000000439195: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000439175: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000439765: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x00000000004390d5: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000439888: mov ecx, dword ptr [rsi + 0x17]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; lea rax, [rdi + 0x1a]; ret; 
0x00000000004391d8: mov ecx, dword ptr [rsi + 0x17]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x00000000004398a8: mov ecx, dword ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x00000000004391f8: mov ecx, dword ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000439869: mov ecx, dword ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x00000000004391b9: mov ecx, dword ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x00000000004397e5: mov ecx, dword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; lea rax, [rdi + 0x15]; ret; 
0x0000000000439135: mov ecx, dword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000439784: mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x12]; ret; 
0x00000000004390f4: mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000439805: mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; lea rax, [rdi + 0x16]; ret; 
0x0000000000439155: mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000439c74: mov ecx, dword ptr [rsi + rdx - 3]; mov dword ptr [rdi + rdx - 3], ecx; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000435a74: mov ecx, dword ptr [rsi + rdx - 3]; mov dword ptr [rdi + rdx - 3], ecx; vzeroupper; ret; 
0x000000000043c18f: mov ecx, dword ptr [rsi + rdx - 4]; mov esi, dword ptr [rsi]; mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], esi; ret; 
0x0000000000439c94: mov ecx, dword ptr [rsi + rdx - 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000435a84: mov ecx, dword ptr [rsi + rdx - 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x000000000043c17f: mov ecx, dword ptr [rsi + rdx - 8]; mov rsi, qword ptr [rsi]; mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x0000000000424165: mov ecx, dword ptr [rsi - 0xa]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424181: mov ecx, dword ptr [rsi - 0xa]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424345: mov ecx, dword ptr [rsi - 0xb]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424361: mov ecx, dword ptr [rsi - 0xb]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424525: mov ecx, dword ptr [rsi - 0xc]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424541: mov ecx, dword ptr [rsi - 0xc]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424715: mov ecx, dword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424731: mov ecx, dword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424915: mov ecx, dword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424931: mov ecx, dword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424b15: mov ecx, dword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424b31: mov ecx, dword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424375: mov ecx, dword ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x000000000043b53f: mov ecx, dword ptr [rsi - 4]; cmp eax, ecx; jne 0x3b750; xor eax, eax; ret; 
0x0000000000421b46: mov ecx, dword ptr [rsi - 4]; cmp ecx, eax; jne 0x222ff; xor eax, eax; ret; 
0x0000000000424753: mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000424953: mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000424b53: mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004218e1: mov ecx, dword ptr [rsi - 4]; mov eax, dword ptr [rdi - 4]; cmp ecx, eax; jne 0x222ff; xor eax, eax; ret; 
0x0000000000429814: mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000429794: mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000429714: mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000429894: mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004218bb: mov ecx, dword ptr [rsi - 8]; cmp rcx, rax; jne 0x222f3; xor eax, eax; ret; 
0x0000000000429685: mov ecx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004295f5: mov ecx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000429565: mov ecx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000421e3d: mov ecx, dword ptr [rsi - 8]; mov rax, qword ptr [rdi - 8]; cmp rcx, rax; jne 0x222f3; xor eax, eax; ret; 
0x0000000000423f85: mov ecx, dword ptr [rsi - 9]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423fa1: mov ecx, dword ptr [rsi - 9]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000439620: mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; lea rax, [rdi + 4]; ret; 
0x0000000000439000: mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; ret; 
0x0000000000439671: mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; lea rax, [rdi + 8]; ret; 
0x0000000000439041: mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; ret; 
0x000000000042a1c3: mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 1], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000042a153: mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 2], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000042a0e3: mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 3], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000435a70: mov ecx, dword ptr [rsi]; mov dword ptr [rdi], ecx; mov ecx, dword ptr [rsi + rdx - 3]; mov dword ptr [rdi + rdx - 3], ecx; vzeroupper; ret; 
0x0000000000439630: mov ecx, dword ptr [rsi]; mov dx, word ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; lea rax, [rdi + 5]; ret; 
0x0000000000439010: mov ecx, dword ptr [rsi]; mov dx, word ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; ret; 
0x0000000000439681: mov ecx, dword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; lea rax, [rdi + 9]; ret; 
0x0000000000439051: mov ecx, dword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x0000000000439650: mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 3]; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; lea rax, [rdi + 6]; ret; 
0x0000000000439020: mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 3]; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; ret; 
0x00000000004396a1: mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; lea rax, [rdi + 0xa]; ret; 
0x0000000000439061: mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; ret; 
0x00000000004396c1: mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; lea rax, [rdi + 0xb]; ret; 
0x0000000000439071: mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; ret; 
0x000000000042a005: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429f95: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429f25: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429eb5: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429e45: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429dd5: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429d65: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000435a81: mov ecx, dword ptr [rsi]; mov r9, qword ptr [rsi + rdx - 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x00000000004396e1: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; lea rax, [rdi + 0xc]; ret; 
0x0000000000439081: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000439701: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; lea rax, [rdi + 0xd]; ret; 
0x0000000000439091: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x0000000000439721: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; lea rax, [rdi + 0xe]; ret; 
0x00000000004390a1: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x000000000042a2a5: mov ecx, dword ptr [rsi]; mov word ptr [rdi + 1], dx; mov word ptr [rdi], cx; ret; 
0x0000000000439601: mov ecx, dword ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; lea rax, [rdi + 2]; ret; 
0x0000000000438fe1: mov ecx, dword ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; ret; 
0x0000000000443b55: mov ecx, dword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rcx; 
0x0000000000460f5b: mov ecx, dword ptr [rsp + 0x10]; mov rdi, rbp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x0000000000446f20: mov ecx, dword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000447ac0: mov ecx, dword ptr [rsp + 0x30]; mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044a50a: mov ecx, dword ptr [rsp + 0x30]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044988d: mov ecx, dword ptr [rsp + 0x38]; mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000046cef7: mov ecx, dword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000046ce85: mov ecx, dword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000407dd6: mov ecx, dword ptr [rsp + 8]; mov rdx, r14; mov rsi, r13; add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x000000000042d02b: mov ecx, dword ptr ss:[rcx - 4]; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x0000000000462338: mov ecx, eax; and ecx, dword ptr [rsi + 0x10]; lea rcx, [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x000000000046a6c3: mov ecx, eax; cmp rcx, rdx; jne 0x6a6a0; mov eax, dword ptr [rcx]; ret; 
0x000000000043d334: mov ecx, eax; mov eax, edx; and ecx, 0x3fc00; cmp edx, 0xff; cmove rax, rcx; ret; 
0x0000000000456f31: mov ecx, eax; pop r12; pop r13; mov rax, r9; pop r14; ret; 
0x000000000047cbe2: mov ecx, ebp; or esi, 2; mov edi, 1; call rax; 
0x00000000004109de: mov ecx, edx; add rax, rcx; mov qword ptr [rdi + 0x18], rsi; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x00000000004109a6: mov ecx, edx; add rax, rcx; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000043ce0a: mov ecx, edx; movzx eax, sil; mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x000000000043c162: mov ecx, edx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000047d1e8: mov ecx, esi; mov esi, 1; mov edi, 1; call rax; 
0x000000000047cddd: mov ecx, esi; mov r8, r13; mov rcx, r12; mov esi, 0x1a; mov edi, 1; call rax; 
0x000000000047cd15: mov ecx, esi; mov r8, r13; mov rcx, r12; mov esi, 0xa; mov edi, 1; call rax; 
0x0000000000444103: mov ecx, esi; mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; call rbx; 
0x0000000000476a1f: mov ecx, esi; sub rcx, qword ptr [rax + 0x10]; cmp rcx, qword ptr [rax + 0x28]; jae 0x76a10; mov eax, 1; ret; 
0x000000000047cde3: mov ecx, esp; mov esi, 0x1a; mov edi, 1; call rax; 
0x000000000047cd1b: mov ecx, esp; mov esi, 0xa; mov edi, 1; call rax; 
0x000000000043dff6: mov ecx, esp; mov rdx, r13; call rbx; 
0x0000000000401d38: mov edi, 0; call r8; mov eax, 0; leave; ret; 
0x0000000000401bae: mov edi, 0x401cd4; call 0x21f0; hlt; nop dword ptr [rax + rax]; ret; 
0x00000000004530e3: mov edi, 0x450f48d2; ret 0x86e9; 
0x0000000000401c5c: mov edi, 0x49cca8; call 0x7f900; mov byte ptr [rip + 0xac5d3], 1; pop rbp; ret; 
0x0000000000401be7: mov edi, 0x4adb30; jmp rax; 
0x0000000000421909: mov edi, 0xf66bfb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043e94b: mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000047cbe7: mov edi, 1; call rax; 
0x000000000047d83c: mov edi, 1; jmp rax; 
0x0000000000407ae5: mov edi, 2; mov eax, 0xe; syscall; 
0x000000000040c016: mov edi, 2; mov eax, r10d; syscall; 
0x000000000043fa47: mov edi, dword ptr [rbp + 0x10]; test rdi, rdi; jne 0x3fa76; mov rdi, qword ptr [rbp]; call rbx; 
0x0000000000469eb2: mov edi, dword ptr [rbp - 0x460]; lea rsi, [rbp - 0x430]; mov eax, 0x14; syscall; 
0x0000000000453d33: mov edi, dword ptr [rbp - 0x4d0]; mov rsi, r13; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x000000000043fe77: mov edi, dword ptr [rbp - 0x58]; mov qword ptr [rbp - 0x50], r9; mov r15d, r14d; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x00000000004580c4: mov edi, dword ptr [rbp - 0x8c8]; mov rdx, r10; mov rsi, r15; mov byte ptr [rbp - 0x94c], r9b; call rax; 
0x000000000047d254: mov edi, dword ptr [rbp - 8]; leave; ret; 
0x000000000047d40d: mov edi, dword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000043fa50: mov edi, dword ptr [rbp]; call rbx; 
0x000000000044fb53: mov edi, dword ptr [rdi + 0x28]; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x00000000004786e1: mov edi, dword ptr [rdi]; call 0x7a400; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000047862d: mov edi, dword ptr [rdi]; call 0x7a4f0; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x000000000046cdc1: mov edi, dword ptr [rip + 0x42899]; lea rax, [rdi - 1]; cmp rax, -3; jbe 0x6cdd8; ret; 
0x0000000000460c8d: mov edi, dword ptr [rsp + 0x10]; push 1; push 0; lea rcx, [rax + 4]; lea r9, [rsp + 0x20]; call rbx; 
0x0000000000460c13: mov edi, dword ptr [rsp + 0x10]; push 1; xor edx, edx; push 1; lea r9, [rsp + 0x20]; call rbx; 
0x0000000000443bb7: mov edi, dword ptr [rsp + 0x18]; call rax; 
0x0000000000443b5a: mov edi, dword ptr [rsp + 0x18]; call rcx; 
0x0000000000449897: mov edi, dword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000447aca: mov edi, dword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000446480: mov edi, dword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000446f2a: mov edi, dword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x00000000004469bf: mov edi, dword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000043ebcd: mov edi, dword ptr [rsp + 0xc]; mov r8d, eax; mov eax, 3; syscall; 
0x0000000000402599: mov edi, dword ptr [rsp + 0xc]; mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000040f6db: mov edi, dword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000043eb14: mov edi, dword ptr [rsp + 8]; mov eax, 1; syscall; 
0x000000000044ff65: mov edi, dword ptr [rsp + 8]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x000000000043ea74: mov edi, dword ptr [rsp + 8]; xor eax, eax; syscall; 
0x000000000040f0f6: mov edi, dword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000000460afa: mov edi, dword ptr [rsp]; lea r9, [rsp + 0x28]; call rbx; 
0x0000000000407c62: mov edi, dword ptr [rsp]; mov rdx, r14; mov rax, qword ptr [rsp + 8]; call rax; 
0x00000000004016e9: mov edi, eax; call 0x16730; mov qword ptr [rip + 0xadfdd], 0; pop rdx; ret; 
0x0000000000401cca: mov edi, eax; call 0x16730; nop; leave; ret; 
0x0000000000401dbb: mov edi, eax; call 0x9cc0; nop; pop rbp; ret; 
0x000000000046d51f: mov edi, eax; cmp rdx, rcx; jae 0x6d508; mov rax, r8; ret; 
0x000000000043ebe4: mov edi, eax; mov dword ptr [rsp + 0xc], eax; call 0x5f2c0; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000407aba: mov edi, eax; mov eax, 0xba; syscall; 
0x000000000043d84c: mov edi, eax; mov eax, dword ptr [rcx + rax*4]; sub eax, dword ptr [rcx + rsi*4]; je 0x3d838; ret; 
0x0000000000444a72: mov edi, eax; mov qword ptr [rbp - 0x70], rax; call 0x42c50; mov rax, qword ptr [rbp - 0x70]; mov rdi, r12; call rax; 
0x000000000043ea85: mov edi, eax; mov qword ptr [rsp + 8], rax; call 0x5f2c0; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000047a70d: mov edi, eax; mov qword ptr [rsp], rax; call 0x7ab30; mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000040a4dd: mov edi, ebp; call qword ptr [rax + 0x18]; 
0x00000000004799aa: mov edi, ebp; call qword ptr [rax]; 
0x00000000004094e9: mov edi, ebp; call qword ptr [rbx + 0x10]; 
0x000000000045e834: mov edi, ebp; call qword ptr [rbx + 0x18]; 
0x000000000040d406: mov edi, ebp; call qword ptr [rbx + 0x40]; 
0x000000000047984e: mov edi, ebp; call qword ptr [rbx]; 
0x000000000040ceec: mov edi, ebp; call rax; 
0x000000000043e178: mov edi, ebp; call rbx; 
0x0000000000460e15: mov edi, ebp; lea r9, [rsp + 0x30]; call rbx; 
0x000000000043eca9: mov edi, ebp; mov eax, 0x4f; syscall; 
0x0000000000412e0d: mov edi, ebp; mov eax, 0xca; syscall; 
0x0000000000461adb: mov edi, ebp; mov eax, 0xe4; syscall; 
0x000000000043f7e9: mov edi, ebp; mov eax, 9; syscall; 
0x000000000043f966: mov edi, ebp; mov rax, r12; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000000460f60: mov edi, ebp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x000000000040af56: mov edi, ebp; pop rbp; mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x000000000045e7a1: mov edi, ebp; pop rbp; pop r12; jmp rax; 
0x000000000040cc6c: mov edi, ebp; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000040cbfb: mov edi, ebp; pop rbx; pop rbp; jmp rax; 
0x00000000004083d8: mov edi, ebp; ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x000000000040efdd: mov edi, ebx; call qword ptr [rbp + 0x18]; 
0x000000000040f53e: mov edi, ebx; call qword ptr [rbp + 0x20]; 
0x000000000040fe3e: mov edi, ebx; call qword ptr [rbp + 0x30]; 
0x000000000040978e: mov edi, ebx; call qword ptr [rbp + 0x60]; 
0x0000000000409e73: mov edi, ebx; call qword ptr [rbp + 0x68]; 
0x000000000040d4f5: mov edi, ebx; call qword ptr [rbp + 0x70]; 
0x000000000045cf3a: mov edi, ebx; call rax; 
0x0000000000416c78: mov edi, ebx; mov eax, 0xca; syscall; 
0x000000000040a184: mov edi, ebx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x000000000040c575: mov edi, ebx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x00000000004173de: mov edi, ecx; mov eax, 0xca; syscall; 
0x000000000045dfcf: mov edi, edi; call qword ptr [rbp + 0x38]; 
0x000000000040a874: mov edi, edi; call rax; 
0x000000000044ff97: mov edi, edi; call rbx; 
0x000000000043fc6a: mov edi, edi; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x000000000047d9be: mov edi, edi; mov rdx, qword ptr [r10]; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], r10; call rax; 
0x000000000047d9ef: mov edi, edi; mov rsi, qword ptr [rbx]; call rax; 
0x000000000046d5a6: mov edi, edx; cmp rax, 9; ja 0x6d580; mov rax, r8; ret; 
0x000000000046035f: mov edi, esi; bsr eax, eax; lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x000000000040f5d8: mov edi, esi; call qword ptr [rbx + 0x18]; 
0x0000000000452845: mov edi, esi; call qword ptr [rbx + 0x38]; 
0x0000000000452295: mov edi, esi; call qword ptr [rcx + 0x38]; 
0x000000000045202a: mov edi, esi; mov dword ptr [rbp - 0x934], r8d; call rax; 
0x000000000043fe7f: mov edi, esi; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x000000000043e864: mov edi, esi; mov rsi, rdx; cmp r8d, 1; ja 0x3e898; mov eax, 4; syscall; 
0x000000000043e8b3: mov edi, esi; mov rsi, rdx; cmp r8d, 1; ja 0x3e8e8; mov eax, 5; syscall; 
0x0000000000462054: mov edi, esi; mov rsi, rdx; cmp r8d, 1; ja 0x62088; mov eax, 6; syscall; 
0x00000000004520ca: mov edi, esi; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x00000000004541f3: mov edi, esp; call qword ptr [rax + 0x38]; 
0x000000000045a59e: mov edi, esp; call qword ptr [rbx + 0x38]; 
0x0000000000407c01: mov edi, esp; call rax; 
0x000000000044ff58: mov edi, esp; call rbx; 
0x0000000000407de5: mov edi, esp; call rcx; 
0x000000000045a224: mov edi, esp; mov dword ptr [rbp - 0x4e8], r9d; call qword ptr [rbx + 0x38]; 
0x00000000004543c5: mov edi, esp; mov dword ptr [rbp - 0x4f0], ecx; call qword ptr [rbx + 0x38]; 
0x00000000004552d5: mov edi, esp; mov dword ptr [rbp - 0x4f8], r9d; call qword ptr [rax + 0x38]; 
0x00000000004548ea: mov edi, esp; mov dword ptr [rbp - 0x500], r9d; call qword ptr [rbx + 0x38]; 
0x000000000045b458: mov edi, esp; mov dword ptr [rbp - 0x508], r9d; mov qword ptr [rbp - 0x500], r8; call qword ptr [rax + 0x38]; 
0x0000000000455512: mov edi, esp; mov dword ptr [rbp - 0x510], ecx; mov qword ptr [rbp - 0x508], r10; call qword ptr [rax + 0x38]; 
0x00000000004163c7: mov edi, esp; mov eax, 0xca; syscall; 
0x000000000046f456: mov edi, esp; mov qword ptr [rbp - 0xe8], r8; call rax; 
0x000000000045005c: mov edi, esp; mov rdx, rbp; call rbx; 
0x000000000045a09a: mov edi, esp; sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x0000000000453d3d: mov edi, esp; sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x0000000000459bb5: mov edi, esp; sub rbx, r14; mov r13, rbx; sar r13, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x000000000043ebe3: mov edi, r8d; mov dword ptr [rsp + 0xc], eax; call 0x5f2c0; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000043ea84: mov edi, r8d; mov qword ptr [rsp + 8], rax; call 0x5f2c0; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000047a70c: mov edi, r8d; mov qword ptr [rsp], rax; call 0x7ab30; mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x0000000000417ae9: mov edx, 0; cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x00000000004413a9: mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000434c16: mov edx, 0; lea rax, [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000043d306: mov edx, 0; pop rbx; cmove rax, rdx; ret; 
0x00000000004725a7: mov edx, 0x1b85b; add byte ptr [rax], al; pop rbp; pop r12; pop r13; ret; 
0x00000000004025ca: mov edx, 0x3c; nop; xor edi, edi; mov eax, edx; syscall; 
0x000000000045ff82: mov edx, 0x48000001; bsr eax, eax; add rax, rdi; ret; 
0x00000000004278eb: mov edx, 0x63490005; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000440ac6: mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x0000000000478442: mov edx, 0x894830e8; or byte ptr [r8 + 2], r15b; ret; 
0x0000000000478c94: mov edx, 0x8948fffe; ret; 
0x000000000043eb6c: mov edx, 0xb8001f0f; or byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x0000000000401d35: mov edx, 0xbfcafe; add byte ptr [rax], al; add byte ptr [rcx - 1], al; sar byte ptr [rax], 1; leave; ret; 
0x0000000000443835: mov edx, 0xe9fe0006; ret 0xfff4; 
0x0000000000407abd: mov edx, 0xf000000; add eax, 0x8944c689; ret 0xeab8; 
0x0000000000421cd9: mov edx, 0xf66bab2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000047c7ba: mov edx, 0xfc0c7; add byte ptr [rax], al; syscall; 
0x000000000043e881: mov edx, 0xffffffc0; neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000043eaa1: mov edx, 0xffffffc0; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x000000000044fa1f: mov edx, 0xffffffe8; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000044f94f: mov edx, 0xffffffe8; mov qword ptr fs:[rdx], rax; ret; 
0x0000000000446237: mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000000472738: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3cf3a]; syscall; 
0x00000000004724b4: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3d1ba]; syscall; 
0x00000000004705c8: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3f092]; syscall; 
0x0000000000450928: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5eca2]; syscall; 
0x0000000000450863: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5ed67]; syscall; 
0x00000000004506c6: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5ef04]; syscall; 
0x00000000004505f7: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5efd3]; syscall; 
0x0000000000445378: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a04a]; syscall; 
0x000000000044520c: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a1b6]; syscall; 
0x0000000000445114: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a2ae]; syscall; 
0x000000000043ddb0: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x71612]; syscall; 
0x0000000000417a14: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x94d76]; syscall; 
0x0000000000415cfc: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96a8e]; syscall; 
0x0000000000415cc4: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96ac6]; syscall; 
0x00000000004157a4: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96fe6]; syscall; 
0x0000000000415460: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9732a]; syscall; 
0x000000000041691f: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9885b]; syscall; 
0x0000000000413d90: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x989fa]; syscall; 
0x0000000000413d60: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x98a2a]; syscall; 
0x0000000000415ff8: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x99172]; syscall; 
0x000000000041432e: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ae4c]; syscall; 
0x00000000004142b2: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9aeb8]; syscall; 
0x000000000041400d: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9b16d]; syscall; 
0x0000000000412170: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9d00a]; syscall; 
0x0000000000410d1f: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9e3db]; syscall; 
0x0000000000410826: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9e8d4]; syscall; 
0x00000000004104db: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ec1f]; syscall; 
0x0000000000410198: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ef62]; syscall; 
0x000000000040ee92: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa0268]; syscall; 
0x000000000040ebd2: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa0528]; syscall; 
0x000000000040e726: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa09d4]; syscall; 
0x0000000000409694: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa5d2e]; syscall; 
0x0000000000408763: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa654f]; syscall; 
0x000000000040853c: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa6776]; syscall; 
0x0000000000408501: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa67b1]; syscall; 
0x000000000040842d: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa6885]; syscall; 
0x0000000000406501: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa8751]; syscall; 
0x0000000000404c2e: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa9fec]; syscall; 
0x0000000000403c45: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xaaf25]; syscall; 
0x0000000000403c1c: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xaaf4e]; syscall; 
0x0000000000403b13: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xab057]; syscall; 
0x00000000004011f5: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xada75]; syscall; 
0x0000000000401347: mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004727db: mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x0000000000415fcd: mov edx, 1; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000004163bc: mov edx, 1; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004166ae: mov edx, 1; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000412e02: mov edx, 1; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000416c6d: mov edx, 1; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000004173d3: mov edx, 1; mov esi, 0x81; mov rdi, rcx; mov eax, 0xca; syscall; 
0x0000000000411655: mov edx, 2; mov esi, 0x80; mov eax, 0xca; syscall; 
0x000000000044fc36: mov edx, 8; mov eax, 0xd; syscall; 
0x000000000044fdc8: mov edx, 8; mov rsi, r8; mov eax, 0xe; syscall; 
0x000000000047ae4c: mov edx, dword ptr [rax]; lea rax, [rax + 8]; mov qword ptr [r9], rdx; pop rbx; ret; 
0x000000000047db69: mov edx, dword ptr [rax]; lea rax, [rax + 8]; mov qword ptr [rcx], rdx; ret; 
0x000000000040cee1: mov edx, dword ptr [rbp + 0x40]; sub rdx, rsi; mov qword ptr [rsp], rcx; mov rdi, rbp; call rax; 
0x0000000000468c06: mov edx, dword ptr [rbp - 0xc4]; mov rax, qword ptr [rbx + 0x10]; add rax, qword ptr [r15]; test edx, edx; jne 0x68c19; call rax; 
0x000000000047cbdb: mov edx, dword ptr [rbp]; mov r8, rbx; mov rcx, rbp; or esi, 2; mov edi, 1; call rax; 
0x0000000000472dbd: mov edx, dword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x000000000040a180: mov edx, dword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x000000000040c571: mov edx, dword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x00000000004334ff: mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000431c2d: mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000440c46: mov edx, dword ptr [rcx + rdx]; lea rcx, [rip - 0x60]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x000000000046232a: mov edx, dword ptr [rcx + rdx]; test edx, edx; jne 0x62338; ret; 
0x00000000004520c6: mov edx, dword ptr [rdi + 0x20]; mov rdi, r14; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x0000000000472d3d: mov edx, dword ptr [rdi + 0x30]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000040a868: mov edx, dword ptr [rdi + 0x40]; sub rdx, rsi; mov qword ptr [rsp + 8], rcx; mov rdi, r15; call rax; 
0x0000000000472da4: mov edx, dword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000409a00: mov edx, dword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x000000000047db79: mov edx, dword ptr [rdx]; mov qword ptr [r8], rdx; add rsp, 8; ret; 
0x000000000047aead: mov edx, dword ptr [rdx]; mov qword ptr [r9], rdx; pop rbx; ret; 
0x000000000047d9c1: mov edx, dword ptr [rdx]; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], r10; call rax; 
0x000000000047397b: mov edx, dword ptr [rip + 0x3be37]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000411c18: mov edx, dword ptr [rip + 0x9b40a]; add rax, rcx; add rdx, qword ptr [rip + 0x9ab20]; cmp rax, rdx; jne 0x11c2e; ret; 
0x0000000000402593: mov edx, dword ptr [rip + 0xacc1f]; mov edi, dword ptr [rsp + 0xc]; mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x00000000004391d5: mov edx, dword ptr [rsi + 0x10]; mov ecx, dword ptr [rsi + 0x17]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x00000000004391f5: mov edx, dword ptr [rsi + 0x10]; mov ecx, dword ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x000000000042a2a1: mov edx, dword ptr [rsi + 1]; mov cx, word ptr [rsi]; mov word ptr [rdi + 1], dx; mov word ptr [rdi], cx; ret; 
0x000000000042a1c0: mov edx, dword ptr [rsi + 1]; mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 1], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000042a001: mov edx, dword ptr [rsi + 1]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x000000000042a150: mov edx, dword ptr [rsi + 2]; mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 2], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000429f91: mov edx, dword ptr [rsi + 2]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000439652: mov edx, dword ptr [rsi + 3]; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; lea rax, [rdi + 6]; ret; 
0x0000000000439022: mov edx, dword ptr [rsi + 3]; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; ret; 
0x000000000042a0e0: mov edx, dword ptr [rsi + 3]; mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 3], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000429f21: mov edx, dword ptr [rsi + 3]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000439633: mov edx, dword ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; lea rax, [rdi + 5]; ret; 
0x0000000000439013: mov edx, dword ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; ret; 
0x0000000000429eb1: mov edx, dword ptr [rsi + 4]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004396e4: mov edx, dword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; lea rax, [rdi + 0xc]; ret; 
0x0000000000439084: mov edx, dword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000429e41: mov edx, dword ptr [rsi + 5]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000439704: mov edx, dword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; lea rax, [rdi + 0xd]; ret; 
0x0000000000439094: mov edx, dword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x0000000000429dd1: mov edx, dword ptr [rsi + 6]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004396a3: mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; lea rax, [rdi + 0xa]; ret; 
0x0000000000439063: mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; ret; 
0x0000000000439724: mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; lea rax, [rdi + 0xe]; ret; 
0x00000000004390a4: mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000429d61: mov edx, dword ptr [rsi + 7]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004396c3: mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; lea rax, [rdi + 0xb]; ret; 
0x0000000000439073: mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; ret; 
0x0000000000439684: mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; lea rax, [rdi + 9]; ret; 
0x0000000000439054: mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x0000000000429811: mov edx, dword ptr [rsi - 0xa]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000429791: mov edx, dword ptr [rsi - 0xb]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000429711: mov edx, dword ptr [rsi - 0xc]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000429681: mov edx, dword ptr [rsi - 0xd]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004295f1: mov edx, dword ptr [rsi - 0xe]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000429561: mov edx, dword ptr [rsi - 0xf]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000424191: mov edx, dword ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x0000000000424371: mov edx, dword ptr [rsi - 3]; mov cx, word ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x0000000000424550: mov edx, dword ptr [rsi - 4]; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423f88: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424168: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424348: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424528: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424184: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424364: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424544: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423fa4: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424750: mov edx, dword ptr [rsi - 5]; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000424950: mov edx, dword ptr [rsi - 6]; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000424b50: mov edx, dword ptr [rsi - 7]; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000423dc5: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424719: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424919: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424b19: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423da9: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424735: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424935: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424b35: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423de1: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000429891: mov edx, dword ptr [rsi - 9]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000439610: mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; lea rax, [rdi + 3]; ret; 
0x0000000000439c60: mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; lea rax, [rdi + 3]; vzeroupper; ret; 
0x000000000042a230: mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x0000000000435a60: mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; vzeroupper; ret; 
0x0000000000439661: mov edx, dword ptr [rsi]; mov qword ptr [rdi], rdx; lea rax, [rdi + 7]; ret; 
0x000000000042a071: mov edx, dword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x000000000047d1e2: mov edx, dword ptr [rsi]; mov r8, r12; mov rcx, r14; mov esi, 1; mov edi, 1; call rax; 
0x00000000004395f1: mov edx, dword ptr [rsi]; mov word ptr [rdi], dx; lea rax, [rdi + 1]; ret; 
0x0000000000438fd1: mov edx, dword ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x000000000046cef2: mov edx, dword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000046ce80: mov edx, dword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x00000000004469b5: mov edx, dword ptr [rsp + 0x68]; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000047cd3f: mov edx, dword ptr [rsp]; mov r8, r13; mov rcx, r12; mov esi, 0xa; mov edi, 1; call rax; 
0x000000000043d37c: mov edx, eax; and edx, 0xf; movsxd rax, dword ptr [rsi + rdx*4]; add rax, rsi; jmp rax; 
0x000000000045a0a1: mov edx, eax; call qword ptr [rcx + 0x38]; 
0x000000000041742f: mov edx, eax; je 0x17460; test rcx, rcx; je 0x17440; lea rax, [rdx - 0x10]; ret; 
0x0000000000407ac6: mov edx, eax; mov eax, 0xea; syscall; 
0x00000000004108fe: mov edx, eax; mov rax, qword ptr [rax]; test rax, rax; jne 0x108f8; ret; 
0x000000000047d9ec: mov edx, eax; mov rdi, r15; mov rsi, qword ptr [rbx]; call rax; 
0x000000000046f450: mov edx, eax; mov rsi, r13; mov rdi, r12; mov qword ptr [rbp - 0xe8], r8; call rax; 
0x000000000043f507: mov edx, eax; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000040c011: mov edx, eax; mov rsi, rbx; mov edi, 2; mov eax, r10d; syscall; 
0x000000000047980c: mov edx, ebp; add rax, qword ptr [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x0000000000459bc2: mov edx, ebp; call qword ptr [rax + 0x38]; 
0x000000000043dff9: mov edx, ebp; call rbx; 
0x00000000004800c1: mov edx, ebp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x0000000000460f58: mov edx, ebp; mov r9, qword ptr [rsp + 0x10]; mov rdi, rbp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x0000000000450280: mov edx, ebp; mov rdi, r12; call rbx; 
0x000000000043e16d: mov edx, ebp; mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; mov rdi, rbp; call rbx; 
0x000000000044ff6a: mov edx, ebp; mov rsi, r12; call rbx; 
0x00000000004799a5: mov edx, ebp; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x0000000000479849: mov edx, ebp; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x00000000004500d4: mov edx, ebp; mov rsi, r12; mov rdi, r13; call rbx; 
0x000000000045228f: mov edx, ebp; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000044ff91: mov edx, ebp; mov rsi, r12; mov rdi, r15; call rbx; 
0x000000000044ffac: mov edx, ebp; mov rsi, r14; mov rdi, r12; call rbx; 
0x00000000004440fe: mov edx, ebp; push 0; mov r9, r14; mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; call rbx; 
0x000000000044ff4a: mov edx, ebp; shr rax, 1; imul rax, rdi; lea r12, [rcx + rax]; mov rdi, r12; call rbx; 
0x000000000045e70f: mov edx, ebp; sub rdx, 0x4adb80; cmp rax, rdx; jbe 0x5e758; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000045ef54: mov edx, ebp; sub rdx, 0x4adb80; cmp rax, rdx; jbe 0x5ef90; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000040977f: mov edx, ebp; sub rdx, 0x4adb80; cmp rax, rdx; jbe 0x97e8; mov rdi, rbx; call qword ptr [rbp + 0x60]; 
0x0000000000409e64: mov edx, ebp; sub rdx, 0x4adb80; cmp rax, rdx; jbe 0x9ee4; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040f47d: mov edx, ebp; sub rdx, 0x4adb80; cmp rax, rdx; jbe 0xf4f0; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040f52f: mov edx, ebp; sub rdx, 0x4adb80; cmp rax, rdx; jbe 0xf560; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000040fe2f: mov edx, ebp; sub rdx, 0x4adb80; cmp rax, rdx; jbe 0xfe70; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x0000000000460e0f: mov edx, ebp; xor r8d, r8d; mov rdi, rbp; lea r9, [rsp + 0x30]; call rbx; 
0x000000000043f7e6: mov edx, ebx; mov rdi, rbp; mov eax, 9; syscall; 
0x00000000004524ea: mov edx, ebx; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000045b020: mov edx, ebx; mov rsi, r9; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x00000000004620ac: mov edx, ecx; cmp r9d, 1; ja 0x620e0; mov eax, 0x106; syscall; 
0x0000000000473911: mov edx, ecx; mov eax, 0x11; syscall; 
0x0000000000473911: mov edx, ecx; mov eax, 0x11; syscall; cmp rax, -0x1000; ja 0x73928; ret; 
0x0000000000440b41: mov edx, ecx; mov eax, 0x19; syscall; 
0x0000000000440b41: mov edx, ecx; mov eax, 0x19; syscall; cmp rax, -0xfff; jae 0x40b53; ret; 
0x000000000043f82f: mov edx, ecx; mov ecx, 9; xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x00000000004552cf: mov edx, ecx; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x4f8], r9d; call qword ptr [rax + 0x38]; 
0x00000000004548e4: mov edx, ecx; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x500], r9d; call qword ptr [rbx + 0x38]; 
0x000000000045a21e: mov edx, ecx; mov rsi, r8; mov rdi, r12; mov dword ptr [rbp - 0x4e8], r9d; call qword ptr [rbx + 0x38]; 
0x000000000045b452: mov edx, ecx; mov rsi, r8; mov rdi, r12; mov dword ptr [rbp - 0x508], r9d; mov qword ptr [rbp - 0x500], r8; call qword ptr [rax + 0x38]; 
0x000000000045a598: mov edx, ecx; mov rsi, r9; mov rdi, r12; call qword ptr [rbx + 0x38]; 
0x0000000000453d43: mov edx, edi; call qword ptr [rax + 0x38]; 
0x000000000046d51c: mov edx, edi; mov rdi, rax; cmp rdx, rcx; jae 0x6d508; mov rax, r8; ret; 
0x000000000047f317: mov edx, edi; mov rsi, qword ptr [r12 + rbp*8 + 0x10]; mov rdi, r13; call rax; 
0x00000000004543bf: mov edx, edi; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x4f0], ecx; call qword ptr [rbx + 0x38]; 
0x000000000045550c: mov edx, edi; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x510], ecx; mov qword ptr [rbp - 0x508], r10; call qword ptr [rax + 0x38]; 
0x000000000040d4ef: mov edx, edi; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x00000000004541ed: mov edx, edi; mov rsi, r8; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x000000000043ce11: mov edx, edi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x00000000004580cb: mov edx, edx; mov rsi, r15; mov byte ptr [rbp - 0x94c], r9b; call rax; 
0x0000000000452024: mov edx, edx; mov rsi, r15; mov rdi, r14; mov dword ptr [rbp - 0x934], r8d; call rax; 
0x0000000000407c66: mov edx, esi; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000407d89: mov edx, esi; mov rax, qword ptr [rsp + 8]; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000000407ddb: mov edx, esi; mov rsi, r13; add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x0000000000407bfb: mov edx, esi; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000043f681: mov edx, esi; xor edx, edx; mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x000000000046215d: mov edx, esp; mov eax, 0x10; syscall; 
0x000000000043f491: mov edx, esp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x000000000045283f: mov edx, esp; mov rsi, r13; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x000000000040d400: mov edx, esp; mov rsi, r15; mov rdi, rbp; call qword ptr [rbx + 0x40]; 
0x000000000043e946: mov edx, esp; mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000043e9c0: mov edx, esp; mov rsi, rbp; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000043e945: mov edx, r12d; mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000043e9bf: mov edx, r12d; mov rsi, rbp; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000000407ac5: mov edx, r8d; mov eax, 0xea; syscall; 
0x000000000043f506: mov edx, r8d; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000000462340: mov es, word ptr [rbx]; add al, 0x11; ret; 
0x0000000000456dc6: mov es, word ptr [rip + 0x45ffffff]; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000043f405: mov esi, 0x10; mov eax, 0x48; syscall; 
0x000000000047cde5: mov esi, 0x1a; mov edi, 1; call rax; 
0x0000000000454cf5: mov esi, 0x358d48c7; ret 0x3ff; 
0x00000000004800c3: mov esi, 0x40; mov rdi, r13; call rbx; 
0x000000000041165a: mov esi, 0x80; mov eax, 0xca; syscall; 
0x000000000045f308: mov esi, 0x80; syscall; 
0x000000000047273d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3cf3a]; syscall; 
0x00000000004724b9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3d1ba]; syscall; 
0x00000000004705cd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3f092]; syscall; 
0x000000000045092d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5eca2]; syscall; 
0x0000000000450868: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5ed67]; syscall; 
0x00000000004506cb: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5ef04]; syscall; 
0x00000000004505fc: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5efd3]; syscall; 
0x000000000044537d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a04a]; syscall; 
0x0000000000445211: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a1b6]; syscall; 
0x0000000000445119: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a2ae]; syscall; 
0x000000000043ddb5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x71612]; syscall; 
0x0000000000417a19: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x94d76]; syscall; 
0x0000000000415d01: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96a8e]; syscall; 
0x0000000000415cc9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96ac6]; syscall; 
0x00000000004157a9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96fe6]; syscall; 
0x0000000000415465: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9732a]; syscall; 
0x0000000000416924: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9885b]; syscall; 
0x0000000000413d95: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x989fa]; syscall; 
0x0000000000413d65: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x98a2a]; syscall; 
0x0000000000415ffd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x99172]; syscall; 
0x0000000000414333: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ae4c]; syscall; 
0x00000000004142b7: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9aeb8]; syscall; 
0x0000000000414012: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9b16d]; syscall; 
0x0000000000412175: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9d00a]; syscall; 
0x0000000000410d24: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9e3db]; syscall; 
0x0000000000410d24: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9e3db]; syscall; ret; 
0x000000000041082b: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9e8d4]; syscall; 
0x00000000004104e0: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ec1f]; syscall; 
0x000000000041019d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ef62]; syscall; 
0x000000000040ee97: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa0268]; syscall; 
0x000000000040ebd7: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa0528]; syscall; 
0x000000000040e72b: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa09d4]; syscall; 
0x000000000040e72b: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa09d4]; syscall; ret; 
0x0000000000409699: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa5d2e]; syscall; 
0x0000000000408768: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa654f]; syscall; 
0x0000000000408541: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa6776]; syscall; 
0x0000000000408506: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa67b1]; syscall; 
0x0000000000408432: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa6885]; syscall; 
0x0000000000406506: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa8751]; syscall; 
0x0000000000404c33: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa9fec]; syscall; 
0x0000000000403c4a: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xaaf25]; syscall; 
0x0000000000403c21: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xaaf4e]; syscall; 
0x0000000000403b18: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xab057]; syscall; 
0x00000000004011fa: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xada75]; syscall; 
0x000000000040134c: mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004727e0: mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x0000000000415fd2: mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000004163c1: mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004166b3: mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000412e07: mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000416c72: mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000004173d8: mov esi, 0x81; mov rdi, rcx; mov eax, 0xca; syscall; 
0x0000000000445fd2: mov esi, 0x83480142; ret 0x4801; 
0x0000000000408862: mov esi, 0x83480153; ret; 
0x0000000000478536: mov esi, 0x8948ffff; adc byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x0000000000451253: mov esi, 0x8b4864c0; adc cl, byte ptr [rax - 0x75]; adc cl, byte ptr [rbx + rcx*4 + 0x74]; ret 0x4c40; 
0x0000000000416ac2: mov esi, 0x96e80006; mov al, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000047cd1d: mov esi, 0xa; mov edi, 1; call rax; 
0x0000000000473975: mov esi, 0xc730003; mov rdx, qword ptr [rip + 0x3be37]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000472b21: mov esi, 0xe8fffffe; xchg al, ah; cld; jmp qword ptr [rsi + 0xf]; 
0x0000000000440bde: mov esi, 0xebfffcb2; in al, dx; nop word ptr cs:[rax + rax]; nop; ret; 
0x00000000004219d9: mov esi, 0xf66beb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000045ea8c: mov esi, 0xffffffff; call qword ptr [rax + 0x18]; 
0x000000000040a4d7: mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x000000000040efd7: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x18]; 
0x000000000040fed4: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000047d1ea: mov esi, 1; mov edi, 1; call rax; 
0x000000000045cf34: mov esi, 1; mov rdi, rbx; call rax; 
0x00000000004083d5: mov esi, dword ptr [rax + 0x20]; mov edi, ebp; ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x000000000043fadc: mov esi, dword ptr [rax + 8]; test sil, 1; jne 0x3fb00; ret; 
0x000000000043fe74: mov esi, dword ptr [rax]; mov rdi, qword ptr [rbp - 0x58]; mov qword ptr [rbp - 0x50], r9; mov r15d, r14d; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x000000000047d250: mov esi, dword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000047d409: mov esi, dword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x0000000000407c5e: mov esi, dword ptr [rbp]; mov rdi, qword ptr [r12]; mov rdx, r14; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000040a17c: mov esi, dword ptr [rbx + 0x10]; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x000000000047d9f2: mov esi, dword ptr [rbx]; call rax; 
0x00000000004520c2: mov esi, dword ptr [rdi + 0x18]; mov rdx, qword ptr [r15 + 0x20]; mov rdi, r14; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x000000000044fb4f: mov esi, dword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x00000000004786dd: mov esi, dword ptr [rdi + 8]; mov rdi, qword ptr [rdi]; call 0x7a400; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x0000000000478629: mov esi, dword ptr [rdi + 8]; mov rdi, qword ptr [rdi]; call 0x7a4f0; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x000000000042d03c: mov esi, dword ptr [rsi]; mov cx, word ptr [rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x000000000043c193: mov esi, dword ptr [rsi]; mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], esi; ret; 
0x000000000042d02a: mov esi, dword ptr [rsi]; mov ecx, dword ptr [rcx - 4]; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x000000000043c184: mov esi, dword ptr [rsi]; mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x000000000042d017: mov esi, dword ptr [rsi]; mov rcx, qword ptr [rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000043eb0d: mov esi, dword ptr [rsp + 0x10]; mov r8d, eax; mov edi, dword ptr [rsp + 8]; mov eax, 1; syscall; 
0x000000000043ea6d: mov esi, dword ptr [rsp + 0x10]; mov r8d, eax; mov edi, dword ptr [rsp + 8]; xor eax, eax; syscall; 
0x000000000040259e: mov esi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000040f6d6: mov esi, dword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000045027b: mov esi, dword ptr [rsp + 0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x00000000004167b9: mov esi, dword ptr [rsp + 0x18]; add rsp, 0x18; jmp rax; 
0x0000000000460f63: mov esi, dword ptr [rsp + 0x18]; call rbx; 
0x000000000043dff1: mov esi, dword ptr [rsp + 0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x0000000000416261: mov esi, dword ptr [rsp + 0x18]; pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000000444106: mov esi, dword ptr [rsp + 0x18]; xor r8d, r8d; call rbx; 
0x000000000043e170: mov esi, dword ptr [rsp + 0x18]; xor r8d, r8d; mov rdi, rbp; call rbx; 
0x0000000000416fb1: mov esi, dword ptr [rsp + 0x28]; mov rdi, r12; call rax; 
0x0000000000447ac5: mov esi, dword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000449892: mov esi, dword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000044a50f: mov esi, dword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044647b: mov esi, dword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000446f25: mov esi, dword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x00000000004469ba: mov esi, dword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000040f0f1: mov esi, dword ptr [rsp + 0xc]; mov rdi, qword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000047f31a: mov esi, dword ptr [rsp + rbp*8 + 0x10]; mov rdi, r13; call rax; 
0x000000000044fdce: mov esi, eax; mov eax, 0xe; syscall; 
0x0000000000407ac3: mov esi, eax; mov edx, r8d; mov eax, 0xea; syscall; 
0x00000000004541f0: mov esi, eax; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x000000000045a221: mov esi, eax; mov rdi, r12; mov dword ptr [rbp - 0x4e8], r9d; call qword ptr [rbx + 0x38]; 
0x000000000045b455: mov esi, eax; mov rdi, r12; mov dword ptr [rbp - 0x508], r9d; mov qword ptr [rbp - 0x500], r8; call qword ptr [rax + 0x38]; 
0x000000000047d9bb: mov esi, eax; mov rdi, r15; mov rdx, qword ptr [r10]; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], r10; call rax; 
0x0000000000407dde: mov esi, ebp; add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x000000000043e949: mov esi, ebp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000043e9c3: mov esi, ebp; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000000407bfe: mov esi, ebp; mov rdi, r12; call rax; 
0x000000000046f453: mov esi, ebp; mov rdi, r12; mov qword ptr [rbp - 0xe8], r8; call rax; 
0x0000000000453d3a: mov esi, ebp; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x0000000000452842: mov esi, ebp; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x000000000045dfcc: mov esi, ebp; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x000000000040839c: mov esi, ebp; ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x000000000046b262: mov esi, ebp; syscall; 
0x000000000040c014: mov esi, ebx; mov edi, 2; mov eax, r10d; syscall; 
0x000000000045a097: mov esi, ebx; mov rdi, r12; sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x0000000000472833: mov esi, ecx; add eax, dword ptr [rax]; mov qword ptr [rip + 0x3ce6a], rax; ret; 
0x000000000043f50a: mov esi, ecx; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000000407ae3: mov esi, ecx; mov edi, 2; mov eax, 0xe; syscall; 
0x000000000045b023: mov esi, ecx; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x000000000045a59b: mov esi, ecx; mov rdi, r12; call qword ptr [rbx + 0x38]; 
0x00000000004580ce: mov esi, edi; mov byte ptr [rbp - 0x94c], r9b; call rax; 
0x000000000043f685: mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x0000000000450059: mov esi, edi; mov rdi, r12; mov rdx, rbp; call rbx; 
0x000000000045e831: mov esi, edi; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x0000000000452027: mov esi, edi; mov rdi, r14; mov dword ptr [rbp - 0x934], r8d; call rax; 
0x000000000040d403: mov esi, edi; mov rdi, rbp; call qword ptr [rbx + 0x40]; 
0x000000000047d835: mov esi, edi; test rax, rax; je 0x7d848; mov edi, 1; jmp rax; 
0x000000000043e867: mov esi, edx; cmp r8d, 1; ja 0x3e898; mov eax, 4; syscall; 
0x000000000043e8b6: mov esi, edx; cmp r8d, 1; ja 0x3e8e8; mov eax, 5; syscall; 
0x0000000000462057: mov esi, edx; cmp r8d, 1; ja 0x62088; mov eax, 6; syscall; 
0x00000000004543c2: mov esi, edx; mov rdi, r12; mov dword ptr [rbp - 0x4f0], ecx; call qword ptr [rbx + 0x38]; 
0x00000000004552d2: mov esi, edx; mov rdi, r12; mov dword ptr [rbp - 0x4f8], r9d; call qword ptr [rax + 0x38]; 
0x00000000004548e7: mov esi, edx; mov rdi, r12; mov dword ptr [rbp - 0x500], r9d; call qword ptr [rbx + 0x38]; 
0x000000000045550f: mov esi, edx; mov rdi, r12; mov dword ptr [rbp - 0x510], ecx; mov qword ptr [rbp - 0x508], r10; call qword ptr [rax + 0x38]; 
0x00000000004620a9: mov esi, edx; mov rdx, rcx; cmp r9d, 1; ja 0x620e0; mov eax, 0x106; syscall; 
0x000000000044ffaf: mov esi, esi; mov rdi, r12; call rbx; 
0x000000000040d4f2: mov esi, esi; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x000000000044ff6d: mov esi, esp; call rbx; 
0x00000000004799a8: mov esi, esp; mov edi, ebp; call qword ptr [rax]; 
0x000000000047984c: mov esi, esp; mov edi, ebp; call qword ptr [rbx]; 
0x0000000000479812: mov esi, esp; mov edi, ebp; call rax; 
0x0000000000461ad9: mov esi, esp; mov edi, ebp; mov eax, 0xe4; syscall; 
0x00000000004500d7: mov esi, esp; mov rdi, r13; call rbx; 
0x0000000000452292: mov esi, esp; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000044ff94: mov esi, esp; mov rdi, r15; call rbx; 
0x000000000045e79d: mov esi, esp; pop rbx; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x000000000045e79c: mov esi, r12d; pop rbx; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x000000000045e830: mov esi, r15d; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x00000000004168cf: mov esp, 0x1000988; pop rbx; pop rbp; pop r12; ret; 
0x0000000000439562: mov esp, 0x1d8d4cd2; in eax, 0xa7; add al, 0; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438ec8: mov esp, 0x1d8d4cd2; ljmp [rbp + 0x63490004]; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f0a: mov esp, 0x1d8d4cd2; mov ebp, 0x490004ad; movsxd rcx, dword ptr [rbx + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000043952a: mov esp, 0x1d8d4cd2; sbb eax, 0x490004a8; movsxd rcx, dword ptr [rbx + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439505: mov esp, 0x1d8d4cd2; test al, 4; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f42: mov esp, 0x1d8d4cd2; test dword ptr [rbp + 0x63490004], ebp; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000041fe71: mov esp, 0x448d48c0; cmp al, dh; ret; 
0x000000000041fea1: mov esp, 0x448d48c0; cmp byte ptr [rax], ah; ret; 
0x000000000041fe91: mov esp, 0x448d48c0; cmp byte ptr [rax], dl; ret; 
0x000000000041b4be: mov esp, 0x44b60ff9; cmp byte ptr [rax], ah; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000478630: mov esp, 0x4800001e; mov dword ptr [rbx + 0x18], eax; pop rbx; ret; 
0x000000000040da80: mov esp, 0x48000a01; mov dword ptr [rdx + 0xe0], ecx; pop rbx; ret; 
0x00000000004351b2: mov esp, 0x48d231c0; lea eax, [rdi + rax + 0x20]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000004351d2: mov esp, 0x48d231c0; lea eax, [rdi + rax + 0x40]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000435210: mov esp, 0x48d231c0; lea eax, [rdi + rax + 0x60]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000435192: mov esp, 0x48d231c0; lea eax, [rdi + rax]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000004084a6: mov esp, 0x4ae230; cmp rbx, r12; jae 0x84c3; nop dword ptr [rax]; call qword ptr [rbx]; 
0x0000000000421bd4: mov esp, 0x4e6f0ff3; mov esp, 0xf66bcb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000401dec: mov esp, 0x89000ad4; ret 0xeac1; 
0x0000000000439ec0: mov esp, 0xa8000000; jne 0x39f90; lea rax, [rdi + 7]; ret; 
0x0000000000434c14: mov esp, 0xbac0; add byte ptr [rax], al; lea rax, [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x00000000004616d2: mov esp, 0xc08348c0; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x00000000004356f2: mov esp, 0xc08348c0; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000420392: mov esp, 0xc08348c0; add rax, rdi; vzeroupper; ret; 
0x00000000004356d2: mov esp, 0xc08348c0; and byte ptr [rax + 1], cl; clc; sub rax, rdx; vzeroupper; ret; 
0x0000000000420382: mov esp, 0xc08348c0; and byte ptr [rax + 1], cl; clc; vzeroupper; ret; 
0x000000000041fc4a: mov esp, 0xc22948c0; jbe 0x1fef0; add rax, rdi; add rax, rcx; ret; 
0x000000000041feb1: mov esp, 0xc22948c0; jbe 0x1fef0; add rax, rdi; ret; 
0x000000000041fec1: mov esp, 0xc22948c0; jbe 0x1fef0; lea rax, [rdi + rax + 0x10]; ret; 
0x000000000041fed1: mov esp, 0xc22948c0; jbe 0x1fef0; lea rax, [rdi + rax + 0x20]; ret; 
0x000000000041fee1: mov esp, 0xc22948c0; jbe 0x1fef0; lea rax, [rdi + rax + 0x30]; ret; 
0x000000000047333a: mov esp, 0xc22948c0; jbe 0x735e0; add rax, rdi; add rax, rcx; ret; 
0x00000000004735a1: mov esp, 0xc22948c0; jbe 0x735e0; add rax, rdi; ret; 
0x00000000004735b1: mov esp, 0xc22948c0; jbe 0x735e0; lea rax, [rdi + rax + 0x10]; ret; 
0x00000000004735c1: mov esp, 0xc22948c0; jbe 0x735e0; lea rax, [rdi + rax + 0x20]; ret; 
0x00000000004735d1: mov esp, 0xc22948c0; jbe 0x735e0; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000420302: mov esp, 0xc23948c0; jbe 0x20360; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000420322: mov esp, 0xc23948c0; jbe 0x20360; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000420342: mov esp, 0xc23948c0; jbe 0x20360; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000004202f2: mov esp, 0xc23948c0; jbe 0x20360; add rax, rdi; vzeroupper; ret; 
0x00000000004737f2: mov esp, 0xc23948c0; jbe 0x73850; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000473812: mov esp, 0xc23948c0; jbe 0x73850; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000473832: mov esp, 0xc23948c0; jbe 0x73850; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000004737e2: mov esp, 0xc23948c0; jbe 0x73850; add rax, rdi; vzeroupper; ret; 
0x0000000000460802: mov esp, 0xc63948c0; jbe 0x60880; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000004352a5: mov esp, 0xc80148c0; add rax, rdi; vzeroupper; ret; 
0x00000000004355b3: mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x0000000000461258: mov esp, 0xd00148d2; sub rax, rdi; shr rax, 2; ret; 
0x000000000041cf42: mov esp, 0xd32949d2; jbe 0x1cf54; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000041e6a2: mov esp, 0xd32949d2; jbe 0x1e6b4; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000041f682: mov esp, 0xd32949d2; jbe 0x1f694; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000421bd9: mov esp, 0xf66bcb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000041ff5b: mov esp, 0xf80148c0; add rax, rcx; ret; 
0x00000000004615d7: mov esp, 0xf80148c0; add rax, rcx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000435607: mov esp, 0xf80148c0; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000000420417: mov esp, 0xf80148c0; add rax, rcx; vzeroupper; ret; 
0x000000000041fe81: mov esp, 0xf80148c0; ret; 
0x0000000000461692: mov esp, 0xf80148c0; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x00000000004356c2: mov esp, 0xf80148c0; sub rax, rdx; vzeroupper; ret; 
0x0000000000420372: mov esp, 0xf80148c0; vzeroupper; ret; 
0x000000000040b3de: mov esp, 0xffffffff; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000043f6fe: mov esp, 0xffffffff; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000047d248: mov esp, dword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x00000000004805a1: mov esp, dword ptr [rcx - 7]; jmp qword ptr [rsi + 0x2e]; 
0x000000000044fb59: mov esp, eax; mov rbp, r9; jmp rdx; 
0x0000000000443b4e: mov esp, eax; test eax, eax; jne 0x43bd0; mov rcx, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rcx; 
0x000000000047d415: mov esp, ecx; ret; 
0x0000000000423983: mov esp, esi; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000412725: mov gs, word ptr [rcx + 0x45fffffd]; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000046a81b: mov qword ptr [r11], rdi; pop rbx; ret; 
0x0000000000440f6c: mov qword ptr [r12 + 8], rax; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000044e37e: mov qword ptr [r12 - 0x80], rax; lea rax, [rip + 0x5d8d6]; mov rax, qword ptr [rax + r14*8]; test rax, rax; je 0x4e395; call rax; 
0x0000000000443ba9: mov qword ptr [r12], 0; mov rax, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x000000000045fe21: mov qword ptr [r12], r14; pop r12; pop r13; pop r14; ret; 
0x000000000048063a: mov qword ptr [r13 + rbx*8], rdx; mov rax, qword ptr [rax + rbx*8]; test rax, rax; je 0x8064a; call rax; 
0x0000000000478395: mov qword ptr [r8], rax; mov eax, 0xffffc002; sub eax, ecx; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x00000000004783ba: mov qword ptr [r8], rax; mov eax, 1; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000000047db58: mov qword ptr [r8], rdx; add rsp, 8; ret; 
0x000000000042d020: mov qword ptr [r9 - 8], rcx; ret; 
0x000000000047ae52: mov qword ptr [r9], rdx; pop rbx; ret; 
0x000000000045f1b0: mov qword ptr [rax + 0x10], rcx; lea rdx, [r8 + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000440c50: mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x000000000045f180: mov qword ptr [rax + 0x10], rdi; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000045e3f8: mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x000000000045e435: mov qword ptr [rax + 0x10], rsi; mov qword ptr [rax + 0x40], rcx; mov qword ptr [rax], rdx; ret; 
0x000000000045eac7: mov qword ptr [rax + 0x18], rdx; xor eax, eax; mov dword ptr [rbx], ecx; pop rbx; ret; 
0x0000000000412886: mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x000000000045eac3: mov qword ptr [rax + 0x28], rdx; mov qword ptr [rax + 0x18], rdx; xor eax, eax; mov dword ptr [rbx], ecx; pop rbx; ret; 
0x000000000045e9a8: mov qword ptr [rax + 0x38], r12; mov dword ptr [rbx + 0x74], edx; pop rbx; pop rbp; pop r12; ret; 
0x000000000045e439: mov qword ptr [rax + 0x40], rcx; mov qword ptr [rax], rdx; ret; 
0x000000000045e3fc: mov qword ptr [rax + 0x40], rcx; ret; 
0x000000000045f184: mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000045eb22: mov qword ptr [rax + 0x48], 0; pop rbx; ret; 
0x000000000045eb1a: mov qword ptr [rax + 0x50], 0; mov qword ptr [rax + 0x48], 0; pop rbx; ret; 
0x000000000040fc04: mov qword ptr [rax + 8], 0; ret; 
0x000000000045e3ed: mov qword ptr [rax + 8], rcx; mov rcx, qword ptr [rax + 0x10]; mov qword ptr [rax], rdx; mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x000000000045e431: mov qword ptr [rax + 8], rdx; mov qword ptr [rax + 0x10], rsi; mov qword ptr [rax + 0x40], rcx; mov qword ptr [rax], rdx; ret; 
0x0000000000440c54: mov qword ptr [rax + 8], rdx; ret; 
0x000000000040fbfd: mov qword ptr [rax], 0; mov qword ptr [rax + 8], 0; ret; 
0x0000000000472d9c: mov qword ptr [rax], 0; mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000045ec24: mov qword ptr [rax], rcx; mov eax, dword ptr [rdx]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000046d4da: mov qword ptr [rax], rcx; pop rbp; ret; 
0x0000000000472d4c: mov qword ptr [rax], rdi; pop rbx; ret; 
0x0000000000472cbc: mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x000000000045e3f5: mov qword ptr [rax], rdx; mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x0000000000472d40: mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000045e43d: mov qword ptr [rax], rdx; ret; 
0x000000000045f14f: mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000047d05f: mov qword ptr [rbp + 8], rax; add rsp, 0x278; mov rax, rbp; pop rbx; pop rbp; ret; 
0x000000000044e13c: mov qword ptr [rbp + rbx*8], rax; lea rax, [rip + 0x5db18]; mov rax, qword ptr [rax + rbx*8]; test rax, rax; je 0x4e153; call rax; 
0x0000000000459ce2: mov qword ptr [rbp - 0x4d8], 0; mov dword ptr [rbp - 0x508], 0x20; jmp rax; 
0x000000000045a216: mov qword ptr [rbp - 0x4e0], rcx; mov rdx, rcx; mov rsi, r8; mov rdi, r12; mov dword ptr [rbp - 0x4e8], r9d; call qword ptr [rbx + 0x38]; 
0x000000000045a590: mov qword ptr [rbp - 0x4e0], rcx; mov rdx, rcx; mov rsi, r9; mov rdi, r12; call qword ptr [rbx + 0x38]; 
0x0000000000453e57: mov qword ptr [rbp - 0x4e8], 0; mov qword ptr [rbp - 0x4f8], rsi; jmp rax; 
0x00000000004552c7: mov qword ptr [rbp - 0x4f0], rcx; mov rdx, rcx; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x4f8], r9d; call qword ptr [rax + 0x38]; 
0x00000000004548dc: mov qword ptr [rbp - 0x4f8], rcx; mov rdx, rcx; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x500], r9d; call qword ptr [rbx + 0x38]; 
0x0000000000453e62: mov qword ptr [rbp - 0x4f8], rsi; jmp rax; 
0x000000000045b461: mov qword ptr [rbp - 0x500], r8; call qword ptr [rax + 0x38]; 
0x000000000045551a: mov qword ptr [rbp - 0x508], r10; call qword ptr [rax + 0x38]; 
0x000000000043fe7a: mov qword ptr [rbp - 0x50], r9; mov r15d, r14d; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x0000000000444a74: mov qword ptr [rbp - 0x70], rax; call 0x42c50; mov rax, qword ptr [rbp - 0x70]; mov rdi, r12; call rax; 
0x0000000000468d53: mov qword ptr [rbp - 0xd8], r11; call rax; 
0x000000000046f458: mov qword ptr [rbp - 0xe8], r8; call rax; 
0x00000000004108aa: mov qword ptr [rbp], rax; mov qword ptr [rbx + 0x60], rbp; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000045f759: mov qword ptr [rbp], rax; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000044da06: mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000040c296: mov qword ptr [rbx + 0x10], rax; mov rax, rbx; pop rbx; ret; 
0x000000000046d26d: mov qword ptr [rbx + 0x10], rax; pop rax; pop rdx; pop rbx; ret; 
0x000000000040c9fe: mov qword ptr [rbx + 0x10], rax; xor eax, eax; pop rbx; ret; 
0x000000000040c28e: mov qword ptr [rbx + 0x18], rax; mov qword ptr [rbx + 8], rax; mov qword ptr [rbx + 0x10], rax; mov rax, rbx; pop rbx; ret; 
0x000000000046cf42: mov qword ptr [rbx + 0x18], rax; pop rax; pop rdx; pop rbx; ret; 
0x0000000000478634: mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x000000000045d3c0: mov qword ptr [rbx + 0x18], rdi; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x00000000004786e8: mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000040f011: mov qword ptr [rbx + 0x20], rax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000040f4ba: mov qword ptr [rbx + 0x40], r12; mov dword ptr [rbx], eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000040f080: mov qword ptr [rbx + 0x50], 0; pop rbx; ret; 
0x00000000004108ae: mov qword ptr [rbx + 0x60], rbp; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000040c22b: mov qword ptr [rbx + 0x90], rax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000040d6e3: mov qword ptr [rbx + 0x90], rax; mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x000000000040c9f3: mov qword ptr [rbx + 0x90], rsi; mov qword ptr [rbx + 8], rax; mov qword ptr [rbx + 0x10], rax; xor eax, eax; pop rbx; ret; 
0x000000000046c6e4: mov qword ptr [rbx + 8], 0; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000040c292: mov qword ptr [rbx + 8], rax; mov qword ptr [rbx + 0x10], rax; mov rax, rbx; pop rbx; ret; 
0x000000000040c9fa: mov qword ptr [rbx + 8], rax; mov qword ptr [rbx + 0x10], rax; xor eax, eax; pop rbx; ret; 
0x0000000000444332: mov qword ptr [rbx], 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000046c6dd: mov qword ptr [rbx], 0; mov qword ptr [rbx + 8], 0; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000046b493: mov qword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x41c66], 1; ret; 
0x0000000000412112: mov qword ptr [rbx], r12; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000472592: mov qword ptr [rbx], r13; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000473c89: mov qword ptr [rbx], r8; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x0000000000473019: mov qword ptr [rbx], rax; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000045f41c: mov qword ptr [rbx], rax; mov eax, 1; pop rbx; pop rbp; pop r12; ret; 
0x000000000047a1b8: mov qword ptr [rbx], rax; pop rax; pop rdx; pop rbx; ret; 
0x0000000000417a7f: mov qword ptr [rbx], rdx; xor eax, eax; pop rbx; ret; 
0x000000000040fd1c: mov qword ptr [rcx + 0x50], 0; mov qword ptr [rcx + 0xe0], r8; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000040fd24: mov qword ptr [rcx + 0xe0], r8; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000046d68c: mov qword ptr [rcx + rdx*8], rax; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000047ceaa: mov qword ptr [rcx], rdx; add rsp, 8; ret; 
0x000000000044fa17: mov qword ptr [rcx], rdx; mov rax, qword ptr [rax + 0x58]; mov rdx, -0x18; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000044f94b: mov qword ptr [rcx], rdx; mov rdx, -0x18; mov qword ptr fs:[rdx], rax; ret; 
0x000000000047db6f: mov qword ptr [rcx], rdx; ret; 
0x00000000004770ae: mov qword ptr [rdi + 0x10], r9; ret; 
0x000000000040ef8a: mov qword ptr [rdi + 0x10], rax; mov qword ptr [rdi + 0x18], rcx; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 8], rax; ret; 
0x000000000043982c: mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x000000000043984c: mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x000000000043919c: mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x000000000043917c: mov qword ptr [rdi + 0x10], rcx; ret; 
0x000000000043988f: mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; lea rax, [rdi + 0x1a]; ret; 
0x00000000004391df: mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x00000000004398af: mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x00000000004391ff: mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000439870: mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x00000000004391c0: mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x000000000040ef62: mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x000000000040ef8e: mov qword ptr [rdi + 0x18], rcx; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 8], rax; ret; 
0x00000000004109a1: mov qword ptr [rdi + 0x18], rdx; mov rcx, rdx; add rax, rcx; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x00000000004109e3: mov qword ptr [rdi + 0x18], rsi; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000044150e: mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000441520: mov qword ptr [rdi + 0x20], rsi; ret; 
0x0000000000467684: mov qword ptr [rdi + 0x308], rax; ret; 
0x0000000000467656: mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000040ef5e: mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x000000000040ef92: mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 8], rax; ret; 
0x000000000040ef56: mov qword ptr [rdi + 0x58], rax; mov rax, qword ptr [rdi + 0x48]; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x000000000047cf00: mov qword ptr [rdi + 0x98], rsi; ret; 
0x000000000040fa36: mov qword ptr [rdi + 0xa0], -1; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000040fa41: mov qword ptr [rdi + 0xa8], 0; ret; 
0x00000000004099f8: mov qword ptr [rdi + 0xd8], rdx; mov rdx, qword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x00000000004397ec: mov qword ptr [rdi + 0xe], rcx; lea rax, [rdi + 0x15]; ret; 
0x000000000043913c: mov qword ptr [rdi + 0xe], rcx; ret; 
0x000000000043980c: mov qword ptr [rdi + 0xf], rcx; lea rax, [rdi + 0x16]; ret; 
0x000000000043915c: mov qword ptr [rdi + 0xf], rcx; ret; 
0x000000000042a007: mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429f97: mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429f27: mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429eb7: mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004396ea: mov qword ptr [rdi + 5], rdx; lea rax, [rdi + 0xc]; ret; 
0x0000000000429e47: mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x000000000043908a: mov qword ptr [rdi + 5], rdx; ret; 
0x000000000043970a: mov qword ptr [rdi + 6], rdx; lea rax, [rdi + 0xd]; ret; 
0x0000000000429dd7: mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x000000000043909a: mov qword ptr [rdi + 6], rdx; ret; 
0x000000000043972a: mov qword ptr [rdi + 7], rdx; lea rax, [rdi + 0xe]; ret; 
0x0000000000429d67: mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004390aa: mov qword ptr [rdi + 7], rdx; ret; 
0x000000000047826f: mov qword ptr [rdi + 8], r10; mov eax, ebx; adc rax, rdx; pop rbp; pop rbx; ret; 
0x0000000000478133: mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x00000000004770a7: mov qword ptr [rdi + 8], r8; shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x0000000000477033: mov qword ptr [rdi + 8], r9; ret; 
0x00000000004784b9: mov qword ptr [rdi + 8], rax; mov eax, 0xffffc002; sub eax, r8d; mov dword ptr [rsi], eax; mov eax, 2; ret; 
0x0000000000478445: mov qword ptr [rdi + 8], rax; mov eax, 2; ret; 
0x000000000040ef66: mov qword ptr [rdi + 8], rax; ret; 
0x00000000004109ab: mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x0000000000478472: mov qword ptr [rdi + 8], rdx; mov eax, 0xffffbfd1; sub eax, r8d; mov dword ptr [rsi], eax; mov eax, 2; ret; 
0x000000000047757c: mov qword ptr [rdi + r11*8 + 8], r9; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x0000000000439c9b: mov qword ptr [rdi + rdx - 7], r9; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000435a8b: mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x000000000043ceea: mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rcx; ret; 
0x000000000043d069: mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rcx; vzeroupper; ret; 
0x000000000043c186: mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x000000000047ceb8: mov qword ptr [rdi + rsi*8], rdx; add rsp, 8; ret; 
0x0000000000423c74: mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000423cb2: mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000476f9e: mov qword ptr [rdi - 0x10], r9; ret; 
0x0000000000423e27: mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423f23: mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000423e6f: mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423ff7: mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004241d7: mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004243c7: mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424598: mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424798: mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424998: mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423c70: mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000423cae: mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423e23: mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423f1f: mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000423e6b: mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423ff3: mov qword ptr [rdi - 0x1a], r10; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004241d3: mov qword ptr [rdi - 0x1b], r10; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004243c3: mov qword ptr [rdi - 0x1c], r10; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424594: mov qword ptr [rdi - 0x1d], r10; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424794: mov qword ptr [rdi - 0x1e], r10; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424994: mov qword ptr [rdi - 0x1f], r10; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423c6c: mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000423caa: mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423e1f: mov qword ptr [rdi - 0x21], r9; mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423f1b: mov qword ptr [rdi - 0x21], r9; mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000423e67: mov qword ptr [rdi - 0x21], r9; mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423fef: mov qword ptr [rdi - 0x22], r9; mov qword ptr [rdi - 0x1a], r10; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004241cf: mov qword ptr [rdi - 0x23], r9; mov qword ptr [rdi - 0x1b], r10; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004243bf: mov qword ptr [rdi - 0x24], r9; mov qword ptr [rdi - 0x1c], r10; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424590: mov qword ptr [rdi - 0x25], r9; mov qword ptr [rdi - 0x1d], r10; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424790: mov qword ptr [rdi - 0x26], r9; mov qword ptr [rdi - 0x1e], r10; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424990: mov qword ptr [rdi - 0x27], r9; mov qword ptr [rdi - 0x1f], r10; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423c68: mov qword ptr [rdi - 0x28], r8; mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000423ca6: mov qword ptr [rdi - 0x28], r8; mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423ffb: mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000429817: mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004241db: mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000429797: mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004243cb: mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000429717: mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000042459c: mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000429688: mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042479c: mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004295f8: mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042499c: mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000429568: mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000476f97: mov qword ptr [rdi - 8], r8; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x0000000000476f29: mov qword ptr [rdi - 8], r9; ret; 
0x0000000000423c78: mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000423cb6: mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423e2b: mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423f27: mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000423e73: mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000429897: mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000476f90: mov qword ptr [rdi], r11; shld r8, r9, cl; mov qword ptr [rdi - 8], r8; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x00000000004770a0: mov qword ptr [rdi], r11; shrd r8, r9, cl; mov qword ptr [rdi + 8], r8; shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x0000000000476f23: mov qword ptr [rdi], r8; shl r9, cl; mov qword ptr [rdi - 8], r9; ret; 
0x000000000047702d: mov qword ptr [rdi], r8; shr r9, cl; mov qword ptr [rdi + 8], r9; ret; 
0x0000000000476ef8: mov qword ptr [rdi], r9; ret; 
0x0000000000440eb7: mov qword ptr [rdi], rax; mov rax, qword ptr [rip + 0x6d3f7]; mov qword ptr [rsi], rax; ret; 
0x0000000000439676: mov qword ptr [rdi], rcx; lea rax, [rdi + 8]; ret; 
0x00000000004396a6: mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; lea rax, [rdi + 0xa]; ret; 
0x0000000000439066: mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; ret; 
0x00000000004396c6: mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; lea rax, [rdi + 0xb]; ret; 
0x0000000000439076: mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; ret; 
0x00000000004396e7: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; lea rax, [rdi + 0xc]; ret; 
0x0000000000439087: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000439707: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; lea rax, [rdi + 0xd]; ret; 
0x0000000000439097: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x0000000000439727: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; lea rax, [rdi + 0xe]; ret; 
0x00000000004390a7: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000439c98: mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000435a88: mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x0000000000439687: mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; lea rax, [rdi + 9]; ret; 
0x0000000000439057: mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x0000000000429d6b: mov qword ptr [rdi], rcx; ret; 
0x000000000043d06e: mov qword ptr [rdi], rcx; vzeroupper; ret; 
0x0000000000439663: mov qword ptr [rdi], rdx; lea rax, [rdi + 7]; ret; 
0x0000000000478305: mov qword ptr [rdi], rdx; mov dword ptr [rsi], eax; mov eax, 1; ret; 
0x000000000042a073: mov qword ptr [rdi], rdx; ret; 
0x000000000042d01d: mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000043c18b: mov qword ptr [rdi], rsi; ret; 
0x000000000041287e: mov qword ptr [rdx + 0x28], rcx; mov rax, qword ptr [rdi + 0x28]; mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x000000000040da84: mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x0000000000409a06: mov qword ptr [rdx + 0xe0], rcx; ret; 
0x0000000000438c0a: mov qword ptr [rdx + 5], rax; lea rax, [rdx + 0xc]; ret; 
0x00000000004373fa: mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x0000000000438c2a: mov qword ptr [rdx + 6], rax; lea rax, [rdx + 0xd]; ret; 
0x000000000043741a: mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x0000000000438c4a: mov qword ptr [rdx + 7], rax; lea rax, [rdx + 0xe]; ret; 
0x000000000043743a: mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000438ada: mov qword ptr [rdx + 8], rax; lea rax, [rdx + 0xf]; ret; 
0x000000000043732a: mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x0000000000438a83: mov qword ptr [rdx], rax; lea rax, [rdx + 7]; ret; 
0x0000000000438b83: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; lea rax, [rdx + 8]; ret; 
0x00000000004373b3: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; mov rax, rdi; ret; 
0x0000000000438ba3: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; lea rax, [rdx + 9]; ret; 
0x00000000004373c3: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; mov rax, rdi; ret; 
0x0000000000438bc3: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; lea rax, [rdx + 0xa]; ret; 
0x00000000004373d3: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; mov rax, rdi; ret; 
0x0000000000438be3: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; lea rax, [rdx + 0xb]; ret; 
0x00000000004373e3: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; mov rax, rdi; ret; 
0x0000000000438c03: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; lea rax, [rdx + 0xc]; ret; 
0x00000000004373f3: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x0000000000438c23: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; lea rax, [rdx + 0xd]; ret; 
0x0000000000437413: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x0000000000438c43: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; lea rax, [rdx + 0xe]; ret; 
0x0000000000437433: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000438ad3: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; lea rax, [rdx + 0xf]; ret; 
0x0000000000437323: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x00000000004372d3: mov qword ptr [rdx], rax; mov rax, rdi; ret; 
0x0000000000472dc0: mov qword ptr [rdx], rax; pop rbx; ret; 
0x0000000000410910: mov qword ptr [rdx], rax; ret; 
0x000000000045e738: mov qword ptr [rdx], rcx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000043fb66: mov qword ptr [rdx], rdi; pop rbx; pop rbp; ret; 
0x00000000004809dc: mov qword ptr [rip + 0x2ebf1], 0; add rsp, 8; ret; 
0x00000000004803bb: mov qword ptr [rip + 0x2ed2e], rbx; test rbx, rbx; jne 0x803a8; pop rbx; ret; 
0x00000000004805e7: mov qword ptr [rip + 0x2ee3e], 0; add rsp, 8; ret; 
0x0000000000472837: mov qword ptr [rip + 0x3ce6a], rax; ret; 
0x000000000047281c: mov qword ptr [rip + 0x3ce85], rax; add rsp, 8; ret; 
0x000000000046cde8: mov qword ptr [rip + 0x4286d], 0; add rsp, 8; ret; 
0x000000000046221f: mov qword ptr [rip + 0x4d3d2], rax; cmp rdi, rax; ja 0x62250; xor eax, eax; ret; 
0x000000000044f91c: mov qword ptr [rip + 0x5e0cd], rax; mov qword ptr [rip + 0x5e0ce], rdx; cmp qword ptr fs:[rdi], rsi; je 0x4f938; ret; 
0x000000000044f923: mov qword ptr [rip + 0x5e0ce], rdx; cmp qword ptr fs:[rdi], rsi; je 0x4f938; ret; 
0x0000000000440b18: mov qword ptr [rip + 0x6c571], rax; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000440d64: mov qword ptr [rip + 0x6d57d], rax; ret; 
0x0000000000440d1a: mov qword ptr [rip + 0x6d58f], rax; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x00000000004160fb: mov qword ptr [rip + 0x9667e], rax; ret; 
0x00000000004160ed: mov qword ptr [rip + 0x96694], rax; lea rax, [rip - 0xa8b]; mov qword ptr [rip + 0x9667e], rax; ret; 
0x0000000000412221: mov qword ptr [rip + 0x9a558], rax; ret; 
0x0000000000412213: mov qword ptr [rip + 0x9a56e], rax; lea rax, [rip + 0x344f]; mov qword ptr [rip + 0x9a558], rax; ret; 
0x00000000004117a3: mov qword ptr [rip + 0x9afbe], rax; ret; 
0x0000000000411790: mov qword ptr [rip + 0x9afc9], rax; ret; 
0x0000000000411776: mov qword ptr [rip + 0x9afd3], rdx; ret; 
0x0000000000411733: mov qword ptr [rip + 0x9afde], rax; ret; 
0x000000000041170d: mov qword ptr [rip + 0x9afec], rax; ret; 
0x0000000000411723: mov qword ptr [rip + 0x9aff6], rax; ret; 
0x00000000004116dd: mov qword ptr [rip + 0x9b024], rax; ret; 
0x0000000000411690: mov qword ptr [rip + 0x9b079], rax; mov dword ptr [rip + 0x9b093], 1; ret; 
0x00000000004117d4: mov qword ptr [rip + 0x9d9bd], rax; ret; 
0x0000000000410d4b: mov qword ptr [rip + 0x9e3c2], 0; ret; 
0x0000000000410cab: mov qword ptr [rip + 0x9e466], rbx; add dword ptr [rip + 0x9e45b], 1; pop rbx; ret; 
0x0000000000401f92: mov qword ptr [rip + 0xad387], rax; add rsp, 0x88; pop rbx; ret; 
0x00000000004016f0: mov qword ptr [rip + 0xadfdd], 0; pop rdx; ret; 
0x0000000000402a7d: mov qword ptr [rsi + 0x10], rsi; syscall; 
0x0000000000402a71: mov qword ptr [rsi + 8], rax; mov eax, 0x9e; mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x0000000000440ec1: mov qword ptr [rsi], rax; ret; 
0x000000000044f940: mov qword ptr [rsi], rcx; mov rcx, -0x10; mov qword ptr fs:[rcx], rdx; mov rdx, -0x18; mov qword ptr fs:[rdx], rax; ret; 
0x0000000000402a7a: mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x000000000047d9c8: mov qword ptr [rsp + 0x10], r10; call rax; 
0x000000000043fc70: mov qword ptr [rsp + 0x10], rbx; call rax; 
0x0000000000413aca: mov qword ptr [rsp + 0x10], rdx; mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp], rdi; call rax; 
0x000000000046a4b3: mov qword ptr [rsp + 0x18], rax; call 0x69de0; add rsp, 0xd8; ret; 
0x0000000000413b28: mov qword ptr [rsp + 0x18], rcx; call rax; 
0x000000000043f3d0: mov qword ptr [rsp + 0x20], rax; cmp esi, 9; je 0x3f400; mov eax, 0x48; syscall; 
0x0000000000462155: mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000043ea87: mov qword ptr [rsp + 8], rax; call 0x5f2c0; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000043f45d: mov qword ptr [rsp + 8], rax; xor eax, eax; cmp esi, 9; je 0x3f490; mov eax, 0x48; syscall; 
0x0000000000413acf: mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp], rdi; call rax; 
0x000000000040a86e: mov qword ptr [rsp + 8], rcx; mov rdi, r15; call rax; 
0x000000000047a70f: mov qword ptr [rsp], rax; call 0x7ab30; mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000040cee7: mov qword ptr [rsp], rcx; mov rdi, rbp; call rax; 
0x0000000000413ad4: mov qword ptr [rsp], rdi; call rax; 
0x000000000043fc6c: mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x0000000000443ba8: mov qword ptr fs:[r12], 0; mov rax, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x0000000000412111: mov qword ptr fs:[rbx], r12; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000044fa16: mov qword ptr fs:[rcx], rdx; mov rax, qword ptr [rax + 0x58]; mov rdx, -0x18; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000044f94a: mov qword ptr fs:[rcx], rdx; mov rdx, -0x18; mov qword ptr fs:[rdx], rax; ret; 
0x000000000044f955: mov qword ptr fs:[rdx], rax; ret; 
0x000000000044f93f: mov qword ptr fs:[rsi], rcx; mov rcx, -0x10; mov qword ptr fs:[rcx], rdx; mov rdx, -0x18; mov qword ptr fs:[rdx], rax; ret; 
0x000000000043c185: mov qword ptr ss:[rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x0000000000402a7c: mov qword ptr ss:[rsi + 0x10], rsi; syscall; 
0x0000000000473910: mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000000473910: mov r10, rcx; mov eax, 0x11; syscall; cmp rax, -0x1000; ja 0x73928; ret; 
0x0000000000440b40: mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000000440b40: mov r10, rcx; mov eax, 0x19; syscall; cmp rax, -0xfff; jae 0x40b53; ret; 
0x000000000043f680: mov r10, rsi; xor edx, edx; mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x000000000044fc35: mov r10d, 8; mov eax, 0xd; syscall; 
0x000000000044fdc7: mov r10d, 8; mov rsi, r8; mov eax, 0xe; syscall; 
0x000000000043f7e5: mov r10d, ebx; mov rdi, rbp; mov eax, 9; syscall; 
0x000000000043f82e: mov r10d, ecx; mov ecx, 9; xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x0000000000423dc0: mov r11, qword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423da4: mov r11, qword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000046ceec: mov r11, qword ptr [rsp + 0x30]; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000046ce7a: mov r11, qword ptr [rsp + 0x30]; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000468510: mov r11d, dword ptr [rbp - 0xc4]; mov rax, qword ptr [rbx + 0x10]; add rax, qword ptr [r15]; test r11d, r11d; jne 0x68525; call rax; 
0x000000000043f6fd: mov r12, -1; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x00000000004084a5: mov r12, 0x4ae230; cmp rbx, r12; jae 0x84c3; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000047d247: mov r12, qword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000040b3dd: mov r12d, 0xffffffff; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000000443b4d: mov r12d, eax; test eax, eax; jne 0x43bd0; mov rcx, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rcx; 
0x000000000047d24b: mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000047d404: mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x0000000000459bba: mov r13, rbx; sar r13, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x000000000047d24f: mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000047d408: mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000044fb4e: mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x0000000000453d32: mov r15, qword ptr [rbp - 0x4d0]; mov rsi, r13; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x000000000047d253: mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000047d40c: mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000044fb52: mov r15, qword ptr [rdi + 0x28]; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x0000000000403cfb: mov r15b, 0xa; add al, ch; cld; ret 0xffbf; 
0x0000000000427887: mov r15b, 5; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043fe7e: mov r15d, r14d; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x0000000000440e49: mov r8, qword ptr [rip + 0x6d498]; mov rax, r8; ret; 
0x0000000000440d57: mov r8, qword ptr [rip + 0x6d58a]; jne 0x40d70; lea rax, [r8 + 1]; mov qword ptr [rip + 0x6d57d], rax; ret; 
0x000000000047d1e4: mov r8, r12; mov rcx, r14; mov esi, 1; mov edi, 1; call rax; 
0x000000000047cddf: mov r8, r13; mov rcx, r12; mov esi, 0x1a; mov edi, 1; call rax; 
0x000000000047cd17: mov r8, r13; mov rcx, r12; mov esi, 0xa; mov edi, 1; call rax; 
0x000000000047cbde: mov r8, rbx; mov rcx, rbp; or esi, 2; mov edi, 1; call rax; 
0x000000000045f1ad: mov r8, rcx; mov qword ptr [rax + 0x10], rcx; lea rdx, [r8 + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000411f90: mov r8, rdi; pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x000000000044fdc4: mov r8, rsi; mov r10d, 8; mov rsi, r8; mov eax, 0xe; syscall; 
0x000000000043fe7c: mov r8b, 0x45; mov edi, esi; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x0000000000469640: mov r8b, 0xf; xchg eax, ebp; ret 0x2148; 
0x000000000045a93f: mov r8d, 1; xor edx, edx; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000045f0f2: mov r8d, dword ptr [rdi + 0x10]; sub r8d, eax; mov eax, r8d; ret; 
0x000000000043ebd1: mov r8d, eax; mov eax, 3; syscall; 
0x000000000043e9c5: mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000043eb11: mov r8d, eax; mov edi, dword ptr [rsp + 8]; mov eax, 1; syscall; 
0x000000000043ea71: mov r8d, eax; mov edi, dword ptr [rsp + 8]; xor eax, eax; syscall; 
0x0000000000406f8f: mov r8d, r8d; movsxd rdi, dword ptr [r10 + r8*4]; add rdi, r10; jmp rdi; 
0x0000000000439c93: mov r9, qword ptr [rsi + rdx - 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000435a83: mov r9, qword ptr [rsi + rdx - 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x0000000000460f5a: mov r9, qword ptr [rsp + 0x10]; mov rdi, rbp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x0000000000446f1f: mov r9, qword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000447abf: mov r9, qword ptr [rsp + 0x30]; mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044a509: mov r9, qword ptr [rsp + 0x30]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044988c: mov r9, qword ptr [rsp + 0x38]; mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000047cddc: mov r9, r14; mov r8, r13; mov rcx, r12; mov esi, 0x1a; mov edi, 1; call rax; 
0x000000000047cd14: mov r9, r14; mov r8, r13; mov rcx, r12; mov esi, 0xa; mov edi, 1; call rax; 
0x0000000000444102: mov r9, r14; mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; call rbx; 
0x0000000000456f30: mov r9, rax; pop r12; pop r13; mov rax, r9; pop r14; ret; 
0x000000000044f9a0: mov rax, -0x10; add rax, qword ptr fs:[0]; ret; 
0x000000000044f9c0: mov rax, -0x18; add rax, qword ptr fs:[0]; ret; 
0x000000000043e898: mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000043f800: mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov rax, -1; ret; 
0x0000000000462250: mov rax, -0x40; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000000416d8f: mov rax, -0x40; mov dword ptr fs:[rax], 0xc; xor eax, eax; pop rbx; ret; 
0x0000000000461cd0: mov rax, -0x40; mov dword ptr fs:[rax], 2; xor eax, eax; ret; 
0x000000000046b4a8: mov rax, -0x40; pop rbx; mov eax, dword ptr fs:[rax]; ret; 
0x000000000044f960: mov rax, -0x58; movsxd rdi, edi; mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000040fdf0: mov rax, -1; ret; 
0x000000000044f980: mov rax, -8; add rax, qword ptr fs:[0]; ret; 
0x0000000000401004: mov rax, 0; test rax, rax; je 0x1012; call rax; 
0x000000000044fb70: mov rax, 0xf; syscall; 
0x0000000000461520: mov rax, 1; ret; 
0x0000000000461530: mov rax, 2; ret; 
0x0000000000461540: mov rax, 3; ret; 
0x0000000000461550: mov rax, 4; ret; 
0x0000000000461560: mov rax, 5; ret; 
0x0000000000461570: mov rax, 6; ret; 
0x0000000000461580: mov rax, 7; ret; 
0x0000000000475083: mov rax, qword ptr [r12]; pop rbx; add rax, qword ptr [rdx + 8]; pop rbp; pop r12; jmp rax; 
0x00000000004083b8: mov rax, qword ptr [rax + 0x18]; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; call rax; 
0x000000000040af60: mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x000000000044fa1a: mov rax, qword ptr [rax + 0x58]; mov rdx, -0x18; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000040fb47: mov rax, qword ptr [rax + 0x68]; test rax, rax; jne 0xfb40; ret; 
0x000000000045e96c: mov rax, qword ptr [rax + 0xe0]; call qword ptr [rax + 0x68]; 
0x000000000045ea85: mov rax, qword ptr [rax + 0xe0]; mov esi, 0xffffffff; call qword ptr [rax + 0x18]; 
0x000000000040af59: mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x0000000000479807: mov rax, qword ptr [rax + 8]; mov rdx, r13; add rax, qword ptr [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x000000000046ce00: mov rax, qword ptr [rax + 8]; ret; 
0x000000000046ce10: mov rax, qword ptr [rax + 8]; sub rax, qword ptr fs:[0]; ret; 
0x000000000044e38a: mov rax, qword ptr [rax + r14*8]; test rax, rax; je 0x4e395; call rax; 
0x000000000044e148: mov rax, qword ptr [rax + rbx*8]; test rax, rax; je 0x4e153; call rax; 
0x000000000048063f: mov rax, qword ptr [rax + rbx*8]; test rax, rax; je 0x8064a; call rax; 
0x000000000044f96e: mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000047ce58: mov rax, qword ptr [rax]; add rsp, 8; ret; 
0x000000000044f96b: mov rax, qword ptr [rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x0000000000410900: mov rax, qword ptr [rax]; test rax, rax; jne 0x108f8; ret; 
0x0000000000401cc5: mov rax, qword ptr [rbp - 0x20]; mov rdi, rax; call 0x16730; nop; leave; ret; 
0x000000000043fe81: mov rax, qword ptr [rbp - 0x60]; call rax; 
0x0000000000444a7d: mov rax, qword ptr [rbp - 0x70]; mov rdi, r12; call rax; 
0x0000000000478081: mov rax, qword ptr [rbp - 8]; sub rax, qword ptr fs:[0x28]; jne 0x780d1; leave; ret; 
0x0000000000468d47: mov rax, qword ptr [rbx + 0x10]; add rax, qword ptr [r11]; test r10d, r10d; jne 0x68d63; mov qword ptr [rbp - 0xd8], r11; call rax; 
0x0000000000467f60: mov rax, qword ptr [rbx + 0x10]; add rax, qword ptr [r15]; add r13, r14; test esi, esi; jne 0x67f70; call rax; 
0x0000000000468396: mov rax, qword ptr [rbx + 0x10]; add rax, qword ptr [r15]; test ecx, ecx; jne 0x683a3; call rax; 
0x0000000000468c0c: mov rax, qword ptr [rbx + 0x10]; add rax, qword ptr [r15]; test edx, edx; jne 0x68c19; call rax; 
0x0000000000468517: mov rax, qword ptr [rbx + 0x10]; add rax, qword ptr [r15]; test r11d, r11d; jne 0x68525; call rax; 
0x0000000000472d98: mov rax, qword ptr [rbx + 0x10]; mov qword ptr [rax], 0; mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000472d48: mov rax, qword ptr [rbx + 0x10]; mov qword ptr [rax], rdi; pop rbx; ret; 
0x0000000000472d38: mov rax, qword ptr [rbx + 0x10]; mov rdx, qword ptr [rdi + 0x30]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000040f0cd: mov rax, qword ptr [rbx + 0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000040f0ed: mov rax, qword ptr [rbx + 0x18]; mov esi, dword ptr [rsp + 0xc]; mov rdi, qword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000040cbf2: mov rax, qword ptr [rbx + 0x20]; add rsp, 8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x000000000040f325: mov rax, qword ptr [rbx + 0x28]; add rsp, 8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x000000000040f6a9: mov rax, qword ptr [rbx + 0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000040f8cb: mov rax, qword ptr [rbx + 0x48]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x0000000000440b15: mov rax, qword ptr [rbx]; mov qword ptr [rip + 0x6c571], rax; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000438c06: mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; lea rax, [rdx + 0xc]; ret; 
0x00000000004373f6: mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x0000000000438c26: mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; lea rax, [rdx + 0xd]; ret; 
0x0000000000437416: mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x0000000000438c46: mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; lea rax, [rdx + 0xe]; ret; 
0x0000000000437436: mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000438ad6: mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; lea rax, [rdx + 0xf]; ret; 
0x0000000000437326: mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x000000000045a8c5: mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000459e0d: mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x0000000000438a80: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; lea rax, [rdx + 7]; ret; 
0x0000000000438b80: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; lea rax, [rdx + 8]; ret; 
0x00000000004373b0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; mov rax, rdi; ret; 
0x0000000000438ba0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; lea rax, [rdx + 9]; ret; 
0x00000000004373c0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; mov rax, rdi; ret; 
0x0000000000438bc0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; lea rax, [rdx + 0xa]; ret; 
0x00000000004373d0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; mov rax, rdi; ret; 
0x0000000000438be0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; lea rax, [rdx + 0xb]; ret; 
0x00000000004373e0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; mov rax, rdi; ret; 
0x0000000000438c00: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; lea rax, [rdx + 0xc]; ret; 
0x00000000004373f0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x0000000000438c20: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; lea rax, [rdx + 0xd]; ret; 
0x0000000000437410: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x0000000000438c40: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; lea rax, [rdx + 0xe]; ret; 
0x0000000000437430: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000438ad0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; lea rax, [rdx + 0xf]; ret; 
0x0000000000437320: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x00000000004372d0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, rdi; ret; 
0x000000000044f311: mov rax, qword ptr [rdi + 0x20]; mov rbp, rdi; test rax, rax; je 0x4f31f; call rax; 
0x00000000004808fc: mov rax, qword ptr [rdi + 0x20]; test rax, rax; je 0x8090c; call rax; 
0x00000000004115d0: mov rax, qword ptr [rdi + 0x28]; cmp qword ptr [rdi + 0x10], rax; cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000412882: mov rax, qword ptr [rdi + 0x28]; mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x000000000040ef5a: mov rax, qword ptr [rdi + 0x48]; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x0000000000410c60: mov rax, qword ptr [rdi + 0x68]; ret; 
0x000000000047ce60: mov rax, qword ptr [rdi + 0x90]; ret; 
0x000000000047ced0: mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000045e950: mov rax, qword ptr [rdi + 0xa0]; cmp qword ptr [rax + 0x30], 0; je 0x5e960; ret; 
0x000000000047cf10: mov rax, qword ptr [rdi + 0xa0]; ret; 
0x000000000047cf60: mov rax, qword ptr [rdi + 0xa8]; ret; 
0x000000000047cf50: mov rax, qword ptr [rdi + 0xb0]; ret; 
0x000000000047cf20: mov rax, qword ptr [rdi + 0xb8]; ret; 
0x000000000047cee0: mov rax, qword ptr [rdi + 0xc0]; sar rax, 0x3f; and eax, 1; mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000040d780: mov rax, qword ptr [rdi + 8]; cmp rax, qword ptr [rdi + 0x10]; jae 0xd790; movzx eax, byte ptr [rax]; ret; 
0x0000000000410d86: mov rax, qword ptr [rdi + 8]; cmp rax, rdx; jae 0x10db0; movzx eax, byte ptr [rax]; ret; 
0x000000000047d830: mov rax, qword ptr [rdi + 8]; mov rsi, rdi; test rax, rax; je 0x7d848; mov edi, 1; jmp rax; 
0x0000000000453f96: mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000421e40: mov rax, qword ptr [rdi - 8]; cmp rcx, rax; jne 0x222f3; xor eax, eax; ret; 
0x00000000004218b6: mov rax, qword ptr [rdi - 8]; mov rcx, qword ptr [rsi - 8]; cmp rcx, rax; jne 0x222f3; xor eax, eax; ret; 
0x0000000000411680: mov rax, qword ptr [rdi]; cmp rax, 0x2000000; jbe 0x11690; ret; 
0x0000000000411740: mov rax, qword ptr [rdi]; cmp rax, 0x408; jbe 0x11750; ret; 
0x00000000004117b0: mov rax, qword ptr [rdi]; cmp rax, 0xa0; jbe 0x117c0; ret; 
0x0000000000411780: mov rax, qword ptr [rdi]; cmp rax, 0xffff; jbe 0x11790; ret; 
0x00000000004765e0: mov rax, qword ptr [rdi]; cmp rax, rsi; je 0x765f0; ret; 
0x0000000000411700: mov rax, qword ptr [rdi]; mov dword ptr [rip + 0x9b027], 1; mov qword ptr [rip + 0x9afec], rax; ret; 
0x00000000004116b0: mov rax, qword ptr [rdi]; mov dword ptr [rip + 0x9b077], 1; mov dword ptr [rip + 0x9b069], eax; ret; 
0x00000000004116f0: mov rax, qword ptr [rdi]; mov dword ptr [rip + 0x9da9b], eax; ret; 
0x000000000041090d: mov rax, qword ptr [rdi]; mov qword ptr [rdx], rax; ret; 
0x00000000004117a0: mov rax, qword ptr [rdi]; mov qword ptr [rip + 0x9afbe], rax; ret; 
0x0000000000411730: mov rax, qword ptr [rdi]; mov qword ptr [rip + 0x9afde], rax; ret; 
0x0000000000411720: mov rax, qword ptr [rdi]; mov qword ptr [rip + 0x9aff6], rax; ret; 
0x00000000004413a5: mov rax, qword ptr [rdx + rax]; mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000461a9c: mov rax, qword ptr [rip + 0x4a015]; test rax, rax; je 0x61ad8; call rax; 
0x000000000044d1e0: mov rax, qword ptr [rip + 0x62241]; ret; 
0x00000000004442e0: mov rax, qword ptr [rip + 0x6b101]; ret; 
0x00000000004442d0: mov rax, qword ptr [rip + 0x6b109]; ret; 
0x0000000000440eba: mov rax, qword ptr [rip + 0x6d3f7]; mov qword ptr [rsi], rax; ret; 
0x0000000000440eb0: mov rax, qword ptr [rip + 0x6d411]; mov qword ptr [rdi], rax; mov rax, qword ptr [rip + 0x6d3f7]; mov qword ptr [rsi], rax; ret; 
0x000000000043f750: mov rax, qword ptr [rip + 0x6d9c1]; test rax, rax; je 0x3f75d; ret; 
0x0000000000410c40: mov rax, qword ptr [rip + 0x9b4d9]; ret; 
0x0000000000417440: mov rax, qword ptr [rsi + rax + 8]; sub rdx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x000000000045a2ed: mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x000000000043fad4: mov rax, qword ptr [rsi]; and rax, 0xfffffffffffffffe; mov rsi, qword ptr [rax + 8]; test sil, 1; jne 0x3fb00; ret; 
0x0000000000443bb1: mov rax, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x00000000004025a2: mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000043fc5f: mov rax, qword ptr [rsp + 0x18]; mov dword ptr [rsp + 0xc], r8d; mov rdi, r15; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x0000000000446484: mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000446f2e: mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000043ea91: mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000407c68: mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000040a4d2: mov rax, qword ptr [rsp + 8]; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x000000000047d9c3: mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], r10; call rax; 
0x0000000000407bf5: mov rax, qword ptr [rsp + 8]; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000047d9e6: mov rax, qword ptr [rsp + 8]; mov rdx, r8; mov rdi, r15; mov rsi, qword ptr [rbx]; call rax; 
0x0000000000407d8b: mov rax, qword ptr [rsp + 8]; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000047a9ed: mov rax, qword ptr [rsp]; add rsp, 0x38; pop rbx; pop r14; ret; 
0x000000000047a718: mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000047f312: mov rax, qword ptr [rsp]; mov rdx, r15; mov rsi, qword ptr [r12 + rbp*8 + 0x10]; mov rdi, r13; call rax; 
0x000000000045e96b: mov rax, qword ptr fs:[rax + 0xe0]; call qword ptr [rax + 0x68]; 
0x000000000044f96a: mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000045ef0d: mov rax, r12; pop r12; pop r13; pop r14; ret; 
0x000000000045f778: mov rax, r12; pop r12; pop r13; ret; 
0x0000000000402f28: mov rax, r12; pop r12; ret; 
0x000000000043f968: mov rax, r12; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000040c33d: mov rax, r12; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000411d8a: mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000043f708: mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000461b99: mov rax, r12; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000402e8a: mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000478818: mov rax, r12; sar rax, 3; pop rbx; pop rbp; pop r12; ret; 
0x0000000000409ac9: mov rax, r13; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000043fdf0: mov rax, r13; pop rbp; pop r12; pop r13; ret; 
0x000000000043fddb: mov rax, r13; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000408619: mov rax, r8; add qword ptr [rip + 0xa669c], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000046a818: mov rax, r8; mov qword ptr [r11], rdi; pop rbx; ret; 
0x00000000004164c2: mov rax, r8; pop r12; pop r13; ret; 
0x0000000000406b37: mov rax, r8; pop r12; ret; 
0x0000000000416526: mov rax, r8; pop r13; ret; 
0x0000000000461ec1: mov rax, r8; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000040c1a6: mov rax, r8; pop rbp; pop r12; ret; 
0x0000000000409920: mov rax, r8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000406af0: mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x000000000040868b: mov rax, r8; pop rbx; pop rbp; ret; 
0x000000000046a804: mov rax, r8; pop rbx; ret; 
0x0000000000408680: mov rax, r8; ret; 
0x0000000000461903: mov rax, r8; shr rax, 2; vzeroupper; ret; 
0x00000000004607c0: mov rax, r8; vzeroupper; ret; 
0x0000000000456f37: mov rax, r9; pop r14; ret; 
0x0000000000456e86: mov rax, r9; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000460a5a: mov rax, rbp; pop rbx; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000040d6ea: mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x000000000047d06a: mov rax, rbp; pop rbx; pop rbp; ret; 
0x000000000040db85: mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000040c29a: mov rax, rbx; pop rbx; ret; 
0x000000000046d5a2: mov rax, rdi; mov rdi, rdx; cmp rax, 9; ja 0x6d580; mov rax, r8; ret; 
0x0000000000410c70: mov rax, rdi; ret; 
0x000000000043d3c0: mov rax, rdx; pop rbx; ret; 
0x0000000000435c98: mov rax, rdx; ret; 
0x000000000047d410: mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000044fb5b: mov rbp, r9; jmp rdx; 
0x000000000043eca5: mov rbp, rdi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x000000000044f315: mov rbp, rdi; test rax, rax; je 0x4f31f; call rax; 
0x000000000046b25e: mov rbp, rsp; mov rsi, rbp; syscall; 
0x000000000040849e: mov rbx, 0x4ae228; mov r12, 0x4ae230; cmp rbx, r12; jae 0x84c3; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000045e964: mov rbx, rdi; test byte ptr [rdi], 2; jne 0x5e9d0; mov rax, qword ptr [rax + 0xe0]; call qword ptr [rax + 0x68]; 
0x000000000044f943: mov rcx, -0x10; mov qword ptr fs:[rcx], rdx; mov rdx, -0x18; mov qword ptr fs:[rdx], rax; ret; 
0x000000000043e7f0: mov rcx, -0x40; neg eax; mov dword ptr fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000000401ba6: mov rcx, 0x402bc0; mov rdi, 0x401cd4; call 0x21f0; hlt; nop dword ptr [rax + rax]; ret; 
0x000000000045e3f1: mov rcx, qword ptr [rax + 0x10]; mov qword ptr [rax], rdx; mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x000000000042d019: mov rcx, qword ptr [rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000047ce9e: mov rcx, qword ptr [rdi + rsi*8]; cmp al, 8; jne 0x1662; mov qword ptr [rcx], rdx; add rsp, 8; ret; 
0x000000000047d960: mov rcx, qword ptr [rdx + 8]; mov eax, 1; cmp qword ptr [rsi + 8], rcx; ja 0x7d971; sbb eax, eax; ret; 
0x0000000000439824: mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x0000000000439844: mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x0000000000439194: mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000439174: mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x00000000004397e4: mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; lea rax, [rdi + 0x15]; ret; 
0x0000000000439134: mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000439804: mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; lea rax, [rdi + 0x16]; ret; 
0x0000000000439154: mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x000000000043c17e: mov rcx, qword ptr [rsi + rdx - 8]; mov rsi, qword ptr [rsi]; mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x0000000000424164: mov rcx, qword ptr [rsi - 0xa]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424180: mov rcx, qword ptr [rsi - 0xa]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424344: mov rcx, qword ptr [rsi - 0xb]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424360: mov rcx, qword ptr [rsi - 0xb]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424524: mov rcx, qword ptr [rsi - 0xc]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424540: mov rcx, qword ptr [rsi - 0xc]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424714: mov rcx, qword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424730: mov rcx, qword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424914: mov rcx, qword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424930: mov rcx, qword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424b14: mov rcx, qword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424b30: mov rcx, qword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004218ba: mov rcx, qword ptr [rsi - 8]; cmp rcx, rax; jne 0x222f3; xor eax, eax; ret; 
0x0000000000429684: mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004295f4: mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000429564: mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000421e3c: mov rcx, qword ptr [rsi - 8]; mov rax, qword ptr [rdi - 8]; cmp rcx, rax; jne 0x222f3; xor eax, eax; ret; 
0x0000000000423f84: mov rcx, qword ptr [rsi - 9]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423fa0: mov rcx, qword ptr [rsi - 9]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000439670: mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; lea rax, [rdi + 8]; ret; 
0x0000000000439040: mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; ret; 
0x0000000000439680: mov rcx, qword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; lea rax, [rdi + 9]; ret; 
0x0000000000439050: mov rcx, qword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x00000000004396a0: mov rcx, qword ptr [rsi]; mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; lea rax, [rdi + 0xa]; ret; 
0x0000000000439060: mov rcx, qword ptr [rsi]; mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; ret; 
0x00000000004396c0: mov rcx, qword ptr [rsi]; mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; lea rax, [rdi + 0xb]; ret; 
0x0000000000439070: mov rcx, qword ptr [rsi]; mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; ret; 
0x000000000042a004: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429f94: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429f24: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429eb4: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429e44: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429dd4: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429d64: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000435a80: mov rcx, qword ptr [rsi]; mov r9, qword ptr [rsi + rdx - 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x00000000004396e0: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; lea rax, [rdi + 0xc]; ret; 
0x0000000000439080: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000439700: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; lea rax, [rdi + 0xd]; ret; 
0x0000000000439090: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x0000000000439720: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; lea rax, [rdi + 0xe]; ret; 
0x00000000004390a0: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000443b54: mov rcx, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rcx; 
0x000000000044b909: mov rcx, qword ptr [rsp + 0x30]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000046cef6: mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000046ce84: mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000407dd5: mov rcx, qword ptr [rsp + 8]; mov rdx, r14; mov rsi, r13; add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x000000000042d018: mov rcx, qword ptr ss:[rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000047cde2: mov rcx, r12; mov esi, 0x1a; mov edi, 1; call rax; 
0x000000000047cd1a: mov rcx, r12; mov esi, 0xa; mov edi, 1; call rax; 
0x000000000043dff5: mov rcx, r12; mov rdx, r13; call rbx; 
0x000000000047d1e7: mov rcx, r14; mov esi, 1; mov edi, 1; call rax; 
0x000000000046a6c2: mov rcx, rax; cmp rcx, rdx; jne 0x6a6a0; mov eax, dword ptr [rcx]; ret; 
0x000000000047cbe1: mov rcx, rbp; or esi, 2; mov edi, 1; call rax; 
0x00000000004109dd: mov rcx, rdx; add rax, rcx; mov qword ptr [rdi + 0x18], rsi; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x00000000004109a5: mov rcx, rdx; add rax, rcx; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000043ce09: mov rcx, rdx; movzx eax, sil; mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x000000000043c161: mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000476a1e: mov rcx, rsi; sub rcx, qword ptr [rax + 0x10]; cmp rcx, qword ptr [rax + 0x28]; jae 0x76a10; mov eax, 1; ret; 
0x0000000000401bad: mov rdi, 0x401cd4; call 0x21f0; hlt; nop dword ptr [rax + rax]; ret; 
0x0000000000460c8c: mov rdi, qword ptr [r12 + 0x10]; push 1; push 0; lea rcx, [rax + 4]; lea r9, [rsp + 0x20]; call rbx; 
0x0000000000460c12: mov rdi, qword ptr [r12 + 0x10]; push 1; xor edx, edx; push 1; lea r9, [rsp + 0x20]; call rbx; 
0x0000000000460af9: mov rdi, qword ptr [r12]; lea r9, [rsp + 0x28]; call rbx; 
0x0000000000407c61: mov rdi, qword ptr [r12]; mov rdx, r14; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000043fa46: mov rdi, qword ptr [rbp + 0x10]; test rdi, rdi; jne 0x3fa76; mov rdi, qword ptr [rbp]; call rbx; 
0x000000000043fe76: mov rdi, qword ptr [rbp - 0x58]; mov qword ptr [rbp - 0x50], r9; mov r15d, r14d; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x00000000004580c3: mov rdi, qword ptr [rbp - 0x8c8]; mov rdx, r10; mov rsi, r15; mov byte ptr [rbp - 0x94c], r9b; call rax; 
0x000000000043fa4f: mov rdi, qword ptr [rbp]; call rbx; 
0x00000000004786e0: mov rdi, qword ptr [rdi]; call 0x7a400; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000047862c: mov rdi, qword ptr [rdi]; call 0x7a4f0; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x000000000046cdc0: mov rdi, qword ptr [rip + 0x42899]; lea rax, [rdi - 1]; cmp rax, -3; jbe 0x6cdd8; ret; 
0x0000000000443bb6: mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x0000000000443b59: mov rdi, qword ptr [rsp + 0x18]; call rcx; 
0x0000000000449896: mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000447ac9: mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044647f: mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000446f29: mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x00000000004469be: mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000040f6da: mov rdi, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000044ff64: mov rdi, qword ptr [rsp + 8]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x000000000040f0f5: mov rdi, qword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000004541f2: mov rdi, r12; call qword ptr [rax + 0x38]; 
0x000000000045a59d: mov rdi, r12; call qword ptr [rbx + 0x38]; 
0x0000000000407c00: mov rdi, r12; call rax; 
0x000000000044ff57: mov rdi, r12; call rbx; 
0x0000000000407de4: mov rdi, r12; call rcx; 
0x000000000045a223: mov rdi, r12; mov dword ptr [rbp - 0x4e8], r9d; call qword ptr [rbx + 0x38]; 
0x00000000004543c4: mov rdi, r12; mov dword ptr [rbp - 0x4f0], ecx; call qword ptr [rbx + 0x38]; 
0x00000000004552d4: mov rdi, r12; mov dword ptr [rbp - 0x4f8], r9d; call qword ptr [rax + 0x38]; 
0x00000000004548e9: mov rdi, r12; mov dword ptr [rbp - 0x500], r9d; call qword ptr [rbx + 0x38]; 
0x000000000045b457: mov rdi, r12; mov dword ptr [rbp - 0x508], r9d; mov qword ptr [rbp - 0x500], r8; call qword ptr [rax + 0x38]; 
0x0000000000455511: mov rdi, r12; mov dword ptr [rbp - 0x510], ecx; mov qword ptr [rbp - 0x508], r10; call qword ptr [rax + 0x38]; 
0x00000000004163c6: mov rdi, r12; mov eax, 0xca; syscall; 
0x000000000046f455: mov rdi, r12; mov qword ptr [rbp - 0xe8], r8; call rax; 
0x000000000045005b: mov rdi, r12; mov rdx, rbp; call rbx; 
0x000000000045a099: mov rdi, r12; sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x0000000000453d3c: mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x0000000000459bb4: mov rdi, r12; sub rbx, r14; mov r13, rbx; sar r13, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x000000000045e833: mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x000000000047f31e: mov rdi, r13; call rax; 
0x00000000004500d9: mov rdi, r13; call rbx; 
0x00000000004166b8: mov rdi, r13; mov eax, 0xca; syscall; 
0x000000000040f5d7: mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x0000000000452844: mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x0000000000452294: mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000452029: mov rdi, r14; mov dword ptr [rbp - 0x934], r8d; call rax; 
0x00000000004520c9: mov rdi, r14; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x000000000045dfce: mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x000000000040a873: mov rdi, r15; call rax; 
0x000000000044ff96: mov rdi, r15; call rbx; 
0x000000000043fc69: mov rdi, r15; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x000000000047d9bd: mov rdi, r15; mov rdx, qword ptr [r10]; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], r10; call rax; 
0x000000000047d9ee: mov rdi, r15; mov rsi, qword ptr [rbx]; call rax; 
0x00000000004016e8: mov rdi, r8; call 0x16730; mov qword ptr [rip + 0xadfdd], 0; pop rdx; ret; 
0x0000000000401cc9: mov rdi, rax; call 0x16730; nop; leave; ret; 
0x0000000000401dba: mov rdi, rax; call 0x9cc0; nop; pop rbp; ret; 
0x000000000046d51e: mov rdi, rax; cmp rdx, rcx; jae 0x6d508; mov rax, r8; ret; 
0x0000000000407ab9: mov rdi, rax; mov eax, 0xba; syscall; 
0x000000000043d84b: mov rdi, rax; mov eax, dword ptr [rcx + rax*4]; sub eax, dword ptr [rcx + rsi*4]; je 0x3d838; ret; 
0x0000000000444a71: mov rdi, rax; mov qword ptr [rbp - 0x70], rax; call 0x42c50; mov rax, qword ptr [rbp - 0x70]; mov rdi, r12; call rax; 
0x000000000040a4dc: mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x00000000004094e8: mov rdi, rbp; call qword ptr [rbx + 0x10]; 
0x000000000040d405: mov rdi, rbp; call qword ptr [rbx + 0x40]; 
0x000000000040ceeb: mov rdi, rbp; call rax; 
0x000000000043e177: mov rdi, rbp; call rbx; 
0x0000000000460e14: mov rdi, rbp; lea r9, [rsp + 0x30]; call rbx; 
0x000000000043eca8: mov rdi, rbp; mov eax, 0x4f; syscall; 
0x0000000000412e0c: mov rdi, rbp; mov eax, 0xca; syscall; 
0x000000000043f7e8: mov rdi, rbp; mov eax, 9; syscall; 
0x000000000043f965: mov rdi, rbp; mov rax, r12; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000000460f5f: mov rdi, rbp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x000000000040af55: mov rdi, rbp; pop rbp; mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x000000000045e7a0: mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x000000000040cc6b: mov rdi, rbp; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000040cbfa: mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x000000000040efdc: mov rdi, rbx; call qword ptr [rbp + 0x18]; 
0x000000000040f53d: mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000040fe3d: mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000040978d: mov rdi, rbx; call qword ptr [rbp + 0x60]; 
0x0000000000409e72: mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040d4f4: mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x000000000045cf39: mov rdi, rbx; call rax; 
0x0000000000416c77: mov rdi, rbx; mov eax, 0xca; syscall; 
0x000000000040a183: mov rdi, rbx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x000000000040c574: mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x00000000004173dd: mov rdi, rcx; mov eax, 0xca; syscall; 
0x000000000046d5a5: mov rdi, rdx; cmp rax, 9; ja 0x6d580; mov rax, r8; ret; 
0x000000000046035e: mov rdi, rsi; bsr eax, eax; lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x000000000043e863: mov rdi, rsi; mov rsi, rdx; cmp r8d, 1; ja 0x3e898; mov eax, 4; syscall; 
0x0000000000462053: mov rdi, rsi; mov rsi, rdx; cmp r8d, 1; ja 0x62088; mov eax, 6; syscall; 
0x000000000044fa1e: mov rdx, -0x18; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000044f94e: mov rdx, -0x18; mov qword ptr fs:[rdx], rax; ret; 
0x000000000043e880: mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000043eaa0: mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x000000000047d9c0: mov rdx, qword ptr [r10]; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], r10; call rax; 
0x000000000047cd3e: mov rdx, qword ptr [r12]; mov r8, r13; mov rcx, r12; mov esi, 0xa; mov edi, 1; call rax; 
0x000000000047d1e1: mov rdx, qword ptr [r14]; mov r8, r12; mov rcx, r14; mov esi, 1; mov edi, 1; call rax; 
0x00000000004520c5: mov rdx, qword ptr [r15 + 0x20]; mov rdi, r14; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x000000000040a867: mov rdx, qword ptr [r15 + 0x40]; sub rdx, rsi; mov qword ptr [rsp + 8], rcx; mov rdi, r15; call rax; 
0x000000000047ae4b: mov rdx, qword ptr [rax]; lea rax, [rax + 8]; mov qword ptr [r9], rdx; pop rbx; ret; 
0x000000000047db68: mov rdx, qword ptr [rax]; lea rax, [rax + 8]; mov qword ptr [rcx], rdx; ret; 
0x000000000040cee0: mov rdx, qword ptr [rbp + 0x40]; sub rdx, rsi; mov qword ptr [rsp], rcx; mov rdi, rbp; call rax; 
0x000000000047cbda: mov rdx, qword ptr [rbp]; mov r8, rbx; mov rcx, rbp; or esi, 2; mov edi, 1; call rax; 
0x0000000000472dbc: mov rdx, qword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x000000000040a17f: mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x000000000040c570: mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x0000000000440c45: mov rdx, qword ptr [rcx + rdx]; lea rcx, [rip - 0x60]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x0000000000472d3c: mov rdx, qword ptr [rdi + 0x30]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000472da3: mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x00000000004099ff: mov rdx, qword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x000000000047db78: mov rdx, qword ptr [rdx]; mov qword ptr [r8], rdx; add rsp, 8; ret; 
0x000000000047aeac: mov rdx, qword ptr [rdx]; mov qword ptr [r9], rdx; pop rbx; ret; 
0x000000000047397a: mov rdx, qword ptr [rip + 0x3be37]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000411c17: mov rdx, qword ptr [rip + 0x9b40a]; add rax, rcx; add rdx, qword ptr [rip + 0x9ab20]; cmp rax, rdx; jne 0x11c2e; ret; 
0x0000000000402592: mov rdx, qword ptr [rip + 0xacc1f]; mov edi, dword ptr [rsp + 0xc]; mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x00000000004391d4: mov rdx, qword ptr [rsi + 0x10]; mov ecx, dword ptr [rsi + 0x17]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x00000000004391f4: mov rdx, qword ptr [rsi + 0x10]; mov ecx, dword ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x000000000042a000: mov rdx, qword ptr [rsi + 1]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429f90: mov rdx, qword ptr [rsi + 2]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429f20: mov rdx, qword ptr [rsi + 3]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429eb0: mov rdx, qword ptr [rsi + 4]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004396e3: mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; lea rax, [rdi + 0xc]; ret; 
0x0000000000439083: mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000429e40: mov rdx, qword ptr [rsi + 5]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000439703: mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; lea rax, [rdi + 0xd]; ret; 
0x0000000000439093: mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x0000000000429dd0: mov rdx, qword ptr [rsi + 6]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000439723: mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; lea rax, [rdi + 0xe]; ret; 
0x00000000004390a3: mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000429d60: mov rdx, qword ptr [rsi + 7]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000429810: mov rdx, qword ptr [rsi - 0xa]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000429790: mov rdx, qword ptr [rsi - 0xb]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000429710: mov rdx, qword ptr [rsi - 0xc]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000429680: mov rdx, qword ptr [rsi - 0xd]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004295f0: mov rdx, qword ptr [rsi - 0xe]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000429560: mov rdx, qword ptr [rsi - 0xf]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000423dc4: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424718: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424918: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424b18: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423da8: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424734: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424934: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424b34: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423de0: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000429890: mov rdx, qword ptr [rsi - 9]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000439660: mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; lea rax, [rdi + 7]; ret; 
0x000000000042a070: mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x000000000046cef1: mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000046ce7f: mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x00000000004469b4: mov rdx, qword ptr [rsp + 0x68]; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x00000000004580ca: mov rdx, r10; mov rsi, r15; mov byte ptr [rbp - 0x94c], r9b; call rax; 
0x0000000000452023: mov rdx, r10; mov rsi, r15; mov rdi, r14; mov dword ptr [rbp - 0x934], r8d; call rax; 
0x000000000045283e: mov rdx, r12; mov rsi, r13; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x000000000040d3ff: mov rdx, r12; mov rsi, r15; mov rdi, rbp; call qword ptr [rbx + 0x40]; 
0x000000000047980b: mov rdx, r13; add rax, qword ptr [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x0000000000459bc1: mov rdx, r13; call qword ptr [rax + 0x38]; 
0x000000000043dff8: mov rdx, r13; call rbx; 
0x0000000000460f57: mov rdx, r13; mov r9, qword ptr [rsp + 0x10]; mov rdi, rbp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x000000000043e16c: mov rdx, r13; mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; mov rdi, rbp; call rbx; 
0x00000000004799a4: mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x0000000000479848: mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x000000000045228e: mov rdx, r13; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000460e0e: mov rdx, r13; xor r8d, r8d; mov rdi, rbp; lea r9, [rsp + 0x30]; call rbx; 
0x0000000000407c65: mov rdx, r14; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000407d88: mov rdx, r14; mov rax, qword ptr [rsp + 8]; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000000407dda: mov rdx, r14; mov rsi, r13; add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x0000000000407bfa: mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000000453d42: mov rdx, r15; call qword ptr [rax + 0x38]; 
0x000000000047f316: mov rdx, r15; mov rsi, qword ptr [r12 + rbp*8 + 0x10]; mov rdi, r13; call rax; 
0x00000000004543be: mov rdx, r15; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x4f0], ecx; call qword ptr [rbx + 0x38]; 
0x000000000045550b: mov rdx, r15; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x510], ecx; mov qword ptr [rbp - 0x508], r10; call qword ptr [rax + 0x38]; 
0x000000000040d4ee: mov rdx, r15; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x00000000004541ec: mov rdx, r15; mov rsi, r8; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x000000000047d9eb: mov rdx, r8; mov rdi, r15; mov rsi, qword ptr [rbx]; call rax; 
0x000000000046f44f: mov rdx, r8; mov rsi, r13; mov rdi, r12; mov qword ptr [rbp - 0xe8], r8; call rax; 
0x000000000040c010: mov rdx, r8; mov rsi, rbx; mov edi, 2; mov eax, r10d; syscall; 
0x000000000045a0a0: mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x000000000041742e: mov rdx, rax; je 0x17460; test rcx, rcx; je 0x17440; lea rax, [rdx - 0x10]; ret; 
0x00000000004108fd: mov rdx, rax; mov rax, qword ptr [rax]; test rax, rax; jne 0x108f8; ret; 
0x000000000045005e: mov rdx, rbp; call rbx; 
0x00000000004800c0: mov rdx, rbp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x000000000045027f: mov rdx, rbp; mov rdi, r12; call rbx; 
0x000000000044ff69: mov rdx, rbp; mov rsi, r12; call rbx; 
0x00000000004500d3: mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x000000000044ff90: mov rdx, rbp; mov rsi, r12; mov rdi, r15; call rbx; 
0x000000000044ffab: mov rdx, rbp; mov rsi, r14; mov rdi, r12; call rbx; 
0x00000000004440fd: mov rdx, rbp; push 0; mov r9, r14; mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; call rbx; 
0x000000000044ff49: mov rdx, rbp; shr rax, 1; imul rax, rdi; lea r12, [rcx + rax]; mov rdi, r12; call rbx; 
0x000000000045e70e: mov rdx, rbp; sub rdx, 0x4adb80; cmp rax, rdx; jbe 0x5e758; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000045ef53: mov rdx, rbp; sub rdx, 0x4adb80; cmp rax, rdx; jbe 0x5ef90; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000040977e: mov rdx, rbp; sub rdx, 0x4adb80; cmp rax, rdx; jbe 0x97e8; mov rdi, rbx; call qword ptr [rbp + 0x60]; 
0x0000000000409e63: mov rdx, rbp; sub rdx, 0x4adb80; cmp rax, rdx; jbe 0x9ee4; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040f47c: mov rdx, rbp; sub rdx, 0x4adb80; cmp rax, rdx; jbe 0xf4f0; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040f52e: mov rdx, rbp; sub rdx, 0x4adb80; cmp rax, rdx; jbe 0xf560; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000040fe2e: mov rdx, rbp; sub rdx, 0x4adb80; cmp rax, rdx; jbe 0xfe70; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x00000000004524e9: mov rdx, rbx; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000045b01f: mov rdx, rbx; mov rsi, r9; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x00000000004620ab: mov rdx, rcx; cmp r9d, 1; ja 0x620e0; mov eax, 0x106; syscall; 
0x00000000004552ce: mov rdx, rcx; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x4f8], r9d; call qword ptr [rax + 0x38]; 
0x00000000004548e3: mov rdx, rcx; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x500], r9d; call qword ptr [rbx + 0x38]; 
0x000000000045a21d: mov rdx, rcx; mov rsi, r8; mov rdi, r12; mov dword ptr [rbp - 0x4e8], r9d; call qword ptr [rbx + 0x38]; 
0x000000000045b451: mov rdx, rcx; mov rsi, r8; mov rdi, r12; mov dword ptr [rbp - 0x508], r9d; mov qword ptr [rbp - 0x500], r8; call qword ptr [rax + 0x38]; 
0x000000000045a597: mov rdx, rcx; mov rsi, r9; mov rdi, r12; call qword ptr [rbx + 0x38]; 
0x000000000046d51b: mov rdx, rdi; mov rdi, rax; cmp rdx, rcx; jae 0x6d508; mov rax, r8; ret; 
0x000000000043ce10: mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x000000000046215c: mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000043f490: mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x000000000047f319: mov rsi, qword ptr [r12 + rbp*8 + 0x10]; mov rdi, r13; call rax; 
0x0000000000407c5d: mov rsi, qword ptr [r13]; mov rdi, qword ptr [r12]; mov rdx, r14; mov rax, qword ptr [rsp + 8]; call rax; 
0x00000000004520c1: mov rsi, qword ptr [r15 + 0x18]; mov rdx, qword ptr [r15 + 0x20]; mov rdi, r14; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x00000000004083d4: mov rsi, qword ptr [rax + 0x20]; mov edi, ebp; ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x000000000043fadb: mov rsi, qword ptr [rax + 8]; test sil, 1; jne 0x3fb00; ret; 
0x000000000043fe73: mov rsi, qword ptr [rax]; mov rdi, qword ptr [rbp - 0x58]; mov qword ptr [rbp - 0x50], r9; mov r15d, r14d; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x000000000040a17b: mov rsi, qword ptr [rbx + 0x10]; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x000000000047d9f1: mov rsi, qword ptr [rbx]; call rax; 
0x00000000004786dc: mov rsi, qword ptr [rdi + 8]; mov rdi, qword ptr [rdi]; call 0x7a400; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x0000000000478628: mov rsi, qword ptr [rdi + 8]; mov rdi, qword ptr [rdi]; call 0x7a4f0; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x000000000043c183: mov rsi, qword ptr [rsi]; mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x000000000042d016: mov rsi, qword ptr [rsi]; mov rcx, qword ptr [rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000043eb0c: mov rsi, qword ptr [rsp + 0x10]; mov r8d, eax; mov edi, dword ptr [rsp + 8]; mov eax, 1; syscall; 
0x000000000043ea6c: mov rsi, qword ptr [rsp + 0x10]; mov r8d, eax; mov edi, dword ptr [rsp + 8]; xor eax, eax; syscall; 
0x000000000040259d: mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000040f6d5: mov rsi, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000045027a: mov rsi, qword ptr [rsp + 0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x00000000004167b8: mov rsi, qword ptr [rsp + 0x18]; add rsp, 0x18; jmp rax; 
0x0000000000460f62: mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x000000000043dff0: mov rsi, qword ptr [rsp + 0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x0000000000416260: mov rsi, qword ptr [rsp + 0x18]; pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000000444105: mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; call rbx; 
0x000000000043e16f: mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; mov rdi, rbp; call rbx; 
0x0000000000416fb0: mov rsi, qword ptr [rsp + 0x28]; mov rdi, r12; call rax; 
0x0000000000447ac4: mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000449891: mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000044a50e: mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044647a: mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000446f24: mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x00000000004469b9: mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x00000000004543c1: mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x4f0], ecx; call qword ptr [rbx + 0x38]; 
0x00000000004552d1: mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x4f8], r9d; call qword ptr [rax + 0x38]; 
0x00000000004548e6: mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x500], r9d; call qword ptr [rbx + 0x38]; 
0x000000000045550e: mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x510], ecx; mov qword ptr [rbp - 0x508], r10; call qword ptr [rax + 0x38]; 
0x000000000044ff6c: mov rsi, r12; call rbx; 
0x00000000004799a7: mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x000000000047984b: mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x0000000000479811: mov rsi, r12; mov edi, ebp; call rax; 
0x0000000000461ad8: mov rsi, r12; mov edi, ebp; mov eax, 0xe4; syscall; 
0x00000000004500d6: mov rsi, r12; mov rdi, r13; call rbx; 
0x0000000000452291: mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000044ff93: mov rsi, r12; mov rdi, r15; call rbx; 
0x0000000000407ddd: mov rsi, r13; add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x0000000000407bfd: mov rsi, r13; mov rdi, r12; call rax; 
0x000000000046f452: mov rsi, r13; mov rdi, r12; mov qword ptr [rbp - 0xe8], r8; call rax; 
0x0000000000453d39: mov rsi, r13; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x0000000000452841: mov rsi, r13; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x000000000045dfcb: mov rsi, r13; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x000000000044ffae: mov rsi, r14; mov rdi, r12; call rbx; 
0x000000000040d4f1: mov rsi, r14; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x00000000004580cd: mov rsi, r15; mov byte ptr [rbp - 0x94c], r9b; call rax; 
0x0000000000450058: mov rsi, r15; mov rdi, r12; mov rdx, rbp; call rbx; 
0x0000000000452026: mov rsi, r15; mov rdi, r14; mov dword ptr [rbp - 0x934], r8d; call rax; 
0x000000000040d402: mov rsi, r15; mov rdi, rbp; call qword ptr [rbx + 0x40]; 
0x000000000044fdcd: mov rsi, r8; mov eax, 0xe; syscall; 
0x00000000004541ef: mov rsi, r8; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x000000000045a220: mov rsi, r8; mov rdi, r12; mov dword ptr [rbp - 0x4e8], r9d; call qword ptr [rbx + 0x38]; 
0x000000000045b454: mov rsi, r8; mov rdi, r12; mov dword ptr [rbp - 0x508], r9d; mov qword ptr [rbp - 0x500], r8; call qword ptr [rax + 0x38]; 
0x000000000047d9ba: mov rsi, r8; mov rdi, r15; mov rdx, qword ptr [r10]; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], r10; call rax; 
0x000000000043f509: mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000000407ae2: mov rsi, r9; mov edi, 2; mov eax, 0xe; syscall; 
0x000000000045b022: mov rsi, r9; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x000000000045a59a: mov rsi, r9; mov rdi, r12; call qword ptr [rbx + 0x38]; 
0x000000000043e948: mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000043e9c2: mov rsi, rbp; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000046b261: mov rsi, rbp; syscall; 
0x000000000040c013: mov rsi, rbx; mov edi, 2; mov eax, r10d; syscall; 
0x000000000045a096: mov rsi, rbx; mov rdi, r12; sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x000000000047d834: mov rsi, rdi; test rax, rax; je 0x7d848; mov edi, 1; jmp rax; 
0x000000000043e866: mov rsi, rdx; cmp r8d, 1; ja 0x3e898; mov eax, 4; syscall; 
0x000000000043e8b5: mov rsi, rdx; cmp r8d, 1; ja 0x3e8e8; mov eax, 5; syscall; 
0x0000000000462056: mov rsi, rdx; cmp r8d, 1; ja 0x62088; mov eax, 6; syscall; 
0x00000000004620a8: mov rsi, rdx; mov rdx, rcx; cmp r9d, 1; ja 0x620e0; mov eax, 0x106; syscall; 
0x000000000044fb58: mov rsp, r8; mov rbp, r9; jmp rdx; 
0x000000000047d414: mov rsp, rcx; ret; 
0x000000000042d03b: mov si, word ptr [rsi]; mov cx, word ptr [rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x000000000045dbc0: mov ss, word ptr [rdi + rdi*8 - 1]; inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000042d045: mov word ptr [r9 - 2], cx; ret; 
0x00000000004484f0: mov word ptr [rax + rax*4], fs; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000044fdf6: mov word ptr [rax], es; add byte ptr [rax], al; add rsp, 0x98; ret; 
0x0000000000410194: mov word ptr [rbp + 0x31], es; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ef62]; syscall; 
0x000000000043976c: mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x00000000004390dc: mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000439874: mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x00000000004391c4: mov word ptr [rdi + 0x18], cx; ret; 
0x000000000042a2a7: mov word ptr [rdi + 1], dx; mov word ptr [rdi], cx; ret; 
0x0000000000439638: mov word ptr [rdi + 4], dx; lea rax, [rdi + 5]; ret; 
0x0000000000439018: mov word ptr [rdi + 4], dx; ret; 
0x000000000043968a: mov word ptr [rdi + 8], dx; lea rax, [rdi + 9]; ret; 
0x000000000043905a: mov word ptr [rdi + 8], dx; ret; 
0x000000000043cefa: mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], cx; ret; 
0x000000000043d07f: mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], cx; vzeroupper; ret; 
0x000000000043c1a4: mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x000000000042437c: mov word ptr [rdi - 2], cx; ret; 
0x0000000000424194: mov word ptr [rdi - 2], dx; ret; 
0x0000000000424378: mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x0000000000439c43: mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; lea rax, [rdi + 2]; vzeroupper; ret; 
0x0000000000435a53: mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x0000000000439603: mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; lea rax, [rdi + 2]; ret; 
0x0000000000438fe3: mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; ret; 
0x000000000043bee2: mov word ptr [rdi], cx; mov word ptr [rsi - 2], cx; ret; 
0x000000000042a2ab: mov word ptr [rdi], cx; ret; 
0x000000000043d084: mov word ptr [rdi], cx; vzeroupper; ret; 
0x00000000004395f3: mov word ptr [rdi], dx; lea rax, [rdi + 1]; ret; 
0x0000000000439c33: mov word ptr [rdi], dx; lea rax, [rdi + 1]; vzeroupper; ret; 
0x000000000042a313: mov word ptr [rdi], dx; ret; 
0x0000000000435a43: mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000043eb30: mov word ptr [rdi], es; add al, byte ptr [rax]; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000042d042: mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x000000000043c1a9: mov word ptr [rdi], si; ret; 
0x0000000000438b58: mov word ptr [rdx + 4], ax; lea rax, [rdx + 5]; ret; 
0x0000000000437398: mov word ptr [rdx + 4], ax; mov rax, rdi; ret; 
0x0000000000438b03: mov word ptr [rdx], ax; lea rax, [rdx + 1]; ret; 
0x0000000000438b13: mov word ptr [rdx], ax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; lea rax, [rdx + 2]; ret; 
0x0000000000437363: mov word ptr [rdx], ax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; mov rax, rdi; ret; 
0x0000000000437353: mov word ptr [rdx], ax; mov rax, rdi; ret; 
0x000000000042aa37: mov word ptr [rip + 0x14634900], es; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043bee5: mov word ptr [rsi - 2], cx; ret; 
0x000000000043c1a3: mov word ptr ss:[rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x000000000045e953: movabs al, byte ptr [0x30788348000000]; je 0x5e960; ret; 
0x0000000000440c4c: movabs al, byte ptr [0x4810488948ffffff]; mov dword ptr [rax + 8], edx; ret; 
0x000000000040fa39: movabs al, byte ptr [0x48ffffffff000000]; mov dword ptr [rdi + 0xa8], 0; ret; 
0x0000000000462e8f: movabs al, byte ptr [0x5c415d5b08c48348]; pop r13; ret; 
0x000000000043c677: movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x000000000047cc0c: movabs al, byte ptr [0x7824848b48ffffea]; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000046de9c: movabs al, byte ptr [0x840fc08548000000]; ret 0x22; 
0x000000000046f224: movabs al, byte ptr [0x840fc08548000000]; ret; 
0x0000000000457140: movabs al, byte ptr [0x852c8d4c000000]; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x0000000000429157: movabs al, byte ptr [0x8d49931463490005]; adc al, 0x13; jmp rdx; 
0x000000000046287c: movabs al, byte ptr [0x8e0fc08548fffdcd]; ret; 
0x0000000000468aca: movabs al, byte ptr [0xd7e33d8d48000008]; add al, byte ptr [rax]; movsxd rax, dword ptr [rdi + r12*4]; add rax, rdi; jmp rax; 
0x0000000000409a02: movabs al, byte ptr [0xe08a8948000000]; add byte ptr [rax], al; ret; 
0x000000000041e9ac: movabs al, byte ptr [0xf10eb834900000c]; xchg dl, bl; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000045124a: movabs al, byte ptr [0xf4807e883ffffff]; mov esi, 0x8b4864c0; adc cl, byte ptr [rax - 0x75]; adc cl, byte ptr [rbx + rcx*4 + 0x74]; ret 0x4c40; 
0x0000000000429156: movabs al, byte ptr ss:[0x8d49931463490005]; adc al, 0x13; jmp rdx; 
0x0000000000417c1a: movabs byte ptr [0x3ffb058d48000240], al; add al, byte ptr [rax]; cmovne rax, rdx; ret; 
0x0000000000425c2a: movabs byte ptr [0x49931463490005d3], al; lea edx, [rbx + rdx]; jmp rdx; 
0x000000000048028a: movabs byte ptr [0xd575db8548fff964], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000041ecaa: movabs byte ptr [0xf10eb8349000009], al; xchg ah, bl; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000040dc89: movabs dword ptr [0x854890b0ebffffe4], eax; sal byte ptr [rbp + 0xb], cl; xor eax, eax; ret; 
0x0000000000428e57: movabs dword ptr [0x8d49931463490005], eax; adc al, 0x13; jmp rdx; 
0x0000000000428e56: movabs dword ptr ss:[0x8d49931463490005], eax; adc al, 0x13; jmp rdx; 
0x0000000000428fd7: movabs eax, dword ptr [0x8d49931463490005]; adc al, 0x13; jmp rdx; 
0x000000000046a34b: movabs eax, dword ptr [0x90d8d4890fff98a]; ret 2; 
0x0000000000421ad8: movabs rbp, 0xf66d1ef0f66bdb2; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000421bd8: movabs rsp, 0xf66d1ef0f66bcb2; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042514c: movdqa xmmword ptr [rdi - 0x40], xmm1; sub rdi, 0x40; lea r11, [rip + 0x5de74]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042277c: movdqa xmmword ptr [rdi - 0x40], xmm1; sub rdi, 0x40; lea r11, [rip + 0x60684]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000439760: movdqu xmm0, xmmword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x00000000004390d0: movdqu xmm0, xmmword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x00000000004397a0: movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x13]; ret; 
0x0000000000439110: movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000439100: movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000439780: movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x12]; ret; 
0x00000000004390f0: movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000439820: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x0000000000439190: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000439170: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x00000000004397e0: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; lea rax, [rdi + 0x15]; ret; 
0x0000000000439130: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000439800: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; lea rax, [rdi + 0x16]; ret; 
0x0000000000439150: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000439270: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x00000000004398c0: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x0000000000439210: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x00000000004398e0: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, [rdi + 0x1d]; ret; 
0x0000000000439230: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000439250: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x0000000000439740: movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; lea rax, [rdi + 0xf]; ret; 
0x0000000000439750: movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; lea rax, [rdi + 0x10]; ret; 
0x00000000004390c0: movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x00000000004390b0: movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000439274: movdqu xmm2, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x00000000004398c4: movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x0000000000439214: movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x00000000004398e4: movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, [rdi + 0x1d]; ret; 
0x0000000000439234: movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000439254: movdqu xmm2, xmmword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x000000000042654a: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5ca77]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004263fa: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5cbc7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004262aa: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5cd17]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042615a: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5ce67]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042600a: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5cfb7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425eba: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5d107]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425d6a: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5d257]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425aca: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5d4f7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042597a: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5d647]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042582a: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5d797]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004256da: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5d8e7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042558a: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5da37]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042543a: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5db87]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004252ea: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5dcd7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423b7a: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5f287]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423a2a: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5f3d7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004238da: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5f527]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042378a: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5f677]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042363a: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5f7c7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004234ea: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5f917]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042339a: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5fa67]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004230fa: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5fd07]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422faa: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5fe57]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422e5a: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x5ffa7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422d0a: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x600f7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422bba: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x60247]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422a6a: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x60397]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042291a: movdqu xmmword ptr [r8], xmm0; add rsi, rdx; lea r11, [rip + 0x604e7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004265eb: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5c9d9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042649b: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5cb29]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042634b: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5cc79]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004260ab: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5cf19]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425f5b: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d069]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425e0b: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d1b9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425cbb: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d309]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425c22: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d3a2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425b6b: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d459]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425a1b: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d5a9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004258cb: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d6f9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042577b: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d849]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042562b: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d999]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004254db: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5dae9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042538b: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5dc39]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423c1b: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f1e9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423acb: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f339]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042397b: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f489]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042382b: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f5d9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004236db: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f729]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042358b: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f879]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004232eb: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5fb19]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423252: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5fbb2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042319b: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5fc69]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042304b: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5fdb9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422efb: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5ff09]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422c5b: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x601a9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004229bb: movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x60449]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429cf1: movdqu xmmword ptr [rdi + 0x10], xmm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043ce62: movdqu xmmword ptr [rdi + 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x000000000043992d: movdqu xmmword ptr [rdi + 0x10], xmm2; lea rax, [rdi + 0x1f]; ret; 
0x000000000043927d: movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x000000000042a361: movdqu xmmword ptr [rdi + 0x11], xmm0; lddqu xmm0, xmmword ptr [rsi + 1]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 1], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a2f1: movdqu xmmword ptr [rdi + 0x12], xmm0; lddqu xmm0, xmmword ptr [rsi + 2]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 2], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a281: movdqu xmmword ptr [rdi + 0x13], xmm0; lddqu xmm0, xmmword ptr [rsi + 3]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 3], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a211: movdqu xmmword ptr [rdi + 0x14], xmm0; lddqu xmm0, xmmword ptr [rsi + 4]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 4], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a1a1: movdqu xmmword ptr [rdi + 0x15], xmm0; lddqu xmm0, xmmword ptr [rsi + 5]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a131: movdqu xmmword ptr [rdi + 0x16], xmm0; lddqu xmm0, xmmword ptr [rsi + 6]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 6], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a0c1: movdqu xmmword ptr [rdi + 0x17], xmm0; lddqu xmm0, xmmword ptr [rsi + 7]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 7], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a051: movdqu xmmword ptr [rdi + 0x18], xmm0; lddqu xmm0, xmmword ptr [rsi + 8]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 8], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429fe1: movdqu xmmword ptr [rdi + 0x19], xmm0; lddqu xmm0, xmmword ptr [rsi + 9]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 9], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429f71: movdqu xmmword ptr [rdi + 0x1a], xmm0; lddqu xmm0, xmmword ptr [rsi + 0xa]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xa], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429f01: movdqu xmmword ptr [rdi + 0x1b], xmm0; lddqu xmm0, xmmword ptr [rsi + 0xb]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xb], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429e91: movdqu xmmword ptr [rdi + 0x1c], xmm0; lddqu xmm0, xmmword ptr [rsi + 0xc]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xc], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429e21: movdqu xmmword ptr [rdi + 0x1d], xmm0; lddqu xmm0, xmmword ptr [rsi + 0xd]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429db1: movdqu xmmword ptr [rdi + 0x1e], xmm0; lddqu xmm0, xmmword ptr [rsi + 0xe]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xe], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429d41: movdqu xmmword ptr [rdi + 0x1f], xmm0; lddqu xmm0, xmmword ptr [rsi + 0xf]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xf], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429ce7: movdqu xmmword ptr [rdi + 0x20], xmm0; lddqu xmm0, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi + 0x10], xmm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000429f7f: movdqu xmmword ptr [rdi + 0xa], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429f0f: movdqu xmmword ptr [rdi + 0xb], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429e9f: movdqu xmmword ptr [rdi + 0xc], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429e2f: movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004398cd: movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x000000000043921d: movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000429dbf: movdqu xmmword ptr [rdi + 0xe], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004398ed: movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, [rdi + 0x1d]; ret; 
0x000000000043923d: movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000429d4f: movdqu xmmword ptr [rdi + 0xf], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000043990d: movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, [rdi + 0x1e]; ret; 
0x000000000043925d: movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x000000000042a36f: movdqu xmmword ptr [rdi + 1], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a2ff: movdqu xmmword ptr [rdi + 2], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a28f: movdqu xmmword ptr [rdi + 3], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a21f: movdqu xmmword ptr [rdi + 4], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a1af: movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a13f: movdqu xmmword ptr [rdi + 6], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a0cf: movdqu xmmword ptr [rdi + 7], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a05f: movdqu xmmword ptr [rdi + 8], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429fef: movdqu xmmword ptr [rdi + 9], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000043ce67: movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x000000000043cde4: movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043ce6d: movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x00000000004294db: movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x000000000042954b: movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429c86: movdqu xmmword ptr [rdi - 0x11], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429c06: movdqu xmmword ptr [rdi - 0x12], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429b76: movdqu xmmword ptr [rdi - 0x13], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429af6: movdqu xmmword ptr [rdi - 0x14], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429a76: movdqu xmmword ptr [rdi - 0x15], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004299f6: movdqu xmmword ptr [rdi - 0x16], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429976: movdqu xmmword ptr [rdi - 0x17], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004298f6: movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429876: movdqu xmmword ptr [rdi - 0x19], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004297f6: movdqu xmmword ptr [rdi - 0x1a], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429776: movdqu xmmword ptr [rdi - 0x1b], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004296f6: movdqu xmmword ptr [rdi - 0x1c], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429666: movdqu xmmword ptr [rdi - 0x1d], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004295d6: movdqu xmmword ptr [rdi - 0x1e], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429546: movdqu xmmword ptr [rdi - 0x1f], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004294d1: movdqu xmmword ptr [rdi - 0x20], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x0000000000429c77: movdqu xmmword ptr [rdi - 0x21], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x11]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x11], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429bf7: movdqu xmmword ptr [rdi - 0x22], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x12]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x12], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429b67: movdqu xmmword ptr [rdi - 0x23], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x13]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x13], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429ae7: movdqu xmmword ptr [rdi - 0x24], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x14]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x14], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429a67: movdqu xmmword ptr [rdi - 0x25], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x15]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x15], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004299e7: movdqu xmmword ptr [rdi - 0x26], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x16]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x16], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429967: movdqu xmmword ptr [rdi - 0x27], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x17]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x17], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004298e7: movdqu xmmword ptr [rdi - 0x28], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x18]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004297e7: movdqu xmmword ptr [rdi - 0x2a], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x1a]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1a], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429767: movdqu xmmword ptr [rdi - 0x2b], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x1b]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1b], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004296e7: movdqu xmmword ptr [rdi - 0x2c], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x1c]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1c], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429657: movdqu xmmword ptr [rdi - 0x2d], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x1d]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1d], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004295c7: movdqu xmmword ptr [rdi - 0x2e], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x1e]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1e], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429537: movdqu xmmword ptr [rdi - 0x2f], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x1f]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1f], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004294c7: movdqu xmmword ptr [rdi - 0x30], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x20]; movdqu xmmword ptr [rdi - 0x20], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x0000000000439744: movdqu xmmword ptr [rdi], xmm0; lea rax, [rdi + 0xf]; ret; 
0x0000000000439754: movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; lea rax, [rdi + 0x10]; ret; 
0x00000000004390c4: movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x00000000004397a7: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x13]; ret; 
0x00000000004397c7: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, [rdi + 0x14]; ret; 
0x0000000000439117: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000439107: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000439787: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x12]; ret; 
0x00000000004390f7: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000439828: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x0000000000439848: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x0000000000439198: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000439178: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x000000000043988b: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; lea rax, [rdi + 0x1a]; ret; 
0x00000000004391db: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x00000000004398ab: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x00000000004391fb: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x000000000043986c: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x00000000004391bc: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x00000000004397e8: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; lea rax, [rdi + 0x15]; ret; 
0x0000000000439138: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000439808: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; lea rax, [rdi + 0x16]; ret; 
0x0000000000439158: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000439768: movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x00000000004390d8: movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x000000000043ce5e: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x0000000000439929: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; lea rax, [rdi + 0x1f]; ret; 
0x0000000000439279: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x00000000004398c9: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x0000000000439219: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x00000000004398e9: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, [rdi + 0x1d]; ret; 
0x0000000000439239: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000439909: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, [rdi + 0x1e]; ret; 
0x0000000000439259: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x0000000000429cfa: movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000429d54: movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000439761: movq mm0, qword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x00000000004390d1: movq mm0, qword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x00000000004397a1: movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x13]; ret; 
0x0000000000439111: movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000439101: movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000439781: movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x12]; ret; 
0x00000000004390f1: movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000439821: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x0000000000439191: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000439171: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x00000000004397e1: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; lea rax, [rdi + 0x15]; ret; 
0x0000000000439131: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000439801: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; lea rax, [rdi + 0x16]; ret; 
0x0000000000439151: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000439271: movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x00000000004398c1: movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x0000000000439211: movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x00000000004398e1: movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, [rdi + 0x1d]; ret; 
0x0000000000439231: movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000439251: movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x0000000000439741: movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; lea rax, [rdi + 0xf]; ret; 
0x0000000000439751: movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; lea rax, [rdi + 0x10]; ret; 
0x00000000004390c1: movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x00000000004390b1: movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000439275: movq mm2, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x00000000004398c5: movq mm2, qword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x0000000000439215: movq mm2, qword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x00000000004398e5: movq mm2, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, [rdi + 0x1d]; ret; 
0x0000000000439235: movq mm2, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000439255: movq mm2, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x000000000042654b: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5ca77]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004263fb: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5cbc7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004262ab: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5cd17]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042615b: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5ce67]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042600b: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5cfb7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425ebb: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5d107]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425d6b: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5d257]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425acb: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5d4f7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042597b: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5d647]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042582b: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5d797]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004256db: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5d8e7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042558b: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5da37]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042543b: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5db87]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004252eb: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5dcd7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423b7b: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5f287]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423a2b: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5f3d7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004238db: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5f527]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042378b: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5f677]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042363b: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5f7c7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004234eb: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5f917]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042339b: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5fa67]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004230fb: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5fd07]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422fab: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5fe57]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422e5b: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x5ffa7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422d0b: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x600f7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422bbb: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x60247]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422a6b: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x60397]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042291b: movq qword ptr [r8], mm0; add rsi, rdx; lea r11, [rip + 0x604e7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004265ec: movq qword ptr [r8], mm0; lea r11, [rip + 0x5c9d9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042649c: movq qword ptr [r8], mm0; lea r11, [rip + 0x5cb29]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042634c: movq qword ptr [r8], mm0; lea r11, [rip + 0x5cc79]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004260ac: movq qword ptr [r8], mm0; lea r11, [rip + 0x5cf19]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425f5c: movq qword ptr [r8], mm0; lea r11, [rip + 0x5d069]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425e0c: movq qword ptr [r8], mm0; lea r11, [rip + 0x5d1b9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425cbc: movq qword ptr [r8], mm0; lea r11, [rip + 0x5d309]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425c23: movq qword ptr [r8], mm0; lea r11, [rip + 0x5d3a2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425b6c: movq qword ptr [r8], mm0; lea r11, [rip + 0x5d459]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425a1c: movq qword ptr [r8], mm0; lea r11, [rip + 0x5d5a9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004258cc: movq qword ptr [r8], mm0; lea r11, [rip + 0x5d6f9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042577c: movq qword ptr [r8], mm0; lea r11, [rip + 0x5d849]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042562c: movq qword ptr [r8], mm0; lea r11, [rip + 0x5d999]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004254dc: movq qword ptr [r8], mm0; lea r11, [rip + 0x5dae9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042538c: movq qword ptr [r8], mm0; lea r11, [rip + 0x5dc39]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423c1c: movq qword ptr [r8], mm0; lea r11, [rip + 0x5f1e9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423acc: movq qword ptr [r8], mm0; lea r11, [rip + 0x5f339]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042397c: movq qword ptr [r8], mm0; lea r11, [rip + 0x5f489]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042382c: movq qword ptr [r8], mm0; lea r11, [rip + 0x5f5d9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004236dc: movq qword ptr [r8], mm0; lea r11, [rip + 0x5f729]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042358c: movq qword ptr [r8], mm0; lea r11, [rip + 0x5f879]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004232ec: movq qword ptr [r8], mm0; lea r11, [rip + 0x5fb19]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423253: movq qword ptr [r8], mm0; lea r11, [rip + 0x5fbb2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042319c: movq qword ptr [r8], mm0; lea r11, [rip + 0x5fc69]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042304c: movq qword ptr [r8], mm0; lea r11, [rip + 0x5fdb9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422efc: movq qword ptr [r8], mm0; lea r11, [rip + 0x5ff09]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422c5c: movq qword ptr [r8], mm0; lea r11, [rip + 0x601a9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004229bc: movq qword ptr [r8], mm0; lea r11, [rip + 0x60449]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042654c: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5ca77]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004263fc: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5cbc7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004262ac: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5cd17]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042615c: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5ce67]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042600c: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5cfb7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425ebc: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5d107]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425d6c: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5d257]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425acc: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5d4f7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042597c: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5d647]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042582c: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5d797]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004256dc: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5d8e7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042558c: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5da37]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042543c: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5db87]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004252ec: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5dcd7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423b7c: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5f287]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423a2c: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5f3d7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004238dc: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5f527]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042378c: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5f677]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042363c: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5f7c7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004234ec: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5f917]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042339c: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5fa67]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004230fc: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5fd07]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422fac: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5fe57]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422e5c: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x5ffa7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422d0c: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x600f7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422bbc: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x60247]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422a6c: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x60397]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042291c: movq qword ptr [rax], mm0; add rsi, rdx; lea r11, [rip + 0x604e7]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004265ed: movq qword ptr [rax], mm0; lea r11, [rip + 0x5c9d9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042649d: movq qword ptr [rax], mm0; lea r11, [rip + 0x5cb29]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042634d: movq qword ptr [rax], mm0; lea r11, [rip + 0x5cc79]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004260ad: movq qword ptr [rax], mm0; lea r11, [rip + 0x5cf19]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425f5d: movq qword ptr [rax], mm0; lea r11, [rip + 0x5d069]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425e0d: movq qword ptr [rax], mm0; lea r11, [rip + 0x5d1b9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425cbd: movq qword ptr [rax], mm0; lea r11, [rip + 0x5d309]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425c24: movq qword ptr [rax], mm0; lea r11, [rip + 0x5d3a2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425b6d: movq qword ptr [rax], mm0; lea r11, [rip + 0x5d459]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425a1d: movq qword ptr [rax], mm0; lea r11, [rip + 0x5d5a9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004258cd: movq qword ptr [rax], mm0; lea r11, [rip + 0x5d6f9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042577d: movq qword ptr [rax], mm0; lea r11, [rip + 0x5d849]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042562d: movq qword ptr [rax], mm0; lea r11, [rip + 0x5d999]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004254dd: movq qword ptr [rax], mm0; lea r11, [rip + 0x5dae9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042538d: movq qword ptr [rax], mm0; lea r11, [rip + 0x5dc39]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423c1d: movq qword ptr [rax], mm0; lea r11, [rip + 0x5f1e9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423acd: movq qword ptr [rax], mm0; lea r11, [rip + 0x5f339]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042397d: movq qword ptr [rax], mm0; lea r11, [rip + 0x5f489]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042382d: movq qword ptr [rax], mm0; lea r11, [rip + 0x5f5d9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004236dd: movq qword ptr [rax], mm0; lea r11, [rip + 0x5f729]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042358d: movq qword ptr [rax], mm0; lea r11, [rip + 0x5f879]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004232ed: movq qword ptr [rax], mm0; lea r11, [rip + 0x5fb19]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423254: movq qword ptr [rax], mm0; lea r11, [rip + 0x5fbb2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042319d: movq qword ptr [rax], mm0; lea r11, [rip + 0x5fc69]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042304d: movq qword ptr [rax], mm0; lea r11, [rip + 0x5fdb9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422efd: movq qword ptr [rax], mm0; lea r11, [rip + 0x5ff09]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422c5d: movq qword ptr [rax], mm0; lea r11, [rip + 0x601a9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004229bd: movq qword ptr [rax], mm0; lea r11, [rip + 0x60449]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429cf2: movq qword ptr [rdi + 0x10], mm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043ce63: movq qword ptr [rdi + 0x10], mm0; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x000000000043992e: movq qword ptr [rdi + 0x10], mm2; lea rax, [rdi + 0x1f]; ret; 
0x000000000043927e: movq qword ptr [rdi + 0x10], mm2; ret; 
0x000000000042a362: movq qword ptr [rdi + 0x11], mm0; lddqu xmm0, xmmword ptr [rsi + 1]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 1], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a2f2: movq qword ptr [rdi + 0x12], mm0; lddqu xmm0, xmmword ptr [rsi + 2]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 2], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a282: movq qword ptr [rdi + 0x13], mm0; lddqu xmm0, xmmword ptr [rsi + 3]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 3], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a212: movq qword ptr [rdi + 0x14], mm0; lddqu xmm0, xmmword ptr [rsi + 4]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 4], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a1a2: movq qword ptr [rdi + 0x15], mm0; lddqu xmm0, xmmword ptr [rsi + 5]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a132: movq qword ptr [rdi + 0x16], mm0; lddqu xmm0, xmmword ptr [rsi + 6]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 6], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a0c2: movq qword ptr [rdi + 0x17], mm0; lddqu xmm0, xmmword ptr [rsi + 7]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 7], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a052: movq qword ptr [rdi + 0x18], mm0; lddqu xmm0, xmmword ptr [rsi + 8]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 8], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429fe2: movq qword ptr [rdi + 0x19], mm0; lddqu xmm0, xmmword ptr [rsi + 9]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 9], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429f72: movq qword ptr [rdi + 0x1a], mm0; lddqu xmm0, xmmword ptr [rsi + 0xa]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xa], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429f02: movq qword ptr [rdi + 0x1b], mm0; lddqu xmm0, xmmword ptr [rsi + 0xb]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xb], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429e92: movq qword ptr [rdi + 0x1c], mm0; lddqu xmm0, xmmword ptr [rsi + 0xc]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xc], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429e22: movq qword ptr [rdi + 0x1d], mm0; lddqu xmm0, xmmword ptr [rsi + 0xd]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429db2: movq qword ptr [rdi + 0x1e], mm0; lddqu xmm0, xmmword ptr [rsi + 0xe]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xe], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429d42: movq qword ptr [rdi + 0x1f], mm0; lddqu xmm0, xmmword ptr [rsi + 0xf]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xf], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429ce8: movq qword ptr [rdi + 0x20], mm0; lddqu xmm0, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi + 0x10], xmm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000429f80: movq qword ptr [rdi + 0xa], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429f10: movq qword ptr [rdi + 0xb], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429ea0: movq qword ptr [rdi + 0xc], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429e30: movq qword ptr [rdi + 0xd], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004398ce: movq qword ptr [rdi + 0xd], mm2; lea rax, [rdi + 0x1c]; ret; 
0x000000000043921e: movq qword ptr [rdi + 0xd], mm2; ret; 
0x0000000000429dc0: movq qword ptr [rdi + 0xe], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004398ee: movq qword ptr [rdi + 0xe], mm2; lea rax, [rdi + 0x1d]; ret; 
0x000000000043923e: movq qword ptr [rdi + 0xe], mm2; ret; 
0x0000000000429d50: movq qword ptr [rdi + 0xf], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000043990e: movq qword ptr [rdi + 0xf], mm2; lea rax, [rdi + 0x1e]; ret; 
0x000000000043925e: movq qword ptr [rdi + 0xf], mm2; ret; 
0x000000000042a370: movq qword ptr [rdi + 1], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a300: movq qword ptr [rdi + 2], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a290: movq qword ptr [rdi + 3], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a220: movq qword ptr [rdi + 4], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a1b0: movq qword ptr [rdi + 5], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a140: movq qword ptr [rdi + 6], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a0d0: movq qword ptr [rdi + 7], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000042a060: movq qword ptr [rdi + 8], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429ff0: movq qword ptr [rdi + 9], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000043ce68: movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x000000000043cde5: movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043ce6e: movq qword ptr [rdi + rdx - 0x20], mm0; ret; 
0x00000000004294dc: movq qword ptr [rdi - 0x10], mm0; ret; 
0x000000000042954c: movq qword ptr [rdi - 0x10], mm1; ret; 
0x0000000000429c87: movq qword ptr [rdi - 0x11], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429c07: movq qword ptr [rdi - 0x12], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429b77: movq qword ptr [rdi - 0x13], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429af7: movq qword ptr [rdi - 0x14], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429a77: movq qword ptr [rdi - 0x15], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004299f7: movq qword ptr [rdi - 0x16], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429977: movq qword ptr [rdi - 0x17], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004298f7: movq qword ptr [rdi - 0x18], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429877: movq qword ptr [rdi - 0x19], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004297f7: movq qword ptr [rdi - 0x1a], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429777: movq qword ptr [rdi - 0x1b], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004296f7: movq qword ptr [rdi - 0x1c], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429667: movq qword ptr [rdi - 0x1d], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004295d7: movq qword ptr [rdi - 0x1e], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429547: movq qword ptr [rdi - 0x1f], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004294d2: movq qword ptr [rdi - 0x20], mm0; lddqu xmm0, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x0000000000429c78: movq qword ptr [rdi - 0x21], mm0; lddqu xmm0, xmmword ptr [rsi - 0x11]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x11], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429bf8: movq qword ptr [rdi - 0x22], mm0; lddqu xmm0, xmmword ptr [rsi - 0x12]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x12], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429b68: movq qword ptr [rdi - 0x23], mm0; lddqu xmm0, xmmword ptr [rsi - 0x13]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x13], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429ae8: movq qword ptr [rdi - 0x24], mm0; lddqu xmm0, xmmword ptr [rsi - 0x14]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x14], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429a68: movq qword ptr [rdi - 0x25], mm0; lddqu xmm0, xmmword ptr [rsi - 0x15]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x15], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004299e8: movq qword ptr [rdi - 0x26], mm0; lddqu xmm0, xmmword ptr [rsi - 0x16]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x16], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429968: movq qword ptr [rdi - 0x27], mm0; lddqu xmm0, xmmword ptr [rsi - 0x17]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x17], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004298e8: movq qword ptr [rdi - 0x28], mm0; lddqu xmm0, xmmword ptr [rsi - 0x18]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004297e8: movq qword ptr [rdi - 0x2a], mm0; lddqu xmm0, xmmword ptr [rsi - 0x1a]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1a], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429768: movq qword ptr [rdi - 0x2b], mm0; lddqu xmm0, xmmword ptr [rsi - 0x1b]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1b], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004296e8: movq qword ptr [rdi - 0x2c], mm0; lddqu xmm0, xmmword ptr [rsi - 0x1c]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1c], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429658: movq qword ptr [rdi - 0x2d], mm0; lddqu xmm0, xmmword ptr [rsi - 0x1d]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1d], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004295c8: movq qword ptr [rdi - 0x2e], mm0; lddqu xmm0, xmmword ptr [rsi - 0x1e]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1e], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000429538: movq qword ptr [rdi - 0x2f], mm0; lddqu xmm0, xmmword ptr [rsi - 0x1f]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1f], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004294c8: movq qword ptr [rdi - 0x30], mm0; lddqu xmm0, xmmword ptr [rsi - 0x20]; movdqu xmmword ptr [rdi - 0x20], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x000000000042514d: movq qword ptr [rdi - 0x40], mm1; sub rdi, 0x40; lea r11, [rip + 0x5de74]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042277d: movq qword ptr [rdi - 0x40], mm1; sub rdi, 0x40; lea r11, [rip + 0x60684]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000439745: movq qword ptr [rdi], mm0; lea rax, [rdi + 0xf]; ret; 
0x0000000000439755: movq qword ptr [rdi], mm0; mov byte ptr [rdi + 0x10], dh; lea rax, [rdi + 0x10]; ret; 
0x00000000004390c5: movq qword ptr [rdi], mm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x00000000004397a8: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x13]; ret; 
0x00000000004397c8: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, [rdi + 0x14]; ret; 
0x0000000000439118: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000439108: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000439788: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x12]; ret; 
0x00000000004390f8: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000439829: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x0000000000439849: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x0000000000439199: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000439179: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x000000000043988c: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; lea rax, [rdi + 0x1a]; ret; 
0x00000000004391dc: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x00000000004398ac: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x00000000004391fc: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x000000000043986d: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x00000000004391bd: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x00000000004397e9: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0xe], rcx; lea rax, [rdi + 0x15]; ret; 
0x0000000000439139: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000439809: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0xf], rcx; lea rax, [rdi + 0x16]; ret; 
0x0000000000439159: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000439769: movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x00000000004390d9: movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; ret; 
0x000000000043ce5f: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x000000000043992a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; lea rax, [rdi + 0x1f]; ret; 
0x000000000043927a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x00000000004398ca: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x000000000043921a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x00000000004398ea: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, [rdi + 0x1d]; ret; 
0x000000000043923a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x000000000043990a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, [rdi + 0x1e]; ret; 
0x000000000043925a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x0000000000429cfb: movq qword ptr [rdi], mm0; ret; 
0x0000000000429d55: movq qword ptr [rdi], mm1; ret; 
0x0000000000418588: movsb byte ptr [rdi], byte ptr [rsi]; add al, byte ptr ds:[rax]; lea rax, [rip + 0x23edd]; cmove rax, rdx; ret; 
0x0000000000428cd7: movsb byte ptr [rdi], byte ptr [rsi]; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043c10a: movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x0000000000470493: movsb byte ptr [rdi], byte ptr [rsi]; out 0xff, eax; jmp qword ptr [rsi + 0xf]; 
0x000000000043c0fc: movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000412217: movsd dword ptr [rdi], dword ptr [rsi]; or dword ptr [rax], eax; lea rax, [rip + 0x344f]; mov qword ptr [rip + 0x9a558], rax; ret; 
0x0000000000412225: movsd dword ptr [rdi], dword ptr [rsi]; or dword ptr [rax], eax; ret; 
0x0000000000476f52: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000047ab98: movss xmm0, dword ptr [rip + 0x21a98]; divss xmm0, dword ptr [rip + 0x21a94]; ret; 
0x000000000046c739: movsx eax, byte ptr [rsi]; neg eax; ret; 
0x00000000004704e7: movsx ecx, dl; cmp edi, ecx; ja 0x704d0; mov eax, r8d; ret; 
0x000000000047b14e: movsxd rax, dword ptr [r13 + rdx*4]; add rax, r13; jmp rax; 
0x000000000047bb76: movsxd rax, dword ptr [r14 + rax*4]; add rax, r14; jmp rax; 
0x000000000047b18b: movsxd rax, dword ptr [r14 + rdx*4]; add rax, r14; jmp rax; 
0x000000000047b8e9: movsxd rax, dword ptr [r15 + rax*4]; add rax, r15; jmp rax; 
0x000000000040f4bc: movsxd rax, dword ptr [rax - 0x77]; add ebx, dword ptr [rbx + 0x5d]; pop r12; ret; 
0x00000000004731e7: movsxd rax, dword ptr [rax]; adc dh, byte ptr [rbx - 0xc]; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000000440b71: movsxd rax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000440b71: movsxd rax, dword ptr [rax]; add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x40b80; ret; 
0x00000000004740b9: movsxd rax, dword ptr [rbp + 2]; add al, ch; in eax, dx; clc; jmp qword ptr [rsi + 0x66]; 
0x0000000000442d30: movsxd rax, dword ptr [rbp + rax*4]; add rax, rbp; jmp rax; 
0x000000000047b14f: movsxd rax, dword ptr [rbp + rdx*4]; add rax, r13; jmp rax; 
0x0000000000442ce9: movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x000000000045cb9b: movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000043c15d: movsxd rax, dword ptr [rcx]; add byte ptr [rax], al; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000468ad5: movsxd rax, dword ptr [rdi + r12*4]; add rax, rdi; jmp rax; 
0x000000000047b8ea: movsxd rax, dword ptr [rdi + rax*4]; add rax, r15; jmp rax; 
0x000000000040df2a: movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000468ad6: movsxd rax, dword ptr [rdi]; add rax, rdi; jmp rax; 
0x0000000000401afe: movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000043e478: movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x0000000000468228: movsxd rax, dword ptr [rsi + r12*4]; add rax, rsi; jmp rax; 
0x000000000047bb77: movsxd rax, dword ptr [rsi + rax*4]; add rax, r14; jmp rax; 
0x000000000043d2ba: movsxd rax, dword ptr [rsi + rdi*4]; add rax, rsi; jmp rax; 
0x000000000047b18c: movsxd rax, dword ptr [rsi + rdx*4]; add rax, r14; jmp rax; 
0x000000000043d382: movsxd rax, dword ptr [rsi + rdx*4]; add rax, rsi; jmp rax; 
0x0000000000468229: movsxd rax, dword ptr [rsi]; add rax, rsi; jmp rax; 
0x0000000000441bf9: movsxd rax, dword ptr es:[rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000043bd2b: movsxd rax, ecx; ret; 
0x00000000004328fb: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg ah, bl; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000434548: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg bh, bh; add eax, 0x83480000; ret 0x4910; 
0x0000000000433d68: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg bh, bl; or eax, 0x83480000; ret 0x4910; 
0x0000000000434158: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg bh, ch; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000433978: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg bh, cl; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043345b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rax], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000432c3b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rcx - 0x7cb80000], bl; ret 0xe910; 
0x000000000043241b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rdx - 0x7cb80000], bh; ret 0xe910; 
0x0000000000433b17: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rax], dh; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000432f7b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000043275b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rcx], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000431f3b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rdx - 0x7cb80000], bl; ret 0xe910; 
0x000000000043311b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rbx + rax - 0x7cb80000], bh; ret 0xe910; 
0x0000000000434008: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rdi], bh; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000433828: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rdi], bl; adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000434938: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rdi], cl; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043227b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rdx + rdx], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004323b1: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], ah; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004330b1: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], ah; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000432bd1: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], al; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000433f09: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], bh; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000434839: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], cl; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004333f1: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg dh, ah; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004326f1: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg dh, ah; or eax, 0x83480000; ret 0x4910; 
0x0000000000432211: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg dh, al; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000432f11: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg dh, al; add eax, 0x83480000; ret 0x4910; 
0x0000000000434059: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg dh, ch; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000433879: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg dh, cl; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000046cb72: movsxd rbp, dword ptr [rip + 0x3349646c]; add byte ptr [rax + 9], cl; ret 0x2875; 
0x000000000043bdd3: movsxd rbx, ebx; cmp cl, byte ptr [rax + 0x63]; leave; add rax, rcx; sub rax, rdi; ret; 
0x0000000000420d0d: movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000438e79: movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000420d0e: movsxd rcx, dword ptr [rbx + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000438e7a: movsxd rcx, dword ptr [rbx + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000044ee38: movsxd rcx, dword ptr [rdi + r9*4]; add rcx, rdi; jmp rcx; 
0x000000000044ee39: movsxd rcx, dword ptr [rdi + rcx*4]; add rcx, rdi; jmp rcx; 
0x0000000000451840: movsxd rcx, dword ptr [rdx + rcx*4]; add rcx, rdx; jmp rcx; 
0x000000000043d2f0: movsxd rcx, dword ptr [rsi + rax*4]; add rcx, rsi; jmp rcx; 
0x0000000000402780: movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000043bd5b: movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000000406f92: movsxd rdi, dword ptr [r10 + r8*4]; add rdi, r10; jmp rdi; 
0x0000000000406f93: movsxd rdi, dword ptr [rdx + rax*4]; add rdi, r10; jmp rdi; 
0x0000000000480363: movsxd rdi, ecx; jmp qword ptr [rsi + 0x2e]; 
0x000000000044f968: movsxd rdi, edi; mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000046246a: movsxd rdi, edx; dec dword ptr [rax - 0x77]; ret 0x8b48; 
0x00000000004224af: movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004224b0: movsxd rdx, dword ptr [rbx + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000045d237: movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x0000000000469eb0: movsxd rdx, ebx; mov edi, dword ptr [rbp - 0x460]; lea rsi, [rbp - 0x430]; mov eax, 0x14; syscall; 
0x000000000045dfc9: movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x000000000043b20c: movsxd rsi, esi; ret 0x7520; 
0x000000000047ab99: movups xmm0, xmmword ptr [rip + 0x21a98]; divss xmm0, dword ptr [rip + 0x21a94]; ret; 
0x000000000043c097: movups xmm0, xmmword ptr [rsi]; movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000043c09a: movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000043c218: movups xmm3, xmmword ptr [rsi + rdx - 0x20]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm1; movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000043c2bf: movups xmmword ptr [r11], xmm4; ret; 
0x000000000043c346: movups xmmword ptr [r11], xmm8; ret; 
0x000000000043c347: movups xmmword ptr [rbx], xmm0; ret; 
0x000000000043c2c0: movups xmmword ptr [rbx], xmm4; ret; 
0x000000000043c2b2: movups xmmword ptr [rcx - 0x10], xmm6; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000043c2b6: movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000043c2bb: movups xmmword ptr [rcx - 0x30], xmm0; movups xmmword ptr [r11], xmm4; ret; 
0x000000000043c2ba: movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000043c2af: movups xmmword ptr [rcx], xmm5; movups xmmword ptr [rcx - 0x10], xmm6; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000043c220: movups xmmword ptr [rdi + 0x10], xmm1; movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000043c33a: movups xmmword ptr [rdi + 0x10], xmm5; movups xmmword ptr [rdi + 0x20], xmm6; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x000000000043c33e: movups xmmword ptr [rdi + 0x20], xmm6; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x000000000043c342: movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x000000000043c0a2: movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000043c224: movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000043c1f7: movups xmmword ptr [rdi + rdx - 0x10], xmm4; movups xmmword ptr [rdi + rdx - 0x20], xmm5; movups xmmword ptr [rdi + rdx - 0x30], xmm6; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x000000000043c229: movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000043c1fc: movups xmmword ptr [rdi + rdx - 0x20], xmm5; movups xmmword ptr [rdi + rdx - 0x30], xmm6; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x000000000043c201: movups xmmword ptr [rdi + rdx - 0x30], xmm6; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x000000000043c206: movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x000000000043c21d: movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm1; movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000043c09f: movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000043c337: movups xmmword ptr [rdi], xmm4; movups xmmword ptr [rdi + 0x10], xmm5; movups xmmword ptr [rdi + 0x20], xmm6; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x0000000000462131: movzx eax, al; add rsp, 0x58; ret; 
0x000000000047afd4: movzx eax, al; movsxd rax, dword ptr [rbp + rax*4]; add rax, rbp; jmp rax; 
0x000000000045cb97: movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000040df26: movzx eax, al; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x000000000045cae7: movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000040dcb0: movzx eax, al; neg eax; ret; 
0x0000000000472ba8: movzx eax, al; pop rbp; pop r12; ret; 
0x0000000000420603: movzx eax, al; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x000000000041b5e2: movzx eax, byte ptr [rax + rcx + 0x40]; movzx edx, byte ptr [rdx + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000041b4fc: movzx eax, byte ptr [rax + rcx + 0x60]; movzx edx, byte ptr [rdx + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000000419f7d: movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x000000000041b497: movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000041b4c0: movzx eax, byte ptr [rax + rdi + 0x20]; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000041b4e0: movzx eax, byte ptr [rax + rdi + 0x40]; movzx edx, byte ptr [rdx + rdi + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000041f8c7: movzx eax, byte ptr [rax + rdi]; movzx edx, byte ptr [rdx + rdi]; sub eax, edx; vzeroupper; ret; 
0x000000000040fe9b: movzx eax, byte ptr [rax - 1]; and dword ptr [rbx], 0xffffffef; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000047dd31: movzx eax, byte ptr [rax]; add rsp, 0x18; pop rbx; pop rbp; mov eax, r8d; ret; 
0x000000000040d7ac: movzx eax, byte ptr [rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000040d78a: movzx eax, byte ptr [rax]; ret; 
0x000000000045a8ba: movzx eax, byte ptr [rcx + rax]; lea rcx, [rip + 0x4f4bb]; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000459e02: movzx eax, byte ptr [rcx + rax]; lea rcx, [rip + 0x4ff73]; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x000000000045abd3: movzx eax, byte ptr [rdi + rax]; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x0000000000420cb4: movzx eax, byte ptr [rdi + rcx + 0x20]; movzx edx, byte ptr [rsi + rcx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000420cd4: movzx eax, byte ptr [rdi + rcx + 0x40]; movzx edx, byte ptr [rsi + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000420c9a: movzx eax, byte ptr [rdi + rcx + 0x60]; movzx edx, byte ptr [rsi + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x000000000041e834: movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x0000000000420a24: movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000041b334: movzx eax, byte ptr [rdi + rdx + 0x20]; movzx edx, byte ptr [rsi + rdx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000041b354: movzx eax, byte ptr [rdi + rdx + 0x40]; movzx edx, byte ptr [rsi + rdx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000041b374: movzx eax, byte ptr [rdi + rdx + 0x60]; movzx edx, byte ptr [rsi + rdx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000000434b98: movzx eax, byte ptr [rdi + rdx]; lea rdx, [rip + 0x5293d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000433528: movzx eax, byte ptr [rdi + rdx]; lea rdx, [rip + 0x53fad]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000431978: movzx eax, byte ptr [rdi + rdx]; lea rdx, [rip + 0x55b5d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000042f828: movzx eax, byte ptr [rdi + rdx]; lea rdx, [rip + 0x57cad]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000419e0f: movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; ret; 
0x000000000041b316: movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x0000000000419da8: movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000043b230: movzx eax, byte ptr [rdi - 0x10]; movzx edx, byte ptr [rsi - 0x10]; sub eax, edx; ret; 
0x000000000043b290: movzx eax, byte ptr [rdi - 0xa]; movzx edx, byte ptr [rsi - 0xa]; sub eax, edx; ret; 
0x000000000043b280: movzx eax, byte ptr [rdi - 0xb]; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x000000000043b270: movzx eax, byte ptr [rdi - 0xc]; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x000000000043b260: movzx eax, byte ptr [rdi - 0xd]; movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x000000000043b250: movzx eax, byte ptr [rdi - 0xe]; movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x000000000043b240: movzx eax, byte ptr [rdi - 0xf]; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x000000000043b5ea: movzx eax, byte ptr [rdi - 1]; cmp al, byte ptr [rsi - 1]; jne 0x3b765; xor eax, eax; ret; 
0x0000000000421bc0: movzx eax, byte ptr [rdi - 1]; movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x0000000000421973: movzx eax, byte ptr [rdi - 1]; movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x000000000043b217: movzx eax, byte ptr [rdi - 9]; movzx edx, byte ptr [rsi - 9]; sub eax, edx; ret; 
0x0000000000434bb3: movzx eax, byte ptr [rdi]; lea rdx, [rip + 0x52923]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000433543: movzx eax, byte ptr [rdi]; lea rdx, [rip + 0x53f93]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000431993: movzx eax, byte ptr [rdi]; lea rdx, [rip + 0x55b43]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000042f843: movzx eax, byte ptr [rdi]; lea rdx, [rip + 0x57c93]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000420aa0: movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x00000000004205e0: movzx eax, byte ptr [rdi]; movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x0000000000419dc3: movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000041faa3: movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x000000000045a2e2: movzx eax, byte ptr [rsi + rax]; lea rsi, [rip + 0x4fe93]; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x0000000000453f92: movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000043d350: movzx eax, cl; pop rbx; ret; 
0x000000000043ce0d: movzx eax, dh; mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x0000000000446231: movzx eax, dh; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000000043d300: movzx eax, dl; and dh, 0xf0; mov edx, 0; pop rbx; cmove rax, rdx; ret; 
0x000000000043ce0c: movzx eax, sil; mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x0000000000446230: movzx eax, sil; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000000043b86a: movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x3b860; ret; 
0x000000000043b91a: movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x3b910; ret; 
0x000000000043bbda: movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x3bbd0; sub rax, 1; ret; 
0x0000000000419da4: movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000041a066: movzx ecx, byte ptr [rsi + rdx]; test al, al; jne 0x1a050; xor eax, eax; sub eax, ecx; ret; 
0x000000000041b617: movzx ecx, byte ptr [rsi + rdx]; test eax, eax; jne 0x1b600; sub eax, ecx; vzeroupper; ret; 
0x000000000041fa7c: movzx ecx, byte ptr [rsi + rdx]; test eax, eax; jne 0x1fa60; sub eax, ecx; vzeroupper; ret; 
0x0000000000421bc4: movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x000000000043c178: movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x0000000000419dc0: movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000041faa0: movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x0000000000420aa3: movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000043c19c: movzx ecx, word ptr [rsi + rdx - 2]; movzx esi, word ptr [rsi]; mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x0000000000439c40: movzx ecx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; lea rax, [rdi + 2]; vzeroupper; ret; 
0x0000000000435a50: movzx ecx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x000000000040798c: movzx edx, byte ptr [rdi]; test dl, dl; jne 0x796c; ret; 
0x000000000041b5e7: movzx edx, byte ptr [rdx + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000041b501: movzx edx, byte ptr [rdx + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000000419f81: movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x000000000041b49b: movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000041b4c5: movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000041b4e5: movzx edx, byte ptr [rdx + rdi + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000041f8cb: movzx edx, byte ptr [rdx + rdi]; sub eax, edx; vzeroupper; ret; 
0x000000000043ba8a: movzx edx, byte ptr [rsi + rax + 3]; test dl, dl; jne 0x3ba80; lea rax, [rcx - 1]; ret; 
0x0000000000420cb9: movzx edx, byte ptr [rsi + rcx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000420cd9: movzx edx, byte ptr [rsi + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000420c9f: movzx edx, byte ptr [rsi + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x000000000043374f: movzx edx, byte ptr [rsi + rcx]; lea rcx, [rip + 0x53d86]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000431c1f: movzx edx, byte ptr [rsi + rcx]; lea rcx, [rip + 0x558b6]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000041e838: movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x0000000000420a28: movzx edx, byte ptr [rsi + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000041b339: movzx edx, byte ptr [rsi + rdx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000041b359: movzx edx, byte ptr [rsi + rdx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000041b379: movzx edx, byte ptr [rsi + rdx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000000419e13: movzx edx, byte ptr [rsi + rdx]; sub eax, edx; ret; 
0x000000000041b31a: movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x000000000041f663: movzx edx, byte ptr [rsi + rdx]; test r8d, r8d; je 0x1f66d; xchg eax, edx; sub eax, edx; ret; 
0x000000000043b234: movzx edx, byte ptr [rsi - 0x10]; sub eax, edx; ret; 
0x000000000043b294: movzx edx, byte ptr [rsi - 0xa]; sub eax, edx; ret; 
0x000000000043b284: movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x000000000043b274: movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x000000000043b264: movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x000000000043b254: movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x000000000043b244: movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x0000000000429ca0: movzx edx, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000421977: movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x000000000043b21b: movzx edx, byte ptr [rsi - 9]; sub eax, edx; ret; 
0x000000000042a380: movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x00000000004205e3: movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x000000000043d390: movzx edx, cl; mov eax, 0; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x000000000047b14b: movzx edx, dl; movsxd rax, dword ptr [r13 + rdx*4]; add rax, r13; jmp rax; 
0x000000000047b188: movzx edx, dl; movsxd rax, dword ptr [r14 + rdx*4]; add rax, r14; jmp rax; 
0x0000000000420609: movzx edx, dl; sub eax, edx; ret; 
0x0000000000429c20: movzx edx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x0000000000439c30: movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; lea rax, [rdi + 1]; vzeroupper; ret; 
0x000000000042a310: movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000435a40: movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000040f5cd: movzx esi, byte ptr [r12]; lea r15, [r12 + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x000000000043d846: movzx esi, byte ptr [r9 + rdx]; mov rdi, rax; mov eax, dword ptr [rcx + rax*4]; sub eax, dword ptr [rcx + rsi*4]; je 0x3d838; ret; 
0x000000000043d847: movzx esi, byte ptr [rcx + rdx]; mov rdi, rax; mov eax, dword ptr [rcx + rax*4]; sub eax, dword ptr [rcx + rsi*4]; je 0x3d838; ret; 
0x000000000040f5ce: movzx esi, byte ptr [rsp]; lea r15, [r12 + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x000000000043c1a1: movzx esi, word ptr [rsi]; mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x000000000040d7ab: movzx r8, byte ptr [rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000047dd30: movzx r8d, byte ptr [rax]; add rsp, 0x18; pop rbx; pop rbp; mov eax, r8d; ret; 
0x0000000000460057: mul byte ptr [rsi + 0xf]; outsd dx, dword ptr [rsi]; push rdi; xor byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret; 
0x000000000043e7f7: neg eax; mov dword ptr fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000043e887: neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000043eaa7: neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x000000000040dcb3: neg eax; ret; 
0x000000000046a7fc: neg eax; test bl, bl; cmove r8, rax; mov rax, r8; pop rbx; ret; 
0x000000000046a7fb: neg rax; test bl, bl; cmove r8, rax; mov rax, r8; pop rbx; ret; 
0x00000000004614f8: nop dword ptr [rax + rax]; add rax, 3; ret; 
0x000000000045da0b: nop dword ptr [rax + rax]; add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000047f59b: nop dword ptr [rax + rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000480533: nop dword ptr [rax + rax]; add rsp, 8; ret; 
0x000000000041fe88: nop dword ptr [rax + rax]; bsf eax, eax; lea rax, [rax + rdi + 0x10]; ret; 
0x000000000045e923: nop dword ptr [rax + rax]; call 0xc130; mov esi, r15d; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x0000000000412813: nop dword ptr [rax + rax]; call rax; 
0x0000000000439fb8: nop dword ptr [rax + rax]; lea rax, [rdi + 0xa]; ret; 
0x0000000000439fc8: nop dword ptr [rax + rax]; lea rax, [rdi + 0xb]; ret; 
0x0000000000439fd8: nop dword ptr [rax + rax]; lea rax, [rdi + 0xc]; ret; 
0x0000000000439fe8: nop dword ptr [rax + rax]; lea rax, [rdi + 0xd]; ret; 
0x0000000000439ff8: nop dword ptr [rax + rax]; lea rax, [rdi + 0xe]; ret; 
0x0000000000439f48: nop dword ptr [rax + rax]; lea rax, [rdi + 2]; ret; 
0x0000000000439f58: nop dword ptr [rax + rax]; lea rax, [rdi + 3]; ret; 
0x0000000000439f68: nop dword ptr [rax + rax]; lea rax, [rdi + 4]; ret; 
0x0000000000439f78: nop dword ptr [rax + rax]; lea rax, [rdi + 5]; ret; 
0x0000000000439f88: nop dword ptr [rax + rax]; lea rax, [rdi + 6]; ret; 
0x0000000000439f98: nop dword ptr [rax + rax]; lea rax, [rdi + 8]; ret; 
0x0000000000439fa8: nop dword ptr [rax + rax]; lea rax, [rdi + 9]; ret; 
0x0000000000472828: nop dword ptr [rax + rax]; lea rax, [rip + 0x3ce89]; mov qword ptr [rip + 0x3ce6a], rax; ret; 
0x00000000004395d8: nop dword ptr [rax + rax]; mov byte ptr [rdi], dh; lea rax, [rdi]; ret; 
0x0000000000438fb8: nop dword ptr [rax + rax]; mov byte ptr [rdi], dh; ret; 
0x00000000004395fb: nop dword ptr [rax + rax]; mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; lea rax, [rdi + 2]; ret; 
0x0000000000417a88: nop dword ptr [rax + rax]; mov eax, 0x16; pop rbx; ret; 
0x000000000043f8db: nop dword ptr [rax + rax]; mov eax, 0x1c; syscall; 
0x000000000043f8db: nop dword ptr [rax + rax]; mov eax, 0x1c; syscall; cmp rax, -0xfff; jae 0x3f8f0; ret; 
0x000000000046200b: nop dword ptr [rax + rax]; mov eax, 0x66; syscall; 
0x000000000046200b: nop dword ptr [rax + rax]; mov eax, 0x66; syscall; ret; 
0x0000000000462028: nop dword ptr [rax + rax]; mov eax, 0x68; syscall; 
0x0000000000462028: nop dword ptr [rax + rax]; mov eax, 0x68; syscall; ret; 
0x0000000000462018: nop dword ptr [rax + rax]; mov eax, 0x6b; syscall; 
0x0000000000462018: nop dword ptr [rax + rax]; mov eax, 0x6b; syscall; ret; 
0x0000000000462038: nop dword ptr [rax + rax]; mov eax, 0x6c; syscall; 
0x0000000000462038: nop dword ptr [rax + rax]; mov eax, 0x6c; syscall; ret; 
0x000000000043f8ab: nop dword ptr [rax + rax]; mov eax, 0xa; syscall; 
0x000000000043f8ab: nop dword ptr [rax + rax]; mov eax, 0xa; syscall; cmp rax, -0xfff; jae 0x3f8c0; ret; 
0x000000000040af68: nop dword ptr [rax + rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x000000000040f4f8: nop dword ptr [rax + rax]; mov eax, 0xffffffff; ret; 
0x000000000043e273: nop dword ptr [rax + rax]; mov eax, edx; syscall; 
0x0000000000462333: nop dword ptr [rax + rax]; mov ecx, eax; and ecx, dword ptr [rsi + 0x10]; lea rcx, [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000438feb: nop dword ptr [rax + rax]; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x0000000000441518: nop dword ptr [rax + rax]; mov qword ptr [rdi + 0x20], rsi; ret; 
0x000000000047cef8: nop dword ptr [rax + rax]; mov qword ptr [rdi + 0x98], rsi; ret; 
0x000000000040fd38: nop dword ptr [rax + rax]; mov qword ptr [rdi + 0xa0], -1; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000047ceb3: nop dword ptr [rax + rax]; mov qword ptr [rdi + rsi*8], rdx; add rsp, 8; ret; 
0x0000000000473908: nop dword ptr [rax + rax]; mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000000440b3b: nop dword ptr [rax + rax]; mov r10, rcx; mov eax, 0x19; syscall; 
0x000000000043e893: nop dword ptr [rax + rax]; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000046224b: nop dword ptr [rax + rax]; mov rax, -0x40; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x000000000046b4a3: nop dword ptr [rax + rax]; mov rax, -0x40; pop rbx; mov eax, dword ptr fs:[rax]; ret; 
0x000000000044f95b: nop dword ptr [rax + rax]; mov rax, -0x58; movsxd rdi, edi; mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000040fde8: nop dword ptr [rax + rax]; mov rax, -1; ret; 
0x000000000044f978: nop dword ptr [rax + rax]; mov rax, -8; add rax, qword ptr fs:[0]; ret; 
0x0000000000461528: nop dword ptr [rax + rax]; mov rax, 2; ret; 
0x0000000000461538: nop dword ptr [rax + rax]; mov rax, 3; ret; 
0x0000000000461548: nop dword ptr [rax + rax]; mov rax, 4; ret; 
0x0000000000461558: nop dword ptr [rax + rax]; mov rax, 5; ret; 
0x0000000000461568: nop dword ptr [rax + rax]; mov rax, 6; ret; 
0x0000000000461578: nop dword ptr [rax + rax]; mov rax, 7; ret; 
0x00000000004083b3: nop dword ptr [rax + rax]; mov rax, qword ptr [rax + 0x18]; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; call rax; 
0x000000000046cdf8: nop dword ptr [rax + rax]; mov rax, qword ptr [rax + 8]; ret; 
0x00000000004115cb: nop dword ptr [rax + rax]; mov rax, qword ptr [rdi + 0x28]; cmp qword ptr [rdi + 0x10], rax; cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x000000000045e94b: nop dword ptr [rax + rax]; mov rax, qword ptr [rdi + 0xa0]; cmp qword ptr [rax + 0x30], 0; je 0x5e960; ret; 
0x000000000047cf08: nop dword ptr [rax + rax]; mov rax, qword ptr [rdi + 0xa0]; ret; 
0x000000000047cf58: nop dword ptr [rax + rax]; mov rax, qword ptr [rdi + 0xa8]; ret; 
0x000000000047cf18: nop dword ptr [rax + rax]; mov rax, qword ptr [rdi + 0xb8]; ret; 
0x000000000041167b: nop dword ptr [rax + rax]; mov rax, qword ptr [rdi]; cmp rax, 0x2000000; jbe 0x11690; ret; 
0x000000000041173b: nop dword ptr [rax + rax]; mov rax, qword ptr [rdi]; cmp rax, 0x408; jbe 0x11750; ret; 
0x00000000004117ab: nop dword ptr [rax + rax]; mov rax, qword ptr [rdi]; cmp rax, 0xa0; jbe 0x117c0; ret; 
0x00000000004116fb: nop dword ptr [rax + rax]; mov rax, qword ptr [rdi]; mov dword ptr [rip + 0x9b027], 1; mov qword ptr [rip + 0x9afec], rax; ret; 
0x00000000004116e8: nop dword ptr [rax + rax]; mov rax, qword ptr [rdi]; mov dword ptr [rip + 0x9da9b], eax; ret; 
0x0000000000411798: nop dword ptr [rax + rax]; mov rax, qword ptr [rdi]; mov qword ptr [rip + 0x9afbe], rax; ret; 
0x000000000041172b: nop dword ptr [rax + rax]; mov rax, qword ptr [rdi]; mov qword ptr [rip + 0x9afde], rax; ret; 
0x0000000000411718: nop dword ptr [rax + rax]; mov rax, qword ptr [rdi]; mov qword ptr [rip + 0x9aff6], rax; ret; 
0x00000000004442d8: nop dword ptr [rax + rax]; mov rax, qword ptr [rip + 0x6b101]; ret; 
0x00000000004442c8: nop dword ptr [rax + rax]; mov rax, qword ptr [rip + 0x6b109]; ret; 
0x000000000043f74b: nop dword ptr [rax + rax]; mov rax, qword ptr [rip + 0x6d9c1]; test rax, rax; je 0x3f75d; ret; 
0x00000000004619bb: nop dword ptr [rax + rax]; mov rax, r8; shr rax, 2; vzeroupper; ret; 
0x0000000000460878: nop dword ptr [rax + rax]; mov rax, r8; vzeroupper; ret; 
0x0000000000410c68: nop dword ptr [rax + rax]; mov rax, rdi; ret; 
0x000000000043966b: nop dword ptr [rax + rax]; mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; lea rax, [rdi + 8]; ret; 
0x000000000043904b: nop dword ptr [rax + rax]; mov rcx, qword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x000000000043ea9b: nop dword ptr [rax + rax]; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x000000000047db73: nop dword ptr [rax + rax]; mov rdx, qword ptr [rdx]; mov qword ptr [r8], rdx; add rsp, 8; ret; 
0x000000000043902b: nop dword ptr [rax + rax]; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x000000000044ff8b: nop dword ptr [rax + rax]; mov rdx, rbp; mov rsi, r12; mov rdi, r15; call rbx; 
0x0000000000416fa8: nop dword ptr [rax + rax]; mov rsi, qword ptr [rsp + 0x28]; mov rdi, r12; call rax; 
0x0000000000450053: nop dword ptr [rax + rax]; mov rsi, r15; mov rdi, r12; mov rdx, rbp; call rbx; 
0x000000000043b28b: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi - 0xa]; movzx edx, byte ptr [rsi - 0xa]; sub eax, edx; ret; 
0x000000000043b27b: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi - 0xb]; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x000000000043b26b: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi - 0xc]; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x000000000043b25b: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi - 0xd]; movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x000000000043b24b: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi - 0xe]; movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x000000000043b23b: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi - 0xf]; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x0000000000420a9b: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000000435a4b: nop dword ptr [rax + rax]; movzx ecx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x000000000043f8d3: nop dword ptr [rax + rax]; nop dword ptr [rax + rax]; mov eax, 0x1c; syscall; 
0x0000000000462003: nop dword ptr [rax + rax]; nop dword ptr [rax + rax]; mov eax, 0x66; syscall; 
0x000000000043f8a3: nop dword ptr [rax + rax]; nop dword ptr [rax + rax]; mov eax, 0xa; syscall; 
0x0000000000478785: nop dword ptr [rax + rax]; nop dword ptr [rax]; mov eax, 0x26; syscall; 
0x000000000044fb64: nop dword ptr [rax + rax]; nop dword ptr [rax]; mov rax, 0xf; syscall; 
0x000000000047cec4: nop dword ptr [rax + rax]; nop dword ptr [rax]; mov rax, qword ptr [rdi + 0x98]; ret; 
0x0000000000410c34: nop dword ptr [rax + rax]; nop dword ptr [rax]; mov rax, qword ptr [rip + 0x9b4d9]; ret; 
0x000000000043bc05: nop dword ptr [rax + rax]; nop dword ptr [rax]; xor eax, eax; ret; 
0x0000000000439f37: nop dword ptr [rax + rax]; nop; lea rax, [rdi + 1]; ret; 
0x0000000000439f27: nop dword ptr [rax + rax]; nop; lea rax, [rdi]; ret; 
0x00000000004738f6: nop dword ptr [rax + rax]; nop; mov eax, 0x27; syscall; 
0x0000000000440b66: nop dword ptr [rax + rax]; nop; mov eax, 0x63; syscall; 
0x000000000043f877: nop dword ptr [rax + rax]; nop; mov eax, 0xb; syscall; 
0x0000000000410c16: nop dword ptr [rax + rax]; nop; mov eax, 0xffffffff; ret; 
0x000000000043f646: nop dword ptr [rax + rax]; nop; mov eax, 1; syscall; 
0x000000000043f367: nop dword ptr [rax + rax]; nop; mov eax, 3; syscall; 
0x0000000000461517: nop dword ptr [rax + rax]; nop; mov rax, 1; ret; 
0x0000000000410c56: nop dword ptr [rax + rax]; nop; mov rax, qword ptr [rdi + 0x68]; ret; 
0x0000000000440be6: nop dword ptr [rax + rax]; nop; ret; 
0x0000000000439d67: nop dword ptr [rax + rax]; nop; xor rax, rax; ret; 
0x000000000047289b: nop dword ptr [rax + rax]; pop rbp; ret; 
0x0000000000401bbb: nop dword ptr [rax + rax]; ret; 
0x000000000040ff23: nop dword ptr [rax + rax]; sub rcx, rax; lea eax, [rcx - 1]; ret; 
0x000000000045f043: nop dword ptr [rax + rax]; sub rcx, rax; sar rcx, 2; lea eax, [rcx - 1]; ret; 
0x000000000044611b: nop dword ptr [rax + rax]; sub rsp, 8; call 0x45c30; or dword ptr [rip + 0x692e4], 2; add rsp, 8; ret; 
0x0000000000418673: nop dword ptr [rax + rax]; test eax, eax; lea rdx, [rip + 0x2479f]; lea rax, [rip + 0x24738]; cmovne rax, rdx; ret; 
0x000000000044d9ab: nop dword ptr [rax + rax]; test esi, esi; je 0x4d9c0; cmp esi, 3; je 0x4d9c0; ret; 
0x000000000042037b: nop dword ptr [rax + rax]; tzcnt eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x00000000004727cb: nop dword ptr [rax + rax]; xchg dword ptr [rdi], eax; cmp eax, 1; jg 0x727d8; ret; 
0x000000000043d2c3: nop dword ptr [rax + rax]; xor eax, eax; pop rbx; ret; 
0x000000000040b873: nop dword ptr [rax + rax]; xor eax, eax; ret; 
0x000000000043f618: nop dword ptr [rax + rax]; xor eax, eax; syscall; 
0x000000000041fa8b: nop dword ptr [rax + rax]; xor eax, eax; vzeroupper; ret; 
0x0000000000461508: nop dword ptr [rax + rax]; xor rax, rax; ret; 
0x000000000044ffa4: nop dword ptr [rax]; add r14, r13; mov rdx, rbp; mov rsi, r14; mov rdi, r12; call rbx; 
0x00000000004614ec: nop dword ptr [rax]; add rax, 1; ret; 
0x000000000047999d: nop dword ptr [rax]; add rbx, 8; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x000000000047f7b4: nop dword ptr [rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000476624: nop dword ptr [rax]; add rsp, 8; ret; 
0x000000000046a674: nop dword ptr [rax]; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000042231c: nop dword ptr [rax]; and eax, 0xff; and ecx, 0xff; sub eax, ecx; ret; 
0x000000000041fe79: nop dword ptr [rax]; bsf eax, eax; add rax, rdi; ret; 
0x000000000041fe99: nop dword ptr [rax]; bsf eax, eax; lea rax, [rax + rdi + 0x20]; ret; 
0x000000000041fe6c: nop dword ptr [rax]; bsf eax, eax; lea rax, [rax + rdi - 0x10]; ret; 
0x000000000041febc: nop dword ptr [rax]; bsf eax, eax; sub rdx, rax; jbe 0x1fef0; lea rax, [rdi + rax + 0x10]; ret; 
0x00000000004735ac: nop dword ptr [rax]; bsf eax, eax; sub rdx, rax; jbe 0x735e0; lea rax, [rdi + rax + 0x10]; ret; 
0x00000000004084b1: nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000040f439: nop dword ptr [rax]; cmp qword ptr [rdi + 0x38], 0; je 0xf450; ret; 
0x0000000000440df1: nop dword ptr [rax]; cmp rax, r8; ja 0x40e08; add rsp, 8; ret; 
0x00000000004738bd: nop dword ptr [rax]; cmp rdx, 0x7fffffff; mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x0000000000442bdd: nop dword ptr [rax]; lea rax, [rip + 0x6a639]; ret; 
0x000000000043733d: nop dword ptr [rax]; mov al, byte ptr [rcx]; mov byte ptr [rdx], al; mov rax, rdi; ret; 
0x000000000047878d: nop dword ptr [rax]; mov eax, 0x26; syscall; 
0x000000000047878d: nop dword ptr [rax]; mov eax, 0x26; syscall; cmp rax, -0xfff; jae 0x787a0; ret; 
0x0000000000462209: nop dword ptr [rax]; mov eax, 0xc; syscall; 
0x000000000040bc34: nop dword ptr [rax]; mov eax, 0xffffffff; ret; 
0x000000000043eb6d: nop dword ptr [rax]; mov eax, 8; syscall; 
0x000000000043eb6d: nop dword ptr [rax]; mov eax, 8; syscall; cmp rax, -0x1000; ja 0x3eb80; ret; 
0x0000000000438b2c: nop dword ptr [rax]; mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; lea rax, [rdx + 3]; ret; 
0x000000000047f5c9: nop dword ptr [rax]; mov eax, dword ptr [rdi]; test eax, eax; jne 0x7f5e0; ret; 
0x000000000044610d: nop dword ptr [rax]; mov eax, dword ptr [rip + 0x692fe]; test eax, eax; je 0x46120; ret; 
0x000000000043901d: nop dword ptr [rax]; mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 3]; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; ret; 
0x0000000000429b0c: nop dword ptr [rax]; mov edx, dword ptr [rsi - 4]; mov dword ptr [rdi - 4], edx; ret; 
0x000000000042474c: nop dword ptr [rax]; mov edx, dword ptr [rsi - 5]; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000042494c: nop dword ptr [rax]; mov edx, dword ptr [rsi - 6]; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000424b4c: nop dword ptr [rax]; mov edx, dword ptr [rsi - 7]; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000439c5d: nop dword ptr [rax]; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; lea rax, [rdi + 3]; vzeroupper; ret; 
0x000000000042a229: nop dword ptr [rax]; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x000000000041178c: nop dword ptr [rax]; mov qword ptr [rip + 0x9afc9], rax; ret; 
0x000000000041168c: nop dword ptr [rax]; mov qword ptr [rip + 0x9b079], rax; mov dword ptr [rip + 0x9b093], 1; ret; 
0x0000000000413b24: nop dword ptr [rax]; mov qword ptr [rsp + 0x18], rcx; call rax; 
0x000000000044f99c: nop dword ptr [rax]; mov rax, -0x10; add rax, qword ptr fs:[0]; ret; 
0x000000000044f9bc: nop dword ptr [rax]; mov rax, -0x18; add rax, qword ptr fs:[0]; ret; 
0x000000000044fd75: nop dword ptr [rax]; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000043f7fd: nop dword ptr [rax]; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov rax, -1; ret; 
0x000000000044fb6c: nop dword ptr [rax]; mov rax, 0xf; syscall; 
0x0000000000472d45: nop dword ptr [rax]; mov rax, qword ptr [rbx + 0x10]; mov qword ptr [rax], rdi; pop rbx; ret; 
0x0000000000472d34: nop dword ptr [rax]; mov rax, qword ptr [rbx + 0x10]; mov rdx, qword ptr [rdi + 0x30]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000438a7d: nop dword ptr [rax]; mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; lea rax, [rdx + 7]; ret; 
0x00000000004372cd: nop dword ptr [rax]; mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, rdi; ret; 
0x000000000047cecc: nop dword ptr [rax]; mov rax, qword ptr [rdi + 0x98]; ret; 
0x00000000004765d9: nop dword ptr [rax]; mov rax, qword ptr [rdi]; cmp rax, rsi; je 0x765f0; ret; 
0x00000000004116ad: nop dword ptr [rax]; mov rax, qword ptr [rdi]; mov dword ptr [rip + 0x9b077], 1; mov dword ptr [rip + 0x9b069], eax; ret; 
0x000000000044d1dc: nop dword ptr [rax]; mov rax, qword ptr [rip + 0x62241]; ret; 
0x0000000000410c3c: nop dword ptr [rax]; mov rax, qword ptr [rip + 0x9b4d9]; ret; 
0x000000000041743d: nop dword ptr [rax]; mov rax, qword ptr [rsi + rax + 8]; sub rdx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x000000000043d3bd: nop dword ptr [rax]; mov rax, rdx; pop rbx; ret; 
0x000000000043906d: nop dword ptr [rax]; mov rcx, qword ptr [rsi]; mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; ret; 
0x000000000043907d: nop dword ptr [rax]; mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x000000000046cdbc: nop dword ptr [rax]; mov rdi, qword ptr [rip + 0x42899]; lea rax, [rdi - 1]; cmp rax, -3; jbe 0x6cdd8; ret; 
0x00000000004620c4: nop dword ptr [rax]; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000043f62d: nop dword ptr [rax]; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x000000000042980c: nop dword ptr [rax]; mov rdx, qword ptr [rsi - 0xa]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000042967c: nop dword ptr [rax]; mov rdx, qword ptr [rsi - 0xd]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004295ec: nop dword ptr [rax]; mov rdx, qword ptr [rsi - 0xe]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000423ddc: nop dword ptr [rax]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042988c: nop dword ptr [rax]; mov rdx, qword ptr [rsi - 9]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000042a069: nop dword ptr [rax]; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x0000000000479844: nop dword ptr [rax]; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x000000000043f48d: nop dword ptr [rax]; mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x00000000004167b5: nop dword ptr [rax]; mov rsi, qword ptr [rsp + 0x18]; add rsp, 0x18; jmp rax; 
0x0000000000461ad5: nop dword ptr [rax]; mov rsi, r12; mov edi, ebp; mov eax, 0xe4; syscall; 
0x00000000004390cc: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x00000000004390ec: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x000000000043916c: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x000000000043912d: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x000000000043914c: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x000000000043974d: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; lea rax, [rdi + 0x10]; ret; 
0x00000000004390b9: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x000000000043b22d: nop dword ptr [rax]; movzx eax, byte ptr [rdi - 0x10]; movzx edx, byte ptr [rsi - 0x10]; sub eax, edx; ret; 
0x00000000004205dd: nop dword ptr [rax]; movzx eax, byte ptr [rdi]; movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x000000000043d349: nop dword ptr [rax]; movzx eax, cl; pop rbx; ret; 
0x000000000044622d: nop dword ptr [rax]; movzx eax, sil; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000000419dbd: nop dword ptr [rax]; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000000429c9c: nop dword ptr [rax]; movzx edx, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x000000000042a379: nop dword ptr [rax]; movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x0000000000429c1c: nop dword ptr [rax]; movzx edx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x000000000042a309: nop dword ptr [rax]; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000435a39: nop dword ptr [rax]; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x0000000000467b4d: nop dword ptr [rax]; or byte ptr [rdi + 0x31d], 4; xor eax, eax; ret; 
0x000000000041652c: nop dword ptr [rax]; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000040fdc5: nop dword ptr [rax]; pop rbp; ret; 
0x0000000000475091: nop dword ptr [rax]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000406d7c: nop dword ptr [rax]; ret; 
0x000000000044038d: nop dword ptr [rax]; test rdi, rdi; je 0x4039a; test rsi, rsi; jne 0x403a0; ret; 
0x000000000043cdf9: nop dword ptr [rax]; test rdx, rdx; jne 0x3ce09; mov rax, rdi; ret; 
0x00000000004353bd: nop dword ptr [rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000040e6e4: nop dword ptr [rax]; xchg dword ptr [rip + 0xa0a22], eax; cmp eax, 1; jg 0xe723; ret; 
0x0000000000407994: nop dword ptr [rax]; xor eax, eax; ret; 
0x00000000004603dd: nop dword ptr [rax]; xor eax, eax; vzeroupper; ret; 
0x000000000040995d: nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x00000000004614f7: nop dword ptr cs:[rax + rax]; add rax, 3; ret; 
0x0000000000439fb7: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 0xa]; ret; 
0x0000000000439fc7: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 0xb]; ret; 
0x0000000000439fd7: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 0xc]; ret; 
0x0000000000439fe7: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 0xd]; ret; 
0x0000000000439ff7: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 0xe]; ret; 
0x0000000000439f47: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 2]; ret; 
0x0000000000439f57: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 3]; ret; 
0x0000000000439f67: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 4]; ret; 
0x0000000000439f77: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 5]; ret; 
0x0000000000439f87: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 6]; ret; 
0x0000000000439f97: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 8]; ret; 
0x0000000000439fa7: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 9]; ret; 
0x00000000004395d7: nop dword ptr cs:[rax + rax]; mov byte ptr [rdi], dh; lea rax, [rdi]; ret; 
0x0000000000438fb7: nop dword ptr cs:[rax + rax]; mov byte ptr [rdi], dh; ret; 
0x0000000000417a87: nop dword ptr cs:[rax + rax]; mov eax, 0x16; pop rbx; ret; 
0x000000000040af67: nop dword ptr cs:[rax + rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x0000000000410bf7: nop dword ptr cs:[rax + rax]; mov rax, -1; ret; 
0x00000000004116e7: nop dword ptr cs:[rax + rax]; mov rax, qword ptr [rdi]; mov dword ptr [rip + 0x9da9b], eax; ret; 
0x0000000000411717: nop dword ptr cs:[rax + rax]; mov rax, qword ptr [rdi]; mov qword ptr [rip + 0x9aff6], rax; ret; 
0x0000000000410c67: nop dword ptr cs:[rax + rax]; mov rax, rdi; ret; 
0x000000000043f8d2: nop dword ptr cs:[rax + rax]; nop dword ptr [rax + rax]; mov eax, 0x1c; syscall; 
0x0000000000462002: nop dword ptr cs:[rax + rax]; nop dword ptr [rax + rax]; mov eax, 0x66; syscall; 
0x000000000043f8a2: nop dword ptr cs:[rax + rax]; nop dword ptr [rax + rax]; mov eax, 0xa; syscall; 
0x0000000000478784: nop dword ptr cs:[rax + rax]; nop dword ptr [rax]; mov eax, 0x26; syscall; 
0x000000000044fb63: nop dword ptr cs:[rax + rax]; nop dword ptr [rax]; mov rax, 0xf; syscall; 
0x000000000047cec3: nop dword ptr cs:[rax + rax]; nop dword ptr [rax]; mov rax, qword ptr [rdi + 0x98]; ret; 
0x0000000000410c33: nop dword ptr cs:[rax + rax]; nop dword ptr [rax]; mov rax, qword ptr [rip + 0x9b4d9]; ret; 
0x000000000043bc04: nop dword ptr cs:[rax + rax]; nop dword ptr [rax]; xor eax, eax; ret; 
0x0000000000439f36: nop dword ptr cs:[rax + rax]; nop; lea rax, [rdi + 1]; ret; 
0x0000000000439f26: nop dword ptr cs:[rax + rax]; nop; lea rax, [rdi]; ret; 
0x00000000004738f5: nop dword ptr cs:[rax + rax]; nop; mov eax, 0x27; syscall; 
0x0000000000440b65: nop dword ptr cs:[rax + rax]; nop; mov eax, 0x63; syscall; 
0x000000000043f876: nop dword ptr cs:[rax + rax]; nop; mov eax, 0xb; syscall; 
0x0000000000410c15: nop dword ptr cs:[rax + rax]; nop; mov eax, 0xffffffff; ret; 
0x000000000043f645: nop dword ptr cs:[rax + rax]; nop; mov eax, 1; syscall; 
0x000000000043f366: nop dword ptr cs:[rax + rax]; nop; mov eax, 3; syscall; 
0x0000000000461516: nop dword ptr cs:[rax + rax]; nop; mov rax, 1; ret; 
0x0000000000410c55: nop dword ptr cs:[rax + rax]; nop; mov rax, qword ptr [rdi + 0x68]; ret; 
0x0000000000440be5: nop dword ptr cs:[rax + rax]; nop; ret; 
0x0000000000439d66: nop dword ptr cs:[rax + rax]; nop; xor rax, rax; ret; 
0x0000000000410c27: nop dword ptr cs:[rax + rax]; ret; 
0x0000000000461507: nop dword ptr cs:[rax + rax]; xor rax, rax; ret; 
0x000000000045e742: nop word ptr [rax + rax]; add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000047f59a: nop word ptr [rax + rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000041fe87: nop word ptr [rax + rax]; bsf eax, eax; lea rax, [rax + rdi + 0x10]; ret; 
0x0000000000412812: nop word ptr [rax + rax]; call rax; 
0x000000000040f4f7: nop word ptr [rax + rax]; mov eax, 0xffffffff; ret; 
0x0000000000462332: nop word ptr [rax + rax]; mov ecx, eax; and ecx, dword ptr [rsi + 0x10]; lea rcx, [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000438fea: nop word ptr [rax + rax]; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x0000000000441517: nop word ptr [rax + rax]; mov qword ptr [rdi + 0x20], rsi; ret; 
0x000000000040fd37: nop word ptr [rax + rax]; mov qword ptr [rdi + 0xa0], -1; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000047ceb2: nop word ptr [rax + rax]; mov qword ptr [rdi + rsi*8], rdx; add rsp, 8; ret; 
0x000000000043e892: nop word ptr [rax + rax]; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000046224a: nop word ptr [rax + rax]; mov rax, -0x40; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x000000000044f95a: nop word ptr [rax + rax]; mov rax, -0x58; movsxd rdi, edi; mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000040fde7: nop word ptr [rax + rax]; mov rax, -1; ret; 
0x000000000044f977: nop word ptr [rax + rax]; mov rax, -8; add rax, qword ptr fs:[0]; ret; 
0x00000000004083b2: nop word ptr [rax + rax]; mov rax, qword ptr [rax + 0x18]; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; call rax; 
0x00000000004116fa: nop word ptr [rax + rax]; mov rax, qword ptr [rdi]; mov dword ptr [rip + 0x9b027], 1; mov qword ptr [rip + 0x9afec], rax; ret; 
0x00000000004442c7: nop word ptr [rax + rax]; mov rax, qword ptr [rip + 0x6b109]; ret; 
0x0000000000460877: nop word ptr [rax + rax]; mov rax, r8; vzeroupper; ret; 
0x000000000043904a: nop word ptr [rax + rax]; mov rcx, qword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x0000000000416fa7: nop word ptr [rax + rax]; mov rsi, qword ptr [rsp + 0x28]; mov rdi, r12; call rax; 
0x0000000000435a4a: nop word ptr [rax + rax]; movzx ecx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x000000000047289a: nop word ptr [rax + rax]; pop rbp; ret; 
0x000000000040ec4a: nop word ptr [rax + rax]; ret; 
0x000000000040ff22: nop word ptr [rax + rax]; sub rcx, rax; lea eax, [rcx - 1]; ret; 
0x000000000045f042: nop word ptr [rax + rax]; sub rcx, rax; sar rcx, 2; lea eax, [rcx - 1]; ret; 
0x0000000000418672: nop word ptr [rax + rax]; test eax, eax; lea rdx, [rip + 0x2479f]; lea rax, [rip + 0x24738]; cmovne rax, rdx; ret; 
0x00000000004727ca: nop word ptr [rax + rax]; xchg dword ptr [rdi], eax; cmp eax, 1; jg 0x727d8; ret; 
0x000000000043d2c2: nop word ptr [rax + rax]; xor eax, eax; pop rbx; ret; 
0x000000000040b872: nop word ptr [rax + rax]; xor eax, eax; ret; 
0x000000000041fa8a: nop word ptr [rax + rax]; xor eax, eax; vzeroupper; ret; 
0x00000000004614f6: nop word ptr cs:[rax + rax]; add rax, 3; ret; 
0x0000000000439fb6: nop word ptr cs:[rax + rax]; lea rax, [rdi + 0xa]; ret; 
0x0000000000439fc6: nop word ptr cs:[rax + rax]; lea rax, [rdi + 0xb]; ret; 
0x0000000000439fd6: nop word ptr cs:[rax + rax]; lea rax, [rdi + 0xc]; ret; 
0x0000000000439fe6: nop word ptr cs:[rax + rax]; lea rax, [rdi + 0xd]; ret; 
0x0000000000439ff6: nop word ptr cs:[rax + rax]; lea rax, [rdi + 0xe]; ret; 
0x0000000000439f46: nop word ptr cs:[rax + rax]; lea rax, [rdi + 2]; ret; 
0x0000000000439f56: nop word ptr cs:[rax + rax]; lea rax, [rdi + 3]; ret; 
0x0000000000439f66: nop word ptr cs:[rax + rax]; lea rax, [rdi + 4]; ret; 
0x0000000000439f76: nop word ptr cs:[rax + rax]; lea rax, [rdi + 5]; ret; 
0x0000000000439f86: nop word ptr cs:[rax + rax]; lea rax, [rdi + 6]; ret; 
0x0000000000439f96: nop word ptr cs:[rax + rax]; lea rax, [rdi + 8]; ret; 
0x0000000000439fa6: nop word ptr cs:[rax + rax]; lea rax, [rdi + 9]; ret; 
0x00000000004395d6: nop word ptr cs:[rax + rax]; mov byte ptr [rdi], dh; lea rax, [rdi]; ret; 
0x0000000000438fb6: nop word ptr cs:[rax + rax]; mov byte ptr [rdi], dh; ret; 
0x0000000000417a86: nop word ptr cs:[rax + rax]; mov eax, 0x16; pop rbx; ret; 
0x000000000040af66: nop word ptr cs:[rax + rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x0000000000410bf6: nop word ptr cs:[rax + rax]; mov rax, -1; ret; 
0x00000000004116e6: nop word ptr cs:[rax + rax]; mov rax, qword ptr [rdi]; mov dword ptr [rip + 0x9da9b], eax; ret; 
0x0000000000411716: nop word ptr cs:[rax + rax]; mov rax, qword ptr [rdi]; mov qword ptr [rip + 0x9aff6], rax; ret; 
0x0000000000410c66: nop word ptr cs:[rax + rax]; mov rax, rdi; ret; 
0x000000000043f8d1: nop word ptr cs:[rax + rax]; nop dword ptr [rax + rax]; mov eax, 0x1c; syscall; 
0x0000000000462001: nop word ptr cs:[rax + rax]; nop dword ptr [rax + rax]; mov eax, 0x66; syscall; 
0x000000000043f8a1: nop word ptr cs:[rax + rax]; nop dword ptr [rax + rax]; mov eax, 0xa; syscall; 
0x0000000000478783: nop word ptr cs:[rax + rax]; nop dword ptr [rax]; mov eax, 0x26; syscall; 
0x000000000044fb62: nop word ptr cs:[rax + rax]; nop dword ptr [rax]; mov rax, 0xf; syscall; 
0x000000000047cec2: nop word ptr cs:[rax + rax]; nop dword ptr [rax]; mov rax, qword ptr [rdi + 0x98]; ret; 
0x0000000000410c32: nop word ptr cs:[rax + rax]; nop dword ptr [rax]; mov rax, qword ptr [rip + 0x9b4d9]; ret; 
0x000000000043bc03: nop word ptr cs:[rax + rax]; nop dword ptr [rax]; xor eax, eax; ret; 
0x0000000000439f35: nop word ptr cs:[rax + rax]; nop; lea rax, [rdi + 1]; ret; 
0x0000000000439f25: nop word ptr cs:[rax + rax]; nop; lea rax, [rdi]; ret; 
0x00000000004738f4: nop word ptr cs:[rax + rax]; nop; mov eax, 0x27; syscall; 
0x0000000000440b64: nop word ptr cs:[rax + rax]; nop; mov eax, 0x63; syscall; 
0x000000000043f875: nop word ptr cs:[rax + rax]; nop; mov eax, 0xb; syscall; 
0x0000000000410c14: nop word ptr cs:[rax + rax]; nop; mov eax, 0xffffffff; ret; 
0x000000000043f644: nop word ptr cs:[rax + rax]; nop; mov eax, 1; syscall; 
0x000000000043f365: nop word ptr cs:[rax + rax]; nop; mov eax, 3; syscall; 
0x0000000000461515: nop word ptr cs:[rax + rax]; nop; mov rax, 1; ret; 
0x0000000000410c54: nop word ptr cs:[rax + rax]; nop; mov rax, qword ptr [rdi + 0x68]; ret; 
0x0000000000440be4: nop word ptr cs:[rax + rax]; nop; ret; 
0x0000000000439d65: nop word ptr cs:[rax + rax]; nop; xor rax, rax; ret; 
0x0000000000410c26: nop word ptr cs:[rax + rax]; ret; 
0x0000000000461506: nop word ptr cs:[rax + rax]; xor rax, rax; ret; 
0x000000000047dec4: nop; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000040d6e6: nop; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; call 0x5c42344c; ret; 
0x00000000004293d7: nop; add byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x0000000000402844: nop; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000040a19c: nop; add byte ptr [rax], al; add byte ptr [rcx + 1], cl; ret; 
0x000000000042102c: nop; add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042a5be: nop; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004167af: nop; add rsp, 0x18; ret; 
0x00000000004442bf: nop; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000041fecf: nop; bsf eax, eax; sub rdx, rax; jbe 0x1fef0; lea rax, [rdi + rax + 0x20]; ret; 
0x000000000041fedf: nop; bsf eax, eax; sub rdx, rax; jbe 0x1fef0; lea rax, [rdi + rax + 0x30]; ret; 
0x00000000004735bf: nop; bsf eax, eax; sub rdx, rax; jbe 0x735e0; lea rax, [rdi + rax + 0x20]; ret; 
0x00000000004735cf: nop; bsf eax, eax; sub rdx, rax; jbe 0x735e0; lea rax, [rdi + rax + 0x30]; ret; 
0x000000000043955f: nop; bsf rdx, rdx; lea r11, [rip + 0x4a7e5]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f3f: nop; bsf rdx, rdx; lea r11, [rip + 0x4ad85]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000047843f: nop; bts rax, 0x30; mov qword ptr [rdi + 8], rax; mov eax, 2; ret; 
0x0000000000444a77: nop; call 0x42c50; mov rax, qword ptr [rbp - 0x70]; mov rdi, r12; call rax; 
0x000000000047a2cf: nop; call rax; 
0x0000000000479d14: nop; clc; jmp qword ptr [rsi + 0xf]; 
0x000000000040c12f: nop; cmp qword ptr [rip + 0x9fe80], 0; je 0xc13b; ret; 
0x00000000004752b1: nop; in al, dx; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ror dword ptr [rax], 0x83; ret 0x4801; 
0x0000000000439f3f: nop; lea rax, [rdi + 1]; ret; 
0x0000000000439f2f: nop; lea rax, [rdi]; ret; 
0x000000000043f3ff: nop; lea rdx, [rsp + 8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000000401cd1: nop; leave; ret; 
0x0000000000438aef: nop; mov al, byte ptr [rcx]; mov byte ptr [rdx], al; lea rax, [rdx]; ret; 
0x00000000004614df: nop; mov ch, dh; and ch, 0xf; je 0x61500; add rax, 2; ret; 
0x0000000000423faf: nop; mov dl, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x000000000046767d: nop; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x000000000046764f: nop; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000042418f: nop; mov dx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x000000000042436f: nop; mov dx, word ptr [rsi - 3]; mov cx, word ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x0000000000438fcf: nop; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x00000000004738ff: nop; mov eax, 0x27; syscall; 
0x00000000004738ff: nop; mov eax, 0x27; syscall; ret; 
0x0000000000461fdf: nop; mov eax, 0x3f; syscall; 
0x0000000000461fdf: nop; mov eax, 0x3f; syscall; cmp rax, -0xfff; jae 0x61ff0; ret; 
0x0000000000440b6f: nop; mov eax, 0x63; syscall; 
0x0000000000440b6f: nop; mov eax, 0x63; syscall; cmp rax, -0xfff; jae 0x40b80; ret; 
0x000000000043f87f: nop; mov eax, 0xb; syscall; 
0x000000000043f87f: nop; mov eax, 0xb; syscall; cmp rax, -0xfff; jae 0x3f890; ret; 
0x00000000004109ef: nop; mov eax, 0xffffffff; ret; 
0x000000000043f64f: nop; mov eax, 1; syscall; 
0x000000000043f64f: nop; mov eax, 1; syscall; cmp rax, -0x1000; ja 0x3f660; ret; 
0x000000000043f36f: nop; mov eax, 3; syscall; 
0x000000000043f36f: nop; mov eax, 3; syscall; cmp rax, -0x1000; ja 0x3f380; ret; 
0x000000000041091f: nop; mov eax, dword ptr [rdi + 0x10]; sub eax, dword ptr [rsi + 0x10]; ret; 
0x0000000000440abf: nop; mov eax, dword ptr [rip + 0x6e75a]; mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x000000000045100f: nop; mov eax, r8d; ret; 
0x000000000042454f: nop; mov edx, dword ptr [rsi - 4]; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043960f: nop; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; lea rax, [rdi + 3]; ret; 
0x0000000000435a5f: nop; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; vzeroupper; ret; 
0x000000000045f17f: nop; mov qword ptr [rax + 0x10], rdi; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000045f14e: nop; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000410bdf: nop; mov rax, -1; ret; 
0x000000000046151f: nop; mov rax, 1; ret; 
0x0000000000410c5f: nop; mov rax, qword ptr [rdi + 0x68]; ret; 
0x000000000047cf4f: nop; mov rax, qword ptr [rdi + 0xb0]; ret; 
0x000000000041177f: nop; mov rax, qword ptr [rdi]; cmp rax, 0xffff; jbe 0x11790; ret; 
0x000000000043905f: nop; mov rcx, qword ptr [rsi]; mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; ret; 
0x000000000043908f: nop; mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x000000000043909f: nop; mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000444a80: nop; mov rdi, r12; call rax; 
0x000000000043e87f: nop; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000043eb3f: nop; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x000000000043965f: nop; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; lea rax, [rdi + 7]; ret; 
0x00000000004390ff: nop; movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x000000000043926f: nop; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x000000000043922f: nop; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x000000000043924f: nop; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x000000000043973f: nop; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; lea rax, [rdi + 0xf]; ret; 
0x00000000004390af: nop; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045e944: nop; nop dword ptr [rax]; xor eax, eax; ret; 
0x000000000044fb60: nop; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; mov rax, 0xf; syscall; 
0x00000000004160b0: nop; or dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x00000000004160aa: nop; or dword ptr [rax], eax; mov dword ptr [rip + 0x990c9], 0; ret; 
0x0000000000401dc2: nop; pop rbp; ret; 
0x0000000000401bef: nop; ret; 
0x0000000000469ddb: nop; stc; jmp qword ptr [rsi - 0x70]; 
0x000000000041094f: nop; sub edx, dword ptr [rax + 0x10]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x000000000040dc8f: nop; test rdx, rdx; jne 0xdca0; xor eax, eax; ret; 
0x000000000042038f: nop; tzcnt eax, eax; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x00000000004356bf: nop; tzcnt eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042035f: nop; vzeroupper; xor eax, eax; ret; 
0x000000000042a53c: nop; xchg eax, ebx; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000041feef: nop; xor eax, eax; ret; 
0x00000000004025cf: nop; xor edi, edi; mov eax, edx; syscall; 
0x0000000000439d6f: nop; xor rax, rax; ret; 
0x0000000000425ad5: not esp; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000460952: or al, 0; add byte ptr [rax - 0x73], cl; add eax, 0x994; cmove rax, rdx; ret; 
0x0000000000454788: or al, 0; add byte ptr [rax - 0x77], cl; ret 0xb8; 
0x000000000041e9b7: or al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000433f0f: or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041e9e5: or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000046225a: or al, 0; add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x0000000000462211: or al, 0; add byte ptr [rax], al; syscall; 
0x0000000000416d99: or al, 0; add byte ptr [rax], al; xor eax, eax; pop rbx; ret; 
0x000000000043c156: or al, 0x16; cmp rdi, r9; jb 0x3c2c4; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043c4b1: or al, 0x16; cmp rdi, r9; jb 0x3c681; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043c8fc: or al, 0x16; cmp rdi, r9; jb 0x3cb3c; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000419da6: or al, 0x16; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000041a068: or al, 0x16; test al, al; jne 0x1a050; xor eax, eax; sub eax, ecx; ret; 
0x000000000041b619: or al, 0x16; test eax, eax; jne 0x1b600; sub eax, ecx; vzeroupper; ret; 
0x000000000041fa7e: or al, 0x16; test eax, eax; jne 0x1fa60; sub eax, ecx; vzeroupper; ret; 
0x000000000040cee9: or al, 0x24; mov rdi, rbp; call rax; 
0x000000000043f3f1: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3f443; add rsp, 0x68; ret; 
0x000000000043f480: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3f4cb; add rsp, 0x18; ret; 
0x000000000043f528: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3f573; add rsp, 0x58; ret; 
0x000000000043f5c6: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3f613; add rsp, 0x58; ret; 
0x000000000044fdee: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4fe86; add rsp, 0x98; ret; 
0x0000000000450f7e: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x50f8e; add rsp, 0xd8; ret; 
0x000000000046d035: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6d04c; add rsp, 0x38; ret; 
0x000000000046d111: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6d1a7; add rsp, 0x48; ret; 
0x000000000046d31f: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6d353; add rsp, 0x38; ret; 
0x000000000046d3c5: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6d3dc; add rsp, 0x38; ret; 
0x0000000000472e32: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x72e3f; add rsp, 0x28; ret; 
0x00000000004785cb: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x785d8; add rsp, 0x38; ret; 
0x0000000000408f6e: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x8f7e; add rsp, 0xd8; ret; 
0x00000000004092ae: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x92be; add rsp, 0xd8; ret; 
0x0000000000441a62: or al, 0x31; add al, 0; mov eax, 0x15; syscall; 
0x000000000043ebd0: or al, 0x41; mov eax, eax; mov eax, 3; syscall; 
0x0000000000473f58: or al, 0x45; add al, byte ptr [rax]; lea rdi, [rip + 0x2451d]; call 0x2df0; nop dword ptr [rax + rax]; ret; 
0x000000000043ebf2: or al, 0x48; add esp, 0x18; ret; 
0x0000000000462325: or al, 0x48; lea ecx, [rsi + rcx*4]; mov edx, dword ptr [rcx + rdx]; test edx, edx; jne 0x62338; ret; 
0x0000000000441afb: or al, 0x48; lea edi, [rcx + rsi + 0x20]; jmp rdx; 
0x000000000040f0f4: or al, 0x48; mov edi, dword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000000473979: or al, 0x48; mov edx, dword ptr [rip + 0x3be37]; add word ptr [rdx + rax*2], 1; ret; 
0x000000000040259c: or al, 0x48; mov esi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000043fc68: or al, 0x4c; mov edi, edi; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x0000000000472f53: or al, 0x5b; pop rbp; pop r12; ret; 
0x000000000044d9b3: or al, 0x83; inc byte ptr [rbx]; je 0x4d9c0; ret; 
0x0000000000451c40: or al, 0x83; ret; 
0x0000000000457a8f: or al, 0x84; ror byte ptr [rdi], cl; mov byte ptr [rsi + rdx], dh; add dh, dh; ret 0xf40; 
0x0000000000479ea4: or al, 0x85; ror byte ptr [rdi], 0x84; ret; 
0x000000000043d2f1: or al, 0x86; add rcx, rsi; jmp rcx; 
0x000000000043d37b: or al, 0x89; ret 0xe283; 
0x0000000000451841: or al, 0x8a; add rcx, rdx; jmp rcx; 
0x000000000042f834: or al, 0x8a; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000042d029: or al, 0x8b; mov ecx, dword ptr ss:[rcx - 4]; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x000000000046233f: or al, 0x8e; add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000402781: or al, 0x8e; add rcx, rsi; jmp rcx; 
0x0000000000462328: or al, 0x8e; mov edx, dword ptr [rcx + rdx]; test edx, edx; jne 0x62338; ret; 
0x000000000044ee3a: or al, 0x8f; add rcx, rdi; jmp rcx; 
0x0000000000420d0f: or al, 0x93; add rcx, r11; jmp rcx; 
0x0000000000438e7b: or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000429480: or al, 0x9d; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000438e7f: or al, 0xb; jmp rcx; 
0x000000000047d83b: or al, 0xbf; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000043ebe9: or al, 0xe8; rol dword ptr [rsi], 1; add al, byte ptr [rax]; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000045ef93: or al, 0xe8; xchg eax, edi; sar edx, 1; dec dword ptr [rbx - 0x14f3db8c]; ret; 
0x000000000045ef9c: or al, 0xeb; ret; 
0x0000000000429ea3: or al, 0xf3; movq qword ptr [rdi], mm1; ret; 
0x0000000000470d23: or al, 0xf6; ret 0xf01; 
0x000000000045d403: or al, 0xf6; ret 0xf04; 
0x0000000000457a64: or al, 0xf6; ret 0xf08; 
0x000000000047cea0: or al, 0xf7; cmp al, 8; jne 0x1662; mov qword ptr [rcx], rdx; add rsp, 8; ret; 
0x0000000000472dd4: or al, 0xfd; jmp qword ptr [rsi + 0xf]; 
0x0000000000408514: or al, byte ptr [eax]; syscall; 
0x000000000041eb97: or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000432aa1: or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041ebc5: or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x00000000004016f5: or al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x000000000047cd1e: or al, byte ptr [rax]; add byte ptr [rax], al; mov edi, 1; call rax; 
0x000000000043f8b1: or al, byte ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000043f8b1: or al, byte ptr [rax]; add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x3f8c0; ret; 
0x0000000000401f97: or al, byte ptr [rax]; add rsp, 0x88; pop rbx; ret; 
0x000000000040e6ec: or al, byte ptr [rax]; cmp eax, 1; jg 0xe723; ret; 
0x00000000004021d8: or al, byte ptr [rax]; mov dword ptr [rip + 0xad11c], edx; pop rbx; ret; 
0x00000000004021d2: or al, byte ptr [rax]; mov dword ptr [rip + 0xad11e], ecx; mov dword ptr [rip + 0xad11c], edx; pop rbx; ret; 
0x00000000004021cc: or al, byte ptr [rax]; mov dword ptr [rip + 0xad120], ebx; mov dword ptr [rip + 0xad11e], ecx; mov dword ptr [rip + 0xad11c], edx; pop rbx; ret; 
0x0000000000402597: or al, byte ptr [rax]; mov edi, dword ptr [rsp + 0xc]; mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000040da82: or al, byte ptr [rax]; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x00000000004021de: or al, byte ptr [rax]; pop rbx; ret; 
0x0000000000401209: or al, byte ptr [rax]; syscall; 
0x000000000040e73a: or al, byte ptr [rax]; syscall; ret; 
0x0000000000402105: or al, byte ptr [rcx + 0xad1f00d]; add byte ptr [rax], al; and byte ptr [rax], al; add dh, dh; ret 0x7440; 
0x00000000004020f6: or al, byte ptr [rcx + 0xad1ff0d]; add byte ptr [rax], al; adc byte ptr [rax], al; add dh, dh; ret 0x7402; 
0x00000000004020ac: or al, byte ptr [rcx + 0xad2490d]; add byte ptr [rax], al; add dword ptr [rax], eax; add byte ptr [rbx + 0xad1ff15], cl; add dh, dh; ret 0x7408; 
0x000000000040d4ea: or al, byte ptr [rcx]; add byte ptr [rax], al; mov rdx, r15; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x0000000000408776: or al, byte ptr gs:[rax]; syscall; 
0x000000000046c0c4: or al, ch; cmpsb byte ptr [rsi], byte ptr [rdi]; jp 0x6c0c9; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000046bffd: or al, ch; insd dword ptr [rdi], dx; jnp 0x6c002; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000043db9b: or al, ch; iretd; jbe 0x3dba0; add bl, ch; ret 0x1f0f; 
0x00000000004612d0: or al, ch; mov dl, 0xfd; stc; dec dword ptr [rax - 0x77]; ret 0x2948; 
0x000000000043eb2e: or al, ch; mov word ptr [rdi], es; add al, byte ptr [rax]; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000048018d: or bh, ah; call qword ptr [rbp + 0x53]; 
0x0000000000467b3f: or bh, bh; adc eax, 0x455fa; xor eax, eax; add rsp, 8; ret; 
0x0000000000450311: or bh, bh; jmp qword ptr [rsi + 0x2e]; 
0x00000000004023e9: or bh, bh; push rbx; adc byte ptr [rax - 0x7d], cl; ret; 
0x000000000047f597: or bh, byte ptr [rax + 0x1f0f66ff]; add byte ptr [rax], r8b; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000401c5b: or bh, byte ptr [rdi + 0x49cca8]; call 0x7f900; mov byte ptr [rip + 0xac5d3], 1; pop rbp; ret; 
0x000000000043fba2: or bl, bpl; ret; 
0x000000000046a137: or bl, ch; fild dword ptr [rcx - 0x75]; add byte ptr [r11 - 0x78f0d008], r8b; push -0x76ffffff; ret 0xc083; 
0x0000000000407c7e: or bl, ch; ret; 
0x000000000042a063: or bl, dh; movq qword ptr [rdi], mm1; ret; 
0x000000000044d9d8: or byte ptr [r11 + 0x1974fdf8], al; pop rbx; ret; 
0x000000000041787e: or byte ptr [r11 + 0x4b7709f8], r8b; lea rdx, [rip + 0x6b29c]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000410d88: or byte ptr [r8 + 0x39], r9b; sal byte ptr [rbx + 0x21], 1; movzx eax, byte ptr [rax]; ret; 
0x000000000040d782: or byte ptr [r8 + 0x3b], r9b; adc byte ptr [r11 + 6], r14b; movzx eax, byte ptr [rax]; ret; 
0x0000000000478447: or byte ptr [r8 + 2], r15b; ret; 
0x00000000004784bb: or byte ptr [r8 - 0x3ffe], r15b; sub eax, r8d; mov dword ptr [rsi], eax; mov eax, 2; ret; 
0x0000000000472d22: or byte ptr [r8 - 0x73], cl; adc eax, 0x256f1; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000043fa89: or byte ptr [r8 - 0x75], r9b; adc byte ptr [r9 - 0x77], r9b; ret 0x8349; 
0x0000000000437328: or byte ptr [r8 - 0x77], cl; or byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000441479: or byte ptr [r8 - 0x77], cl; ret 0x8548; 
0x0000000000457dd6: or byte ptr [r8 - 0x77], r9b; or cl, r13b; ret 0xfffe; 
0x0000000000463552: or byte ptr [r8 - 0x7b], cl; sal byte ptr [rdi + 0x48], 0x89; ret; 
0x0000000000441425: or byte ptr [r8 - 0x7b], cl; sal byte ptr [rsp + rdi + 0x48], 0x89; ret; 
0x000000000047b8e7: or byte ptr [r9 + 0x63], cl; add al, 0x87; add rax, r15; jmp rax; 
0x00000000004373e7: or byte ptr [r9 - 0x76b7f7be], cl; clc; ret; 
0x000000000043faa7: or byte ptr [r9], al; je 0x3fae5; test byte ptr [r10 + 8], 1; jne 0x3faf0; ret; 
0x000000000040a9c0: or byte ptr [rax + 0x2b], cl; adc dword ptr [rax - 0x3f], ecx; cli; add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret 0x2948; 
0x0000000000466fb4: or byte ptr [rax + 0x39], cl; ret 0xd74; 
0x0000000000410d89: or byte ptr [rax + 0x39], cl; sal byte ptr [rbx + 0x21], 1; movzx eax, byte ptr [rax]; ret; 
0x000000000040d783: or byte ptr [rax + 0x3b], cl; adc byte ptr [r11 + 6], r14b; movzx eax, byte ptr [rax]; ret; 
0x0000000000402a74: or byte ptr [rax + 0x9e], bh; mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x0000000000402a73: or byte ptr [rax + 0x9e], r15b; mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x000000000047d963: or byte ptr [rax + 1], bh; cmp qword ptr [rsi + 8], rcx; ja 0x7d971; sbb eax, eax; ret; 
0x000000000045d9f5: or byte ptr [rax + 1], bh; pop rbx; pop rbp; ret; 
0x000000000043eb17: or byte ptr [rax + 1], bh; syscall; 
0x000000000047ee27: or byte ptr [rax + 1], cl; ret; 
0x000000000047d962: or byte ptr [rax + 1], dil; cmp qword ptr [rsi + 8], rcx; ja 0x7d971; sbb eax, eax; ret; 
0x0000000000478448: or byte ptr [rax + 2], bh; ret; 
0x0000000000479a71: or byte ptr [rax + 3], cl; add byte ptr [r13 + 0x31], r8b; jmp qword ptr [rsi - 0x7d]; 
0x000000000047721c: or byte ptr [rax + 3], cl; add dword ptr [rdi], ecx; xchg eax, edx; ret 0x8948; 
0x0000000000418734: or byte ptr [rax + rax + 0x158d4800], bl; jno 0x1872e; add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x0000000000411745: or byte ptr [rax + rax], al; add byte ptr [rsi + 5], dh; ret; 
0x000000000046ce13: or byte ptr [rax + rcx*2 + 0x2b], ah; add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000046ce12: or byte ptr [rax + rcx*2 + 0x2b], spl; add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000401003: or byte ptr [rax - 0x39], cl; rol byte ptr [rax], 0; add byte ptr [rax], al; test rax, rax; je 0x1012; call rax; 
0x00000000004784bc: or byte ptr [rax - 0x3ffe], bh; sub eax, r8d; mov dword ptr [rsi], eax; mov eax, 2; ret; 
0x0000000000478475: or byte ptr [rax - 0x402f], bh; sub eax, r8d; mov dword ptr [rsi], eax; mov eax, 2; ret; 
0x0000000000472d23: or byte ptr [rax - 0x73], cl; adc eax, 0x256f1; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000046105d: or byte ptr [rax - 0x73], cl; add eax, 0x25b; lea rdx, [rip + 0x34]; cmovne rax, rdx; ret; 
0x00000000004188b0: or byte ptr [rax - 0x73], cl; add eax, 0x9aa8; lea rdx, [rip + 0xf011]; cmovne rax, rdx; ret; 
0x0000000000418730: or byte ptr [rax - 0x73], cl; add eax, 0x9c08; lea rdx, [rip + 0xf171]; cmovne rax, rdx; ret; 
0x00000000004185c0: or byte ptr [rax - 0x73], cl; add eax, 0xc768; lea rdx, [rip + 0x11dd1]; cmovne rax, rdx; ret; 
0x0000000000457dd3: or byte ptr [rax - 0x73], cl; or byte ptr [r8 - 0x77], r9b; or cl, r13b; ret 0xfffe; 
0x0000000000456678: or byte ptr [rax - 0x73], cl; or byte ptr [rcx - 0x77], cl; or cl, r13b; ret 0xfffd; 
0x0000000000455f37: or byte ptr [rax - 0x73], cl; or byte ptr [rcx - 0x77], cl; or cl, r13b; ret; 
0x0000000000477a4c: or byte ptr [rax - 0x73], cl; push rdi; add dword ptr [rcx - 0x77], ecx; push rsp; ret; 
0x0000000000477fcc: or byte ptr [rax - 0x73], cl; push rsi; add dword ptr [rcx - 0x77], ecx; push rsp; ret; 
0x000000000043fa8a: or byte ptr [rax - 0x75], cl; adc byte ptr [r9 - 0x77], r9b; ret 0x8349; 
0x0000000000461a9b: or byte ptr [rax - 0x75], cl; add eax, 0x4a015; test rax, rax; je 0x61ad8; call rax; 
0x00000000004402bc: or byte ptr [rax - 0x75], cl; add eax, dword ptr [rbx + 0x94801e0]; ret 0x8948; 
0x0000000000415975: or byte ptr [rax - 0x75], cl; push rbp; or byte ptr [rax - 0x77], cl; ret; 
0x0000000000463400: or byte ptr [rax - 0x75], cl; xor al, ch; cmpsd dword ptr [rsi], dword ptr [rdi]; fdiv st(1), st(0); dec dword ptr [rax + 0x39]; ret; 
0x000000000045f41b: or byte ptr [rax - 0x77], cl; add edi, dword ptr [rax + 1]; pop rbx; pop rbp; pop r12; ret; 
0x000000000043732d: or byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000413ad3: or byte ptr [rax - 0x77], cl; cmp al, 0x24; call rax; 
0x000000000045e434: or byte ptr [rax - 0x77], cl; jo 0x5e449; mov qword ptr [rax + 0x40], rcx; mov qword ptr [rax], rdx; ret; 
0x0000000000437329: or byte ptr [rax - 0x77], cl; or byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000457dd7: or byte ptr [rax - 0x77], cl; or cl, r13b; ret 0xfffe; 
0x000000000040cbf9: or byte ptr [rax - 0x77], cl; out dx, eax; pop rbx; pop rbp; jmp rax; 
0x0000000000440250: or byte ptr [rax - 0x77], cl; push rsi; adc byte ptr [rax - 0x75], cl; push rsi; or byte ptr [rbx + 0x94801e2], al; ret 0x8948; 
0x0000000000415b23: or byte ptr [rax - 0x77], cl; ret 0x8348; 
0x000000000044147a: or byte ptr [rax - 0x77], cl; ret 0x8548; 
0x0000000000412a72: or byte ptr [rax - 0x77], cl; ret; 
0x0000000000412a71: or byte ptr [rax - 0x77], r9b; ret; 
0x0000000000463553: or byte ptr [rax - 0x7b], cl; sal byte ptr [rdi + 0x48], 0x89; ret; 
0x00000000004768c4: or byte ptr [rax - 0x7b], cl; sal byte ptr [rsi + rsi*4 + 0x49], 0x8b; adc byte ptr [rax + 1], cl; ret 0x3949; 
0x0000000000441426: or byte ptr [rax - 0x7b], cl; sal byte ptr [rsp + rdi + 0x48], 0x89; ret; 
0x00000000004768c3: or byte ptr [rax - 0x7b], r9b; sal byte ptr [rsi + rsi*4 + 0x49], 0x8b; adc byte ptr [rax + 1], cl; ret 0x3949; 
0x000000000045cef2: or byte ptr [rax - 0x7bf0dbc7], al; ret; 
0x0000000000415679: or byte ptr [rax - 0x7d], cl; call qword ptr [rax]; 
0x00000000004753bd: or byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x0000000000478949: or byte ptr [rax - 0x7d], cl; ret 0x4918; 
0x000000000040463d: or byte ptr [rax - 0x7d], cl; ret; 
0x000000000045da13: or byte ptr [rax - 1], bh; pop rbx; pop rbp; ret; 
0x0000000000414249: or byte ptr [rax], al; add al, ch; out dx, eax; fcos; dec dword ptr [rax - 0x77]; ret; 
0x00000000004574bc: or byte ptr [rax], al; add byte ptr [rax + 0x63], cl; or al, 0x8a; add rcx, rdx; jmp rcx; 
0x000000000047069f: or byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffb0; 
0x0000000000468acb: or byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x2d7e3; movsxd rax, dword ptr [rdi + r12*4]; add rax, rdi; jmp rax; 
0x0000000000452e84: or byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fimul dword ptr [rcx + rcx*4 - 0x1a]; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000041608f: or byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000041ee67: or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000432c41: or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041eda5: or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000044fc37: or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xd; syscall; 
0x000000000044fdc9: or byte ptr [rax], al; add byte ptr [rax], al; mov rsi, r8; mov eax, 0xe; syscall; 
0x000000000043d3e9: or byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000043eb71: or byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000043eb71: or byte ptr [rax], al; add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x3eb80; ret; 
0x0000000000468943: or byte ptr [rax], al; add byte ptr [rcx], bh; ret 0x850f; 
0x0000000000421a50: or byte ptr [rax], al; add byte ptr [rip + 0xffff], ah; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000000401afb: or byte ptr [rax], al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000046b25a: or byte ptr [rax], dl; add byte ptr [rax], al; mov rbp, rsp; mov rsi, rbp; syscall; 
0x00000000004342fe: or byte ptr [rax], r8b; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000408687: or byte ptr [rbp + 0x31], al; ror byte ptr [rcx + rcx*4 - 0x40], 0x5b; pop rbp; ret; 
0x000000000047508b: or byte ptr [rbp + 0x41], bl; pop rsp; jmp rax; 
0x0000000000461ad0: or byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x000000000047653b: or byte ptr [rbp + 0x440f4cc9], al; ret 0x8d48; 
0x0000000000473c02: or byte ptr [rbp + 0x440f4cf6], al; ret 0x8b64; 
0x000000000044f5aa: or byte ptr [rbp + rcx*4 + 4], al; cmp byte ptr [rbp + 0x39], al; ret 0x820f; 
0x000000000044d9d9: or byte ptr [rbx + 0x1974fdf8], al; pop rbx; ret; 
0x000000000045d1cf: or byte ptr [rbx + 0x1f772ef9], al; lea rsi, [rip + 0x37f4c]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000040d73e: or byte ptr [rbx + 0x48], bl; sub eax, edx; pop rbp; pop r12; ret; 
0x000000000041787f: or byte ptr [rbx + 0x4b7709f8], al; lea rdx, [rip + 0x6b29c]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000045f363: or byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x000000000040d2f4: or byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000403095: or byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000440258: or byte ptr [rbx + 0x94801e2], al; ret 0x8948; 
0x0000000000410d07: or byte ptr [rbx + 0x9e4012d], al; add byte ptr [rcx], al; ret; 
0x000000000045ec26: or byte ptr [rbx - 0x3b7cb7fe], cl; or byte ptr [rbx + 0x5d], bl; ret; 
0x00000000004095d0: or byte ptr [rbx - 0x76fefbb9], al; ret 0xe281; 
0x0000000000405687: or byte ptr [rbx - 0x7bf00008], al; cmp esi, 0x8348ffff; ret 0xeb04; 
0x0000000000406e86: or byte ptr [rbx - 0x7cb70029], al; ret 0x8908; 
0x0000000000467648: or byte ptr [rbx], al; add byte ptr [rax], al; lea rax, [rax + rdx*4]; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000045f304: or byte ptr [rbx], al; add byte ptr [rax], al; mov esi, 0x80; syscall; 
0x0000000000467687: or byte ptr [rbx], al; add byte ptr [rax], al; ret; 
0x000000000047826b: or byte ptr [rcx + 0x29], cl; ret 0x894c; 
0x00000000004422d2: or byte ptr [rcx + 0x3e895], cl; add dh, dh; ret 0x7402; 
0x000000000047b8e8: or byte ptr [rcx + 0x63], cl; add al, 0x87; add rax, r15; jmp rax; 
0x000000000047a68b: or byte ptr [rcx + 1], cl; ret 0x894c; 
0x000000000041239b: or byte ptr [rcx + 1], cl; ror dword ptr [rax + 0xf], 1; scasd eax, dword ptr [rdi]; ret 0x8948; 
0x0000000000477580: or byte ptr [rcx + rax - 0x3e], cl; mov rax, rdx; pop rbx; ret; 
0x000000000047d9c7: or byte ptr [rcx + rcx*4 + 0x54], cl; and al, 0x10; call rax; 
0x0000000000407d8f: or byte ptr [rcx + rcx*4 - 0x12], cl; mov rdi, r12; call rax; 
0x000000000047980a: or byte ptr [rcx + rcx*4 - 0x16], cl; add rax, qword ptr [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x00000000004799a3: or byte ptr [rcx + rcx*4 - 0x16], cl; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x000000000043fdda: or byte ptr [rcx + rcx*4 - 0x18], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000040b3e6: or byte ptr [rcx + rcx*4 - 0x20], al; pop rbp; pop r12; ret; 
0x000000000046d693: or byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop r12; ret; 
0x000000000047a166: or byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000043f707: or byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop r12; ret; 
0x0000000000461b98: or byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000440f70: or byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000000047d9ea: or byte ptr [rcx + rcx*4 - 0x3e], cl; mov rdi, r15; mov rsi, qword ptr [rbx]; call rax; 
0x0000000000408723: or byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000004097d3: or byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x000000000040991f: or byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000407dd9: or byte ptr [rcx + rcx*4 - 0xe], cl; mov rsi, r13; add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x0000000000407bf9: or byte ptr [rcx + rcx*4 - 0xe], cl; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000040a872: or byte ptr [rcx + rcx*4 - 1], cl; call rax; 
0x0000000000478272: or byte ptr [rcx - 0x2feeb728], cl; pop rbp; pop rbx; ret; 
0x000000000044fae7: or byte ptr [rcx - 0x3fcebf8d], cl; pop rbx; ret; 
0x0000000000476965: or byte ptr [rcx - 0x75], cl; adc byte ptr [rax + 1], cl; ret 0x3949; 
0x000000000040accb: or byte ptr [rcx - 0x75], cl; sub byte ptr [r13 - 0x7b], r8b; sal byte ptr [rbx + rbp*2 + 0x49], 0x2b; and byte ptr [r8 + 1], r9b; ret; 
0x0000000000476964: or byte ptr [rcx - 0x75], r9b; adc byte ptr [rax + 1], cl; ret 0x3949; 
0x00000000004373e8: or byte ptr [rcx - 0x76b7f7be], cl; clc; ret; 
0x00000000004783b9: or byte ptr [rcx - 0x77], 0; mov eax, 1; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000000472572: or byte ptr [rcx - 0x77], al; ret; 
0x0000000000463fa9: or byte ptr [rcx - 0x77], al; xchg eax, esp; and al, 0xe8; add eax, dword ptr [rax]; add dh, dh; ret 0x7402; 
0x000000000045667c: or byte ptr [rcx - 0x77], cl; or cl, r13b; ret 0xfffd; 
0x0000000000455f3b: or byte ptr [rcx - 0x77], cl; or cl, r13b; ret; 
0x000000000046a133: or byte ptr [rcx - 0x77], cl; or r11b, r13b; fild dword ptr [rcx - 0x75]; add byte ptr [r11 - 0x78f0d008], r8b; push -0x76ffffff; ret 0xc083; 
0x000000000040a89c: or byte ptr [rcx - 0x77], cl; sbb byte ptr [r8 + 1], r9b; ret 0x148; 
0x0000000000463fb6: or byte ptr [rcx - 0x77], cl; test byte ptr [rax + rax*8], ah; add byte ptr [rax], al; add dh, dh; ret 0x7404; 
0x000000000043faa8: or byte ptr [rcx], al; je 0x3fae5; test byte ptr [r10 + 8], 1; jne 0x3faf0; ret; 
0x000000000043faaf: or byte ptr [rcx], al; jne 0x3faf0; ret; 
0x000000000045140f: or byte ptr [rcx], bh; ret 0xef72; 
0x0000000000415779: or byte ptr [rcx], dh; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x00000000004622eb: or byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x0000000000441f86: or byte ptr [rcx], dh; rol byte ptr [rax - 0x6af0ffc8], cl; ret 0x8348; 
0x0000000000442757: or byte ptr [rcx], dh; rol byte ptr [rax - 0x6af0ffc8], cl; ret 0x8d48; 
0x0000000000442736: or byte ptr [rcx], dh; rol byte ptr [rax - 0x6bf0ffc8], cl; ret 0x8d48; 
0x0000000000467b50: or byte ptr [rdi + 0x31d], 4; xor eax, eax; ret; 
0x000000000047d96c: or byte ptr [rdi + 2], dh; sbb eax, eax; ret; 
0x000000000047d96b: or byte ptr [rdi + 2], r14b; sbb eax, eax; ret; 
0x0000000000411109: or byte ptr [rdi], al; add al, ch; fistp word ptr [rdi + rdi*8]; jmp qword ptr [rsi + 0x66]; 
0x000000000040f3a7: or byte ptr [rdi], cl; mov dh, 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000462130: or byte ptr [rdi], cl; mov dh, 0xc0; add rsp, 0x58; ret; 
0x000000000047860b: or byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x0000000000479b9d: or byte ptr [rdi], cl; test byte ptr [rax + rax + 0x438b0000], al; adc byte ptr [rbp + 0x51840fc0], al; add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x000000000047cea3: or byte ptr [rdi], cl; test dword ptr [rax + 0x48fff847], edi; mov dword ptr [rcx], edx; add rsp, 8; ret; 
0x000000000047ce51: or byte ptr [rdi], cl; test dword ptr [rip + 0x48fff848], eax; mov eax, dword ptr [rax]; add rsp, 8; ret; 
0x000000000043ed79: or byte ptr [rdi], cl; xchg eax, ebp; ret 0x8948; 
0x00000000004025be: or byte ptr [rdi], cl; xchg eax, esp; ret 0xd284; 
0x000000000043bec1: or byte ptr [rdx + 0xa], dh; vmovq qword ptr [rdi], xmm0; vmovq qword ptr [rsi - 8], xmm0; ret; 
0x000000000042d013: or byte ptr [rdx + 0xf], dh; mov rsi, qword ptr [rsi]; mov rcx, qword ptr [rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000043ea8e: or byte ptr [rdx], al; add byte ptr [rax - 0x75], cl; and al, 8; add rsp, 0x28; ret; 
0x000000000047b8e2: or byte ptr [rip + 0x438b7277], al; or byte ptr [rcx + 0x63], cl; add al, 0x87; add rax, r15; jmp rax; 
0x000000000043f404: or byte ptr [rsi + 0x10], bh; mov eax, 0x48; syscall; 
0x0000000000418824: or byte ptr [rsi + 1], cl; add byte ptr [rax - 0x73], cl; adc eax, 0x17041; cmovne rax, rdx; ret; 
0x000000000040a4d6: or byte ptr [rsi - 1], bh; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x0000000000422571: or byte ptr [rsi], al; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004078ac: or ch, bl; or eax, 0x43b60f90; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000473970: or cl, byte ptr [rax + 0x3b]; add eax, 0x3be38; jae 0x73986; mov rdx, qword ptr [rip + 0x3be37]; add word ptr [rdx + rax*2], 1; ret; 
0x000000000040a1ac: or cl, byte ptr [rax + 1]; ret 0x8948; 
0x000000000040d2e6: or cl, byte ptr [rax + 1]; ret 0x8949; 
0x0000000000472cb4: or cl, byte ptr [rax - 0x73]; adc eax, 0x3ae04; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x0000000000469669: or cl, byte ptr [rax - 0x73]; add cl, byte ptr [rax - 0x77]; fimul dword ptr [rax - 0x77]; ret; 
0x000000000046d4d2: or cl, byte ptr [rax - 0x73]; or eax, 0x405a6; mov qword ptr [rax], rcx; pop rbp; ret; 
0x00000000004077e3: or cl, byte ptr [rax - 0x77]; je 0x780c; cmp byte ptr [rax - 0x75], cl; je 0x7811; xor byte ptr [rcx - 0x7d], cl; ret 0x4102; 
0x000000000045fde1: or cl, byte ptr [rax - 0x7d]; ret 0x4801; 
0x0000000000478f4a: or cl, byte ptr [rax - 0x7d]; ret 0xf08; 
0x000000000040bf90: or cl, byte ptr [rax - 0x7d]; ret; 
0x000000000040e6eb: or cl, byte ptr [rdx]; add byte ptr [rbx + 0x307f01f8], al; ret; 
0x000000000040e6df: or cl, byte ptr [rdx]; add byte ptr [rcx], al; ret; 
0x0000000000404de1: or cl, ch; paddb mm7, mm7; jmp qword ptr [rsi + 0xf]; 
0x0000000000456680: or cl, ch; ret 0xfffd; 
0x0000000000457ddb: or cl, ch; ret 0xfffe; 
0x0000000000455f3f: or cl, ch; ret; 
0x000000000045667f: or cl, r13b; ret 0xfffd; 
0x0000000000457dda: or cl, r13b; ret 0xfffe; 
0x0000000000455f3e: or cl, r13b; ret; 
0x000000000041e832: or dh, al; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x0000000000429f83: or dh, bl; movq qword ptr [rdi], mm1; ret; 
0x0000000000411c1a: or dh, byte ptr [rcx + rcx - 0x37feb800]; add rdx, qword ptr [rip + 0x9ab20]; cmp rax, rdx; jne 0x11c2e; ret; 
0x0000000000402ef9: or dh, byte ptr [rdi + 0x27]; lea rdx, [rip + 0x7e391]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000045f036: or dh, byte ptr [rdi + rcx + 0x48]; cmp eax, esi; ja 0x5f030; lea eax, [rdx + rdi]; ret; 
0x000000000040ff16: or dh, byte ptr [rdi + rcx + 0x48]; cmp eax, esi; ja 0xff10; lea eax, [rdx + rdi]; ret; 
0x000000000040b3f8: or dh, byte ptr [rsp + rsi*4 + 0x48]; add esp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x00000000004400b4: or dh, dh; ret 0x7401; 
0x0000000000411bf6: or dh, dh; ret 0x7502; 
0x0000000000440028: or dh, dh; ret 0xf01; 
0x0000000000412182: or dl, al; or dword ptr [rax], eax; syscall; 
0x000000000040fb40: or dword ptr [rax + 0x74], 0x80; mov rax, qword ptr [rax + 0x68]; test rax, rax; jne 0xfb40; ret; 
0x00000000004427b9: or dword ptr [rax + 0xf], ecx; ror dword ptr [r8 - 0x77], 5; ret; 
0x0000000000442ceb: or dword ptr [rax + 1], 0xffffffd8; jmp rax; 
0x000000000040789d: or dword ptr [rax + rax*8 - 0x38b7918c], eax; ret 0xfff8; 
0x0000000000435bae: or dword ptr [rax - 1], ecx; ret 0xc148; 
0x0000000000456e5a: or dword ptr [rax - 1], edi; jbe 0x56e30; mov qword ptr [rdi], rsi; ret; 
0x000000000045d0ca: or dword ptr [rax - 1], edi; jbe 0x5d0a0; mov qword ptr [rdi], rsi; ret; 
0x0000000000417c14: or dword ptr [rax], eax; adc byte ptr [rax - 0x73], cl; adc eax, 0x240a2; lea rax, [rip + 0x23ffb]; cmovne rax, rdx; ret; 
0x0000000000418484: or dword ptr [rax], eax; adc byte ptr [rax - 0x73], cl; adc eax, 0xfffffd02; lea rax, [rip + 0x232eb]; cmove rax, rdx; ret; 
0x000000000046e419: or dword ptr [rax], eax; add byte ptr [rax - 0x14343], al; jmp qword ptr [rsi + 0xf]; 
0x000000000041ed77: or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004341af: or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041ecb5: or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000410d50: or dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000043f7ec: or dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000043f832: or dword ptr [rax], eax; add byte ptr [rax], al; xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x0000000000402af4: or dword ptr [rax], eax; add byte ptr [rcx + rcx*4 + 0x2d], cl; ret 0xab7; 
0x0000000000452b2f: or dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x1e], cl; mov rsi, r13; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x00000000004188ec: or dword ptr [rax], eax; add cl, byte ptr [rax - 0x73]; adc eax, 0x2378a; lea rax, [rip + 0x23823]; cmove rax, rdx; ret; 
0x000000000041876c: or dword ptr [rax], eax; add cl, byte ptr [rax - 0x73]; adc eax, 0x238fa; lea rax, [rip + 0x23993]; cmove rax, rdx; ret; 
0x00000000004185fc: or dword ptr [rax], eax; add cl, byte ptr [rax - 0x73]; adc eax, 0x23a7a; lea rax, [rip + 0x23b13]; cmove rax, rdx; ret; 
0x0000000000418872: or dword ptr [rax], eax; add cl, byte ptr [rax - 0x73]; adc eax, 0x23bb4; lea rax, [rip + 0x23bed]; cmove rax, rdx; ret; 
0x00000000004186f2: or dword ptr [rax], eax; add cl, byte ptr [rax - 0x73]; adc eax, 0x23d24; lea rax, [rip + 0x23d5d]; cmove rax, rdx; ret; 
0x0000000000418582: or dword ptr [rax], eax; add cl, byte ptr [rax - 0x73]; adc eax, 0x23ea4; lea rax, [rip + 0x23edd]; cmove rax, rdx; ret; 
0x00000000004188cc: or dword ptr [rax], eax; add cl, byte ptr [rax - 0x73]; adc eax, 0x23f8a; lea rax, [rip + 0x23fd3]; cmove rax, rdx; ret; 
0x000000000041874c: or dword ptr [rax], eax; add cl, byte ptr [rax - 0x73]; adc eax, 0x240fa; lea rax, [rip + 0x24143]; cmove rax, rdx; ret; 
0x00000000004186a0: or dword ptr [rax], eax; add cl, byte ptr [rax - 0x73]; adc eax, 0x24a06; lea rax, [rip + 0x24a5f]; cmove rax, rdx; ret; 
0x00000000004187cb: or dword ptr [rax], eax; add cl, byte ptr [rax - 0x73]; add eax, 0x1d3eb; lea rdx, [rip + 0x1ec74]; cmovne rax, rdx; ret; 
0x0000000000417beb: or dword ptr [rax], eax; add cl, byte ptr [rax - 0x73]; add eax, 0x1deeb; lea rdx, [rip + 0x1e0a4]; cmovne rax, rdx; ret; 
0x0000000000417b8b: or dword ptr [rax], eax; add cl, byte ptr [rax - 0x73]; add eax, 0xdfb; lea rdx, [rip + 0x24e4]; cmovne rax, rdx; ret; 
0x00000000004185b4: or dword ptr [rax], eax; add dh, byte ptr [rdi + rdi - 0xa]; ret 0x7520; 
0x000000000041742b: or dword ptr [rax], eax; add dword ptr [rax - 0x77], ecx; ret 0x2d74; 
0x00000000004116b7: or dword ptr [rax], eax; add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rip + 0x9b069], eax; ret; 
0x0000000000411707: or dword ptr [rax], eax; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0x9afec], rax; ret; 
0x00000000004116d7: or dword ptr [rax], eax; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0x9b024], rax; ret; 
0x000000000041169b: or dword ptr [rax], eax; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x00000000004168d1: or dword ptr [rax], eax; add dword ptr [rbx + 0x5d], ebx; pop r12; ret; 
0x0000000000410cb0: or dword ptr [rax], eax; add dword ptr [rip + 0x9e45b], 1; pop rbx; ret; 
0x0000000000411c1c: or dword ptr [rax], eax; add rax, rcx; add rdx, qword ptr [rip + 0x9ab20]; cmp rax, rdx; jne 0x11c2e; ret; 
0x000000000041451d: or dword ptr [rax], eax; add rsp, 0x10; pop rbp; ret; 
0x0000000000410d14: or dword ptr [rax], eax; cmp eax, 1; jg 0x10d1c; ret; 
0x0000000000411c26: or dword ptr [rax], eax; cmp rax, rdx; jne 0x11c2e; ret; 
0x0000000000418969: or dword ptr [rax], eax; cmp rax, rdx; lea rdx, [rip + 0x1c8bb]; lea rax, [rip + 0x1c474]; cmove rax, rdx; ret; 
0x0000000000417c89: or dword ptr [rax], eax; cmp rax, rdx; lea rdx, [rip + 0x1d92b]; lea rax, [rip + 0x1d784]; cmove rax, rdx; ret; 
0x0000000000418929: or dword ptr [rax], eax; cmp rax, rdx; lea rdx, [rip + 0x7a9b]; lea rax, [rip + 0x75c4]; cmove rax, rdx; ret; 
0x00000000004184b9: or dword ptr [rax], eax; cmp rax, rdx; lea rdx, [rip + 0x7c3b]; lea rax, [rip + 0x7704]; cmove rax, rdx; ret; 
0x0000000000417b2b: or dword ptr [rax], eax; lea rax, [rip + 0x1d09b]; lea rdx, [rip + 0x221b4]; cmovne rax, rdx; ret; 
0x0000000000412218: or dword ptr [rax], eax; lea rax, [rip + 0x344f]; mov qword ptr [rip + 0x9a558], rax; ret; 
0x0000000000414516: or dword ptr [rax], eax; lea rax, [rip + 0x98281]; add rsp, 0x10; pop rbp; ret; 
0x00000000004160e4: or dword ptr [rax], eax; lea rax, [rip - 0x66d]; mov qword ptr [rip + 0x96694], rax; lea rax, [rip - 0xa8b]; mov qword ptr [rip + 0x9667e], rax; ret; 
0x00000000004160f2: or dword ptr [rax], eax; lea rax, [rip - 0xa8b]; mov qword ptr [rip + 0x9667e], rax; ret; 
0x0000000000411b48: or dword ptr [rax], eax; mov dword ptr [r11 + 0x24], ebp; pop rbp; mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x00000000004160ab: or dword ptr [rax], eax; mov dword ptr [rip + 0x990c9], 0; ret; 
0x0000000000411695: or dword ptr [rax], eax; mov dword ptr [rip + 0x9b093], 1; ret; 
0x0000000000410ca9: or dword ptr [rax], eax; mov qword ptr [rip + 0x9e466], rbx; add dword ptr [rip + 0x9e45b], 1; pop rbx; ret; 
0x0000000000410c45: or dword ptr [rax], eax; ret; 
0x00000000004101ac: or dword ptr [rax], eax; syscall; 
0x0000000000413da4: or dword ptr [rax], eax; syscall; pop rbp; ret; 
0x000000000041600c: or dword ptr [rax], eax; syscall; pop rbx; ret; 
0x0000000000410d33: or dword ptr [rax], eax; syscall; ret; 
0x0000000000411df4: or dword ptr [rax], eax; test eax, eax; jne 0x11e00; ret; 
0x0000000000422146: or dword ptr [rbp - 0xcffffff], 0xf; outsd dx, dword ptr [rsi]; push rdi; ret 0xff3; 
0x000000000047256f: or dword ptr [rbx - 0x76bef791], ecx; ret; 
0x000000000040ca10: or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x000000000043da52: or dword ptr [rcx - 0x77], 0xc68348d2; add dword ptr [rax - 0x7d], ecx; ret 0x8801; 
0x0000000000401be6: or dword ptr [rdi + 0x4adb30], edi; jmp rax; 
0x0000000000417882: or dword ptr [rdi + 0x4b], esi; lea rdx, [rip + 0x6b29c]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000046d5ab: or dword ptr [rdi - 0x2e], esi; mov rax, r8; ret; 
0x000000000047dcf9: or dword ptr [rdi], 0xffffffb6; push rbx; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000407899: or dword ptr [rdi], ecx; mov dh, 0x40; or dword ptr [rax + rax*8 - 0x38b7918c], eax; ret 0xfff8; 
0x0000000000451ee3: or dword ptr [rdi], ecx; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000046b49b: or dword ptr [rip + 0x41c66], 1; ret; 
0x0000000000446129: or dword ptr [rip + 0x692e4], 2; add rsp, 8; ret; 
0x000000000046c7a5: or dword ptr [rsi - 0x18], esi; cmp ecx, edx; je 0x6c700; mov eax, edx; sub eax, ecx; ret; 
0x00000000004224ac: or dword ptr [rsi], eax; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004398d1: or eax, 0x1c478d48; ret; 
0x000000000045d231: or eax, 0x37fae; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000045cb92: or eax, 0x3834d; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000045cbf0: or eax, 0x383ab; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000045d242: or eax, 0x401f0f08; add byte ptr [rbx - 0x7cb7fbbe], cl; ret 0xbe04; 
0x000000000045cafa: or eax, 0x401f0f08; add byte ptr [rcx - 0x7d], cl; ret; 
0x000000000046d4d5: or eax, 0x405a6; mov qword ptr [rax], rcx; pop rbp; ret; 
0x00000000004078ae: or eax, 0x43b60f90; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000434e32: or eax, 0x48c0bc0f; lea eax, [rdi + rax]; ret; 
0x00000000004604f5: or eax, 0x48fad348; test edx, edx; je 0x60520; bsf rax, rdx; ret; 
0x000000000045a8c0: or eax, 0x4f4bb; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000459e08: or eax, 0x4ff73; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x0000000000434b6a: or eax, 0x52971; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000433755: or eax, 0x53d86; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x00000000004334fa: or eax, 0x53fe1; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000431c25: or eax, 0x558b6; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000402f22: or eax, 0x5be43145; pop rbp; mov rax, r12; pop r12; ret; 
0x00000000004127ba: or eax, 0x5d5bc031; pop r12; ret; 
0x00000000004398c8: or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x0000000000439218: or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x000000000041e8c7: or eax, 0x83480000; ret 0x4910; 
0x0000000000432761: or eax, 0x83480000; ret 0xe910; 
0x000000000041e8f5: or eax, 0x83480000; ret 0xeb10; 
0x0000000000440a1b: or eax, 0x88c48148; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; pop rbp; ret; 
0x000000000046f21d: or eax, 0x8b490000; test byte ptr [rax], ah; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x0000000000417b92: or eax, 0x8d480000; adc eax, 0x24e4; cmovne rax, rdx; ret; 
0x0000000000406f85: or eax, 0x8d4c6c77; adc eax, 0x7a3d1; mov r8d, r8d; movsxd rdi, dword ptr [r10 + r8*4]; add rdi, r10; jmp rdi; 
0x000000000040da7f: or eax, 0xa01bc; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x00000000004021d5: or eax, 0xad11e; mov dword ptr [rip + 0xad11c], edx; pop rbx; ret; 
0x00000000004611c2: or eax, 0xc2bc0f48; shr rax, 2; ret; 
0x0000000000405319: or eax, 0xe90007c0; idiv edi; jmp qword ptr [rsi + 0xf]; 
0x00000000004547ed: or eax, 0xeb830000; add dword ptr [rax - 0x50743], eax; jmp qword ptr [rax]; 
0x0000000000429e2a: or eax, 0xef00ff2; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429e33: or eax, 0xf7f0ff3; ret; 
0x0000000000440c4b: or eax, 0xffffffa0; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x000000000043e7fd: or eax, 0xffffffff; ret; 
0x0000000000420a69: or eax, 1; ret; 
0x000000000045f6f2: or eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; add eax, 0x834; cmove rax, rdx; ret; 
0x000000000041eaa7: or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000432901: or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041ead5: or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000043f881: or eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000043f881: or eax, dword ptr [rax]; add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x3f890; ret; 
0x000000000045283b: or eax, dword ptr [rax]; add byte ptr [rcx + rcx*4 - 0x1e], cl; mov rsi, r13; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x0000000000406b31: or eax, dword ptr [rbp + 0x31]; rcr byte ptr [rbx + 0x5d], 0x4c; mov eax, eax; pop r12; ret; 
0x000000000044d9d3: or eax, dword ptr [rbx + 0x438901e8]; or byte ptr [rbx + 0x1974fdf8], al; pop rbx; ret; 
0x0000000000434f47: or eax, ecx; shl rdx, 0x30; or rax, rdx; bsf rax, rax; lea rax, [rdi + rax]; ret; 
0x0000000000434f4e: or eax, edx; bsf rax, rax; lea rax, [rdi + rax]; ret; 
0x0000000000410944: or ebp, dword ptr [rbx]; push rax; sbb byte ptr [rbx - 0x2fd6efb9], cl; ret; 
0x00000000004403d4: or ebp, ecx; push rsi; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x0000000000425cc3: or ebx, edx; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429ff3: or ebx, esi; movq qword ptr [rdi], mm1; ret; 
0x000000000043c0f1: or ecx, dword ptr [rax - 0x73]; adc al, 0xe; cmp rdi, rdx; jb 0x3c0fe; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000044f58f: or ecx, dword ptr [rax - 0x7d]; ret 0x8301; 
0x0000000000419f77: or ecx, esi; bsf rcx, rcx; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x0000000000420a60: or ecx, esi; sub rax, rcx; je 0x20a70; sbb eax, eax; or eax, 1; ret; 
0x000000000047f4dd: or edi, dword ptr [rax - 0x3b7cb701]; or byte ptr [rbx + 0x5d], bl; ret; 
0x000000000043fb64: or edi, eax; mov qword ptr [rdx], rdi; pop rbx; pop rbp; ret; 
0x0000000000472eb2: or edi, ebp; jmp qword ptr [rsi + 0x66]; 
0x0000000000422f03: or edi, edi; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000438fb3: or edi, edi; loope 0x3901d; nop dword ptr cs:[rax + rax]; mov byte ptr [rdi], dh; ret; 
0x00000000004395d3: or edi, edi; loope 0x3963d; nop dword ptr cs:[rax + rax]; mov byte ptr [rdi], dh; lea rax, [rdi]; ret; 
0x000000000043f839: or edx, 0x40; mov eax, ecx; syscall; 
0x00000000004355af: or edx, ecx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x00000000004612ab: or edx, ecx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x00000000004605a0: or edx, ecx; bts rdx, r11; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x000000000047cbe4: or esi, 2; mov edi, 1; call rax; 
0x000000000043c0ef: or esi, dword ptr [rbx + rcx + 0x48]; lea edx, [rsi + rcx]; cmp rdi, rdx; jb 0x3c0fe; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043ce43: or esi, ebx; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000429f13: or esi, ebx; movq qword ptr [rdi], mm1; ret; 
0x000000000040ca11: or esp, dword ptr [rax]; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000000417a27: or qword ptr [r8], r8; syscall; 
0x00000000004427b8: or qword ptr [rax + 0xf], rcx; ror dword ptr [r8 - 0x77], 5; ret; 
0x000000000043f838: or r10d, 0x40; mov eax, ecx; syscall; 
0x000000000046a136: or r11b, r13b; fild dword ptr [rcx - 0x75]; add byte ptr [r11 - 0x78f0d008], r8b; push -0x76ffffff; ret 0xc083; 
0x000000000042a062: or r11b, r14b; movq qword ptr [rdi], mm1; ret; 
0x0000000000429ff2: or r11d, r14d; movq qword ptr [rdi], mm1; ret; 
0x000000000041e831: or r14b, al; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x0000000000429f82: or r14b, r11b; movq qword ptr [rdi], mm1; ret; 
0x0000000000429f12: or r14d, r11d; movq qword ptr [rdi], mm1; ret; 
0x000000000045d241: or rax, 0x401f0f08; add byte ptr [rbx - 0x7cb7fbbe], cl; ret 0xbe04; 
0x000000000045caf9: or rax, 0x401f0f08; add byte ptr [rcx - 0x7d], cl; ret; 
0x000000000043e7fc: or rax, 0xffffffffffffffff; ret; 
0x0000000000434f46: or rax, rcx; shl rdx, 0x30; or rax, rdx; bsf rax, rax; lea rax, [rdi + rax]; ret; 
0x0000000000434f4d: or rax, rdx; bsf rax, rax; lea rax, [rdi + rax]; ret; 
0x0000000000419f76: or rcx, rsi; bsf rcx, rcx; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x0000000000420a5f: or rcx, rsi; sub rax, rcx; je 0x20a70; sbb eax, eax; or eax, 1; ret; 
0x000000000043fb63: or rdi, rax; mov qword ptr [rdx], rdi; pop rbx; pop rbp; ret; 
0x00000000004355ae: or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x00000000004612aa: or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x000000000046059f: or rdx, rcx; bts rdx, r11; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x00000000004160f1: or word ptr [rax], ax; lea rax, [rip - 0xa8b]; mov qword ptr [rip + 0x9667e], rax; ret; 
0x00000000004160ff: or word ptr [rax], ax; ret; 
0x000000000040b909: out 0, eax; add byte ptr [rax], al; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000047ab94: out 0x20, eax; je 0x7aba8; movss xmm0, dword ptr [rip + 0x21a98]; divss xmm0, dword ptr [rip + 0x21a94]; ret; 
0x0000000000401af9: out 0x23, eax; or byte ptr [rax], al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000045f280: out 0x41, eax; and ebx, 0xffffffbb; cmp r11d, 0xa; je 0x5f28c; ret; 
0x000000000045a225: out 0x44, eax; mov dword ptr [rbp - 0x4e8], ecx; call qword ptr [rbx + 0x38]; 
0x00000000004552d6: out 0x44, eax; mov dword ptr [rbp - 0x4f8], ecx; call qword ptr [rax + 0x38]; 
0x00000000004548eb: out 0x44, eax; mov dword ptr [rbp - 0x500], ecx; call qword ptr [rbx + 0x38]; 
0x000000000045b459: out 0x44, eax; mov dword ptr [rbp - 0x508], ecx; mov qword ptr [rbp - 0x500], r8; call qword ptr [rax + 0x38]; 
0x0000000000450279: out 0x48, al; mov esi, dword ptr [rsp + 0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x000000000045005d: out 0x48, eax; mov edx, ebp; call rbx; 
0x000000000045a09b: out 0x48, eax; sar eax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x000000000043cd3f: out 0x49, eax; jmp qword ptr [rdx - 0x2f]; 
0x0000000000423ff6: out 0x4c, al; mov dword ptr [rdi - 0x12], ebx; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004500d8: out 0x4c, al; mov edi, ebp; call rbx; 
0x000000000044ff95: out 0x4c, al; mov edi, edi; call rbx; 
0x0000000000452293: out 0x4c, al; mov edi, esi; call qword ptr [rcx + 0x38]; 
0x000000000046f457: out 0x4c, eax; mov dword ptr [rbp - 0xe8], eax; call rax; 
0x0000000000423e26: out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423f22: out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000423e6e: out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000459bb6: out 0x4c, eax; sub ebx, esi; mov r13, rbx; sar r13, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x0000000000453d3e: out 0x4d, eax; sub edi, ebp; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x000000000045e79e: out 0x5b, al; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x000000000040cc69: out 0x5b, al; mov rdi, rbp; pop rbp; pop r12; pop r13; jmp rax; 
0x00000000004804d6: out 0x5b, al; ret; 
0x00000000004157b6: out 0x6f, al; or dword ptr [rax], eax; syscall; 
0x000000000044be06: out 0x6f, al; sti; inc dword ptr [rcx - 0x77]; ret; 
0x00000000004477f5: out 0x72, eax; ret; 
0x0000000000451cdd: out 0x83, al; ret; 
0x000000000046e934: out 0x83, eax; ret; 
0x00000000004799a9: out 0x89, al; out dx, eax; call qword ptr [rax]; 
0x000000000047984d: out 0x89, al; out dx, eax; call qword ptr [rbx]; 
0x0000000000479813: out 0x89, al; out dx, eax; call rax; 
0x0000000000461ada: out 0x89, al; out dx, eax; mov eax, 0xe4; syscall; 
0x00000000004256e5: out 0xd8, eax; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043db67: out 0xe8, eax; ret; 
0x00000000004502b0: out 0xe9, al; ret; 
0x000000000043d304: out 0xf0, al; mov edx, 0; pop rbx; cmove rax, rdx; ret; 
0x00000000004297fa: out 0xf3, al; movq qword ptr [rdi - 0x10], mm1; ret; 
0x000000000042987a: out 0xf3, eax; movq qword ptr [rdi - 0x10], mm1; ret; 
0x00000000004646c2: out 0xf9, eax; jmp qword ptr [rsi + 0x66]; 
0x000000000046fa18: out 0xff, eax; inc dword ptr [rbx - 0x9b43]; jmp qword ptr [rsi + 0xf]; 
0x0000000000470494: out 0xff, eax; jmp qword ptr [rsi + 0xf]; 
0x000000000045b027: out 0xff, eax; push rax; cmp byte ptr [rax + 0x39], cl; ret; 
0x0000000000443882: out 1, eax; add byte ptr [rax - 0x73], cl; mov ah, 0x24; ret 0; 
0x000000000041881f: out 2, al; lea rax, [rip + 0x14e08]; lea rdx, [rip + 0x17041]; cmovne rax, rdx; ret; 
0x0000000000417cf6: out 2, al; lea rax, [rip + 0x3a21]; lea rdx, [rip + 0x526a]; cmovne rax, rdx; ret; 
0x000000000041850d: out 2, al; lea rax, [rip + 0x7ffa]; lea rdx, [rip + 0x21af3]; cmovne rax, rdx; ret; 
0x0000000000440ac3: out 6, eax; add byte ptr [rdx + 0x64], bh; test eax, eax; cmove eax, edx; ret; 
0x00000000004185a8: out 8, al; je 0x185d8; ret; 
0x0000000000418718: out 8, al; je 0x18748; ret; 
0x0000000000418898: out 8, al; je 0x188c8; ret; 
0x00000000004805eb: out dx, al; add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x00000000004586fa: out dx, al; add dword ptr [rax - 0x92f43], eax; jmp qword ptr [rax]; 
0x0000000000407ddf: out dx, al; add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x000000000047618e: out dx, al; fdivr st(4); jmp qword ptr [rsi + 0x2e]; 
0x0000000000429c00: out dx, al; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x12], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000043e94a: out dx, al; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000000423ffa: out dx, al; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043e9c4: out dx, al; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000000407bff: out dx, al; mov rdi, r12; call rax; 
0x000000000046f454: out dx, al; mov rdi, r12; mov qword ptr [rbp - 0xe8], r8; call rax; 
0x0000000000453d3b: out dx, al; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x0000000000452843: out dx, al; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x000000000045dfcd: out dx, al; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x000000000044ffaa: out dx, al; mov rdx, rbp; mov rsi, r14; mov rdi, r12; call rbx; 
0x0000000000429c0a: out dx, al; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000043405e: out dx, al; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000040839d: out dx, al; ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x000000000048058e: out dx, al; sti; jmp qword ptr [rsi + 0xf]; 
0x0000000000425090: out dx, al; sub rdi, 0x40; lea r11, [rip + 0x5df33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004226c0: out dx, al; sub rdi, 0x40; lea r11, [rip + 0x60743]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000046b263: out dx, al; syscall; 
0x0000000000406c29: out dx, eax; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000046f0ad: out dx, eax; add dword ptr [rax + 0x39], ecx; ret; 
0x000000000043e062: out dx, eax; add dword ptr [rbp - 0x57c03b0], ecx; add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xc085; 
0x000000000046dedc: out dx, eax; add eax, dword ptr [rbp - 0x7b]; dec dword ptr [rdi]; lahf; ret 0x87e; 
0x000000000040fe4a: out dx, eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000040fea1: out dx, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000040a4de: out dx, eax; call qword ptr [rax + 0x18]; 
0x00000000004799ab: out dx, eax; call qword ptr [rax]; 
0x00000000004094ea: out dx, eax; call qword ptr [rbx + 0x10]; 
0x000000000045e835: out dx, eax; call qword ptr [rbx + 0x18]; 
0x000000000040d407: out dx, eax; call qword ptr [rbx + 0x40]; 
0x000000000047984f: out dx, eax; call qword ptr [rbx]; 
0x000000000040ceed: out dx, eax; call rax; 
0x000000000043e179: out dx, eax; call rbx; 
0x000000000041424d: out dx, eax; fcos; dec dword ptr [rax - 0x77]; ret; 
0x0000000000429c80: out dx, eax; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x11], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000425153: out dx, eax; lea r11, [rip + 0x5de74]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425094: out dx, eax; lea r11, [rip + 0x5df33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422783: out dx, eax; lea r11, [rip + 0x60684]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004226c4: out dx, eax; lea r11, [rip + 0x60743]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000460e16: out dx, eax; lea r9, [rsp + 0x30]; call rbx; 
0x000000000043ecaa: out dx, eax; mov eax, 0x4f; syscall; 
0x0000000000412e0e: out dx, eax; mov eax, 0xca; syscall; 
0x0000000000461adc: out dx, eax; mov eax, 0xe4; syscall; 
0x000000000043f7ea: out dx, eax; mov eax, 9; syscall; 
0x0000000000423e2a: out dx, eax; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423f26: out dx, eax; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000423e72: out dx, eax; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043f967: out dx, eax; mov rax, r12; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000000453d41: out dx, eax; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x0000000000460f61: out dx, eax; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x0000000000429c8a: out dx, eax; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000043415d: out dx, eax; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004101ab: out dx, eax; or dword ptr [rax], eax; syscall; 
0x000000000040af57: out dx, eax; pop rbp; mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x000000000045e7a2: out dx, eax; pop rbp; pop r12; jmp rax; 
0x000000000040cc6d: out dx, eax; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000040cbfc: out dx, eax; pop rbx; pop rbp; jmp rax; 
0x0000000000420d93: out dx, eax; push rsi; adc byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000420da8: out dx, eax; push rsi; and byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000420dbd: out dx, eax; push rsi; xor byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043b9b3: out dx, eax; ret 0xf66; 
0x00000000004083d9: out dx, eax; ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x00000000004222ac: out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x2373; 
0x0000000000422295: out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x3a73; 
0x000000000042227e: out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x5173; 
0x0000000000420d3a: out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042100f: out dx, eax; xchg eax, esi; add byte ptr [rax], 0; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004210cc: out dx, eax; xchg eax, esi; lock add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042107b: out dx, eax; xchg eax, esi; rol byte ptr [rax], 0; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043206e: outsb dx, byte ptr [rsi]; adc al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000439dde: outsb dx, byte ptr [rsi]; add dword ptr [rax], eax; add dh, dh; ret 0x7504; 
0x000000000045a144: outsb dx, byte ptr [rsi]; cli; dec dword ptr [rax - 0x77]; ret 0xb848; 
0x00000000004165ee: outsb dx, byte ptr [rsi]; mov ch, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000412216: outsb dx, byte ptr [rsi]; movsd dword ptr [rdi], dword ptr [rsi]; or dword ptr [rax], eax; lea rax, [rip + 0x344f]; mov qword ptr [rip + 0x9a558], rax; ret; 
0x000000000046db62: outsd dx, dword ptr [rsi]; adc ah, byte ptr [rsi + 0xf]; outsd dx, dword ptr [rsi]; retf 0xf66; outsd dx, dword ptr [rsi]; ret 0x290f; 
0x000000000043c33c: outsd dx, dword ptr [rsi]; adc byte ptr [rdi], cl; adc dword ptr [rdi + 0x20], esi; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x00000000004706e3: outsd dx, dword ptr [rsi]; adc dword ptr [rsi + 0xf], esp; outsd dx, dword ptr [rsi]; retf 0xf66; outsd dx, dword ptr [rsi]; ret 0x290f; 
0x000000000043bd06: outsd dx, dword ptr [rsi]; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rax], al; ret 0xf66; 
0x000000000046c1ed: outsd dx, dword ptr [rsi]; and ch, bh; jmp qword ptr [rsi + 0x66]; 
0x0000000000421e28: outsd dx, dword ptr [rsi]; call 0xf6906e1; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042d46c: outsd dx, dword ptr [rsi]; cli; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x0000000000421e0d: outsd dx, dword ptr [rsi]; fdiv dword ptr [rdx - 0x10f09928]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000421c0d: outsd dx, dword ptr [rsi]; fdiv qword ptr [rdx - 0x10f09924]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000418b68: outsd dx, dword ptr [rsi]; fmul qword ptr [rcx - 0x7d]; ret 0x7f10; 
0x000000000042d9ee: outsd dx, dword ptr [rsi]; fmul qword ptr [rcx - 0x7d]; ret 0xf10; 
0x0000000000421d8d: outsd dx, dword ptr [rsi]; fnstenv [rdx - 0x10f09927]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000418bae: outsd dx, dword ptr [rsi]; fsub st(1), st(0); imul edi, edi, -1; jmp qword ptr [rsi + 0x66]; 
0x0000000000421ad7: outsd dx, dword ptr [rsi]; movabs rbp, 0xf66d1ef0f66bdb2; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000421bd7: outsd dx, dword ptr [rsi]; movabs rsp, 0xf66d1ef0f66bcb2; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000472571: outsd dx, dword ptr [rsi]; or byte ptr [rcx - 0x77], al; ret; 
0x00000000004157b7: outsd dx, dword ptr [rsi]; or dword ptr [rax], eax; syscall; 
0x000000000042d5c4: outsd dx, dword ptr [rsi]; pop rcx; jmp qword ptr [rdx - 0x2f]; 
0x0000000000421d0d: outsd dx, dword ptr [rsi]; push rdi; fidiv dword ptr [rdx - 0x10f09926]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000421b0d: outsd dx, dword ptr [rsi]; push rdi; fnsave dword ptr [rdx - 0x10f09923]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042214d: outsd dx, dword ptr [rsi]; push rdi; ret 0xff3; 
0x00000000004220ad: outsd dx, dword ptr [rsi]; push rdi; ret; 
0x000000000046005a: outsd dx, dword ptr [rsi]; push rdi; xor byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret; 
0x0000000000439276: outsd dx, dword ptr [rsi]; push rsi; adc bl, dh; movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x000000000042193d: outsd dx, dword ptr [rsi]; push rsi; fbstp tbyte ptr [rdx - 0x10f09921]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000421a0d: outsd dx, dword ptr [rsi]; push rsi; fidiv word ptr [rdx - 0x10f09922]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004398c6: outsd dx, dword ptr [rsi]; push rsi; or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x0000000000439216: outsd dx, dword ptr [rsi]; push rsi; or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000439256: outsd dx, dword ptr [rsi]; push rsi; psllq mm1, qword ptr [rdi]; jg 0x39264; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x000000000046db6a: outsd dx, dword ptr [rsi]; ret 0x290f; 
0x000000000046e775: outsd dx, dword ptr [rsi]; ret 0x2be; 
0x00000000004600aa: outsd dx, dword ptr [rsi]; ret 0xf66; 
0x000000000043b95c: outsd dx, dword ptr [rsi]; ret; 
0x000000000046db66: outsd dx, dword ptr [rsi]; retf 0xf66; outsd dx, dword ptr [rsi]; ret 0x290f; 
0x000000000042216d: outsd dx, dword ptr [rsi]; sal byte ptr [rdx - 0x10f0992e], cl; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042228e: outsd dx, dword ptr [rsi]; sal byte ptr [rdx - 0x10f09930], 1; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x3a73; 
0x00000000004220cd: outsd dx, dword ptr [rsi]; sal qword ptr [rdx - 0x10f0992d], cl; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042220d: outsd dx, dword ptr [rsi]; sal qword ptr [rdx - 0x10f0992f], 1; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044fb4c: outsd dx, dword ptr [rsi]; sbb byte ptr [rbx + rcx*4 + 0x77], cl; and byte ptr [rbx + rcx*4 + 0x7f], cl; sub byte ptr [rcx - 0x3b76b310], cl; mov rbp, r9; jmp rdx; 
0x000000000044be07: outsd dx, dword ptr [rsi]; sti; inc dword ptr [rcx - 0x77]; ret; 
0x000000000044be90: outsd dx, dword ptr [rsi]; sti; jmp qword ptr [rsi + 0x66]; 
0x0000000000404de3: paddb mm7, mm7; jmp qword ptr [rsi + 0xf]; 
0x000000000041fe5d: pcmpeqb mm1, qword ptr [rdi + 0x10]; pmovmskb eax, xmm1; test eax, eax; jne 0x1fec0; xor eax, eax; ret; 
0x00000000004614e4: pcmpeqb mm3, qword ptr [rcx]; add rax, 2; ret; 
0x00000000004614cf: pcmpeqb mm3, qword ptr [rsi]; ret; 
0x000000000043544b: pcmpeqb mm4, mm0; pmovmskb edx, xmm4; test edx, edx; je 0x3545a; bsf eax, edx; ret; 
0x000000000041fe5c: pcmpeqb xmm1, xmmword ptr [rdi + 0x10]; pmovmskb eax, xmm1; test eax, eax; jne 0x1fec0; xor eax, eax; ret; 
0x000000000043544a: pcmpeqb xmm4, xmm0; pmovmskb edx, xmm4; test edx, edx; je 0x3545a; bsf eax, edx; ret; 
0x000000000047354d: pcmpeqd mm1, qword ptr [rdi + 0x10]; pmovmskb eax, xmm1; test eax, eax; jne 0x735b0; xor eax, eax; ret; 
0x000000000047354c: pcmpeqd xmm1, xmmword ptr [rdi + 0x10]; pmovmskb eax, xmm1; test eax, eax; jne 0x735b0; xor eax, eax; ret; 
0x00000000004731e4: pcmpistri xmm0, xmmword ptr [rax], 0x12; jae 0x731e0; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000000473152: pcmpistri xmm1, xmm1, 0x3a; cmp edx, ecx; jle 0x73200; ret; 
0x000000000043bdd0: pcmpistri xmm3, xmm3, 0x3a; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000000043d056: pextrw edi, mm0, 0x77; ret; 
0x0000000000431c1e: pi2fd mm6, qword ptr [rsi - 0x72b7f1ec]; mov dh, 0x58; add eax, 0x81048b00; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000434e2c: pmovmskb eax, mm0; test eax, eax; je 0x34e40; bsf eax, eax; lea rax, [rdi + rax]; ret; 
0x000000000041fdcc: pmovmskb eax, mm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x000000000041fe62: pmovmskb eax, mm1; test eax, eax; jne 0x1fec0; xor eax, eax; ret; 
0x000000000041fe32: pmovmskb eax, mm1; test eax, eax; jne 0x1fee0; xor eax, eax; ret; 
0x0000000000473552: pmovmskb eax, mm1; test eax, eax; jne 0x735b0; xor eax, eax; ret; 
0x0000000000473522: pmovmskb eax, mm1; test eax, eax; jne 0x735d0; xor eax, eax; ret; 
0x0000000000434e2b: pmovmskb eax, xmm0; test eax, eax; je 0x34e40; bsf eax, eax; lea rax, [rdi + rax]; ret; 
0x000000000041fdcb: pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x000000000041fe61: pmovmskb eax, xmm1; test eax, eax; jne 0x1fec0; xor eax, eax; ret; 
0x000000000041fe31: pmovmskb eax, xmm1; test eax, eax; jne 0x1fee0; xor eax, eax; ret; 
0x0000000000473551: pmovmskb eax, xmm1; test eax, eax; jne 0x735b0; xor eax, eax; ret; 
0x0000000000473521: pmovmskb eax, xmm1; test eax, eax; jne 0x735d0; xor eax, eax; ret; 
0x000000000043544f: pmovmskb edx, mm4; test edx, edx; je 0x3545a; bsf eax, edx; ret; 
0x000000000043544e: pmovmskb edx, xmm4; test edx, edx; je 0x3545a; bsf eax, edx; ret; 
0x000000000043f7f9: pop bx; pop rbp; ret; 
0x000000000046821d: pop qword ptr [rax + rax]; add byte ptr [rax - 0x73], cl; xor eax, 0x2dff8; movsxd rax, dword ptr [rsi + r12*4]; add rax, rsi; jmp rax; 
0x000000000043dd3a: pop qword ptr [rax]; add byte ptr [rax], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000469f0a: pop qword ptr [rdx]; add al, 0; add byte ptr [rax + 0x63], cl; ret; 
0x000000000042a737: pop qword ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000431999: pop r11; add eax, 0x8a0c8b00; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000416267: pop r12; jmp rax; 
0x0000000000416524: pop r12; mov rax, r8; pop r13; ret; 
0x000000000040cc6f: pop r12; pop r13; jmp rax; 
0x0000000000456f33: pop r12; pop r13; mov rax, r9; pop r14; ret; 
0x0000000000416b5b: pop r12; pop r13; pop r14; pop r15; jmp rax; 
0x00000000004032d6: pop r12; pop r13; pop r14; pop r15; pop rbp; ret; 
0x00000000004017df: pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000000407939: pop r12; pop r13; pop r14; ret; 
0x0000000000408729: pop r12; pop r13; ret; 
0x000000000040284a: pop r12; ret; 
0x000000000040cc71: pop r13; jmp rax; 
0x0000000000456f35: pop r13; mov rax, r9; pop r14; ret; 
0x0000000000416b5d: pop r13; pop r14; pop r15; jmp rax; 
0x00000000004032d8: pop r13; pop r14; pop r15; pop rbp; ret; 
0x00000000004017e1: pop r13; pop r14; pop r15; ret; 
0x000000000040793b: pop r13; pop r14; ret; 
0x000000000040872b: pop r13; ret; 
0x0000000000416b5f: pop r14; pop r15; jmp rax; 
0x00000000004032da: pop r14; pop r15; pop rbp; ret; 
0x00000000004017e3: pop r14; pop r15; ret; 
0x000000000040793d: pop r14; ret; 
0x0000000000416b61: pop r15; jmp rax; 
0x00000000004032dc: pop r15; pop rbp; ret; 
0x00000000004017e5: pop r15; ret; 
0x000000000040ef58: pop r8; mov rax, qword ptr [rdi + 0x48]; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x0000000000431c27: pop rax; add eax, 0x81048b00; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000046ce8c: pop rax; jmp qword ptr [rax]; 
0x000000000040ef59: pop rax; mov rax, qword ptr [rdi + 0x48]; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x0000000000446483: pop rax; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000446f2d: pop rax; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x00000000004469bd: pop rax; mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044fa1d: pop rax; mov rdx, -0x18; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x0000000000412224: pop rax; movsd dword ptr [rdi], dword ptr [rsi]; or dword ptr [rax], eax; ret; 
0x0000000000469d72: pop rax; or byte ptr [rax - 0x77], cl; ret; 
0x0000000000407898: pop rax; or dword ptr [rdi], ecx; mov dh, 0x40; or dword ptr [rax + rax*8 - 0x38b7918c], eax; ret 0xfff8; 
0x000000000046cf46: pop rax; pop rdx; pop rbx; ret; 
0x000000000043f533: pop rax; ret; 
0x000000000040cbfe: pop rbp; jmp rax; 
0x0000000000411b4e: pop rbp; mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x0000000000478432: pop rbp; mov dword ptr [rsi], 0; mov eax, 2; ret; 
0x000000000047dd39: pop rbp; mov eax, r8d; ret; 
0x000000000045fe20: pop rbp; mov qword ptr [r12], r14; pop r12; pop r13; pop r14; ret; 
0x000000000040af58: pop rbp; mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x000000000045ef0c: pop rbp; mov rax, r12; pop r12; pop r13; pop r14; ret; 
0x000000000045f777: pop rbp; mov rax, r12; pop r12; pop r13; ret; 
0x0000000000402f27: pop rbp; mov rax, r12; pop r12; ret; 
0x00000000004164c1: pop rbp; mov rax, r8; pop r12; pop r13; ret; 
0x0000000000406b36: pop rbp; mov rax, r8; pop r12; ret; 
0x0000000000456f36: pop rbp; mov rax, r9; pop r14; ret; 
0x00000000004096a7: pop rbp; or al, byte ptr [rax]; syscall; 
0x000000000044be8f: pop rbp; outsd dx, dword ptr [rsi]; sti; jmp qword ptr [rsi + 0x66]; 
0x0000000000416266: pop rbp; pop r12; jmp rax; 
0x0000000000416523: pop rbp; pop r12; mov rax, r8; pop r13; ret; 
0x000000000040cc6e: pop rbp; pop r12; pop r13; jmp rax; 
0x0000000000416b5a: pop rbp; pop r12; pop r13; pop r14; pop r15; jmp rax; 
0x00000000004017de: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000000407938: pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000408728: pop rbp; pop r12; pop r13; ret; 
0x0000000000402849: pop rbp; pop r12; ret; 
0x000000000040b7e8: pop rbp; pop r13; pop r14; pop r15; ret; 
0x0000000000416b5e: pop rbp; pop r14; pop r15; jmp rax; 
0x00000000004032d9: pop rbp; pop r14; pop r15; pop rbp; ret; 
0x00000000004017e2: pop rbp; pop r14; pop r15; ret; 
0x000000000040793c: pop rbp; pop r14; ret; 
0x000000000043197f: pop rbp; pop rbx; add eax, 0x8a0c8b00; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000478278: pop rbp; pop rbx; ret; 
0x0000000000401c6d: pop rbp; ret; 
0x000000000047244b: pop rbp; sub dword ptr [rip + 0x3d231], 1; pop r12; ret; 
0x0000000000461061: pop rbx; add al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; adc eax, 0x34; cmovne rax, rdx; ret; 
0x0000000000431980: pop rbx; add eax, 0x8a0c8b00; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000475087: pop rbx; add rax, qword ptr [rdx + 8]; pop rbp; pop r12; jmp rax; 
0x000000000043d3b6: pop rbx; and eax, 0x7ff80000; ret; 
0x000000000043d30b: pop rbx; cmove rax, rdx; ret; 
0x000000000043d39b: pop rbx; cmovne rax, rdx; ret; 
0x0000000000410cb4: pop rbx; in al, 9; add byte ptr [rcx], al; pop rbx; ret; 
0x000000000040f0d5: pop rbx; jmp rax; 
0x000000000040f970: pop rbx; mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x00000000004725a8: pop rbx; mov eax, 1; pop rbp; pop r12; pop r13; ret; 
0x000000000040f94c: pop rbx; mov eax, 1; pop rbp; pop r12; ret; 
0x000000000046b4af: pop rbx; mov eax, dword ptr fs:[rax]; ret; 
0x000000000043d3fe: pop rbx; mov eax, ecx; and eax, 0x7ff80000; div esi; mov eax, eax; ret; 
0x000000000047a17f: pop rbx; mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x0000000000470576: pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000000472447: pop rbx; mov eax, r8d; pop rbp; sub dword ptr [rip + 0x3d231], 1; pop r12; ret; 
0x000000000040a4d1: pop rbx; mov rax, qword ptr [rsp + 8]; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x0000000000411d89: pop rbx; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000043fdef: pop rbx; mov rax, r13; pop rbp; pop r12; pop r13; ret; 
0x000000000040c1a5: pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000045e79f: pop rbx; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x000000000040cc6a: pop rbx; mov rdi, rbp; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000040978c: pop rbx; mov rdi, rbx; call qword ptr [rbp + 0x60]; 
0x0000000000472ba7: pop rbx; movzx eax, al; pop rbp; pop r12; ret; 
0x000000000046b49a: pop rbx; or dword ptr [rip + 0x41c66], 1; ret; 
0x0000000000443881: pop rbx; out 1, eax; add byte ptr [rax - 0x73], cl; mov ah, 0x24; ret 0; 
0x000000000043f70b: pop rbx; pop r12; ret; 
0x000000000047a9bc: pop rbx; pop r14; ret; 
0x000000000040cbfd: pop rbx; pop rbp; jmp rax; 
0x000000000047dd38: pop rbx; pop rbp; mov eax, r8d; ret; 
0x0000000000402f26: pop rbx; pop rbp; mov rax, r12; pop r12; ret; 
0x0000000000406b35: pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x0000000000416265: pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000000460a5d: pop rbx; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000000407937: pop rbx; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000408727: pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000402848: pop rbx; pop rbp; pop r12; ret; 
0x000000000040b7e7: pop rbx; pop rbp; pop r13; pop r14; pop r15; ret; 
0x0000000000403096: pop rbx; pop rbp; ret; 
0x0000000000401fa0: pop rbx; ret; 
0x000000000040dcac: pop rbx; setne al; movzx eax, al; neg eax; ret; 
0x000000000043d31a: pop rbx; shr eax, 0xe; and eax, 0x3fc00; ret; 
0x000000000043d365: pop rbx; shr eax, 6; and eax, 0x3fffc00; ret; 
0x000000000045f6b1: pop rbx; sldt word ptr [rax]; lea rax, [rip + 0xd34]; cmove rax, rdx; ret; 
0x000000000040d73f: pop rbx; sub rax, rdx; pop rbp; pop r12; ret; 
0x000000000040dbb0: pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000422db3: pop rcx; add byte ptr [rsi], al; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004154a3: pop rcx; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xb817; 
0x000000000043d43e: pop rcx; cld; jmp qword ptr [rsi + 0x66]; 
0x0000000000475493: pop rcx; fprem; jmp qword ptr [rsi + 0xf]; 
0x000000000042d5c5: pop rcx; jmp qword ptr [rdx - 0x2f]; 
0x000000000042cf98: pop rcx; jmp qword ptr [rdx - 0xf]; 
0x0000000000438f73: pop rcx; lodsd eax, dword ptr [rsi]; add al, 0; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000040efd6: pop rcx; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x18]; 
0x000000000041fa36: pop rcx; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x00000000004430a7: pop rcx; ret 6; 
0x000000000043e474: pop rdi; add al, 0; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x00000000004186ad: pop rdi; add al, byte ptr [rax]; cmove rax, rdx; ret; 
0x00000000004347ed: pop rdi; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000401ccd: pop rdi; add qword ptr [rax], rax; nop; leave; ret; 
0x000000000046d04d: pop rdi; cmp edi, ebp; jmp qword ptr [rsi + 0x66]; 
0x000000000046ee52: pop rdi; idiv bh; jmp qword ptr [rsi + 0x2e]; 
0x00000000004243c9: pop rdi; in al, dx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004241d9: pop rdi; in eax, dx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000416b62: pop rdi; jmp rax; 
0x00000000004095cf: pop rdi; or byte ptr [rbx - 0x76fefbb9], al; ret 0xe281; 
0x0000000000423ff9: pop rdi; out dx, al; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423e29: pop rdi; out dx, eax; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423f25: pop rdi; out dx, eax; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000423e71: pop rdi; out dx, eax; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004032dd: pop rdi; pop rbp; ret; 
0x00000000004017e6: pop rdi; ret; 
0x00000000004394ed: pop rdi; test al, 4; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000045373a: pop rdx; add al, byte ptr [rax]; add byte ptr [rax + 0x63], cl; ret; 
0x00000000004094e2: pop rdx; add dword ptr [rax], eax; add byte ptr [rcx], dh; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbx + 0x10]; 
0x000000000041f136: pop rdx; add eax, 0x83480000; ret 0x4910; 
0x000000000047bb73: pop rdx; clc; dec dword ptr [rcx + 0x63]; add al, 0x86; add rax, r14; jmp rax; 
0x0000000000440ac2: pop rdx; out 6, eax; add byte ptr [rdx + 0x64], bh; test eax, eax; cmove eax, edx; ret; 
0x000000000041548a: pop rdx; pop rbp; pop r12; ret; 
0x000000000046cf47: pop rdx; pop rbx; ret; 
0x00000000004016fb: pop rdx; ret; 
0x0000000000417c65: pop rdx; xor eax, eax; pop rbp; pop r12; ret; 
0x00000000004346ee: pop rsi; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000047aba2: pop rsi; add eax, 0x21a94; ret; 
0x0000000000416b60: pop rsi; pop r15; jmp rax; 
0x00000000004032db: pop rsi; pop r15; pop rbp; ret; 
0x00000000004017e4: pop rsi; pop r15; ret; 
0x000000000040793e: pop rsi; ret; 
0x0000000000432280: pop rsp; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041f434: pop rsp; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000432f80: pop rsp; add eax, 0x83480000; ret 0xe910; 
0x000000000043fc72: pop rsp; and al, 0x10; call rax; 
0x000000000046ceee: pop rsp; and al, 0x30; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000046ce7c: pop rsp; and al, 0x30; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000453555: pop rsp; idiv edi; jmp qword ptr [rsi - 0x77]; 
0x0000000000416268: pop rsp; jmp rax; 
0x0000000000416525: pop rsp; mov rax, r8; pop r13; ret; 
0x000000000040cc70: pop rsp; pop r13; jmp rax; 
0x0000000000456f34: pop rsp; pop r13; mov rax, r9; pop r14; ret; 
0x0000000000416b5c: pop rsp; pop r13; pop r14; pop r15; jmp rax; 
0x00000000004032d7: pop rsp; pop r13; pop r14; pop r15; pop rbp; ret; 
0x00000000004017e0: pop rsp; pop r13; pop r14; pop r15; ret; 
0x000000000040793a: pop rsp; pop r13; pop r14; ret; 
0x000000000040872a: pop rsp; pop r13; ret; 
0x00000000004726e4: pop rsp; ret 0x64c0; 
0x000000000040284b: pop rsp; ret; 
0x000000000040ccc7: popfq; add byte ptr [rax], al; add byte ptr [rbp + 0x31], al; dec dword ptr [rax + 0x39]; ret 0x830f; 
0x00000000004618ff: popfq; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; shr rax, 2; vzeroupper; ret; 
0x0000000000429481: popfq; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004534e1: popfq; call 0xffffffffc80534dd; test dword ptr [rax], eax; idiv edi; call qword ptr [rax]; 
0x0000000000473298: popfq; cld; dec dword ptr [rax + 0x21]; ret 0x8d48; 
0x000000000042502f: popfq; fild word ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000453554: popfq; pop rsp; idiv edi; jmp qword ptr [rsi - 0x77]; 
0x0000000000458110: psadbw mm7, mm7; inc dword ptr [rcx]; ret; 
0x0000000000429d52: psllq mm1, qword ptr [r15]; jg 0x29d67; ret; 
0x000000000042c872: psllq mm1, qword ptr [r15]; jg 0x2c887; ret; 
0x0000000000429d53: psllq mm1, qword ptr [rdi]; jg 0x29d67; ret; 
0x000000000042c873: psllq mm1, qword ptr [rdi]; jg 0x2c887; ret; 
0x00000000004390f6: psllq mm1, qword ptr [rdi]; jg 0x39102; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000439157: psllq mm1, qword ptr [rdi]; jg 0x39163; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000439258: psllq mm1, qword ptr [rdi]; jg 0x39264; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x0000000000439786: psllq mm1, qword ptr [rdi]; jg 0x39792; mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x12]; ret; 
0x0000000000439807: psllq mm1, qword ptr [rdi]; jg 0x39813; mov qword ptr [rdi + 0xf], rcx; lea rax, [rdi + 0x16]; ret; 
0x0000000000439908: psllq mm1, qword ptr [rdi]; jg 0x39914; movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, [rdi + 0x1e]; ret; 
0x0000000000454b85: psllq mm7, mm7; inc dword ptr [rcx - 0x7d]; rol dword ptr [rcx], 0xe9; scasb al, byte ptr [rdi]; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x000000000044d740: push -0x1605feb4; ret 0xfffe; 
0x000000000047283a: push -0x32; add eax, dword ptr [rax]; ret; 
0x000000000046a143: push -0x76ffffff; ret 0xc083; 
0x0000000000439dc4: push -0x9ffffff; ret 0x7501; 
0x000000000045fea1: push -5; dec dword ptr [rcx - 0x77]; add byte ptr [r8 - 0x77], r9b; ret 0x8548; 
0x0000000000460af3: push 0; lea rcx, [rax + 1]; mov rdi, qword ptr [r12]; lea r9, [rsp + 0x28]; call rbx; 
0x0000000000460c93: push 0; lea rcx, [rax + 4]; lea r9, [rsp + 0x20]; call rbx; 
0x0000000000446f1d: push 0; mov r9, qword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000447abd: push 0; mov r9, qword ptr [rsp + 0x30]; mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044a507: push 0; mov r9, qword ptr [rsp + 0x30]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044988a: push 0; mov r9, qword ptr [rsp + 0x38]; mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000444100: push 0; mov r9, r14; mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; call rbx; 
0x000000000044b907: push 0; mov rcx, qword ptr [rsp + 0x30]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000460f55: push 0; mov rdx, r13; mov r9, qword ptr [rsp + 0x10]; mov rdi, rbp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x000000000043e16a: push 0; mov rdx, r13; mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; mov rdi, rbp; call rbx; 
0x0000000000460e0c: push 0; mov rdx, r13; xor r8d, r8d; mov rdi, rbp; lea r9, [rsp + 0x30]; call rbx; 
0x0000000000446478: push 0; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000043dfeb: push 0; xor r8d, r8d; mov rsi, qword ptr [rsp + 0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x00000000004529f5: push 0x1085c6ff; idiv edi; jmp qword ptr [rax]; 
0x00000000004469b8: push 0x24748b48; pop rax; mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000043ed6f: push 0x247c8d49; dec dword ptr [rax + 0x39]; je 0x3ed9d; or byte ptr [rdi], cl; xchg eax, ebp; ret 0x8948; 
0x00000000004185c4: push 0x480000c7; lea edx, [rip + 0x11dd1]; cmovne rax, rdx; ret; 
0x000000000043f3fc: push 0x489066c3; lea edx, [rsp + 8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000000417d02: push 0x52; add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x00000000004609e8: push 0x5c415d5b; pop r13; ret; 
0x000000000045e9a6: push 0x60894c30; cmp byte ptr [rcx + 0x5d5b7453], cl; pop r12; ret; 
0x00000000004083ae: push 0x66ffffff; nop dword ptr [rax + rax]; mov rax, qword ptr [rax + 0x18]; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; call rax; 
0x0000000000460c1b: push 1; lea r9, [rsp + 0x20]; call rbx; 
0x0000000000460af1: push 1; push 0; lea rcx, [rax + 1]; mov rdi, qword ptr [r12]; lea r9, [rsp + 0x28]; call rbx; 
0x0000000000460c91: push 1; push 0; lea rcx, [rax + 4]; lea r9, [rsp + 0x20]; call rbx; 
0x0000000000460c17: push 1; xor edx, edx; push 1; lea r9, [rsp + 0x20]; call rbx; 
0x0000000000418803: push 9; add bh, dh; ret 0; 
0x00000000004187ca: push 9; add byte ptr [rdx], al; lea rax, [rip + 0x1d3eb]; lea rdx, [rip + 0x1ec74]; cmovne rax, rdx; ret; 
0x0000000000418871: push 9; add byte ptr [rdx], al; lea rdx, [rip + 0x23bb4]; lea rax, [rip + 0x23bed]; cmove rax, rdx; ret; 
0x00000000004704f9: push qword ptr [r9]; sal bh, cl; int1; add r8d, eax; mov eax, r8d; ret; 
0x000000000047df8a: push qword ptr [rax + rbp*2 - 0x77]; ret 0xe283; 
0x000000000043eca2: push qword ptr [rax + rbx*8 + 0x48]; mov ebp, edi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x000000000043b748: push qword ptr [rbp + 0x1a]; xor eax, eax; ret; 
0x000000000043fa4c: push qword ptr [rbp + 0x27]; mov rdi, qword ptr [rbp]; call rbx; 
0x0000000000420a19: push qword ptr [rbp + 4]; vzeroupper; ret; 
0x000000000040a864: push qword ptr [rbp + 7]; mov rdx, qword ptr [r15 + 0x40]; sub rdx, rsi; mov qword ptr [rsp + 8], rcx; mov rdi, r15; call rax; 
0x000000000040cedd: push qword ptr [rbp + 7]; mov rdx, qword ptr [rbp + 0x40]; sub rdx, rsi; mov qword ptr [rsp], rcx; mov rdi, rbp; call rax; 
0x0000000000440392: push qword ptr [rbp + rax + 0x48]; test esi, esi; jne 0x403a0; ret; 
0x00000000004403b2: push qword ptr [rbp + rax + 0x48]; test esi, esi; jne 0x403c0; ret; 
0x000000000045e999: push qword ptr [rbp + rax - 0xa]; ret 0x7408; 
0x00000000004604f3: push qword ptr [rbp + rcx + 0x48]; sar edx, cl; test rdx, rdx; je 0x60520; bsf rax, rdx; ret; 
0x00000000004808f9: push qword ptr [rbp + rdx + 0x48]; mov eax, dword ptr [rdi + 0x20]; test rax, rax; je 0x8090c; call rax; 
0x000000000040fee1: push qword ptr [rbp - 0x45]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000043e7ec: push qword ptr [rbx + 1]; ret; 
0x000000000040fe45: push qword ptr [rbx + rax - 0x7d]; and ebp, edi; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000045efc5: push qword ptr [rbx + rax - 0x7d]; and ebp, edi; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004403d2: push qword ptr [rbx + rcx - 0x17]; push rsi; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x000000000043f7e2: push qword ptr [rbx + rdi + 0x41]; mov edx, ebx; mov rdi, rbp; mov eax, 9; syscall; 
0x000000000046494e: push qword ptr [rbx + rdi*2 - 0x18]; jb 0x6491b; stc; dec dword ptr [rax - 0x77]; ret 0x8348; 
0x000000000040e647: push qword ptr [rcx]; ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rbx + 0x5d], bl; ret; 
0x00000000004704fa: push qword ptr [rcx]; sal bh, cl; int1; add r8d, eax; mov eax, r8d; ret; 
0x0000000000475e00: push qword ptr [rcx]; shr cl, cl; ret 0xfff4; 
0x000000000044f2c6: push qword ptr [rcx]; shr cl, cl; retf 0xfffd; jmp qword ptr [rsi - 0x70]; 
0x0000000000441a5c: push qword ptr [rcx]; test byte ptr [rax - 0x73], 0x3d; or al, 0x31; add al, 0; mov eax, 0x15; syscall; 
0x000000000046221c: push qword ptr [rdi + 0x11]; mov qword ptr [rip + 0x4d3d2], rax; cmp rdi, rax; ja 0x62250; xor eax, eax; ret; 
0x000000000043e281: push qword ptr [rdi + 0x1c]; hlt; mov eax, esi; syscall; 
0x000000000043ebb8: push qword ptr [rdi + 0x45]; ret; 
0x000000000043eae8: push qword ptr [rdi + 0x55]; ret; 
0x000000000043ea43: push qword ptr [rdi + 0x5a]; ret; 
0x000000000043f7f7: push qword ptr [rdi + 0x66]; pop rbx; pop rbp; ret; 
0x000000000043eb7c: push qword ptr [rdi + 1]; ret; 
0x000000000043e87b: push qword ptr [rdi + 2]; ret; 
0x000000000043e8ca: push qword ptr [rdi + 3]; ret; 
0x000000000043f629: push qword ptr [rdi + 4]; ret; 
0x00000000004620c0: push qword ptr [rdi + 5]; ret; 
0x000000000047391f: push qword ptr [rdi + 6]; ret; 
0x000000000043f695: push qword ptr [rdi + 8]; ret; 
0x000000000040283e: push qword ptr [rdi + rcx + 0x48]; add esp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x0000000000461aec: push qword ptr [rdi - 0x33]; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000415f3d: push qword ptr [rsi - 0x26140001]; nop dword ptr [rax + rax]; ret; 
0x0000000000456e5f: push qword ptr [rsi - 0x32]; mov qword ptr [rdi], rsi; ret; 
0x000000000040f3fd: push qword ptr [rsp + rax - 0x58]; add dword ptr [rsp + rbp - 0x77], esi; ret 0xc883; 
0x000000000045bd7b: push r11; cli; dec dword ptr [rax - 0x77]; ret 0xc3e9; 
0x000000000040fd1e: push r8; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx + 0xe0], r8; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000040f082: push r8; add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000040ef22: push rax; adc byte ptr [rax - 0x75], cl; add byte ptr [rcx + 0x39], cl; ror byte ptr [rdi + rcx + 0x4f], 1; ret 0x8548; 
0x0000000000410951: push rax; adc byte ptr [rbx - 0x2fd6efb9], cl; ret; 
0x000000000045eb1d: push rax; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 0x48], 0; pop rbx; ret; 
0x000000000040fd1f: push rax; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx + 0xe0], r8; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000040f083: push rax; add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000411774: push rax; add dword ptr [rax - 0x77], ecx; adc eax, 0x9afd3; ret; 
0x0000000000471bb8: push rax; add dword ptr [rax - 0x77], ecx; push rbp; sub dh, al; add byte ptr [rip - 0x101b17], ch; jmp qword ptr [rsi + 0x2e]; 
0x00000000004016ed: push rax; add dword ptr [rax], eax; mov qword ptr [rip + 0xadfdd], 0; pop rdx; ret; 
0x0000000000451c86: push rax; add dword ptr [rcx - 0x77], ecx; push rsi; sub dh, al; add byte ptr [rcx - 0x7d], cl; ret; 
0x0000000000402293: push rax; and byte ptr [rax + 1], cl; ret 0xb70f; 
0x000000000044417f: push rax; call rbx; 
0x000000000045b029: push rax; cmp byte ptr [rax + 0x39], cl; ret; 
0x0000000000448d52: push rax; dec dword ptr [rcx - 0x7d]; ret; 
0x000000000046e4ce: push rax; inc dword ptr [rax - 0x78f08206]; call qword ptr [rcx]; 
0x000000000047505a: push rax; inc dword ptr [rbp + 0x481674c0]; lea ebx, [rbp + rdx*8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000047fbf9: push rax; jne 0x7fc1b; xor eax, eax; add rsp, 8; ret; 
0x000000000044a512: push rax; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044647e: push rax; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000446f28: push rax; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x00000000004016e7: push rax; mov rdi, r8; call 0x16730; mov qword ptr [rip + 0xadfdd], 0; pop rdx; ret; 
0x000000000045e433: push rax; or byte ptr [rax - 0x77], cl; jo 0x5e449; mov qword ptr [rax + 0x40], rcx; mov qword ptr [rax], rdx; ret; 
0x00000000004422d1: push rax; or byte ptr [rcx + 0x3e895], cl; add dh, dh; ret 0x7402; 
0x0000000000411108: push rax; or byte ptr [rdi], al; add al, ch; fistp word ptr [rdi + rdi*8]; jmp qword ptr [rsi + 0x66]; 
0x0000000000411bf5: push rax; or dh, dh; ret 0x7502; 
0x0000000000410946: push rax; sbb byte ptr [rbx - 0x2fd6efb9], cl; ret; 
0x000000000045ea81: push rax; sbb byte ptr [rsi + 0x1f], dh; mov rax, qword ptr [rax + 0xe0]; mov esi, 0xffffffff; call qword ptr [rax + 0x18]; 
0x0000000000467b43: push rbp; add al, 0; xor eax, eax; add rsp, 8; ret; 
0x00000000004589af: push rbp; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000040b3a8: push rbp; add dh, dh; ret 0x7402; 
0x0000000000409417: push rbp; add rsp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000414e66: push rbp; and byte ptr [rax + 0x39], cl; ret 0x860f; 
0x000000000047efab: push rbp; and byte ptr [rcx - 0x75], cl; insd dword ptr [rdi], dx; sbb dh, dh; ret 0xf01; 
0x0000000000463df5: push rbp; and byte ptr [rcx - 0x75], cl; sub byte ptr [r8 + 0x39], r9b; ret 0x870f; 
0x0000000000477235: push rbp; jmp qword ptr [rsi + 0xf]; 
0x000000000044f310: push rbp; mov rax, qword ptr [rdi + 0x20]; mov rbp, rdi; test rax, rax; je 0x4f31f; call rax; 
0x0000000000454787: push rbp; or al, 0; add byte ptr [rax - 0x77], cl; ret 0xb8; 
0x0000000000415978: push rbp; or byte ptr [rax - 0x77], cl; ret; 
0x000000000046b255: push rbp; push rbx; sub rsp, 0x1008; mov rbp, rsp; mov rsi, rbp; syscall; 
0x000000000043eaea: push rbp; ret; 
0x0000000000471bbc: push rbp; sub dh, al; add byte ptr [rip - 0x101b17], ch; jmp qword ptr [rsi + 0x2e]; 
0x000000000040cee2: push rbp; sub rdx, rsi; mov qword ptr [rsp], rcx; mov rdi, rbp; call rax; 
0x000000000040fedd: push rbp; xor byte ptr [rbx - 0x448a0008], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000040a421: push rbx; adc byte ptr [rax + 1], cl; ret 0x2b48; 
0x00000000004023eb: push rbx; adc byte ptr [rax - 0x7d], cl; ret; 
0x000000000042b879: push rbx; add byte ptr [rip + 0x14634900], 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000406082: push rbx; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000464ff2: push rbx; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; jge 0x64fc2; add byte ptr [rax - 0x77], cl; ret; 
0x000000000042b579: push rbx; add dword ptr [rip + 0x14634900], -0x6d; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000045cdec: push rbx; add ecx, ebp; ret; 
0x000000000045a188: push rbx; and al, 0; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000045bd7c: push rbx; cli; dec dword ptr [rax - 0x77]; ret 0xc3e9; 
0x000000000043c925: push rbx; jb 0x3c92d; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000045e9ad: push rbx; je 0x5ea0b; pop rbp; pop r12; ret; 
0x000000000042bb79: push rbx; jge 0x2bb81; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042af79: push rbx; mov dword ptr [rip + 0x14634900], eax; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000045e963: push rbx; mov rbx, rdi; test byte ptr [rdi], 2; jne 0x5e9d0; mov rax, qword ptr [rax + 0xe0]; call qword ptr [rax + 0x68]; 
0x000000000040a181: push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x000000000040c572: push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x000000000042ac79: push rbx; mov word ptr [rip + 0x14634900], es; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000470d22: push rbx; or al, 0xf6; ret 0xf01; 
0x000000000045d402: push rbx; or al, 0xf6; ret 0xf04; 
0x000000000043fdb2: push rbx; or byte ptr [rax - 0x7d], cl; ret; 
0x000000000042a979: push rbx; pop qword ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000441374: push rbx; std; jmp qword ptr [rsi + 0xf]; 
0x000000000046b256: push rbx; sub rsp, 0x1008; mov rbp, rsp; mov rsi, rbp; syscall; 
0x000000000042b279: push rbx; xchg byte ptr [rip + 0x14634900], al; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a679: push rbx; xchg eax, edx; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000045cf2e: push rbx; xor al, 0x48; lea ecx, [rbx + 0x40]; mov esi, 1; mov rdi, rbx; call rax; 
0x000000000046d6ba: push rbx; xor byte ptr [rcx - 0x77], cl; ror byte ptr [rax - 0x75], 0x43; sbb byte ptr [rax + 0x2b], cl; sub byte ptr [r9 + r9*4 + 4], cl; ret 0x8b48; 
0x0000000000479bab: push rcx; add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x0000000000443b95: push rcx; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x000000000042d19f: push rcx; jl 0x2d1ea; adc dword ptr [rcx - 3], ebp; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000042d1a6: push rcx; jl 0x2d1f1; adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000042d1ad: push rcx; jl 0x2d1f8; adc dword ptr [rcx - 1], edi; ret; 
0x000000000042d306: push rcx; jl 0x2d351; adc dword ptr [rcx + 5], ebp; vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000042d30d: push rcx; jl 0x2d358; adc dword ptr [rcx + 6], esi; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000042d314: push rcx; jl 0x2d35f; adc dword ptr [rcx + 7], edi; ret; 
0x0000000000424e7b: push rcx; loope 0x24e83; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004123a5: push rcx; sbb byte ptr [rcx + 1], cl; ret; 
0x0000000000406513: push rcx; xchg dword ptr [rdx], ecx; add byte ptr [rdi], cl; add eax, 0xfffefbe9; jmp qword ptr [rsi - 0x70]; 
0x000000000043963a: push rdi; add al, 0x48; lea eax, [rdi + 5]; ret; 
0x0000000000429eb9: push rdi; add al, 0x48; mov dword ptr [rdi], ecx; ret; 
0x0000000000477a4f: push rdi; add dword ptr [rcx - 0x77], ecx; push rsp; ret; 
0x000000000043be82: push rdi; add dword ptr [rdx - 0xf], esp; jl 0x3bed0; adc dword ptr [rsi - 2], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004396ec: push rdi; add eax, 0xc478d48; ret; 
0x000000000047b1b0: push rdi; add ecx, dword ptr [rax + 0x63]; ret; 
0x0000000000460828: push rdi; add rax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000420308: push rdi; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000000041559c: push rdi; and byte ptr [rax + 0x39], cl; ret 0x4273; 
0x00000000004520c7: push rdi; and byte ptr [rcx + rcx*4 - 9], cl; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x0000000000441510: push rdi; and dh, al; sub byte ptr [r9], r8b; ret; 
0x000000000047ecc6: push rdi; and dh, dh; ret 0xf01; 
0x0000000000423c72: push rdi; call 0xfffffffff061c5c4; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000423cb0: push rdi; call 0xfffffffff061c602; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423ce8: push rdi; call 0xfffffffff061c63a; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000423d26: push rdi; call 0xfffffffff061c678; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423d5e: push rdi; call 0xfffffffff061c6b0; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423d86: push rdi; call 0xfffffffff061c6d8; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423dae: push rdi; call 0xfffffffff061c700; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000426642: push rdi; call 0xfffffffff061ef94; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000426680: push rdi; call 0xfffffffff061efd2; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004266b8: push rdi; call 0xfffffffff061f00a; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004266f6: push rdi; call 0xfffffffff061f048; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042672e: push rdi; call 0xfffffffff061f080; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000426756: push rdi; call 0xfffffffff061f0a8; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042677e: push rdi; call 0xfffffffff061f0d0; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423cb8: push rdi; clc; ret; 
0x0000000000423e30: push rdi; cld; ret; 
0x0000000000424957: push rdi; cli; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000429799: push rdi; cmc; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000421d0e: push rdi; fidiv dword ptr [rdx - 0x10f09926]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000421b0e: push rdi; fnsave dword ptr [rdx - 0x10f09923]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043e7f6: push rdi; fsub dword ptr [rcx + rcx*4 + 1]; or rax, 0xffffffffffffffff; ret; 
0x000000000043e886: push rdi; fsub dword ptr [rcx + rcx*4 + 2]; mov eax, 0xffffffff; ret; 
0x000000000043eaa6: push rdi; fsub dword ptr [rcx + rcx*4 + 2]; mov rax, -1; ret; 
0x0000000000429719: push rdi; hlt; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004243c5: push rdi; in al, 0x4c; mov dword ptr [rdi - 0x14], ebx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004241d5: push rdi; in eax, 0x4c; mov dword ptr [rdi - 0x13], ebx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000422fb5: push rdi; inc byte ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042956a: push rdi; int1; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000424996: push rdi; loope 0x249e5; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004249de: push rdi; loope 0x24a2d; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424a1c: push rdi; loope 0x24a6b; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424a54: push rdi; loope 0x24aa3; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424a92: push rdi; loope 0x24ae1; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424aca: push rdi; loope 0x24b19; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424af2: push rdi; loope 0x24b41; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000427366: push rdi; loope 0x273b5; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004273ae: push rdi; loope 0x273fd; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004273ec: push rdi; loope 0x2743b; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000427424: push rdi; loope 0x27473; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000427462: push rdi; loope 0x274b1; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042749a: push rdi; loope 0x274e9; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004274c2: push rdi; loope 0x27511; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000421dd8: push rdi; mov eax, 0xf66b8b2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000421c58: push rdi; mov ebx, 0xf66bbb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000421d58: push rdi; mov ecx, 0xf66b9b2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000421cd8: push rdi; mov edx, 0xf66bab2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000040ef60: push rdi; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x000000000040ef94: push rdi; mov qword ptr [rdi + 8], rax; ret; 
0x00000000004295fa: push rdi; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000457a8e: push rdi; or al, 0x84; ror byte ptr [rdi], cl; mov byte ptr [rsi + rdx], dh; add dh, dh; ret 0xf40; 
0x0000000000457a63: push rdi; or al, 0xf6; ret 0xf08; 
0x0000000000478474: push rdi; or byte ptr [rax - 0x402f], bh; sub eax, r8d; mov dword ptr [rsi], eax; mov eax, 2; ret; 
0x000000000040d73d: push rdi; or byte ptr [rbx + 0x48], bl; sub eax, edx; pop rbp; pop r12; ret; 
0x000000000047826a: push rdi; or byte ptr [rcx + 0x29], cl; ret 0x894c; 
0x000000000047a68a: push rdi; or byte ptr [rcx + 1], cl; ret 0x894c; 
0x0000000000478271: push rdi; or byte ptr [rcx - 0x2feeb728], cl; pop rbp; pop rbx; ret; 
0x00000000004398d0: push rdi; or eax, 0x1c478d48; ret; 
0x0000000000423ff5: push rdi; out 0x4c, al; mov dword ptr [rdi - 0x12], ebx; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423e25: push rdi; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423f21: push rdi; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000423e6d: push rdi; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000042214e: push rdi; ret 0xff3; 
0x00000000004220ae: push rdi; ret; 
0x0000000000425d75: push rdi; rol byte ptr [rip + 0x14634900], cl; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000044150a: push rdi; sbb byte ptr [rdi + 0x16], dh; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000441530: push rdi; sbb byte ptr [rdi - 0x10], bh; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000438e75: push rdi; scasb al, byte ptr [rdi]; add al, 0; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000424b57: push rdi; stc; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000441186: push rdi; std; dec dword ptr [rax - 0x77]; ret; 
0x000000000042437a: push rdi; std; mov word ptr [rdi - 2], cx; ret; 
0x0000000000424757: push rdi; sti; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000040a869: push rdi; sub rdx, rsi; mov qword ptr [rsp + 8], rcx; mov rdi, r15; call rax; 
0x000000000046005b: push rdi; xor byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret; 
0x000000000041fe68: push rdi; xor eax, eax; ret; 
0x0000000000417d03: push rdx; add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x000000000047f44d: push rdx; and bh, al; jmp qword ptr [rsi + 0x66]; 
0x00000000004265e9: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5c9d9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426499: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5cb29]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426349: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5cc79]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004260a9: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5cf19]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425f59: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d069]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425e09: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d1b9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425cb9: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d309]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425b69: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d459]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425a19: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d5a9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004258c9: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d6f9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425779: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d849]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425629: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d999]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004254d9: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5dae9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425389: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5dc39]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423c19: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f1e9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423ac9: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f339]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423979: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f489]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423829: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f5d9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004236d9: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f729]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423589: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5f879]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004232e9: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5fb19]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423199: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5fc69]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423049: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5fdb9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422ef9: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5ff09]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422c59: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x601a9]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004229b9: push rdx; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x60449]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000442fa9: push rdx; ret; 
0x0000000000439927: push rsi; adc bl, dh; movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; lea rax, [rdi + 0x1f]; ret; 
0x0000000000439277: push rsi; adc bl, dh; movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000440253: push rsi; adc byte ptr [rax - 0x75], cl; push rsi; or byte ptr [rbx + 0x94801e2], al; ret 0x8948; 
0x00000000004391d6: push rsi; adc byte ptr [rbx + 0xff3174e], cl; jg 0x391e6; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x00000000004391f6: push rsi; adc byte ptr [rbx + 0xff3184e], cl; jg 0x39206; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000420d94: push rsi; adc byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043bfc9: push rsi; add ah, byte ptr [rdx - 0xf]; jl 0x3c017; adc dword ptr [rsi + 3], edx; ret; 
0x0000000000429eb2: push rsi; add al, 0x48; mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000472d28: push rsi; add al, byte ptr [rax]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000042b636: push rsi; add byte ptr [rip + 0x14634900], 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a151: push rsi; add cl, byte ptr [rbx + 0x257890e]; mov dword ptr [rdi], ecx; ret; 
0x000000000042a1c1: push rsi; add dword ptr [rbx + 0x157890e], ecx; mov dword ptr [rdi], ecx; ret; 
0x0000000000477fcf: push rsi; add dword ptr [rcx - 0x77], ecx; push rsp; ret; 
0x000000000043bfc2: push rsi; add dword ptr [rdx - 0xf], esp; jl 0x3c010; adc dword ptr [rsi + 2], edx; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000042b336: push rsi; add dword ptr [rip + 0x14634900], -0x6d; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429e42: push rsi; add eax, 0x480e8b48; mov dword ptr [rdi + 5], edx; mov qword ptr [rdi], rcx; ret; 
0x00000000004396e5: push rsi; add eax, 0x480f8948; mov dword ptr [rdi + 5], edx; lea rax, [rdi + 0xc]; ret; 
0x0000000000439085: push rsi; add eax, 0x480f8948; mov dword ptr [rdi + 5], edx; ret; 
0x000000000043c05f: push rsi; add eax, 0x487cf162; adc dword ptr [rsi + 6], edx; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000042a0e1: push rsi; add ecx, dword ptr [rbx + 0x357890e]; mov dword ptr [rdi], ecx; ret; 
0x0000000000439653: push rsi; add ecx, dword ptr [rcx + 0x357890f]; lea rax, [rdi + 6]; ret; 
0x0000000000439023: push rsi; add ecx, dword ptr [rcx + 0x357890f]; ret; 
0x0000000000420da9: push rsi; and byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000423dc6: push rsi; clc; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042471a: push rsi; clc; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042491a: push rsi; clc; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424b1a: push rsi; clc; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423daa: push rsi; clc; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424736: push rsi; clc; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424936: push rsi; clc; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424b36: push rsi; clc; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000423de2: push rsi; clc; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000424551: push rsi; cld; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423f89: push rsi; cld; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424169: push rsi; cld; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424349: push rsi; cld; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424529: push rsi; cld; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424185: push rsi; cld; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424365: push rsi; cld; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424545: push rsi; cld; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000423fa5: push rsi; cld; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043be5a: push rsi; cld; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x0000000000424951: push rsi; cli; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000429792: push rsi; cmc; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043b286: push rsi; cmc; sub eax, edx; ret; 
0x000000000042193e: push rsi; fbstp tbyte ptr [rdx - 0x10f09921]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000421a0e: push rsi; fidiv word ptr [rdx - 0x10f09922]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000429712: push rsi; hlt; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043b276: push rsi; hlt; sub eax, edx; ret; 
0x00000000004403d6: push rsi; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x0000000000429562: push rsi; int1; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043b246: push rsi; int1; sub eax, edx; ret; 
0x000000000042b936: push rsi; jge 0x2b93e; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bc36: push rsi; jp 0x2bc3e; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042ad36: push rsi; mov dword ptr [rip + 0x14634900], eax; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000421908: push rsi; mov edi, 0xf66bfb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004219d8: push rsi; mov esi, 0xf66beb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000429682: push rsi; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004295f2: push rsi; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042aa36: push rsi; mov word ptr [rip + 0x14634900], es; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000456677: push rsi; or byte ptr [rax - 0x73], cl; or byte ptr [rcx - 0x77], cl; or cl, r13b; ret 0xfffd; 
0x0000000000455f36: push rsi; or byte ptr [rax - 0x73], cl; or byte ptr [rcx - 0x77], cl; or cl, r13b; ret; 
0x0000000000440257: push rsi; or byte ptr [rbx + 0x94801e2], al; ret 0x8948; 
0x00000000004400b3: push rsi; or dh, dh; ret 0x7401; 
0x0000000000440027: push rsi; or dh, dh; ret 0xf01; 
0x00000000004398c7: push rsi; or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x0000000000439217: push rsi; or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x000000000042a736: push rsi; pop qword ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000439257: push rsi; psllq mm1, qword ptr [rdi]; jg 0x39264; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x0000000000439907: push rsi; psllq mm1, qword ptr [rdi]; jg 0x39914; movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, [rdi + 0x1e]; ret; 
0x0000000000446477: push rsi; push 0; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000459014: push rsi; ret 0xf10; 
0x0000000000424b51: push rsi; stc; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000424372: push rsi; std; mov cx, word ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x000000000043be61: push rsi; std; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x0000000000424751: push rsi; sti; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000451c8a: push rsi; sub dh, al; add byte ptr [rcx - 0x7d], cl; ret; 
0x000000000043b256: push rsi; sub eax, edx; ret; 
0x0000000000429892: push rsi; test dword ptr [rbx - 0x76b703b2], 0x4f89f757; cld; ret; 
0x000000000042b036: push rsi; xchg byte ptr [rip + 0x14634900], al; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000420dbe: push rsi; xor byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000047e58c: push rsp; add dword ptr [rax], eax; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000040f77d: push rsp; add eax, 0xc0834800; add dword ptr [rax + 0x39], ecx; ret; 
0x000000000047d9ca: push rsp; and al, 0x10; call rax; 
0x0000000000413acc: push rsp; and al, 0x10; mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp], rdi; call rax; 
0x000000000046cef3: push rsp; and al, 0x38; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000046ce81: push rsp; and al, 0x38; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x00000000004469b6: push rsp; and al, 0x68; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000043f402: push rsp; and al, 8; mov esi, 0x10; mov eax, 0x48; syscall; 
0x000000000041b4c7: push rsp; cmp ah, byte ptr [rax]; sub eax, edx; vzeroupper; ret; 
0x000000000048063c: push rsp; fld qword ptr [rax]; mov rax, qword ptr [rax + rbx*8]; test rax, rax; je 0x8064a; call rax; 
0x0000000000417488: push rsp; ret 0xfff; 
0x0000000000414d5c: push rsp; ret; 
0x0000000000406770: push rsp; test eax, 0x8d4dffff; je 0x677e; add dword ptr [rax - 9], ecx; ror byte ptr [rax + 1], 1; ret; 
0x0000000000431f40: pushfq; adc eax, 0x83480000; ret 0xe910; 
0x0000000000418735: pushfq; add byte ptr [rax], al; lea rdx, [rip + 0xf171]; cmovne rax, rdx; ret; 
0x0000000000417888: pushfq; mov dl, 6; add byte ptr [rax + 0x63], cl; add al, 0x82; add rax, rdx; jmp rax; 
0x000000000040fde6: pushfq; nop word ptr [rax + rax]; mov rax, -1; ret; 
0x0000000000450310: pushfq; or bh, bh; jmp qword ptr [rsi + 0x2e]; 
0x0000000000432c40: pushfq; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000422570: pushfq; or byte ptr [rsi], al; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000041e8f4: pushfq; or eax, 0x83480000; ret 0xeb10; 
0x0000000000462222: rcl bl, cl; add al, 0; cmp rdi, rax; ja 0x62250; xor eax, eax; ret; 
0x000000000043bd22: rcl byte ptr [rax], 0x29; cmp edx, ecx; jle 0x3bd3c; movsxd rax, ecx; ret; 
0x000000000042a7f9: rcl dword ptr [rax + 0x63490005], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000417c61: rcl dword ptr [rbx + 0x315afffe], cl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x00000000004136f8: rcl dword ptr [rip + 0x9902a], 0x83; ret 0x8b01; 
0x0000000000416522: rcr byte ptr [rbp + 0x41], 0x5c; mov rax, r8; pop r13; ret; 
0x0000000000409d6a: rcr byte ptr [rbp + 0x41], 0x5c; pop r13; pop r14; ret; 
0x000000000040c1a8: rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000040d742: rcr byte ptr [rbp + 0x41], 1; pop rsp; ret; 
0x000000000045fe1f: rcr byte ptr [rbp + 0x4d], 0x89; xor al, 0x24; pop r12; pop r13; pop r14; ret; 
0x0000000000478277: rcr byte ptr [rbp + 0x5b], 1; ret; 
0x000000000047244a: rcr byte ptr [rbp - 0x7d], 0x2d; xor edx, edx; add eax, dword ptr [rax]; add dword ptr [rcx + 0x5c], eax; ret; 
0x0000000000409e01: rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; pop r14; ret; 
0x0000000000408726: rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x0000000000406af2: rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000406b34: rcr byte ptr [rbx + 0x5d], 0x4c; mov eax, eax; pop r12; ret; 
0x000000000048069f: rcr byte ptr [rbx + 0x5d], 1; pop r12; pop r13; pop r14; ret; 
0x0000000000472ba6: rcr byte ptr [rbx + 0xf], 0xb6; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000415489: rcr byte ptr [rdx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000476a65: rcr dword ptr [rcx], 0xc0; and eax, 2; sub eax, 1; ret; 
0x00000000004328fc: rcr dword ptr [rdx], 0xf; xchg ah, bl; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000434549: rcr dword ptr [rdx], 0xf; xchg bh, bh; add eax, 0x83480000; ret 0x4910; 
0x0000000000433d69: rcr dword ptr [rdx], 0xf; xchg bh, bl; or eax, 0x83480000; ret 0x4910; 
0x0000000000434159: rcr dword ptr [rdx], 0xf; xchg bh, ch; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000433979: rcr dword ptr [rdx], 0xf; xchg bh, cl; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043345c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rax + rax], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000432c3c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rax + rcx - 0x7cb80000], bl; ret 0xe910; 
0x000000000043241c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rax + rdx - 0x7cb80000], bh; ret 0xe910; 
0x0000000000433b18: rcr dword ptr [rdx], 0xf; xchg byte ptr [rax], dh; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000432f7c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rbp + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000043275c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rbp + rcx], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000431f3c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rbp + rdx - 0x7cb80000], bl; ret 0xe910; 
0x000000000043311c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rbx + rax - 0x7cb80000], bh; ret 0xe910; 
0x0000000000434009: rcr dword ptr [rdx], 0xf; xchg byte ptr [rdi], bh; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000433829: rcr dword ptr [rdx], 0xf; xchg byte ptr [rdi], bl; adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000434939: rcr dword ptr [rdx], 0xf; xchg byte ptr [rdi], cl; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043227c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rdx + rdx], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004323b2: rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], ah; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004330b2: rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], ah; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000432bd2: rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], al; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000433f0a: rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], bh; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000043483a: rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], cl; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004333f2: rcr dword ptr [rdx], 0xf; xchg dh, ah; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004326f2: rcr dword ptr [rdx], 0xf; xchg dh, ah; or eax, 0x83480000; ret 0x4910; 
0x0000000000432212: rcr dword ptr [rdx], 0xf; xchg dh, al; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000432f12: rcr dword ptr [rdx], 0xf; xchg dh, al; add eax, 0x83480000; ret 0x4910; 
0x000000000043405a: rcr dword ptr [rdx], 0xf; xchg dh, ch; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000043387a: rcr dword ptr [rdx], 0xf; xchg dh, cl; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000043c109: rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x000000000043c0fb: rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043ce13: rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x0000000000415e02: rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x00000000004016db: repe cmpsb byte ptr [rsi], byte ptr [rdi]; seta al; sbb al, 0; test al, al; jne 0x16e7; ret; 
0x00000000004185b2: repne insb byte ptr [rdi], dx; or dword ptr [rax], eax; add dh, byte ptr [rdi + rdi - 0xa]; ret 0x7520; 
0x0000000000401817: ret 0; 
0x000000000046ab60: ret 0x1075; 
0x000000000045d3df: ret 0x107; 
0x0000000000414d92: ret 0x110; 
0x000000000047824c: ret 0x114d; 
0x000000000044782a: ret 0x1189; 
0x000000000045a9aa: ret 0x11; 
0x000000000045fdda: ret 0x11eb; 
0x000000000047a969: ret 0x145; 
0x0000000000409562: ret 0x1475; 
0x0000000000403297: ret 0x148; 
0x0000000000462c65: ret 0x149; 
0x000000000042d56f: ret 0x14d; 
0x0000000000475ce4: ret 0x16eb; 
0x0000000000420346: ret 0x1776; 
0x000000000041b77a: ret 0x17; 
0x000000000042d4ac: ret 0x180f; 
0x000000000041fed5: ret 0x1876; 
0x0000000000441601: ret 0x1b75; 
0x000000000046e2dc: ret 0x1b8; 
0x00000000004155c1: ret 0x1ba; 
0x000000000046a26e: ret 0x1ce8; 
0x000000000048030d: ret 0x1de8; 
0x0000000000409082: ret 0x1f0f; 
0x000000000044f917: ret 0x200; 
0x000000000043ee73: ret 0x2044; 
0x0000000000411e3e: ret 0x2148; 
0x000000000046a8c8: ret 0x2275; 
0x0000000000435ba8: ret 0x2288; 
0x000000000046dea5: ret 0x22; 
0x0000000000475352: ret 0x2348; 
0x000000000047519f: ret 0x236; 
0x00000000004222b2: ret 0x2373; 
0x0000000000460536: ret 0x2774; 
0x0000000000476346: ret 0x2776; 
0x0000000000423a86: ret 0x280f; 
0x000000000046cb7b: ret 0x2875; 
0x000000000041fec5: ret 0x2876; 
0x000000000046a937: ret 0x28f5; 
0x000000000046db6b: ret 0x290f; 
0x00000000004359e7: ret 0x2920; 
0x0000000000457668: ret 0x2941; 
0x000000000040a9cb: ret 0x2948; 
0x000000000045126b: ret 0x2949; 
0x000000000040a16e: ret 0x294c; 
0x000000000040a425: ret 0x2b48; 
0x0000000000475d94: ret 0x2b49; 
0x0000000000411803: ret 0x2b8; 
0x000000000046e776: ret 0x2be; 
0x0000000000417430: ret 0x2d74; 
0x000000000044a495: ret 0x2e66; 
0x000000000040d9a9: ret 0x3075; 
0x00000000004708f9: ret 0x30be; 
0x0000000000464703: ret 0x30e; 
0x00000000004479ce: ret 0x3145; 
0x0000000000466233: ret 0x3148; 
0x000000000047cb26: ret 0x32c; 
0x0000000000406728: ret 0x3325; 
0x000000000044d2c0: ret 0x3573; 
0x000000000040b2ea: ret 0x358; 
0x0000000000440697: ret 0x3676; 
0x000000000046ad18: ret 0x373; 
0x0000000000420326: ret 0x3776; 
0x000000000041feb5: ret 0x3876; 
0x000000000040f418: ret 0x389; 
0x0000000000475457: ret 0x3901; 
0x000000000040955a: ret 0x3948; 
0x0000000000411213: ret 0x3949; 
0x0000000000412e73: ret 0x394c; 
0x00000000004517dd: ret 0x394d; 
0x000000000043b862: ret 0x3a01; 
0x000000000042229b: ret 0x3a73; 
0x000000000043c271: ret 0x3b48; 
0x000000000040df15: ret 0x3c01; 
0x000000000047e799: ret 0x3c74; 
0x0000000000461ae6: ret 0x3d48; 
0x00000000004592a5: ret 0x3ee9; 
0x0000000000454cfa: ret 0x3ff; 
0x000000000043d83a: ret 0x4001; 
0x0000000000460b07: ret 0x408d; 
0x00000000004473ea: ret 0x4101; 
0x0000000000407706: ret 0x4102; 
0x0000000000456e0c: ret 0x4108; 
0x000000000044623e: ret 0x41c3; 
0x0000000000442fce: ret 0x424; 
0x0000000000414b2e: ret 0x4266; 
0x00000000004155a0: ret 0x4273; 
0x000000000045e490: ret 0x4389; 
0x000000000040577a: ret 0x4501; 
0x000000000040e57f: ret 0x458b; 
0x0000000000479cd5: ret 0x45e8; 
0x0000000000401f5d: ret 0x47c7; 
0x000000000041238e: ret 0x4801; 
0x0000000000472621: ret 0x4804; 
0x00000000004072a4: ret 0x4808; 
0x0000000000414149: ret 0x4810; 
0x000000000044fab7: ret 0x4811; 
0x0000000000403647: ret 0x481a; 
0x000000000047e8c6: ret 0x4830; 
0x0000000000419ec6: ret 0x4840; 
0x000000000041090b: ret 0x4860; 
0x00000000004704af: ret 0x4864; 
0x0000000000478287: ret 0x4866; 
0x000000000040365b: ret 0x48b; 
0x0000000000435458: ret 0x48c3; 
0x0000000000462f1a: ret 0x48f; 
0x0000000000404a6c: ret 0x4901; 
0x0000000000474968: ret 0x4902; 
0x00000000004119e1: ret 0x4907; 
0x000000000046b829: ret 0x4908; 
0x000000000041e8cc: ret 0x4910; 
0x000000000044db2c: ret 0x4911; 
0x000000000047894c: ret 0x4918; 
0x000000000046a740: ret 0x4930; 
0x000000000040e01e: ret 0x4a8d; 
0x00000000004485f7: ret 0x4c01; 
0x000000000041fb9e: ret 0x4c04; 
0x0000000000451406: ret 0x4c08; 
0x000000000041f716: ret 0x4c20; 
0x000000000041f736: ret 0x4c40; 
0x000000000041f756: ret 0x4c60; 
0x0000000000469b82: ret 0x4f10; 
0x000000000047edaa: ret 0x50e8; 
0x0000000000422284: ret 0x5173; 
0x000000000045a0a2: ret 0x51ff; 
0x000000000045d605: ret 0x5389; 
0x0000000000420306: ret 0x5776; 
0x0000000000442ff6: ret 0x589; 
0x000000000046c531: ret 0x59e8; 
0x000000000047fa9d: ret 0x5de8; 
0x00000000004545c8: ret 0x5de9; 
0x000000000044e03a: ret 0x5f9; 
0x0000000000457e4a: ret 0x61; 
0x00000000004684f0: ret 0x6349; 
0x000000000044db00: ret 0x6411; 
0x00000000004726e5: ret 0x64c0; 
0x000000000041fe41: ret 0x6620; 
0x0000000000417b3f: ret 0x66c3; 
0x00000000004202f6: ret 0x6776; 
0x000000000044303a: ret 0x6c2; 
0x000000000043dbfc: ret 0x71e9; 
0x00000000004400b6: ret 0x7401; 
0x0000000000402102: ret 0x7402; 
0x00000000004025df: ret 0x7404; 
0x00000000004020be: ret 0x7408; 
0x0000000000409931: ret 0x7420; 
0x0000000000402111: ret 0x7440; 
0x0000000000439dc9: ret 0x7501; 
0x0000000000411bf8: ret 0x7502; 
0x0000000000439de3: ret 0x7504; 
0x000000000043b204: ret 0x7508; 
0x0000000000439d9b: ret 0x7510; 
0x00000000004185ba: ret 0x7520; 
0x0000000000439db5: ret 0x7540; 
0x0000000000421172: ret 0x7677; 
0x000000000045f942: ret 0x773; 
0x000000000046a0d4: ret 0x783c; 
0x000000000041fde1: ret 0x7e20; 
0x000000000042025c: ret 0x7e40; 
0x0000000000418b6c: ret 0x7f10; 
0x000000000041775b: ret 0x7fe8; 
0x0000000000419d49: ret 0x8000; 
0x000000000040361f: ret 0x8001; 
0x0000000000404ace: ret 0x8040; 
0x000000000041b428: ret 0x80; 
0x000000000041b605: ret 0x8101; 
0x0000000000453d1a: ret 0x8148; 
0x000000000047de57: ret 0x8166; 
0x0000000000447bd9: ret 0x820f; 
0x000000000043d611: ret 0x8301; 
0x0000000000456e37: ret 0x8304; 
0x000000000041b6d5: ret 0x8308; 
0x000000000040ca60: ret 0x830f; 
0x000000000041b6a0: ret 0x8310; 
0x000000000041b672: ret 0x8320; 
0x00000000004018a9: ret 0x8341; 
0x0000000000408600: ret 0x8348; 
0x000000000043fa91: ret 0x8349; 
0x00000000004060b6: ret 0x8401; 
0x0000000000472556: ret 0x8404; 
0x0000000000412e6a: ret 0x840f; 
0x000000000047b002: ret 0x8440; 
0x0000000000467afb: ret 0x8445; 
0x000000000040cd6a: ret 0x850f; 
0x00000000004530d1: ret 0x8545; 
0x000000000040d853: ret 0x8548; 
0x000000000040f7f2: ret 0x854d; 
0x000000000046e755: ret 0x85c7; 
0x00000000004027fd: ret 0x860f; 
0x00000000004530e8: ret 0x86e9; 
0x00000000004581f5: ret 0x870f; 
0x000000000041fee5: ret 0x876; 
0x000000000046dc5a: ret 0x87e; 
0x0000000000474a7a: ret 0x87f6; 
0x0000000000403668: ret 0x8801; 
0x000000000045783f: ret 0x8840; 
0x000000000045e062: ret 0x889; 
0x000000000040eced: ret 0x8901; 
0x00000000004056a5: ret 0x8908; 
0x0000000000450fe2: ret 0x8941; 
0x00000000004684f3: ret 0x8944; 
0x0000000000409ab2: ret 0x8948; 
0x0000000000405631: ret 0x8949; 
0x0000000000414769: ret 0x894c; 
0x000000000047757b: ret 0x894e; 
0x0000000000414971: ret 0x895b; 
0x00000000004136ff: ret 0x8b01; 
0x0000000000462313: ret 0x8b05; 
0x000000000044f837: ret 0x8b41; 
0x0000000000470a5a: ret 0x8b42; 
0x00000000004108ff: ret 0x8b48; 
0x0000000000414b27: ret 0x8b49; 
0x00000000004774fe: ret 0x8b4a; 
0x0000000000424769: ret 0x8b4c; 
0x0000000000473c08: ret 0x8b64; 
0x000000000044babf: ret 0x8d08; 
0x000000000046f88c: ret 0x8d0f; 
0x000000000040355c: ret 0x8d48; 
0x0000000000411a07: ret 0x8d49; 
0x0000000000469731: ret 0x8d4a; 
0x000000000046f898: ret 0x8d4b; 
0x000000000046c8e2: ret 0x8d4c; 
0x00000000004118c1: ret 0x8d4d; 
0x000000000045021c: ret 0x8e0f; 
0x0000000000446d80: ret 0x8ee9; 
0x0000000000457fa3: ret 0x8f0f; 
0x0000000000434c25: ret 0x90c3; 
0x00000000004806ed: ret 0x9180; 
0x000000000040bfad: ret 0x92eb; 
0x00000000004600f8: ret 0x94c; 
0x0000000000441557: ret 0x96eb; 
0x000000000043e0f8: ret 0x9772; 
0x000000000041489a: ret 0x97e; 
0x000000000045cf3f: ret 0x9848; 
0x0000000000415fb9: ret 0x991; 
0x00000000004141b9: ret 0x9af; 
0x0000000000443acd: ret 0x9de8; 
0x0000000000410d4e: ret 0x9e3; 
0x000000000048078e: ret 0xa280; 
0x0000000000480713: ret 0xa300; 
0x000000000048073c: ret 0xa4c0; 
0x0000000000480765: ret 0xa540; 
0x000000000045ce0b: ret 0xa5e9; 
0x0000000000474073: ret 0xa7e8; 
0x0000000000413708: ret 0xa7e; 
0x00000000004540fb: ret 0xa; 
0x00000000004807b7: ret 0xaa80; 
0x00000000004807e0: ret 0xaae0; 
0x0000000000480809: ret 0xab60; 
0x0000000000402afa: ret 0xab7; 
0x000000000046c487: ret 0xabe8; 
0x0000000000440521: ret 0xabe; 
0x0000000000480832: ret 0xac20; 
0x000000000048085b: ret 0xaca0; 
0x0000000000480884: ret 0xad00; 
0x0000000000401772: ret 0xadb; 
0x00000000004806c4: ret 0xadc0; 
0x0000000000473cbd: ret 0xb0eb; 
0x000000000047ef48: ret 0xb2e8; 
0x00000000004687d1: ret 0xb58b; 
0x000000000046add5: ret 0xb5e8; 
0x0000000000414f71: ret 0xb60f; 
0x0000000000402297: ret 0xb70f; 
0x000000000044b889: ret 0xb7eb; 
0x00000000004154a9: ret 0xb817; 
0x00000000004581e8: ret 0xb848; 
0x000000000045478d: ret 0xb8; 
0x000000000044b8a3: ret 0xbb41; 
0x000000000047ba3d: ret 0xbc80; 
0x000000000045472a: ret 0xbd83; 
0x0000000000457898: ret 0xbd89; 
0x000000000045d24d: ret 0xbe04; 
0x0000000000411303: ret 0xbe9; 
0x0000000000419c09: ret 0xc000; 
0x000000000040402e: ret 0xc031; 
0x0000000000408d92: ret 0xc083; 
0x000000000040a5c3: ret 0xc085; 
0x0000000000411619: ret 0xc148; 
0x00000000004468ac: ret 0xc149; 
0x0000000000422154: ret 0xc2b2; 
0x000000000045bd81: ret 0xc3e9; 
0x00000000004202c1: ret 0xc540; 
0x000000000045782c: ret 0xc689; 
0x00000000004679a2: ret 0xc6; 
0x000000000040c811: ret 0xc748; 
0x00000000004519cd: ret 0xc789; 
0x000000000040f405: ret 0xc883; 
0x0000000000405711: ret 0xc8b; 
0x0000000000435b01: ret 0xc9ff; 
0x000000000047e7ce: ret 0xcb75; 
0x0000000000417a74: ret 0xcb8; 
0x0000000000405f23: ret 0xce80; 
0x0000000000406738: ret 0xd089; 
0x00000000004025c1: ret 0xd284; 
0x0000000000449802: ret 0xd341; 
0x0000000000466fb7: ret 0xd74; 
0x0000000000443f57: ret 0xd889; 
0x0000000000411994: ret 0xd977; 
0x000000000043d618: ret 0xda89; 
0x0000000000403b7a: ret 0xda; 
0x0000000000419ac9: ret 0xe000; 
0x0000000000439d59: ret 0xe074; 
0x0000000000447635: ret 0xe075; 
0x000000000044306d: ret 0xe083; 
0x000000000045c872: ret 0xe228; 
0x0000000000458653: ret 0xe273; 
0x0000000000407979: ret 0xe281; 
0x0000000000401e25: ret 0xe283; 
0x0000000000442fe9: ret 0xe480; 
0x000000000046e3d0: ret 0xe57f; 
0x000000000043d302: ret 0xe680; 
0x000000000045785a: ret 0xe783; 
0x000000000047314f: ret 0xe7f; 
0x000000000044812c: ret 0xe872; 
0x0000000000420925: ret 0xe883; 
0x00000000004651f2: ret 0xe8c0; 
0x000000000047734a: ret 0xe8e8; 
0x000000000045f9ab: ret 0xe901; 
0x0000000000435b96: ret 0xe908; 
0x0000000000431da6: ret 0xe910; 
0x0000000000470164: ret 0xe9f8; 
0x0000000000407ac7: ret 0xeab8; 
0x000000000047068d: ret 0xeac0; 
0x0000000000401df1: ret 0xeac1; 
0x0000000000405693: ret 0xeb04; 
0x000000000041e8fa: ret 0xeb10; 
0x000000000046c9b2: ret 0xeb30; 
0x0000000000448708: ret 0xebe9; 
0x000000000047b01e: ret 0xee83; 
0x000000000043d629: ret 0xee9; 
0x000000000047eb0c: ret 0xeee8; 
0x0000000000451411: ret 0xef72; 
0x00000000004140f6: ret 0xef75; 
0x0000000000419989: ret 0xf000; 
0x00000000004040e0: ret 0xf01; 
0x000000000041b707: ret 0xf04; 
0x000000000040b2fd: ret 0xf08; 
0x0000000000418b22: ret 0xf10; 
0x000000000043bd51: ret 0xf40; 
0x0000000000452915: ret 0xf41; 
0x000000000044708e: ret 0xf48; 
0x000000000045b845: ret 0xf4c; 
0x0000000000470ed9: ret 0xf50; 
0x000000000041b53e: ret 0xf5c5; 
0x0000000000474d1e: ret 0xf641; 
0x0000000000419f46: ret 0xf66; 
0x0000000000406632: ret 0xf748; 
0x00000000004620a5: ret 0xf789; 
0x0000000000419849: ret 0xf800; 
0x0000000000440827: ret 0xf883; 
0x0000000000410d73: ret 0xf8b; 
0x0000000000435086: ret 0xf8c5; 
0x0000000000447d57: ret 0xf9e9; 
0x000000000041d6ee: ret 0xf; 
0x000000000043d46c: ret 0xfac1; 
0x000000000044a12a: ret 0xfb8c; 
0x000000000044892a: ret 0xfba4; 
0x0000000000445872: ret 0xfbb7; 
0x0000000000419709: ret 0xfc00; 
0x000000000041744f: ret 0xfc3; 
0x000000000046c58e: ret 0xfce8; 
0x00000000004195c9: ret 0xfe00; 
0x0000000000419489: ret 0xff00; 
0x00000000004295c1: ret 0xff2; 
0x0000000000473e2a: ret 0xff2c; 
0x0000000000420ae9: ret 0xff2d; 
0x0000000000419eea: ret 0xff3; 
0x00000000004542c3: ret 0xff41; 
0x0000000000419349: ret 0xff80; 
0x0000000000451249: ret 0xffa0; 
0x00000000004460ea: ret 0xffaa; 
0x0000000000406102: ret 0xffaf; 
0x00000000004706a4: ret 0xffb0; 
0x000000000044d485: ret 0xffb8; 
0x0000000000403d01: ret 0xffbf; 
0x0000000000407b12: ret 0xffc0; 
0x00000000004190c9: ret 0xffe0; 
0x000000000045b797: ret 0xffe3; 
0x000000000044f950: ret 0xffe8; 
0x0000000000418f89: ret 0xfff0; 
0x000000000046908a: ret 0xfff1; 
0x000000000044383a: ret 0xfff4; 
0x00000000004051a0: ret 0xfff8; 
0x0000000000417489: ret 0xfff; 
0x000000000040230a: ret 0xfffa; 
0x0000000000442a93: ret 0xfffb; 
0x0000000000418d09: ret 0xfffc; 
0x000000000040851a: ret 0xfffd; 
0x000000000040ac9a: ret 0xfffe; 
0x000000000040fe76: ret 0xffff; 
0x0000000000420535: ret 1; 
0x00000000004133d3: ret 2; 
0x0000000000421f12: ret 3; 
0x000000000041f1ce: ret 4; 
0x00000000004165ea: ret 6; 
0x000000000040133a: ret 7; 
0x000000000040c105: ret 8; 
0x0000000000412f4a: ret 9; 
0x0000000000401016: ret; 
0x0000000000472743: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x3cf3a; syscall; 
0x00000000004724bf: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x3d1ba; syscall; 
0x00000000004705d3: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x3f092; syscall; 
0x0000000000450933: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x5eca2; syscall; 
0x000000000045086e: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x5ed67; syscall; 
0x00000000004506d1: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x5ef04; syscall; 
0x0000000000450602: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x5efd3; syscall; 
0x0000000000445383: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x6a04a; syscall; 
0x0000000000445217: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x6a1b6; syscall; 
0x000000000044511f: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x6a2ae; syscall; 
0x000000000043ddbb: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x71612; syscall; 
0x0000000000417a1f: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x94d76; syscall; 
0x0000000000415d07: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x96a8e; syscall; 
0x0000000000415ccf: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x96ac6; syscall; 
0x00000000004157af: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x96fe6; syscall; 
0x000000000041546b: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x9732a; syscall; 
0x000000000041692a: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x9885b; syscall; 
0x0000000000413d9b: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x989fa; syscall; 
0x0000000000413d9b: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x989fa; syscall; pop rbp; ret; 
0x0000000000413d6b: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x98a2a; syscall; 
0x0000000000416003: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x99172; syscall; 
0x0000000000416003: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x99172; syscall; pop rbx; ret; 
0x0000000000414339: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x9ae4c; syscall; 
0x00000000004142bd: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x9aeb8; syscall; 
0x0000000000414018: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x9b16d; syscall; 
0x000000000041217b: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x9d00a; syscall; 
0x0000000000410d2a: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x9e3db; syscall; 
0x0000000000410d2a: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x9e3db; syscall; ret; 
0x0000000000410831: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x9e8d4; syscall; 
0x00000000004104e6: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x9ec1f; syscall; 
0x00000000004101a3: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0x9ef62; syscall; 
0x000000000040ee9d: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0xa0268; syscall; 
0x000000000040ebdd: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0xa0528; syscall; 
0x000000000040e731: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0xa09d4; syscall; 
0x000000000040e731: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0xa09d4; syscall; ret; 
0x000000000040969f: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0xa5d2e; syscall; 
0x000000000040876e: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0xa654f; syscall; 
0x0000000000408547: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0xa6776; syscall; 
0x000000000040850c: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0xa67b1; syscall; 
0x0000000000408438: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0xa6885; syscall; 
0x000000000040650c: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0xa8751; syscall; 
0x0000000000404c39: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0xa9fec; syscall; 
0x0000000000403c50: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0xaaf25; syscall; 
0x0000000000403c27: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0xaaf4e; syscall; 
0x0000000000403b1e: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0xab057; syscall; 
0x0000000000401200: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0xada75; syscall; 
0x0000000000409825: retf 0; add byte ptr [rdi], cl; add eax, 0x8949a3eb; shr cl, 0x25; jnp 0x9833; jmp qword ptr [rsi + 0x2e]; 
0x0000000000415ebf: retf 0; add byte ptr [rdi], cl; add eax, 0xffff01e9; jmp qword ptr [rsi + 0xf]; 
0x000000000040e759: retf 0; add byte ptr [rdi], cl; add eax, 0xffff50e9; jmp qword ptr [rsi + 0x66]; 
0x00000000004145c7: retf 0; add byte ptr [rdi], cl; add eax, 0xffff68e9; jmp qword ptr [rsi + 0x66]; 
0x000000000043bd27: retf 0x127e; movsxd rax, ecx; ret; 
0x0000000000417b24: retf 0x1974; test byte ptr [rip + 0x977d6], 0x40; lea rax, [rip + 0x1d09b]; lea rdx, [rip + 0x221b4]; cmovne rax, rdx; ret; 
0x0000000000418662: retf 0x248; add byte ptr [rax - 0x73], cl; add eax, 0x24913; cmove rax, rdx; ret; 
0x000000000046a8c5: retf 0x394c; ret 0x2275; 
0x00000000004083a0: retf 0x6411; xor rdx, qword ptr [0x30]; call rdx; 
0x00000000004620ad: retf 0x8341; stc; add dword ptr [rdi + 0x2c], esi; mov eax, 0x106; syscall; 
0x0000000000414146: retf 0x8348; ret 0x4810; 
0x0000000000403644: retf 0x8348; ret 0x481a; 
0x000000000041e89f: retf 0x8349; ret 0x7f10; 
0x0000000000432007: retf 0x8349; ret 0xf10; 
0x00000000004676e3: retf 0x8b48; add cl, byte ptr [rax - 0x7b]; sal byte ptr [rsp + rsi*2 + 0xf], 0x1f; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000043954d: retf 0x8d4c; sbb eax, 0x4a7fb; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f2d: retf 0x8d4c; sbb eax, 0x4ad9b; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000476532: retf 0xba; add byte ptr [rax], al; add byte ptr [rcx - 0x75], al; or byte ptr [rbp + 0x440f4cc9], al; ret 0x8d48; 
0x0000000000401d37: retf 0xbf; add byte ptr [rax], al; add byte ptr [rcx - 1], al; sar byte ptr [rax], 1; leave; ret; 
0x00000000004704e9: retf 0xcf39; ja 0x704d0; mov eax, r8d; ret; 
0x000000000043d1f6: retf 0xd975; vzeroupper; ret; 
0x000000000041e8c6: retf 0xd; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043d033: retf 0xe175; vzeroupper; ret; 
0x000000000046d523: retf 0xe273; mov rax, r8; ret; 
0x00000000004355b0: retf 0xf48; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x00000000004612ac: retf 0xf48; mov esp, 0xd00148d2; sub rax, rdi; shr rax, 2; ret; 
0x00000000004605a1: retf 0xf4c; stosd dword ptr [rdi], eax; fimul dword ptr [rax + 0xf]; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x0000000000421cf6: retf 0xf66; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000046db67: retf 0xf66; outsd dx, dword ptr [rsi]; ret 0x290f; 
0x0000000000480362: retf 0xf963; jmp qword ptr [rsi + 0x2e]; 
0x0000000000460246: retf 0xfdc5; xlatb; ret; 
0x000000000044f2ca: retf 0xfffd; jmp qword ptr [rsi - 0x70]; 
0x000000000042fcdc: retf 0xfffe; jmp qword ptr [rsi + 0xf]; 
0x000000000043ecd2: retf 4; add byte ptr [rax - 0x39], cl; ret; 
0x000000000044ed42: retf 5; add byte ptr [rsi + 0x2e], ah; nop dword ptr [rax + rax]; ret; 
0x0000000000426556: retf 5; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000045f26d: retf; add al, byte ptr [rcx + 0x39]; ret; 
0x0000000000426406: retf; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000417cd9: retf; jne 0x17ce5; add bh, dh; ret 0; 
0x0000000000443834: retf; mov edx, 0xe9fe0006; ret 0xfff4; 
0x000000000040f438: retf; nop dword ptr [rax]; cmp qword ptr [rdi + 0x38], 0; je 0xf450; ret; 
0x0000000000472eb1: retf; or edi, ebp; jmp qword ptr [rsi + 0x66]; 
0x00000000004047e1: retf; ret; 
0x000000000041fe3e: rol bl, 0x83; ret 0x6620; 
0x000000000043c2bd: rol byte ptr [r9 + 0xf], 1; adc dword ptr [rbx], esp; ret; 
0x0000000000419ec2: rol byte ptr [rax + 0x48], 0x83; ret 0x4840; 
0x00000000004616d6: rol byte ptr [rax + 0x48], 1; clc; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x00000000004356f6: rol byte ptr [rax + 0x48], 1; clc; sub rax, rdx; vzeroupper; ret; 
0x000000000042032b: rol byte ptr [rax + 0x48], 1; clc; vzeroupper; ret; 
0x0000000000460532: rol byte ptr [rax + 0x49], 0x39; ret 0x2774; 
0x0000000000443d1f: rol byte ptr [rax + 0xf00117f], 0xb6; adc byte ptr [r15], r9b; xchg eax, ebp; ret; 
0x0000000000448137: rol byte ptr [rax + rcx*2], 0x39; ret; 
0x000000000044cda0: rol byte ptr [rax + rcx*2], 0x83; ret; 
0x0000000000447f17: rol byte ptr [rax + rcx*2], 0x89; test byte ptr [rax + rax*4], ah; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000441f88: rol byte ptr [rax - 0x6af0ffc8], cl; ret 0x8348; 
0x0000000000442759: rol byte ptr [rax - 0x6af0ffc8], cl; ret 0x8d48; 
0x0000000000442738: rol byte ptr [rax - 0x6bf0ffc8], cl; ret 0x8d48; 
0x000000000047aea6: rol byte ptr [rax - 0x7c], cl; idiv byte ptr [rcx - 0x5a]; mov rdx, qword ptr [rdx]; mov qword ptr [r9], rdx; pop rbx; ret; 
0x0000000000401006: rol byte ptr [rax], 0; add byte ptr [rax], al; test rax, rax; je 0x1012; call rax; 
0x000000000040ca97: rol byte ptr [rax], 0; add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x000000000042107d: rol byte ptr [rax], 0; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004422e1: rol byte ptr [rax], 0; add dh, dh; ret 0x7404; 
0x0000000000444176: rol byte ptr [rax], 1; xor r8d, r8d; xor ecx, ecx; xor edx, edx; push rax; call rbx; 
0x000000000040875f: rol byte ptr [rbp + 0x31], 0xd2; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa654f]; syscall; 
0x000000000043f59f: rol byte ptr [rbp + 0x31], 1; shl byte ptr [rip + 0x410000], cl; cmp eax, 0x410000; je 0x3f5d8; mov eax, 0x101; syscall; 
0x0000000000461de9: rol byte ptr [rbp + 0x31], cl; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000420082: rol byte ptr [rbp + 0x664975c0], 0xf; xlatb; ret 0xc085; 
0x0000000000413e57: rol byte ptr [rbp + 0xfcd75c0], 0x1f; add byte ptr [rax - 0x39], cl; ret; 
0x000000000047a801: rol byte ptr [rbp - 0x7b], 0xc0; jne 0x7a70c; add rsp, 0x38; ret; 
0x0000000000476a67: rol byte ptr [rbx - 0x177cfd20], 1; ret; 
0x0000000000465d88: rol byte ptr [rbx - 0x7a99fe20], 1; ror byte ptr [rdi], cl; xchg eax, esp; ret 0xb60f; 
0x0000000000461542: rol byte ptr [rbx], 0; add byte ptr [rax], al; ret; 
0x0000000000473238: rol byte ptr [rbx], 0; cmp rax, rdx; lea rdx, [rip + 0x3ab]; lea rax, [rip + 0x74]; cmove rax, rdx; ret; 
0x000000000047244f: rol byte ptr [rbx], cl; add byte ptr [rcx], al; pop r12; ret; 
0x00000000004164c4: rol byte ptr [rcx + 0x5c], 0x41; pop rbp; ret; 
0x0000000000416528: rol byte ptr [rcx + 0x5d], 0xc3; nop dword ptr [rax]; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000042b6fa: rol byte ptr [rcx + 0x63490005], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043c2be: rol byte ptr [rcx + 0xf], 1; adc dword ptr [rbx], esp; ret; 
0x0000000000461095: rol byte ptr [rcx + rdi], 0xf2; je 0x6109f; test edx, edx; jne 0x61090; ret; 
0x0000000000461522: rol byte ptr [rcx], 0; add byte ptr [rax], al; ret; 
0x000000000044e26b: rol byte ptr [rcx], 0x83; ret 0x4801; 
0x000000000043d614: rol byte ptr [rcx], 0xf; scasd eax, dword ptr [rdi]; ret 0xda89; 
0x0000000000417b32: rol byte ptr [rcx], 1; add byte ptr [rax - 0x73], cl; adc eax, 0x221b4; cmovne rax, rdx; ret; 
0x00000000004438f0: rol byte ptr [rcx], 1; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000461582: rol byte ptr [rdi], 0; add byte ptr [rax], al; ret; 
0x0000000000461532: rol byte ptr [rdx], 0; add byte ptr [rax], al; ret; 
0x0000000000473fc3: rol byte ptr [rdx], 0; add byte ptr [rcx + 0x148b48d8], cl; ret 0xb60f; 
0x0000000000425f64: rol byte ptr [rip + 0x14634900], 1; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425d76: rol byte ptr [rip + 0x14634900], cl; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000040a7bc: rol byte ptr [rip - 0x38b70000], 0xc5; sbb bl, 0x4a; add byte ptr [rax - 0x39], cl; ret; 
0x0000000000461572: rol byte ptr [rsi], 0; add byte ptr [rax], al; ret; 
0x000000000043c672: rol ch, 0x7e; jg 0x3c6b8; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x000000000043c7a5: rol ch, 0x7e; jg 0x3c7eb; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x00000000004203af: rol ch, 1; std; xlatb; ret; 
0x000000000043571f: rol ch, cl; std; xlatb; ret 0xc085; 
0x00000000004602a6: rol ch, cl; std; xlatb; ret; 
0x00000000004614cc: rol dword ptr [rax + 0x1e740fe1], 1; ret; 
0x000000000043d02c: rol dword ptr [rax + 0x48000000], 0x39; retf 0xe175; vzeroupper; ret; 
0x000000000043ce0b: rol dword ptr [rax + 0xf], 1; mov dh, 0xc6; mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x0000000000462223: rol dword ptr [rax + rax], cl; cmp rdi, rax; ja 0x62250; xor eax, eax; ret; 
0x000000000043d1ef: rol dword ptr [rax], 1; add byte ptr [rax], al; cmp rdx, rcx; jne 0x3d1d2; vzeroupper; ret; 
0x0000000000409576: rol dword ptr [rax], 1; add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x00000000004202e0: rol dword ptr [rbp + 0x311b75c0], 0xc0; vzeroupper; ret; 
0x000000000041fe64: rol dword ptr [rbp + 0x315775c0], 0xc0; ret; 
0x0000000000439d5f: rol dword ptr [rbp + 0x661075c0], cl; nop word ptr cs:[rax + rax]; nop; xor rax, rax; ret; 
0x000000000042b3f9: rol dword ptr [rbp + rax + 0x14634900], cl; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004203a3: rol dword ptr [rbp - 0x3a378a40], 0xfd; xlatb; ret 0xc085; 
0x00000000004351f3: rol dword ptr [rbp - 0x3a678a40], 0xfd; xlatb; ret 0xc085; 
0x000000000041fe34: rol dword ptr [rbp - 0x5c7af040], 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004607b7: rol dword ptr [rbp - 0x5f7af040], 0; add byte ptr [rax], al; mov rax, r8; vzeroupper; ret; 
0x00000000004202a3: rol dword ptr [rbp - 0x6b7af040], 0; add byte ptr [rax], al; xor eax, eax; vzeroupper; ret; 
0x00000000004726d6: rol dword ptr [rbx], cl; add byte ptr [rcx + 0x3b3c105], cl; add byte ptr [rcx + 0x63], cl; ror byte ptr [rax - 0x77], 0x5c; ret 0x64c0; 
0x0000000000456f32: rol dword ptr [rcx + 0x5c], 0x41; pop rbp; mov rax, r9; pop r14; ret; 
0x0000000000414243: rol dword ptr [rcx + rcx + 0x8c8bf00], 0; add al, ch; out dx, eax; fcos; dec dword ptr [rax - 0x77]; ret; 
0x00000000004018a6: rol dword ptr [rcx - 0x77], cl; ret 0x8341; 
0x0000000000454b8b: rol dword ptr [rcx], 0xe9; scasb al, byte ptr [rdi]; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x00000000004187d2: rol dword ptr [rcx], cl; add byte ptr [rax - 0x73], cl; adc eax, 0x1ec74; cmovne rax, rdx; ret; 
0x000000000042b0f9: rol dword ptr [rdi + 0x63490005], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000449c18: rol dword ptr [rdx + rdx*8 - 0x157e2c87], 1; ret 0; 
0x000000000043dbf2: rol dword ptr [rdx], 0xf; test dword ptr [rax + rax + 0x14c0000], eax; ret 0x71e9; 
0x0000000000425e14: rol dword ptr [rip + 0x14634900], 1; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425c2b: rol dword ptr [rip + 0x14634900], cl; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043ebeb: rol dword ptr [rsi], 1; add al, byte ptr [rax]; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000420ae5: rol ebp, 1; stc; xlatb; ret 0xff2d; 
0x00000000004020af: ror byte ptr [r10], cl; add byte ptr [rax], al; add dword ptr [rax], eax; add byte ptr [rbx + 0xad1ff15], cl; add dh, dh; ret 0x7408; 
0x00000000004468a0: ror byte ptr [r8 - 0x7b], cl; ror byte ptr [rbp + rcx*4 + 0x42], cl; add ecx, dword ptr [rdi + rcx + 0x49]; ret 0xc149; 
0x000000000042514f: ror byte ptr [r8 - 0x7d], 0xef; lea r11, [rip + 0x5de74]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042277f: ror byte ptr [r8 - 0x7d], 0xef; lea r11, [rip + 0x60684]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000041fc4b: ror byte ptr [rax + 0x29], 0xc2; jbe 0x1fef0; add rax, rdi; add rax, rcx; ret; 
0x000000000041feb2: ror byte ptr [rax + 0x29], 0xc2; jbe 0x1fef0; add rax, rdi; ret; 
0x000000000041fec2: ror byte ptr [rax + 0x29], 0xc2; jbe 0x1fef0; lea rax, [rdi + rax + 0x10]; ret; 
0x000000000041fed2: ror byte ptr [rax + 0x29], 0xc2; jbe 0x1fef0; lea rax, [rdi + rax + 0x20]; ret; 
0x000000000041fee2: ror byte ptr [rax + 0x29], 0xc2; jbe 0x1fef0; lea rax, [rdi + rax + 0x30]; ret; 
0x000000000047333b: ror byte ptr [rax + 0x29], 0xc2; jbe 0x735e0; add rax, rdi; add rax, rcx; ret; 
0x00000000004735a2: ror byte ptr [rax + 0x29], 0xc2; jbe 0x735e0; add rax, rdi; ret; 
0x00000000004735b2: ror byte ptr [rax + 0x29], 0xc2; jbe 0x735e0; lea rax, [rdi + rax + 0x10]; ret; 
0x00000000004735c2: ror byte ptr [rax + 0x29], 0xc2; jbe 0x735e0; lea rax, [rdi + rax + 0x20]; ret; 
0x00000000004735d2: ror byte ptr [rax + 0x29], 0xc2; jbe 0x735e0; lea rax, [rdi + rax + 0x30]; ret; 
0x00000000004355b7: ror byte ptr [rax + 0x29], 1; clc; ret; 
0x000000000046125c: ror byte ptr [rax + 0x29], 1; clc; shr rax, 2; ret; 
0x0000000000420303: ror byte ptr [rax + 0x39], 0xc2; jbe 0x20360; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000420323: ror byte ptr [rax + 0x39], 0xc2; jbe 0x20360; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000420343: ror byte ptr [rax + 0x39], 0xc2; jbe 0x20360; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000004202f3: ror byte ptr [rax + 0x39], 0xc2; jbe 0x20360; add rax, rdi; vzeroupper; ret; 
0x00000000004737f3: ror byte ptr [rax + 0x39], 0xc2; jbe 0x73850; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000473813: ror byte ptr [rax + 0x39], 0xc2; jbe 0x73850; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000473833: ror byte ptr [rax + 0x39], 0xc2; jbe 0x73850; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000004737e3: ror byte ptr [rax + 0x39], 0xc2; jbe 0x73850; add rax, rdi; vzeroupper; ret; 
0x0000000000460803: ror byte ptr [rax + 0x39], 0xc6; jbe 0x60880; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000041162c: ror byte ptr [rax + 0x39], 0xfa; setae al; ret; 
0x0000000000414896: ror byte ptr [rax + 0x3b], 5; ret 0x97e; 
0x000000000047afd6: ror byte ptr [rax + 0x63], 0x44; test dword ptr [rax], eax; add rax, rbp; jmp rax; 
0x000000000040df28: ror byte ptr [rax + 0x63], 4; xchg dword ptr [rax + 1], ecx; clc; jmp rax; 
0x00000000004686d0: ror byte ptr [rax + 0xf], 0x44; ret; 
0x000000000047cf42: ror byte ptr [rax + 0xf], 0x45; and al, 0x10; add rsp, 0x28; ret; 
0x00000000004352a6: ror byte ptr [rax + 1], 0xc8; add rax, rdi; vzeroupper; ret; 
0x000000000041ff5c: ror byte ptr [rax + 1], 0xf8; add rax, rcx; ret; 
0x00000000004615d8: ror byte ptr [rax + 1], 0xf8; add rax, rcx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000435608: ror byte ptr [rax + 1], 0xf8; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000000420418: ror byte ptr [rax + 1], 0xf8; add rax, rcx; vzeroupper; ret; 
0x000000000041fe82: ror byte ptr [rax + 1], 0xf8; ret; 
0x0000000000461693: ror byte ptr [rax + 1], 0xf8; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x00000000004356c3: ror byte ptr [rax + 1], 0xf8; sub rax, rdx; vzeroupper; ret; 
0x0000000000420373: ror byte ptr [rax + 1], 0xf8; vzeroupper; ret; 
0x000000000040677b: ror byte ptr [rax + 1], 1; ret; 
0x00000000004355b4: ror byte ptr [rax + 1], cl; ror byte ptr [rax + 0x29], 1; clc; ret; 
0x0000000000461259: ror byte ptr [rax + 1], cl; ror byte ptr [rax + 0x29], 1; clc; shr rax, 2; ret; 
0x0000000000434f45: ror byte ptr [rax + 9], 0xc8; shl rdx, 0x30; or rax, rdx; bsf rax, rax; lea rax, [rdi + rax]; ret; 
0x000000000041509d: ror byte ptr [rax + rcx*2], 0x8d; push rsp; ret; 
0x0000000000420605: ror byte ptr [rax - 0x2d], 0xfa; movzx edx, dl; sub eax, edx; ret; 
0x00000000004354f6: ror byte ptr [rax - 0x2d], 0xfa; test rdx, rdx; je 0x35510; bsf rax, rdx; ret; 
0x0000000000435495: ror byte ptr [rax - 0x2d], 0xfa; test rdx, rdx; je 0x35520; bsf rax, rdx; ret; 
0x00000000004615e1: ror byte ptr [rax - 0x3f], 1; call 0x77fedaeb; ret; 
0x0000000000461699: ror byte ptr [rax - 0x3f], 1; call 0x77fedba3; ret; 
0x00000000004616bd: ror byte ptr [rax - 0x3f], 1; call 0x77fedbc7; ret; 
0x00000000004616dd: ror byte ptr [rax - 0x3f], 1; call 0x77fedbe7; ret; 
0x0000000000461729: ror byte ptr [rax - 0x3f], 1; call 0x77fedc33; ret; 
0x00000000004617ca: ror byte ptr [rax - 0x3f], 1; call 0x77fedcd4; ret; 
0x000000000046194e: ror byte ptr [rax - 0x3f], 1; call 0x77fede58; ret; 
0x0000000000461972: ror byte ptr [rax - 0x3f], 1; call 0x77fede7c; ret; 
0x0000000000461992: ror byte ptr [rax - 0x3f], 1; call 0x77fede9c; ret; 
0x00000000004619b2: ror byte ptr [rax - 0x3f], 1; call 0x77fedebc; ret; 
0x00000000004619e9: ror byte ptr [rax - 0x3f], 1; call 0x77fedef3; ret; 
0x0000000000461a0d: ror byte ptr [rax - 0x3f], 1; call 0x77fedf17; ret; 
0x0000000000461a2d: ror byte ptr [rax - 0x3f], 1; call 0x77fedf37; ret; 
0x0000000000461a79: ror byte ptr [rax - 0x3f], 1; call 0x77fedf83; ret; 
0x0000000000418679: ror byte ptr [rax - 0x73], 0x15; lahf; add r8b, byte ptr [r8]; lea rax, [rip + 0x24738]; cmovne rax, rdx; ret; 
0x000000000041865e: ror byte ptr [rax - 0x73], 0x15; retf 0x248; add byte ptr [rax - 0x73], cl; add eax, 0x24913; cmove rax, rdx; ret; 
0x000000000041fe72: ror byte ptr [rax - 0x73], 0x44; cmp al, dh; ret; 
0x000000000041fea2: ror byte ptr [rax - 0x73], 0x44; cmp byte ptr [rax], ah; ret; 
0x000000000041fe92: ror byte ptr [rax - 0x73], 0x44; cmp byte ptr [rax], dl; ret; 
0x0000000000417485: ror byte ptr [rax - 0x73], 0x54; ret 0xfff; 
0x0000000000435e73: ror byte ptr [rax - 0x73], 0x76; adc byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x85; call qword ptr [rbx]; 
0x0000000000435eaf: ror byte ptr [rax - 0x73], 0x76; adc byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x85; ret; 
0x000000000042787b: ror byte ptr [rax - 0x73], 0x7f; ror byte ptr [rax - 0x7d], 0xea; lea r11, [rip + 0x5b745]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000041896d: ror byte ptr [rax - 0x73], 1; adc eax, 0x1c8bb; lea rax, [rip + 0x1c474]; cmove rax, rdx; ret; 
0x0000000000417c8d: ror byte ptr [rax - 0x73], 1; adc eax, 0x1d92b; lea rax, [rip + 0x1d784]; cmove rax, rdx; ret; 
0x000000000047323d: ror byte ptr [rax - 0x73], 1; adc eax, 0x3ab; lea rax, [rip + 0x74]; cmove rax, rdx; ret; 
0x000000000041892d: ror byte ptr [rax - 0x73], 1; adc eax, 0x7a9b; lea rax, [rip + 0x75c4]; cmove rax, rdx; ret; 
0x00000000004184bd: ror byte ptr [rax - 0x73], 1; adc eax, 0x7c3b; lea rax, [rip + 0x7704]; cmove rax, rdx; ret; 
0x000000000045f6ed: ror byte ptr [rax - 0x73], 1; adc eax, 0xb2b; lea rax, [rip + 0x834]; cmove rax, rdx; ret; 
0x000000000046094d: ror byte ptr [rax - 0x73], 1; adc eax, 0xc3b; lea rax, [rip + 0x994]; cmove rax, rdx; ret; 
0x000000000045f6ad: ror byte ptr [rax - 0x73], 1; adc eax, 0xf5b; lea rax, [rip + 0xd34]; cmove rax, rdx; ret; 
0x000000000043507b: ror byte ptr [rax - 0x73], cl; add al, 7; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000004427b5: ror byte ptr [rax - 0x73], cl; or qword ptr [rax + 0xf], rcx; ror dword ptr [r8 - 0x77], 5; ret; 
0x000000000046d6be: ror byte ptr [rax - 0x75], 0x43; sbb byte ptr [rax + 0x2b], cl; sub byte ptr [r9 + r9*4 + 4], cl; ret 0x8b48; 
0x000000000043dfef: ror byte ptr [rax - 0x75], 0x74; and al, 0x18; mov rcx, r12; mov rdx, r13; call rbx; 
0x00000000004726e1: ror byte ptr [rax - 0x77], 0x5c; ret 0x64c0; 
0x000000000046215b: ror byte ptr [rax - 0x77], 0xe2; mov eax, 0x10; syscall; 
0x000000000043e176: ror byte ptr [rax - 0x77], 0xef; call rbx; 
0x0000000000460e13: ror byte ptr [rax - 0x77], 0xef; lea r9, [rsp + 0x30]; call rbx; 
0x0000000000406056: ror byte ptr [rax - 0x77], 1; fisttp word ptr [rdi]; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000046d17a: ror byte ptr [rax - 0x77], 1; ret 0xc148; 
0x0000000000407976: ror byte ptr [rax - 0x77], 1; ret 0xe281; 
0x000000000040aef9: ror byte ptr [rax - 0x77], 1; ret; 
0x0000000000401f91: ror byte ptr [rax - 0x77], 5; xchg ebx, edx; or al, byte ptr [rax]; add rsp, 0x88; pop rbx; ret; 
0x00000000004685c3: ror byte ptr [rax - 0x77], cl; adc dword ptr [rax + 0x39], ecx; ret; 
0x000000000044f58a: ror byte ptr [rax - 0x77], cl; fldpi; or ecx, dword ptr [rax - 0x7d]; ret 0x8301; 
0x00000000004468a1: ror byte ptr [rax - 0x7b], cl; ror byte ptr [rbp + rcx*4 + 0x42], cl; add ecx, dword ptr [rdi + rcx + 0x49]; ret 0xc149; 
0x00000000004616d3: ror byte ptr [rax - 0x7d], 0xc0; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x00000000004356f3: ror byte ptr [rax - 0x7d], 0xc0; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000420393: ror byte ptr [rax - 0x7d], 0xc0; add rax, rdi; vzeroupper; ret; 
0x00000000004356d3: ror byte ptr [rax - 0x7d], 0xc0; and byte ptr [rax + 1], cl; clc; sub rax, rdx; vzeroupper; ret; 
0x0000000000420383: ror byte ptr [rax - 0x7d], 0xc0; and byte ptr [rax + 1], cl; clc; vzeroupper; ret; 
0x000000000047dfe5: ror byte ptr [rax - 0x7d], 0xc4; adc byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000040f016: ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000478607: ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x0000000000462133: ror byte ptr [rax - 0x7d], 0xc4; pop rax; ret; 
0x000000000040e649: ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rbx + 0x5d], bl; ret; 
0x000000000047dc7f: ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x000000000042787f: ror byte ptr [rax - 0x7d], 0xea; lea r11, [rip + 0x5b745]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004277bf: ror byte ptr [rax - 0x7d], 0xea; sfence; lea r11, [rip + 0x5b802]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424cfb: ror byte ptr [rax - 0x7d], 0xea; sfence; lea r11, [rip + 0x5e106]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425150: ror byte ptr [rax - 0x7d], 0xef; lea r11, [rip + 0x5de74]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422780: ror byte ptr [rax - 0x7d], 0xef; lea r11, [rip + 0x60684]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000467f6f: ror byte ptr [rax - 0x7d], 1; ret; 
0x0000000000448134: ror byte ptr [rax - 0x7d], 1; rol byte ptr [rax + rcx*2], 0x39; ret; 
0x000000000043bcab: ror byte ptr [rax - 0x7f], 0xc4; add byte ptr [rcx], al; add byte ptr [rax], al; sub rax, rdx; ret; 
0x0000000000407b06: ror byte ptr [rax - 0x7f], 0xc4; sbb byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x000000000043bca8: ror byte ptr [rax - 1], 0xc0; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000043bca5: ror byte ptr [rax - 1], 0xc0; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000046a7fa: ror byte ptr [rax - 9], 0xd8; test bl, bl; cmove r8, rax; mov rax, r8; pop rbx; ret; 
0x00000000004794cd: ror byte ptr [rax], 0x83; ret 0x3901; 
0x0000000000439563: ror byte ptr [rbp + rcx*4 + 0x1d], cl; in eax, 0xa7; add al, 0; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438ec9: ror byte ptr [rbp + rcx*4 + 0x1d], cl; ljmp [rbp + 0x63490004]; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f0b: ror byte ptr [rbp + rcx*4 + 0x1d], cl; mov ebp, 0x490004ad; movsxd rcx, dword ptr [rbx + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000043952b: ror byte ptr [rbp + rcx*4 + 0x1d], cl; sbb eax, 0x490004a8; movsxd rcx, dword ptr [rbx + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439506: ror byte ptr [rbp + rcx*4 + 0x1d], cl; test al, 4; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f43: ror byte ptr [rbp + rcx*4 + 0x1d], cl; test dword ptr [rbp + 0x63490004], ebp; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000047983f: ror byte ptr [rbp + rcx*4 + 0x34], 0xc3; nop dword ptr [rax]; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x00000000004468a4: ror byte ptr [rbp + rcx*4 + 0x42], cl; add ecx, dword ptr [rdi + rcx + 0x49]; ret 0xc149; 
0x000000000046a812: ror byte ptr [rbp - 0x7b], 0xdb; je 0x6a804; mov rax, r8; mov qword ptr [r11], rdi; pop rbx; ret; 
0x000000000046963a: ror byte ptr [rbp - 0x7b], cl; dec dword ptr [rax - 0x77]; mov r8b, 0xf; xchg eax, ebp; ret 0x2148; 
0x000000000043ea73: ror byte ptr [rbx + 0x3108247c], 0xc0; syscall; 
0x000000000043f684: ror byte ptr [rcx + 0x12eb8fe], cl; add byte ptr [rax], al; xor edi, edi; syscall; 
0x000000000041cf43: ror byte ptr [rcx + 0x29], cl; sal dword ptr [rsi + 0xb], cl; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x00000000004752af: ror byte ptr [rcx + 0x3ec90], cl; add byte ptr [rax - 0x7d], cl; ror dword ptr [rax], 0x83; ret 0x4801; 
0x000000000047b18a: ror byte ptr [rcx + 0x63], cl; add al, 0x96; add rax, r14; jmp rax; 
0x000000000047b14d: ror byte ptr [rcx + 0x63], cl; xchg eax, ebp; add byte ptr [rcx + rax - 0x18], cl; jmp rax; 
0x000000000044689d: ror byte ptr [rcx + 0xf], cl; ror byte ptr [r8 - 0x7b], cl; ror byte ptr [rbp + rcx*4 + 0x42], cl; add ecx, dword ptr [rdi + rcx + 0x49]; ret 0xc149; 
0x0000000000472591: ror byte ptr [rcx + rcx*4 + 0x2b], 0x5b; pop rbp; pop r12; pop r13; ret; 
0x0000000000407ae1: ror byte ptr [rcx + rcx*4 - 0x32], cl; mov edi, 2; mov eax, 0xe; syscall; 
0x000000000040868a: ror byte ptr [rcx + rcx*4 - 0x40], 0x5b; pop rbp; ret; 
0x000000000046a803: ror byte ptr [rcx + rcx*4 - 0x40], 0x5b; ret; 
0x000000000046d5ad: ror byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x00000000004580cc: ror byte ptr [rcx + rcx*4 - 2], cl; mov byte ptr [rbp - 0x94c], r9b; call rax; 
0x0000000000452025: ror byte ptr [rcx + rcx*4 - 2], cl; mov rdi, r14; mov dword ptr [rbp - 0x934], r8d; call rax; 
0x000000000044d73a: ror byte ptr [rcx - 0x2d94b73b], 1; push -0x1605feb4; ret 0xfffe; 
0x000000000046010c: ror byte ptr [rcx - 0x3e], 0x48; cmovne ecx, edi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx + rsi]; ret; 
0x000000000046a81a: ror byte ptr [rcx - 0x77], 0x3b; pop rbx; ret; 
0x000000000040ef29: ror byte ptr [rdi + rcx + 0x4f], 1; ret 0x8548; 
0x000000000044fb72: ror byte ptr [rdi], 0; add byte ptr [rax], al; syscall; 
0x0000000000440acc: ror byte ptr [rdi], 0x44; ret 0x66c3; 
0x0000000000479ba8: ror byte ptr [rdi], 0x84; push rcx; add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x000000000046dea2: ror byte ptr [rdi], 0x84; ret 0x22; 
0x00000000004033f6: ror byte ptr [rdi], 0x84; ret; 
0x00000000004626db: ror byte ptr [rdi], 0x84; sahf; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000435e7a: ror byte ptr [rdi], 0x85; call qword ptr [rbx]; 
0x000000000047e589: ror byte ptr [rdi], 0x85; push rsp; add dword ptr [rax], eax; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x0000000000441d27: ror byte ptr [rdi], 0x85; ret 0xfffe; 
0x000000000040cce0: ror byte ptr [rdi], 0x85; ret; 
0x0000000000462882: ror byte ptr [rdi], 0x8e; ret; 
0x00000000004754dc: ror byte ptr [rdi], 0x94; ret 0xb60f; 
0x0000000000478604: ror byte ptr [rdi], 0x95; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x0000000000413e54: ror byte ptr [rdi], 0xb6; rol byte ptr [rbp + 0xfcd75c0], 0x1f; add byte ptr [rax - 0x39], cl; ret; 
0x000000000040dcaf: ror byte ptr [rdi], 0xb6; sal bh, 0xd8; ret; 
0x000000000043c205: ror byte ptr [rdi], 1; adc dword ptr [rdi + rdx - 0x40], edi; ret; 
0x000000000040798b: ror byte ptr [rdi], 1; mov dh, 0x17; test dl, dl; jne 0x796c; ret; 
0x000000000045e829: ror byte ptr [rdi], 1; xchg al, bh; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 2], al; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x0000000000452837: ror byte ptr [rdi], 1; xchg byte ptr [rdx + 0x4c00000b], dl; mov edx, esp; mov rsi, r13; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x00000000004094df: ror byte ptr [rdi], 1; xchg byte ptr [rdx + 1], bl; add byte ptr [rax], al; xor esi, esi; mov rdi, rbp; call qword ptr [rbx + 0x10]; 
0x000000000043f621: ror byte ptr [rdi], 5; cmp rax, -0x1000; ja 0x3f630; ret; 
0x0000000000457a91: ror byte ptr [rdi], cl; mov byte ptr [rsi + rdx], dh; add dh, dh; ret 0xf40; 
0x00000000004490b6: ror byte ptr [rdi], cl; mov byte ptr [rsi], cl; add al, byte ptr [rax]; add bh, dh; ret 0xf800; 
0x000000000047c4d9: ror byte ptr [rdi], cl; test bl, bl; add al, 0; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000046113f: ror byte ptr [rdi], cl; test byte ptr [rdx + 0x48000000], bl; bsf eax, edx; shr rax, 2; ret; 
0x000000000046048b: ror byte ptr [rdi], cl; test byte ptr [rsi + 0x48000000], bl; bsf eax, edx; ret; 
0x000000000043549b: ror byte ptr [rdi], cl; test byte ptr [rsi], bh; add byte ptr [rax], al; bsf rax, rdx; ret; 
0x0000000000465d8e: ror byte ptr [rdi], cl; xchg eax, esp; ret 0xb60f; 
0x00000000004020b0: ror byte ptr [rdx], cl; add byte ptr [rax], al; add dword ptr [rax], eax; add byte ptr [rbx + 0xad1ff15], cl; add dh, dh; ret 0x7408; 
0x00000000004427bc: ror dword ptr [r8 - 0x77], 5; ret; 
0x000000000046000a: ror dword ptr [rax + 0x21], 0xce; je 0x60140; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x000000000046a6c4: ror dword ptr [rax + 0x39], 0xd1; jne 0x6a6a0; mov eax, dword ptr [rcx]; ret; 
0x0000000000454781: ror dword ptr [rax + 0x39], 1; ror dword ptr [rdi], 0x8d; push rbp; or al, 0; add byte ptr [rax - 0x77], cl; ret 0xb8; 
0x0000000000442d2e: ror dword ptr [rax + 0x63], 1; test dword ptr [rax], r8d; add rax, rbp; jmp rax; 
0x000000000041239e: ror dword ptr [rax + 0xf], 1; scasd eax, dword ptr [rdi]; ret 0x8948; 
0x00000000004355a9: ror dword ptr [rax - 0x3f], 0xe1; and byte ptr [rax + 9], cl; retf 0xf48; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x00000000004427bd: ror dword ptr [rax - 0x77], 5; ret; 
0x000000000045cbb2: ror dword ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000045ce08: ror dword ptr [rax - 0x77], cl; ret 0xa5e9; 
0x00000000004354f2: ror dword ptr [rax - 0x7d], 0xe0; ror byte ptr [rax - 0x2d], 0xfa; test rdx, rdx; je 0x35510; bsf rax, rdx; ret; 
0x0000000000435491: ror dword ptr [rax - 0x7d], 0xe0; ror byte ptr [rax - 0x2d], 0xfa; test rdx, rdx; je 0x35520; bsf rax, rdx; ret; 
0x0000000000404a69: ror dword ptr [rax - 0x7d], 1; ret 0x4901; 
0x000000000041f713: ror dword ptr [rax - 0x7d], 1; ret 0x4c20; 
0x000000000041f733: ror dword ptr [rax - 0x7d], 1; ret 0x4c40; 
0x000000000041f753: ror dword ptr [rax - 0x7d], 1; ret 0x4c60; 
0x00000000004752b8: ror dword ptr [rax], 0x83; ret 0x4801; 
0x000000000042aaf9: ror dword ptr [rbp + 0x63490005], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000046cc16: ror dword ptr [rcx + 0x63], 1; ret; 
0x000000000043d335: ror dword ptr [rcx + 0xe181d0], 0xfc; add eax, dword ptr [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000000041b5de: ror dword ptr [rcx + rax - 0x3f], 1; movzx eax, byte ptr [rax + rcx + 0x40]; movzx edx, byte ptr [rdx + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000043fb9f: ror dword ptr [rcx + rcx*4 + 0x48], 1; or bl, ch; ret; 
0x000000000045dfca: ror dword ptr [rcx + rcx*4 - 0x12], cl; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x0000000000477578: ror dword ptr [rcx + rdx - 0x3e], 0x4e; mov dword ptr [rdi + rbx*8 + 8], ecx; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x0000000000439d57: ror dword ptr [rcx], cl; ret 0xe074; 
0x00000000004218e8: ror dword ptr [rdi], 0x85; adc byte ptr [rdx], cl; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000421ff4: ror dword ptr [rdi], 0x85; add al, 3; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000421dc6: ror dword ptr [rdi], 0x85; add eax, 0xc0310000; ret; 
0x0000000000421d46: ror dword ptr [rdi], 0x85; cmpsb byte ptr [rsi], byte ptr [rdi]; add eax, 0xc0310000; ret; 
0x0000000000422084: ror dword ptr [rdi], 0x85; je 0x2208b; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000421b7b: ror dword ptr [rdi], 0x85; jno 0x21b87; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000421c43: ror dword ptr [rdi], 0x85; mov ch, 6; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004218c0: ror dword ptr [rdi], 0x85; sub al, 0xa; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000454784: ror dword ptr [rdi], 0x8d; push rbp; or al, 0; add byte ptr [rax - 0x77], cl; ret 0xb8; 
0x000000000043d626: ror dword ptr [rdi], 0xaf; ret 0xee9; 
0x00000000004650ac: ror dword ptr [rdi], 0xb6; add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x000000000045f9ba: ror dword ptr [rdi], 1; test byte ptr [rsi], bh; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x000000000044b866: ror dword ptr [rdi], cl; test bl, ah; add al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; add cl, byte ptr [rax + 0x39]; ret; 
0x0000000000414f6e: ror dword ptr [rdi], cl; xchg eax, ebp; ret 0xb60f; 
0x000000000042adf9: ror dword ptr [rdx + 0x63490005], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004020fa: ror dword ptr [rdx], 1; add byte ptr [rax], al; adc byte ptr [rax], al; add dh, dh; ret 0x7402; 
0x0000000000402109: ror dword ptr [rdx], 1; add byte ptr [rax], al; and byte ptr [rax], al; add dh, dh; ret 0x7440; 
0x00000000004020ba: ror dword ptr [rdx], 1; add dh, dh; ret 0x7408; 
0x00000000004083bd: ror eax, 0x11; xor rax, qword ptr fs:[0x30]; call rax; 
0x000000000047fc43: ror edi, 1; add dword ptr [rax], eax; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000040839f: ror edx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x00000000004083bc: ror rax, 0x11; xor rax, qword ptr fs:[0x30]; call rax; 
0x000000000040839e: ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x0000000000402a76: sahf; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; mov qword ptr ss:[rsi + 0x10], rsi; syscall; 
0x00000000004626de: sahf; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000046c247: sahf; cli; dec dword ptr [rax - 0x77]; ret; 
0x000000000045ad3e: sahf; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x000000000047615b: sahf; mov eax, 0x5d9066ff; ret; 
0x000000000044610a: sahf; mov ebx, 0x1f0fff; mov eax, dword ptr [rip + 0x692fe]; test eax, eax; je 0x46120; ret; 
0x00000000004341ae: sahf; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000448f5b: sahf; sti; jmp qword ptr [rsi - 0x70]; 
0x000000000040dcb2: sal bh, 0xd8; ret; 
0x0000000000419d47: sal bh, 1; ret 0x8000; 
0x0000000000419c07: sal bh, 1; ret 0xc000; 
0x0000000000419ac7: sal bh, 1; ret 0xe000; 
0x0000000000419987: sal bh, 1; ret 0xf000; 
0x0000000000419847: sal bh, 1; ret 0xf800; 
0x0000000000419707: sal bh, 1; ret 0xfc00; 
0x00000000004195c7: sal bh, 1; ret 0xfe00; 
0x0000000000419487: sal bh, 1; ret 0xff00; 
0x0000000000419347: sal bh, 1; ret 0xff80; 
0x0000000000419207: sal bh, 1; ret 0xffc0; 
0x00000000004190c7: sal bh, 1; ret 0xffe0; 
0x0000000000418f87: sal bh, 1; ret 0xfff0; 
0x0000000000418e47: sal bh, 1; ret 0xfff8; 
0x0000000000418d07: sal bh, 1; ret 0xfffc; 
0x0000000000418bc7: sal bh, 1; ret 0xfffe; 
0x00000000004704fc: sal bh, cl; int1; add r8d, eax; mov eax, r8d; ret; 
0x00000000004204af: sal bl, 1; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000000480735: sal byte ptr [rax + 0x48ffffff], 0xc7; ret 0xa4c0; 
0x0000000000406051: sal byte ptr [rax + rbx + 0xf], 0xb6; ror byte ptr [rax - 0x77], 1; fisttp word ptr [rdi]; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x00000000004579be: sal byte ptr [rax + rdx + 0x4d], 0x63; ret; 
0x0000000000439d61: sal byte ptr [rbp + 0x10], 0x66; nop word ptr cs:[rax + rax]; nop; xor rax, rax; ret; 
0x0000000000468d50: sal byte ptr [rbp + 0x10], cl; mov qword ptr [rbp - 0xd8], r11; call rax; 
0x000000000043ead9: sal byte ptr [rbp + 0x14], 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000043eba9: sal byte ptr [rbp + 0x14], 0xb8; add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000046b490: sal byte ptr [rbp + 0x15], 0x48; mov dword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x41c66], 1; ret; 
0x000000000047842b: sal byte ptr [rbp + 0x22], cl; test rax, rax; jne 0x78490; mov dword ptr [rsi], 0; mov eax, 2; ret; 
0x00000000004782c7: sal byte ptr [rbp + 0x26], cl; mov dword ptr [rsi], 0; mov eax, 1; ret; 
0x0000000000461db5: sal byte ptr [rbp + 0x28], 0x83; imul eax, dword ptr [rcx + rax], 0x48; add esp, 8; pop rbx; pop rbp; ret; 
0x000000000047a9b5: sal byte ptr [rbp + 0x29], cl; add rsp, 0x38; pop rbx; pop r14; ret; 
0x0000000000461932: sal byte ptr [rbp + 0x2b], 0x4c; mov eax, eax; shr rax, 2; vzeroupper; ret; 
0x00000000004607f2: sal byte ptr [rbp + 0x2b], 0x4c; mov eax, eax; vzeroupper; ret; 
0x00000000004726f0: sal byte ptr [rbp + 0x35], 0x83; sub eax, 0x3cf8e; add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x00000000004168ca: sal byte ptr [rbp + 0x42], 0x83; sub eax, 0x988bc; add dword ptr [rbx + 0x5d], ebx; pop r12; ret; 
0x00000000004200a2: sal byte ptr [rbp + 0x4b], 0x66; pmovmskb eax, mm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x000000000043e942: sal byte ptr [rbp + 0x6b], 0x44; mov edx, esp; mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000000443b51: sal byte ptr [rbp + 0x7c], 0x48; mov ecx, dword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rcx; 
0x00000000004727c3: sal byte ptr [rbp + 0xa], cl; sub dword ptr [rdi], 1; ret; 
0x000000000040dc92: sal byte ptr [rbp + 0xb], cl; xor eax, eax; ret; 
0x000000000040e6d9: sal byte ptr [rbp + 0xc], cl; sub dword ptr [rip + 0xa0a2d], 1; ret; 
0x0000000000411c2a: sal byte ptr [rbp + 1], 1; ret; 
0x0000000000467b86: sal byte ptr [rbp + 2], 0x5b; ret; 
0x0000000000468c14: sal byte ptr [rbp + 2], cl; call rax; 
0x0000000000473c86: sal byte ptr [rbp + 3], 0x4c; mov dword ptr [rbx], eax; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x000000000043ce02: sal byte ptr [rbp + 4], cl; mov rax, rdi; ret; 
0x000000000046232e: sal byte ptr [rbp + 7], cl; ret; 
0x0000000000410d05: sal byte ptr [rbp + 8], cl; sub dword ptr [rip + 0x9e401], 1; ret; 
0x0000000000417a7c: sal byte ptr [rbp + rax + 0x48], cl; mov dword ptr [rbx], edx; xor eax, eax; pop rbx; ret; 
0x00000000004352a0: sal byte ptr [rbp + rbx - 0xd], 0xf; mov esp, 0xc80148c0; add rax, rdi; vzeroupper; ret; 
0x00000000004611c0: sal byte ptr [rbp + rcx + 0x48], cl; bsf eax, edx; shr rax, 2; ret; 
0x00000000004614c8: sal byte ptr [rbp + rdx - 0x78], cl; rol dword ptr [rax + 0x1e740fe1], 1; ret; 
0x000000000040ef30: sal byte ptr [rbp - 0x13], 0x4c; mov eax, eax; ret; 
0x000000000043ba90: sal byte ptr [rbp - 0x13], cl; lea rax, [rcx - 1]; ret; 
0x000000000041a06b: sal byte ptr [rbp - 0x1e], 0x31; shr byte ptr [rcx], 0xc8; ret; 
0x0000000000411966: sal byte ptr [rbp - 0x21], cl; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000407990: sal byte ptr [rbp - 0x27], cl; ret; 
0x00000000004203ad: sal byte ptr [rbp - 0x30], 0xc5; std; xlatb; ret; 
0x00000000004203a5: sal byte ptr [rbp - 0x38], 0xc5; std; xlatb; ret 0xc085; 
0x00000000004351fd: sal byte ptr [rbp - 0x50], 0xc5; std; xlatb; ret; 
0x00000000004351f5: sal byte ptr [rbp - 0x68], 0xc5; std; xlatb; ret 0xc085; 
0x000000000047aa4f: sal byte ptr [rbp - 0x71], cl; add rsp, 0x38; pop rbx; pop r14; ret; 
0x000000000046109c: sal byte ptr [rbp - 0xf], cl; ret; 
0x0000000000410d8c: sal byte ptr [rbx + 0x21], 1; movzx eax, byte ptr [rax]; ret; 
0x000000000040acd2: sal byte ptr [rbx + rbp*2 + 0x49], 0x2b; and byte ptr [r8 + 1], r9b; ret; 
0x0000000000420412: sal byte ptr [rbx + rbx - 0xd], 0xf; mov esp, 0xf80148c0; add rax, rcx; vzeroupper; ret; 
0x000000000040ef1d: sal byte ptr [rbx + rdx + 0x48], 0x63; push rax; adc byte ptr [rax - 0x75], cl; add byte ptr [rcx + 0x39], cl; ror byte ptr [rdi + rcx + 0x4f], 1; ret 0x8548; 
0x0000000000401be4: sal byte ptr [rcx + rcx - 0x41], 0x30; fisttp dword ptr [rdx]; jmp rax; 
0x00000000004354fc: sal byte ptr [rcx + rdx + 0x48], cl; bsf eax, edx; ret; 
0x000000000044417a: sal byte ptr [rcx], 0xc9; xor edx, edx; push rax; call rbx; 
0x00000000004351b3: sal byte ptr [rcx], 0xd2; lea rax, [rdi + rax + 0x20]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000004351d3: sal byte ptr [rcx], 0xd2; lea rax, [rdi + rax + 0x40]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000435211: sal byte ptr [rcx], 0xd2; lea rax, [rdi + rax + 0x60]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000435193: sal byte ptr [rcx], 0xd2; lea rax, [rdi + rax]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000041162a: sal byte ptr [rcx], 1; ror byte ptr [rax + 0x39], 0xfa; setae al; ret; 
0x000000000043d415: sal byte ptr [rcx], 1; shl byte ptr [rip + 0x3fffc00], cl; div ecx; mov eax, eax; ret; 
0x000000000047855a: sal byte ptr [rcx], cl; div byte ptr [rcx]; dec dword ptr [rax - 0x77]; shr eax, 0x19; mov ch, 0xfc; jmp qword ptr [rsi + 0xf]; 
0x0000000000463556: sal byte ptr [rdi + 0x48], 0x89; ret; 
0x0000000000440dfa: sal byte ptr [rdi + 0xb], 0x48; add esp, 8; ret; 
0x0000000000401c26: sal byte ptr [rdi + rax - 0x41], 0x30; fisttp dword ptr [rdx]; jmp rax; 
0x000000000043faa3: sal byte ptr [rdi + rdi - 0xa], cl; or byte ptr [r9], al; je 0x3fae5; test byte ptr [r10 + 8], 1; jne 0x3faf0; ret; 
0x0000000000440276: sal byte ptr [rdi + rdx*2 + 0x4d], 0x89; ret; 
0x000000000045fdd5: sal byte ptr [rdi + rsi*2 + 0x48], 0x89; ret 0x11eb; 
0x00000000004604fb: sal byte ptr [rdx + 0x48], cl; bsf eax, edx; ret; 
0x00000000004611ab: sal byte ptr [rdx + 0x48], cl; bsf eax, edx; shr rax, 2; ret; 
0x000000000046b37c: sal byte ptr [rdx + 0x6be80002], cl; jp 0x6b37d; jmp qword ptr [rsi + 0x2e]; 
0x000000000040100d: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000472cb2: sal byte ptr [rdx + rcx + 0x48], 0x8d; adc eax, 0x3ae04; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x000000000046d4d0: sal byte ptr [rdx + rcx + 0x48], 0x8d; or eax, 0x405a6; mov qword ptr [rax], rcx; pop rbp; ret; 
0x0000000000407893: sal byte ptr [rdx + rdi*2 + 0x48], 0x8d; pop rax; or dword ptr [rdi], ecx; mov dh, 0x40; or dword ptr [rax + rax*8 - 0x38b7918c], eax; ret 0xfff8; 
0x0000000000435ba3: sal byte ptr [rdx + rdx + 0x48], 0xff; ret 0x2288; 
0x000000000042216f: sal byte ptr [rdx - 0x10f0992e], cl; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000422290: sal byte ptr [rdx - 0x10f09930], 1; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x3a73; 
0x000000000040f0ca: sal byte ptr [rsi + 0x13], 1; mov rax, qword ptr [rbx + 0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000045eff9: sal byte ptr [rsi + 0x14], 1; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000040d3fc: sal byte ptr [rsi + 0x14], 1; mov rdx, r12; mov rsi, r15; mov rdi, rbp; call qword ptr [rbx + 0x40]; 
0x000000000040f8c8: sal byte ptr [rsi + 0x15], 1; mov rax, qword ptr [rbx + 0x48]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x000000000040fed1: sal byte ptr [rsi + 0x1c], 1; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000040f53a: sal byte ptr [rsi + 0x23], 1; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000045ef5f: sal byte ptr [rsi + 0x2e], 1; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000045dfc5: sal byte ptr [rsi + 0x31], 1; movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x000000000040fe3a: sal byte ptr [rsi + 0x33], 1; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000045e71a: sal byte ptr [rsi + 0x3b], 1; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000040efd4: sal byte ptr [rsi + 0x59], 1; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x18]; 
0x000000000040978a: sal byte ptr [rsi + 0x5b], 1; mov rdi, rbx; call qword ptr [rbp + 0x60]; 
0x000000000040f488: sal byte ptr [rsi + 0x65], 1; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040f5ca: sal byte ptr [rsi + 0x6b], 1; movzx esi, byte ptr [r12]; lea r15, [r12 + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x0000000000409e6f: sal byte ptr [rsi + 0x72], 1; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x00000000004422cc: sal byte ptr [rsi + rbp + 0x48], 0x8b; push rax; or byte ptr [rcx + 0x3e895], cl; add dh, dh; ret 0x7402; 
0x000000000040789f: sal byte ptr [rsi + rbp*2 + 0x48], 0xc7; ret 0xfff8; 
0x000000000041164f: sal byte ptr [rsi + rbx + 0x45], 0x31; sar byte ptr [rdx + 2], cl; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000000472812: sal byte ptr [rsi + rcx + 0x48], 0x8d; add eax, 0x3cea4; mov qword ptr [rip + 0x3ce85], rax; add rsp, 8; ret; 
0x000000000041ff57: sal byte ptr [rsi + rdx + 0xf], 0xbc; ror byte ptr [rax + 1], 0xf8; add rax, rcx; ret; 
0x000000000043bd57: sal byte ptr [rsi + rdx*8 + 0x48], cl; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000004768c7: sal byte ptr [rsi + rsi*4 + 0x49], 0x8b; adc byte ptr [rax + 1], cl; ret 0x3949; 
0x0000000000446179: sal byte ptr [rsp + rbp + 0x48], 0x83; ret; 
0x0000000000441af9: sal byte ptr [rsp + rcx + 0x48], cl; lea edi, [rcx + rsi + 0x20]; jmp rdx; 
0x0000000000472f51: sal byte ptr [rsp + rcx + 0x5b], 0x5d; pop r12; ret; 
0x0000000000441429: sal byte ptr [rsp + rdi + 0x48], 0x89; ret; 
0x00000000004676e9: sal byte ptr [rsp + rsi*2 + 0xf], 0x1f; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x0000000000463ff3: sal dh, 1; ret 0xf08; 
0x000000000046a6c7: sal dword ptr [rbp - 0x2a], 1; mov eax, dword ptr [rcx]; ret; 
0x0000000000459e10: sal dword ptr [rcx], 0xc9; jmp rax; 
0x00000000004752ad: sal dword ptr [rcx], 1; ror byte ptr [rcx + 0x3ec90], cl; add byte ptr [rax - 0x7d], cl; ror dword ptr [rax], 0x83; ret 0x4801; 
0x00000000004220cf: sal dword ptr [rdx - 0x10f0992d], cl; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042220f: sal dword ptr [rdx - 0x10f0992f], 1; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000041cf46: sal dword ptr [rsi + 0xb], cl; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000043c163: sal ebx, 1; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x00000000004220ce: sal qword ptr [rdx - 0x10f0992d], cl; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042220e: sal qword ptr [rdx - 0x10f0992f], 1; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000461e19: sar bh, 0xff; call qword ptr [rbp + 0x53]; 
0x0000000000403cdc: sar bh, 0xff; dec dword ptr [rax - 0x39]; ret; 
0x000000000046b4ab: sar bh, 0xff; lcall [rbx + 0x64]; mov eax, dword ptr [rax]; ret; 
0x000000000043e7f3: sar bh, 0xff; push rdi; fsub dword ptr [rcx + rcx*4 + 1]; or rax, 0xffffffffffffffff; ret; 
0x000000000043e883: sar bh, 0xff; push rdi; fsub dword ptr [rcx + rcx*4 + 2]; mov eax, 0xffffffff; ret; 
0x000000000043eaa3: sar bh, 0xff; push rdi; fsub dword ptr [rcx + rcx*4 + 2]; mov rax, -1; ret; 
0x00000000004783c5: sar bh, 0xff; ret; 
0x000000000047839a: sar bh, 0xff; sub eax, ecx; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x00000000004784bf: sar bh, 0xff; sub eax, r8d; mov dword ptr [rsi], eax; mov eax, 2; ret; 
0x00000000004738ce: sar byte ptr [r8 + 0xd9], 1; syscall; 
0x00000000004738ce: sar byte ptr [r8 + 0xd9], 1; syscall; cmp rax, -0x1000; ja 0x738e0; ret; 
0x00000000004117ca: sar byte ptr [rax + 0x10], 0x48; cmovne eax, edx; mov qword ptr [rip + 0x9d9bd], rax; ret; 
0x000000000040c228: sar byte ptr [rax + 0x2c], 0x48; mov dword ptr [rbx + 0x90], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000048070c: sar byte ptr [rax + 0x48ffffff], 0xc7; ret 0xa300; 
0x00000000004738cf: sar byte ptr [rax + 0xd9], 1; syscall; 
0x00000000004738cf: sar byte ptr [rax + 0xd9], 1; syscall; cmp rax, -0x1000; ja 0x738e0; ret; 
0x000000000043f73d: sar byte ptr [rax - 0x43], 0x48; add esp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000401d3f: sar byte ptr [rax], 1; leave; ret; 
0x000000000046a0d0: sar byte ptr [rbp + rbp*8 - 0x15], cl; ret 0x783c; 
0x0000000000449798: sar byte ptr [rcx - 0x2b], 0x2d; ret 0; 
0x000000000043e9c7: sar byte ptr [rdi - 0x64], 0xb8; add dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x0000000000472737: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3cf3a]; syscall; 
0x00000000004724b3: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3d1ba]; syscall; 
0x00000000004705c7: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3f092]; syscall; 
0x0000000000450927: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5eca2]; syscall; 
0x0000000000450862: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5ed67]; syscall; 
0x00000000004506c5: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5ef04]; syscall; 
0x00000000004505f6: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5efd3]; syscall; 
0x0000000000445377: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a04a]; syscall; 
0x000000000044520b: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a1b6]; syscall; 
0x0000000000445113: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a2ae]; syscall; 
0x000000000043ddaf: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x71612]; syscall; 
0x0000000000417a13: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x94d76]; syscall; 
0x0000000000415cfb: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96a8e]; syscall; 
0x0000000000415cc3: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96ac6]; syscall; 
0x00000000004157a3: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96fe6]; syscall; 
0x000000000041545f: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9732a]; syscall; 
0x000000000041691e: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9885b]; syscall; 
0x0000000000413d8f: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x989fa]; syscall; 
0x0000000000413d5f: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x98a2a]; syscall; 
0x0000000000415ff7: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x99172]; syscall; 
0x000000000041432d: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ae4c]; syscall; 
0x00000000004142b1: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9aeb8]; syscall; 
0x000000000041400c: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9b16d]; syscall; 
0x000000000041216f: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9d00a]; syscall; 
0x0000000000410d1e: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9e3db]; syscall; 
0x0000000000410825: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9e8d4]; syscall; 
0x00000000004104da: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ec1f]; syscall; 
0x0000000000410197: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ef62]; syscall; 
0x000000000040ee91: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa0268]; syscall; 
0x000000000040ebd1: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa0528]; syscall; 
0x000000000040e725: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa09d4]; syscall; 
0x0000000000409693: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa5d2e]; syscall; 
0x0000000000408762: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa654f]; syscall; 
0x000000000040853b: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa6776]; syscall; 
0x0000000000408500: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa67b1]; syscall; 
0x000000000040842c: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa6885]; syscall; 
0x0000000000406500: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa8751]; syscall; 
0x0000000000404c2d: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa9fec]; syscall; 
0x0000000000403c44: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xaaf25]; syscall; 
0x0000000000403c1b: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xaaf4e]; syscall; 
0x0000000000403b12: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xab057]; syscall; 
0x00000000004011f4: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xada75]; syscall; 
0x0000000000401346: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004727da: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x0000000000415fcc: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000004163bb: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004166ad: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000412e01: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000416c6c: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000004173d2: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, rcx; mov eax, 0xca; syscall; 
0x0000000000411654: sar byte ptr [rdx + 2], cl; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000000434c15: sar byte ptr [rdx], 0x48; lea eax, [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000044d9e9: sar byte ptr [rsi + 0x24], 0x83; call 0x84762f3; pop rbx; ret; 
0x000000000042d5a7: sar ch, 0xff; jmp qword ptr [rdx - 0xf]; 
0x000000000047148a: sar dh, 0xff; jmp qword ptr [rsi - 0x70]; 
0x000000000042cf65: sar dword ptr [rax + rcx*2 + 0x11], 1; imul edi, ebp, 0x487cd162; adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000042cf6c: sar dword ptr [rax + rcx*2 + 0x11], 1; jno 0x2cf70; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000042cf73: sar dword ptr [rax + rcx*2 + 0x11], 1; jns 0x2cf78; ret; 
0x000000000043d392: sar dword ptr [rax], 1; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x000000000043cd3c: sar dword ptr [rbp + 0x48], 1; out 0x49, eax; jmp qword ptr [rdx - 0x2f]; 
0x000000000047314d: sar dword ptr [rcx], 0xc2; jg 0x73160; pcmpistri xmm1, xmm1, 0x3a; cmp edx, ecx; jle 0x73200; ret; 
0x00000000004188d9: sar dword ptr [rdi], cl; add al, byte ptr [rax]; cmove rax, rdx; ret; 
0x000000000043c679: sar dword ptr [rsi + 0x7f], 0x23; vzeroupper; ret; 
0x000000000042b9f9: sar dword ptr [rsi + 5], cl; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000047cee8: sar eax, 0x3f; and eax, 1; mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000045f0ef: sar eax, 2; mov r8d, dword ptr [rdi + 0x10]; sub r8d, eax; mov eax, r8d; ret; 
0x000000000045a09d: sar eax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x000000000047881c: sar eax, 3; pop rbx; pop rbp; pop r12; ret; 
0x0000000000420601: sar eax, cl; movzx eax, al; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x000000000043cbb9: sar ebp, 1; jg 0x3cc07; jmp qword ptr [rdx - 0x2f]; 
0x0000000000459bbe: sar ebp, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x00000000004687cb: sar ebx, 0xff; dec dword ptr [rcx + 1]; ret 0xb58b; 
0x000000000045f04c: sar ecx, 2; lea eax, [rcx - 1]; ret; 
0x000000000047fdd9: sar edi, 1; dec dword ptr [rax - 0x77]; ret; 
0x000000000045ef96: sar edx, 1; dec dword ptr [rbx - 0x14f3db8c]; ret; 
0x0000000000420607: sar edx, cl; movzx edx, dl; sub eax, edx; ret; 
0x00000000004354f8: sar edx, cl; test rdx, rdx; je 0x35510; bsf rax, rdx; ret; 
0x0000000000435497: sar edx, cl; test rdx, rdx; je 0x35520; bsf rax, rdx; ret; 
0x00000000004604f7: sar edx, cl; test rdx, rdx; je 0x60520; bsf rax, rdx; ret; 
0x0000000000460487: sar edx, cl; test rdx, rdx; je 0x60530; bsf rax, rdx; ret; 
0x00000000004611a7: sar edx, cl; test rdx, rdx; je 0x611d0; bsf rax, rdx; shr rax, 2; ret; 
0x000000000046113b: sar edx, cl; test rdx, rdx; je 0x611e0; bsf rax, rdx; shr rax, 2; ret; 
0x000000000043cb33: sar esi, 1; jg 0x3cb5b; vzeroupper; ret; 
0x000000000043ccbe: sar esi, 1; jg 0x3cce6; vzeroupper; ret; 
0x0000000000459bbd: sar r13, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x000000000047cee7: sar rax, 0x3f; and eax, 1; mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000045f0ee: sar rax, 2; mov r8d, dword ptr [rdi + 0x10]; sub r8d, eax; mov eax, r8d; ret; 
0x000000000045a09c: sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x000000000047881b: sar rax, 3; pop rbx; pop rbp; pop r12; ret; 
0x0000000000420600: sar rax, cl; movzx eax, al; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x000000000045f04b: sar rcx, 2; lea eax, [rcx - 1]; ret; 
0x0000000000420606: sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x00000000004354f7: sar rdx, cl; test rdx, rdx; je 0x35510; bsf rax, rdx; ret; 
0x0000000000435496: sar rdx, cl; test rdx, rdx; je 0x35520; bsf rax, rdx; ret; 
0x00000000004604f6: sar rdx, cl; test rdx, rdx; je 0x60520; bsf rax, rdx; ret; 
0x0000000000460486: sar rdx, cl; test rdx, rdx; je 0x60530; bsf rax, rdx; ret; 
0x00000000004611a6: sar rdx, cl; test rdx, rdx; je 0x611d0; bsf rax, rdx; shr rax, 2; ret; 
0x000000000046113a: sar rdx, cl; test rdx, rdx; je 0x611e0; bsf rax, rdx; shr rax, 2; ret; 
0x000000000043f8e1: sbb al, 0; add byte ptr [rax], al; syscall; 
0x000000000043f8e1: sbb al, 0; add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x3f8f0; ret; 
0x00000000004016e0: sbb al, 0; test al, al; jne 0x16e7; ret; 
0x0000000000441507: sbb al, 0x48; cmp edx, dword ptr [rdi + 0x18]; ja 0x41524; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000467276: sbb al, 0xba; add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000047d9e4: sbb al, 0xcc; mov rax, qword ptr [rsp + 8]; mov rdx, r8; mov rdi, r15; mov rsi, qword ptr [rbx]; call rax; 
0x00000000004021dc: sbb al, 0xd1; or al, byte ptr [rax]; pop rbx; ret; 
0x000000000043e283: sbb al, 0xf4; mov eax, esi; syscall; 
0x000000000041110e: sbb al, 0xff; jmp qword ptr [rsi + 0x66]; 
0x000000000046b49e: sbb al, 4; add byte ptr [rcx], al; ret; 
0x000000000047f8d3: sbb al, bh; jmp qword ptr [rsi + 0x2e]; 
0x000000000047cde6: sbb al, byte ptr [rax]; add byte ptr [rax], al; mov edi, 1; call rax; 
0x000000000040eacd: sbb al, byte ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000047ab9d: sbb al, byte ptr [rdx]; add bl, dh; divps xmm0, xmmword ptr [rip + 0x21a94]; ret; 
0x00000000004211dd: sbb al, byte ptr [rsi]; add byte ptr [rcx + 0x63], cl; or al, 0x93; add rcx, r11; jmp rcx; 
0x000000000046b3a7: sbb al, ch; xor dword ptr [rbx - 0x7cb70006], 0xffffffc4; or byte ptr [rcx + rcx*4 - 0x20], al; pop rbp; pop r12; ret; 
0x000000000040ca5a: sbb bl, 0x4a; add byte ptr [rax + 0x39], cl; ret 0x830f; 
0x000000000045eff3: sbb bl, 0x4a; add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x14], 1; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000040fecb: sbb bl, 0x4a; add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x1c], 1; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000040f534: sbb bl, 0x4a; add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x23], 1; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000045ef59: sbb bl, 0x4a; add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x2e], 1; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000040fe34: sbb bl, 0x4a; add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x33], 1; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000045e714: sbb bl, 0x4a; add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x3b], 1; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000040efce: sbb bl, 0x4a; add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x59], 1; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x18]; 
0x0000000000409784: sbb bl, 0x4a; add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x5b], 1; mov rdi, rbx; call qword ptr [rbp + 0x60]; 
0x000000000040f482: sbb bl, 0x4a; add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x65], 1; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x0000000000409e69: sbb bl, 0x4a; add byte ptr [rax + 0x39], cl; sal byte ptr [rsi + 0x72], 1; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040a726: sbb bl, 0x4a; add byte ptr [rax - 0x39], cl; ret; 
0x0000000000453d14: sbb bl, 0x4a; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x000000000043f48b: sbb bl, al; nop dword ptr [rax]; mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x00000000004167b3: sbb bl, al; nop dword ptr [rax]; mov rsi, qword ptr [rsp + 0x18]; add rsp, 0x18; jmp rax; 
0x00000000004398aa: sbb bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x00000000004391fa: sbb bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x000000000043986b: sbb bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x00000000004391bb: sbb bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x00000000004398a9: sbb bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x00000000004391f9: sbb bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x000000000043986a: sbb bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x00000000004391ba: sbb bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x000000000040f0ef: sbb byte ptr [r11 + 0x480c2474], cl; mov edi, dword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000046d6c1: sbb byte ptr [r8 + 0x2b], cl; sub byte ptr [r9 + r9*4 + 4], cl; ret 0x8b48; 
0x0000000000411b2b: sbb byte ptr [r8 + 0x39], cl; ret; 
0x000000000046cf44: sbb byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x000000000040a89f: sbb byte ptr [r8 + 1], r9b; ret 0x148; 
0x0000000000457f89: sbb byte ptr [r8 - 0x3f], r9b; clc; add cl, byte ptr [rax + 0x39]; ret 0x850f; 
0x000000000040ef90: sbb byte ptr [r8 - 0x77], r9b; push rdi; mov qword ptr [rdi + 8], rax; ret; 
0x000000000045e79a: sbb byte ptr [r9 + r9*4 - 0x1a], al; pop rbx; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x000000000046d6c2: sbb byte ptr [rax + 0x2b], cl; sub byte ptr [r9 + r9*4 + 4], cl; ret 0x8b48; 
0x0000000000411b2c: sbb byte ptr [rax + 0x39], cl; ret; 
0x000000000046cf45: sbb byte ptr [rax + 0x5a], bl; pop rbx; ret; 
0x0000000000442ce7: sbb byte ptr [rax + 0x63], cl; add al, 0x83; add rax, rbx; jmp rax; 
0x000000000040a8a0: sbb byte ptr [rax + 1], cl; ret 0x148; 
0x000000000047a714: sbb byte ptr [rax + rax], al; add byte ptr [rax - 0x75], cl; add al, 0x24; add rsp, 0x38; ret; 
0x00000000004681fb: sbb byte ptr [rax + rax], al; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000457f8a: sbb byte ptr [rax - 0x3f], cl; clc; add cl, byte ptr [rax + 0x39]; ret 0x850f; 
0x000000000043ea6b: sbb byte ptr [rax - 0x75], cl; je 0x3ea94; adc byte ptr [rcx - 0x77], al; ror byte ptr [rbx + 0x3108247c], 0xc0; syscall; 
0x0000000000446f23: sbb byte ptr [rax - 0x75], cl; je 0x46f4c; push rax; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x00000000004083d3: sbb byte ptr [rax - 0x75], cl; jo 0x83f8; mov edi, ebp; ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x000000000047da6a: sbb byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x77], cl; ret; 
0x000000000040ef89: sbb byte ptr [rax - 0x77], cl; adc byte ptr [r8 - 0x77], r9b; sbb byte ptr [r8 - 0x77], r9b; push rdi; mov qword ptr [rdi + 8], rax; ret; 
0x000000000040ef91: sbb byte ptr [rax - 0x77], cl; push rdi; mov qword ptr [rdi + 8], rax; ret; 
0x000000000047eb09: sbb byte ptr [rax - 0x77], cl; ret 0xeee8; 
0x00000000004570dd: sbb byte ptr [rax - 0x77], cl; ret; 
0x000000000040b6c3: sbb byte ptr [rax - 1], bh; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000043e7e1: sbb byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000043e7e1: sbb byte ptr [rax], al; add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x3e7f0; ret; 
0x000000000043ea34: sbb byte ptr [rax], al; add byte ptr [rax], al; test eax, eax; jne 0x3ea50; syscall; 
0x000000000043ead4: sbb byte ptr [rax], al; add byte ptr [rax], al; test eax, eax; jne 0x3eaf0; mov eax, 1; syscall; 
0x000000000043eba4: sbb byte ptr [rax], al; add byte ptr [rax], al; test eax, eax; jne 0x3ebc0; mov eax, 3; syscall; 
0x0000000000410d00: sbb byte ptr [rax], al; add byte ptr [rax], al; test edx, edx; jne 0x10d10; sub dword ptr [rip + 0x9e401], 1; ret; 
0x00000000004727be: sbb byte ptr [rax], al; add byte ptr [rax], al; test edx, edx; jne 0x727d0; sub dword ptr [rdi], 1; ret; 
0x000000000040e6d4: sbb byte ptr [rax], al; add byte ptr [rax], al; test edx, edx; jne 0xe6e8; sub dword ptr [rip + 0xa0a2d], 1; ret; 
0x0000000000459a7c: sbb byte ptr [rax], al; add byte ptr [rbp - 0x7b], cl; test byte ptr [rdi], 0x84; jmp qword ptr [rdx]; 
0x000000000043e173: sbb byte ptr [rbp + 0x31], al; ror byte ptr [rax - 0x77], 0xef; call rbx; 
0x000000000040f0f0: sbb byte ptr [rbx + 0x480c2474], cl; mov edi, dword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000047a265: sbb byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000047dd37: sbb byte ptr [rbx + 0x5d], bl; mov eax, r8d; ret; 
0x0000000000416264: sbb byte ptr [rbx + 0x5d], bl; pop r12; jmp rax; 
0x0000000000457187: sbb byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000040b059: sbb byte ptr [rbx + 0x5d], bl; ret; 
0x000000000044fb4d: sbb byte ptr [rbx + rcx*4 + 0x77], cl; and byte ptr [rbx + rcx*4 + 0x7f], cl; sub byte ptr [rcx - 0x3b76b310], cl; mov rbp, r9; jmp rdx; 
0x0000000000410947: sbb byte ptr [rbx - 0x2fd6efb9], cl; ret; 
0x000000000040729d: sbb byte ptr [rbx], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x00000000004123a6: sbb byte ptr [rcx + 1], cl; ret; 
0x000000000043fc63: sbb byte ptr [rcx + rcx*4 + 0x44], al; and al, 0xc; mov rdi, r15; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x0000000000473ea1: sbb byte ptr [rcx + rcx*4 - 0x18], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000045e79b: sbb byte ptr [rcx + rcx*4 - 0x1a], al; pop rbx; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x000000000043dff4: sbb byte ptr [rcx + rcx*4 - 0x1f], cl; mov rdx, r13; call rbx; 
0x000000000044095b: sbb byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000004514f8: sbb byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000047dc83: sbb byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x00000000004520c4: sbb byte ptr [rcx - 0x75], cl; push rdi; and byte ptr [rcx + rcx*4 - 9], cl; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x0000000000449189: sbb byte ptr [rcx - 0x77], al; ret 0x840f; 
0x0000000000407b0a: sbb byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x000000000040b69b: sbb byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x000000000044150b: sbb byte ptr [rdi + 0x16], dh; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000441531: sbb byte ptr [rdi - 0x10], bh; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x000000000047ae1b: sbb byte ptr [rdx], al; add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000045ea82: sbb byte ptr [rsi + 0x1f], dh; mov rax, qword ptr [rax + 0xe0]; mov esi, 0xffffffff; call qword ptr [rax + 0x18]; 
0x0000000000421453: sbb byte ptr [rsi], al; add byte ptr [rcx + 0x63], cl; or al, 0x93; add rcx, r11; jmp rcx; 
0x0000000000403d82: sbb ch, byte ptr [rsi + 0x75e8000a]; ret 0xffbf; 
0x00000000004328fd: sbb cl, byte ptr [rdi]; xchg ah, bl; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000043454a: sbb cl, byte ptr [rdi]; xchg bh, bh; add eax, 0x83480000; ret 0x4910; 
0x0000000000433d6a: sbb cl, byte ptr [rdi]; xchg bh, bl; or eax, 0x83480000; ret 0x4910; 
0x000000000043415a: sbb cl, byte ptr [rdi]; xchg bh, ch; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043397a: sbb cl, byte ptr [rdi]; xchg bh, cl; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043345d: sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rax], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000432c3d: sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rcx - 0x7cb80000], bl; ret 0xe910; 
0x000000000043241d: sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rdx - 0x7cb80000], bh; ret 0xe910; 
0x0000000000433b19: sbb cl, byte ptr [rdi]; xchg byte ptr [rax], dh; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000432f7d: sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000043275d: sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rcx], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000431f3d: sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rdx - 0x7cb80000], bl; ret 0xe910; 
0x000000000043311d: sbb cl, byte ptr [rdi]; xchg byte ptr [rbx + rax - 0x7cb80000], bh; ret 0xe910; 
0x000000000043400a: sbb cl, byte ptr [rdi]; xchg byte ptr [rdi], bh; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043382a: sbb cl, byte ptr [rdi]; xchg byte ptr [rdi], bl; adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043493a: sbb cl, byte ptr [rdi]; xchg byte ptr [rdi], cl; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043227d: sbb cl, byte ptr [rdi]; xchg byte ptr [rdx + rdx], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004323b3: sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], ah; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004330b3: sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], ah; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000432bd3: sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], al; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000433f0b: sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], bh; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000043483b: sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], cl; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004333f3: sbb cl, byte ptr [rdi]; xchg dh, ah; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004326f3: sbb cl, byte ptr [rdi]; xchg dh, ah; or eax, 0x83480000; ret 0x4910; 
0x0000000000432213: sbb cl, byte ptr [rdi]; xchg dh, al; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000432f13: sbb cl, byte ptr [rdi]; xchg dh, al; add eax, 0x83480000; ret 0x4910; 
0x000000000043405b: sbb cl, byte ptr [rdi]; xchg dh, ch; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000043387b: sbb cl, byte ptr [rdi]; xchg dh, cl; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000047efb0: sbb dh, dh; ret 0xf01; 
0x000000000046d269: sbb dword ptr [rax - 0x76b70001], 0x43; adc byte ptr [rax + 0x5a], bl; pop rbx; ret; 
0x0000000000440b44: sbb dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x0000000000440b44: sbb dword ptr [rax], eax; add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x40b53; ret; 
0x0000000000420f49: sbb dword ptr [rip + 0x63490006], 0xc; xchg eax, ebx; add rcx, r11; jmp rcx; 
0x0000000000421321: sbb dword ptr [rsi], eax; add byte ptr [rcx + 0x63], cl; or al, 0x93; add rcx, r11; jmp rcx; 
0x0000000000448e63: sbb dword ptr [rsp + rax - 0x7cb80000], -0x40; add dword ptr [rax - 0x7d], ecx; ret 0x4901; 
0x000000000043b767: sbb eax, -1; ret; 
0x0000000000464980: sbb eax, 0x1789e801; sti; dec dword ptr [rax - 0x77]; ret 0x8548; 
0x00000000004803bd: sbb eax, 0x2ed2e; test rbx, rbx; jne 0x803a8; pop rbx; ret; 
0x0000000000467b52: sbb eax, 0x4000003; xor eax, eax; ret; 
0x0000000000429e25: sbb eax, 0x46f00ff2; or eax, 0xef00ff2; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000429e20: sbb eax, 0x477f0ff3; sbb eax, 0x46f00ff2; or eax, 0xef00ff2; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000043952f: sbb eax, 0x490004a8; movsxd rcx, dword ptr [rbx + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000004395c7: sbb eax, 0x4a784; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439592: sbb eax, 0x4a7b9; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439566: sbb eax, 0x4a7e5; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439550: sbb eax, 0x4a7fb; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000043952e: sbb eax, 0x4a81d; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439509: sbb eax, 0x4a842; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000004394ec: sbb eax, 0x4a85f; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000439494: sbb eax, 0x4a8b7; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438fa7: sbb eax, 0x4ad24; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f72: sbb eax, 0x4ad59; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f46: sbb eax, 0x4ad85; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f30: sbb eax, 0x4ad9b; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f0e: sbb eax, 0x4adbd; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438ee9: sbb eax, 0x4ade2; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438ecc: sbb eax, 0x4adff; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438e74: sbb eax, 0x4ae57; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000042bf93: sbb eax, 0x576f8; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bc35: sbb eax, 0x57a56; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bde0: sbb eax, 0x57aeb; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bab5: sbb eax, 0x57bd6; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bb78: sbb eax, 0x57d53; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b935: sbb eax, 0x57d56; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b9f8: sbb eax, 0x57ed3; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b7b5: sbb eax, 0x57ed6; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b878: sbb eax, 0x58053; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b635: sbb eax, 0x58056; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b6f9: sbb eax, 0x581d2; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b4b5: sbb eax, 0x581d6; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b578: sbb eax, 0x58353; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b335: sbb eax, 0x58356; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b3f8: sbb eax, 0x584d3; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b1b5: sbb eax, 0x584d6; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b278: sbb eax, 0x58653; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b035: sbb eax, 0x58656; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b0f8: sbb eax, 0x587d3; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aeb5: sbb eax, 0x587d6; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042af78: sbb eax, 0x58953; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042ad35: sbb eax, 0x58956; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042adf8: sbb eax, 0x58ad3; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042abb5: sbb eax, 0x58ad6; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042ac78: sbb eax, 0x58c53; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aa35: sbb eax, 0x58c56; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aaf8: sbb eax, 0x58dd3; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a8b5: sbb eax, 0x58dd6; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a978: sbb eax, 0x58f53; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a735: sbb eax, 0x58f56; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a5bc: sbb eax, 0x590cf; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a7f8: sbb eax, 0x590d3; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a678: sbb eax, 0x59253; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a3bd: sbb eax, 0x592ce; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a53b: sbb eax, 0x59390; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a3df: sbb eax, 0x594ec; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042947f: sbb eax, 0x59d0c; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429155: sbb eax, 0x5a036; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004292ec: sbb eax, 0x5a0df; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428fd5: sbb eax, 0x5a1b6; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429098: sbb eax, 0x5a333; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428e55: sbb eax, 0x5a336; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428f18: sbb eax, 0x5a4b3; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428cd5: sbb eax, 0x5a4b6; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428d98: sbb eax, 0x5a633; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428b55: sbb eax, 0x5a636; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428c19: sbb eax, 0x5a7b2; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004289d5: sbb eax, 0x5a7b6; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428a98: sbb eax, 0x5a933; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428855: sbb eax, 0x5a936; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428918: sbb eax, 0x5aab3; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004286d5: sbb eax, 0x5aab6; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428798: sbb eax, 0x5ac33; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428555: sbb eax, 0x5ac36; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428618: sbb eax, 0x5adb3; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004283d5: sbb eax, 0x5adb6; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428498: sbb eax, 0x5af33; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428255: sbb eax, 0x5af36; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428318: sbb eax, 0x5b0b3; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004280d5: sbb eax, 0x5b0b6; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428198: sbb eax, 0x5b233; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427f55: sbb eax, 0x5b236; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428018: sbb eax, 0x5b3b3; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427dd5: sbb eax, 0x5b3b6; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427e98: sbb eax, 0x5b533; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427c55: sbb eax, 0x5b536; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427adc: sbb eax, 0x5b6af; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427d18: sbb eax, 0x5b6b3; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427886: sbb eax, 0x5b745; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004277c9: sbb eax, 0x5b802; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427b98: sbb eax, 0x5b833; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004278fc: sbb eax, 0x5b88f; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004276de: sbb eax, 0x5b8ed; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427a5b: sbb eax, 0x5b970; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427613: sbb eax, 0x5b9b8; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004278e9: sbb eax, 0x5bae2; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004265f2: sbb eax, 0x5c9d9; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426554: sbb eax, 0x5ca77; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004264a2: sbb eax, 0x5cb29; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426404: sbb eax, 0x5cbc7; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426352: sbb eax, 0x5cc79; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004262b4: sbb eax, 0x5cd17; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426202: sbb eax, 0x5cdc9; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426164: sbb eax, 0x5ce67; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004260b2: sbb eax, 0x5cf19; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000426014: sbb eax, 0x5cfb7; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425f62: sbb eax, 0x5d069; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425ec4: sbb eax, 0x5d107; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425e12: sbb eax, 0x5d1b9; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425d74: sbb eax, 0x5d257; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425cc2: sbb eax, 0x5d309; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425c29: sbb eax, 0x5d3a2; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425b72: sbb eax, 0x5d459; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425ad4: sbb eax, 0x5d4f7; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425a22: sbb eax, 0x5d5a9; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425984: sbb eax, 0x5d647; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004258d2: sbb eax, 0x5d6f9; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425834: sbb eax, 0x5d797; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425782: sbb eax, 0x5d849; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004256e4: sbb eax, 0x5d8e7; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425632: sbb eax, 0x5d999; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425594: sbb eax, 0x5da37; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004254e2: sbb eax, 0x5dae9; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425444: sbb eax, 0x5db87; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425392: sbb eax, 0x5dc39; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004252f4: sbb eax, 0x5dcd7; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425248: sbb eax, 0x5dd83; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425157: sbb eax, 0x5de74; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425098: sbb eax, 0x5df33; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042502e: sbb eax, 0x5df9d; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424f3f: sbb eax, 0x5e08c; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424d05: sbb eax, 0x5e106; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424e7a: sbb eax, 0x5e151; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424c2b: sbb eax, 0x5e1e0; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423c22: sbb eax, 0x5f1e9; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423b84: sbb eax, 0x5f287; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423ad2: sbb eax, 0x5f339; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423a34: sbb eax, 0x5f3d7; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423982: sbb eax, 0x5f489; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004238e4: sbb eax, 0x5f527; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423832: sbb eax, 0x5f5d9; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423794: sbb eax, 0x5f677; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004236e2: sbb eax, 0x5f729; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423644: sbb eax, 0x5f7c7; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423592: sbb eax, 0x5f879; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004234f4: sbb eax, 0x5f917; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423442: sbb eax, 0x5f9c9; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004233a4: sbb eax, 0x5fa67; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004232f2: sbb eax, 0x5fb19; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423259: sbb eax, 0x5fbb2; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004231a2: sbb eax, 0x5fc69; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423104: sbb eax, 0x5fd07; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423052: sbb eax, 0x5fdb9; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422fb4: sbb eax, 0x5fe57; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422f02: sbb eax, 0x5ff09; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422e64: sbb eax, 0x5ffa7; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422db2: sbb eax, 0x60059; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422d14: sbb eax, 0x600f7; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422c62: sbb eax, 0x601a9; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422bc4: sbb eax, 0x60247; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422b12: sbb eax, 0x602f9; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422a74: sbb eax, 0x60397; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004229c2: sbb eax, 0x60449; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422924: sbb eax, 0x604e7; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422878: sbb eax, 0x60593; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422787: sbb eax, 0x60684; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004226c8: sbb eax, 0x60743; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042265e: sbb eax, 0x607ad; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042256f: sbb eax, 0x6089c; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004224aa: sbb eax, 0x60961; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000421765: sbb eax, 0x61566; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x00000000004216eb: sbb eax, 0x615e0; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000042165c: sbb eax, 0x6166f; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421451: sbb eax, 0x6187a; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000042131f: sbb eax, 0x619ac; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421259: sbb eax, 0x61a72; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x00000000004211db: sbb eax, 0x61af0; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421144: sbb eax, 0x61b87; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420f48: sbb eax, 0x61d83; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420e17: sbb eax, 0x61eb4; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420d08: sbb eax, 0x61fc3; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420f4a: sbb eax, 0x63490006; or al, 0x93; add rcx, r11; jmp rcx; 
0x00000000004651ed: sbb eax, 0x89000003; ret 0xe8c0; 
0x0000000000410cad: sbb eax, 0x9e466; add dword ptr [rip + 0x9e45b], 1; pop rbx; ret; 
0x00000000004021cf: sbb eax, 0xad120; mov dword ptr [rip + 0xad11e], ecx; mov dword ptr [rip + 0xad11c], edx; pop rbx; ret; 
0x00000000004352a2: sbb eax, 0xc0bc0ff3; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x000000000041b492: sbb eax, 0xcfbc0ff3; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000040dc76: sbb eax, 0xe6ebe074; nop dword ptr [rax + rax]; xor eax, eax; ret; 
0x000000000046db86: sbb eax, dword ptr [rax]; add byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x000000000041865c: sbb eax, dword ptr [rbp + 0x158d48c0]; retf 0x248; add byte ptr [rax - 0x73], cl; add eax, 0x24913; cmove rax, rdx; ret; 
0x00000000004011f1: sbb eax, dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xada75]; syscall; 
0x000000000043d7f3: sbb eax, dword ptr [rdi]; add byte ptr [rbx + 0xd7401f8], al; cmp eax, 2; je 0x3d810; xor eax, eax; ret; 
0x0000000000421146: sbb eax, dword ptr [rsi]; add byte ptr [rcx + 0x63], cl; or al, 0x93; add rcx, r11; jmp rcx; 
0x000000000047dfe4: sbb eax, eax; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000476a66: sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x0000000000420a67: sbb eax, eax; or eax, 1; ret; 
0x000000000047d96f: sbb eax, eax; ret; 
0x000000000043b765: sbb eax, eax; sbb eax, -1; ret; 
0x0000000000425249: sbb ebp, 5; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043fdad: sbb ebx, ebp; cmp byte ptr [rax - 0x73], cl; push rbx; or byte ptr [rax - 0x7d], cl; ret; 
0x00000000004232f3: sbb ebx, edi; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004782c4: sbb ecx, dword ptr [rax - 0x7b]; sal byte ptr [rbp + 0x26], cl; mov dword ptr [rsi], 0; mov eax, 1; ret; 
0x00000000004260b3: sbb edi, ecx; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000045f4b7: sbb edi, edx; lcall [rdx + 0x31]; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000478131: sbb edx, ebx; mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000000417b89: sbb esi, dword ptr [rdi + 9]; add byte ptr [rdx], al; lea rax, [rip + 0xdfb]; lea rdx, [rip + 0x24e4]; cmovne rax, rdx; ret; 
0x0000000000420414: sbb esi, ebx; bsf eax, eax; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000000417b26: sbb esi, esi; add eax, 0x977d6; lea rax, [rip + 0x1d09b]; lea rdx, [rip + 0x221b4]; cmovne rax, rdx; ret; 
0x000000000044b711: sbb esp, dword ptr [rdi - 0x2917fffd]; jbe 0x4b714; jmp qword ptr [rsi + 0xf]; 
0x0000000000478130: sbb r10, r11; mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000000438e76: scasb al, byte ptr [rdi]; add al, 0; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000041f5e2: scasb al, byte ptr [rdi]; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043459e: scasb al, byte ptr [rdi]; add eax, 0x83480000; ret 0xe910; 
0x0000000000472cb9: scasb al, byte ptr [rdi]; add eax, dword ptr [rax]; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x00000000004277c5: scasb al, byte ptr [rdi]; clc; lea r11, [rip + 0x5b802]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042760f: scasb al, byte ptr [rdi]; clc; lea r11, [rip + 0x5b9b8]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424d01: scasb al, byte ptr [rdi]; clc; lea r11, [rip + 0x5e106]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424c27: scasb al, byte ptr [rdi]; clc; lea r11, [rip + 0x5e1e0]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000454b8e: scasb al, byte ptr [rdi]; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x000000000045d232: scasb al, byte ptr [rdi]; jg 0x5d238; add byte ptr [rax + 0x63], cl; adc al, 0x91; add rdx, rcx; jmp rdx; 
0x00000000004142c5: scasb al, byte ptr [rdi]; or dword ptr [rax], eax; syscall; 
0x000000000043469d: scasd eax, dword ptr [rdi]; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000428257: scasd eax, dword ptr [rdi]; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427add: scasd eax, dword ptr [rdi]; mov dh, 5; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000440df0: scasd eax, dword ptr [rdi]; nop dword ptr [rax]; cmp rax, r8; ja 0x40e08; add rsp, 8; ret; 
0x0000000000403c2f: scasd eax, dword ptr [rdi]; or al, byte ptr [rax]; syscall; 
0x0000000000411711: scasd eax, dword ptr [rdi]; or dword ptr [rax], eax; ret; 
0x000000000043d43d: scasd eax, dword ptr [rdi]; pop rcx; cld; jmp qword ptr [rsi + 0x66]; 
0x000000000044fede: scasd eax, dword ptr [rdi]; ret 0x148; 
0x000000000040a9ca: scasd eax, dword ptr [rdi]; ret 0x2948; 
0x00000000004123a1: scasd eax, dword ptr [rdi]; ret 0x8948; 
0x000000000043d617: scasd eax, dword ptr [rdi]; ret 0xda89; 
0x000000000043d628: scasd eax, dword ptr [rdi]; ret 0xee9; 
0x000000000040ab99: scasd eax, dword ptr [rdi]; ret; 
0x000000000043d625: scasd eax, dword ptr [rdi]; ror dword ptr [rdi], 0xaf; ret 0xee9; 
0x0000000000467bdd: scasd eax, dword ptr [rdi]; xchg eax, esp; stc; jmp qword ptr [rsi + 0x66]; 
0x0000000000403c2e: scasq rax, qword ptr [rdi]; or al, byte ptr [rax]; syscall; 
0x00000000004016dd: seta al; sbb al, 0; test al, al; jne 0x16e7; ret; 
0x0000000000411630: setae al; ret; 
0x0000000000402e87: sete ah; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000044fb02: sete dh; xor eax, eax; mov dword ptr [rbx + 0x40], esi; pop rbx; ret; 
0x0000000000402e86: sete r12b; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000044fb01: sete sil; xor eax, eax; mov dword ptr [rbx + 0x40], esi; pop rbx; ret; 
0x0000000000478605: setne al; add rsp, 8; movzx eax, al; neg eax; ret; 
0x000000000040dcad: setne al; movzx eax, al; neg eax; ret; 
0x0000000000472ba4: setne al; pop rbx; movzx eax, al; pop rbp; pop r12; ret; 
0x00000000004277c4: sfence; lea r11, [rip + 0x5b802]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042760e: sfence; lea r11, [rip + 0x5b9b8]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424d00: sfence; lea r11, [rip + 0x5e106]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424c26: sfence; lea r11, [rip + 0x5e1e0]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000044a48d: sgdt [rax]; add byte ptr [rax - 0x77], cl; shr bl, 1; ret 0x2e66; 
0x0000000000461722: shl byte ptr [rax + 0x48], 1; clc; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000435742: shl byte ptr [rax + 0x48], 1; clc; sub rax, rdx; vzeroupper; ret; 
0x000000000042034b: shl byte ptr [rax + 0x48], 1; clc; vzeroupper; ret; 
0x00000000004806e6: shl byte ptr [rax + 0x48ffffff], 0xc7; ret 0x9180; 
0x00000000004616b6: shl byte ptr [rax], 0x48; add eax, edi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x00000000004356d6: shl byte ptr [rax], 0x48; add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x000000000042030b: shl byte ptr [rax], 0x48; add eax, edi; vzeroupper; ret; 
0x000000000040dc71: shl byte ptr [rbx + rax*4 + 0x7d], 0; sbb eax, 0xe6ebe074; nop dword ptr [rax + rax]; xor eax, eax; ret; 
0x0000000000411f64: shl byte ptr [rdi + 0x1480009], 1; ret; 
0x000000000043d417: shl byte ptr [rip + 0x3fffc00], cl; div ecx; mov eax, eax; ret; 
0x000000000043f5a2: shl byte ptr [rip + 0x410000], cl; cmp eax, 0x410000; je 0x3f5d8; mov eax, 0x101; syscall; 
0x0000000000478835: shl byte ptr [rsi + 0x2e], cl; nop dword ptr [rax + rax]; ret; 
0x000000000043b9af: shl byte ptr [rsi + 0x44], 0xf; out dx, eax; ret 0xf66; 
0x0000000000439d53: shl byte ptr [rsi + 0xf], 0xd7; ror dword ptr [rcx], cl; ret 0xe074; 
0x0000000000434dc5: shl byte ptr [rsi + 0xf], 0xeb; ret 0xf66; 
0x000000000042227b: shl byte ptr [rsi + 0xf], 0xef; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x5173; 
0x0000000000422292: shl byte ptr [rsi + 0xf], 1; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x3a73; 
0x00000000004600a7: shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x0000000000460096: shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret; 
0x0000000000422171: shl byte ptr [rsi + 0xf], cl; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000462339: shl dword ptr [rbx], 0x4e; adc byte ptr [rax - 0x73], cl; or al, 0x8e; add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000439d4b: shl dword ptr [rsi + 0xf], 0x74; fisub dword ptr [rsi + 0xf]; xlatb; shl byte ptr [rsi + 0xf], 0xd7; ror dword ptr [rcx], cl; ret 0xe074; 
0x0000000000460092: shl dword ptr [rsi + 0xf], 0xd7; shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret; 
0x000000000043b80b: shl dword ptr [rsi + 0xf], 0xda; ret; 
0x00000000004221f6: shl dword ptr [rsi + 0xf], 0xef; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004222ad: shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x2373; 
0x0000000000422296: shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x3a73; 
0x000000000042227f: shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x5173; 
0x0000000000420d3b: shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000422211: shl dword ptr [rsi + 0xf], 1; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000041fc9c: shl dword ptr [rsi + 0xf], 1; xlatb; ret 0xc085; 
0x00000000004220d1: shl dword ptr [rsi + 0xf], cl; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004413a2: shl eax, 4; mov rax, qword ptr [rdx + rax]; mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x00000000004355ab: shl ecx, 0x20; or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x00000000004413f0: shl ecx, 4; cmp r8, qword ptr [rcx + rsi + 0x10]; jae 0x413a1; xor eax, eax; ret; 
0x0000000000476f9c: shl ecx, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x0000000000476f27: shl ecx, cl; mov qword ptr [rdi - 8], r9; ret; 
0x0000000000476ef6: shl ecx, cl; mov qword ptr [rdi], r9; ret; 
0x0000000000434f4a: shl edx, 0x30; or rax, rdx; bsf rax, rax; lea rax, [rdi + rax]; ret; 
0x0000000000440c42: shl edx, 4; mov rdx, qword ptr [rcx + rdx]; lea rcx, [rip - 0x60]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x0000000000478303: shl edx, cl; mov qword ptr [rdi], rdx; mov dword ptr [rsi], eax; mov eax, 1; ret; 
0x0000000000476f9b: shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x0000000000476f26: shl r9, cl; mov qword ptr [rdi - 8], r9; ret; 
0x0000000000476ef5: shl r9, cl; mov qword ptr [rdi], r9; ret; 
0x00000000004413a1: shl rax, 4; mov rax, qword ptr [rdx + rax]; mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x00000000004355aa: shl rcx, 0x20; or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x00000000004413ef: shl rcx, 4; cmp r8, qword ptr [rcx + rsi + 0x10]; jae 0x413a1; xor eax, eax; ret; 
0x0000000000434f49: shl rdx, 0x30; or rax, rdx; bsf rax, rax; lea rax, [rdi + rax]; ret; 
0x0000000000440c41: shl rdx, 4; mov rdx, qword ptr [rcx + rdx]; lea rcx, [rip - 0x60]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x0000000000478302: shl rdx, cl; mov qword ptr [rdi], rdx; mov dword ptr [rsi], eax; mov eax, 1; ret; 
0x0000000000476f94: shld eax, ecx, cl; mov qword ptr [rdi - 8], r8; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x0000000000476f20: shld eax, ecx, cl; mov qword ptr [rdi], r8; shl r9, cl; mov qword ptr [rdi - 8], r9; ret; 
0x0000000000476f93: shld r8, r9, cl; mov qword ptr [rdi - 8], r8; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x0000000000476f1f: shld r8, r9, cl; mov qword ptr [rdi], r8; shl r9, cl; mov qword ptr [rdi - 8], r9; ret; 
0x0000000000450908: shr ah, 5; add byte ptr [rax], al; add byte ptr [rax], al; add bl, ch; ret; 
0x0000000000461fd7: shr bl, 0xb4; call 0x40bb0; nop; mov eax, 0x3f; syscall; 
0x000000000044a493: shr bl, 1; ret 0x2e66; 
0x00000000004186f0: shr byte ptr [rbx + 9], 0; add cl, byte ptr [rax - 0x73]; adc eax, 0x23d24; lea rax, [rip + 0x23d5d]; cmove rax, rdx; ret; 
0x000000000041a06f: shr byte ptr [rcx], 0xc8; ret; 
0x0000000000460c1a: shr byte ptr [rdx + 1], cl; lea r9, [rsp + 0x20]; call rbx; 
0x0000000000409eed: shr cl, 0x13; jne 0x9ef1; jmp qword ptr [rsi + 0x2e]; 
0x000000000040982f: shr cl, 0x25; jnp 0x9833; jmp qword ptr [rsi + 0x2e]; 
0x000000000045dbe0: shr cl, 0x8a; cmp edx, edi; jmp qword ptr [rsi + 0x2e]; 
0x00000000004096fe: shr cl, 0xff; jnp 0x9702; jmp qword ptr [rsi + 0x2e]; 
0x0000000000475e02: shr cl, cl; ret 0xfff4; 
0x000000000044f2c8: shr cl, cl; retf 0xfffd; jmp qword ptr [rsi - 0x70]; 
0x0000000000439d9e: shr dword ptr [rax - 0x267af0e0], 1; add dword ptr [rax], eax; add dh, dh; ret 0x7520; 
0x0000000000478561: shr eax, 0x19; mov ch, 0xfc; jmp qword ptr [rsi + 0xf]; 
0x000000000043d2e9: shr eax, 0xc; and eax, 0xf; movsxd rcx, dword ptr [rsi + rax*4]; add rcx, rsi; jmp rcx; 
0x000000000043d379: shr eax, 0xc; mov edx, eax; and edx, 0xf; movsxd rax, dword ptr [rsi + rdx*4]; add rax, rsi; jmp rax; 
0x000000000043d31b: shr eax, 0xe; and eax, 0x3fc00; ret; 
0x000000000044ff4d: shr eax, 1; imul rax, rdi; lea r12, [rcx + rax]; mov rdi, r12; call rbx; 
0x000000000046114b: shr eax, 2; ret; 
0x00000000004615e3: shr eax, 2; vzeroupper; ret; 
0x000000000041176f: shr eax, 4; lea rdx, [rax + 1]; mov qword ptr [rip + 0x9afd3], rdx; ret; 
0x000000000043d366: shr eax, 6; and eax, 0x3fffc00; ret; 
0x000000000040995a: shr ebx, 0x92; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000047f5c6: shr ebx, 0xd7; nop dword ptr [rax]; mov eax, dword ptr [rdi]; test eax, eax; jne 0x7f5e0; ret; 
0x0000000000415dff: shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x00000000004770ac: shr ecx, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x0000000000477031: shr ecx, cl; mov qword ptr [rdi + 8], r9; ret; 
0x0000000000477000: shr ecx, cl; mov qword ptr [rdi], r9; ret; 
0x00000000004770ab: shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x0000000000477030: shr r9, cl; mov qword ptr [rdi + 8], r9; ret; 
0x0000000000476fff: shr r9, cl; mov qword ptr [rdi], r9; ret; 
0x000000000044ff4c: shr rax, 1; imul rax, rdi; lea r12, [rcx + rax]; mov rdi, r12; call rbx; 
0x000000000046114a: shr rax, 2; ret; 
0x00000000004615e2: shr rax, 2; vzeroupper; ret; 
0x000000000041176e: shr rax, 4; lea rdx, [rax + 1]; mov qword ptr [rip + 0x9afd3], rdx; ret; 
0x00000000004770a4: shrd eax, ecx, cl; mov qword ptr [rdi + 8], r8; shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x000000000047702a: shrd eax, ecx, cl; mov qword ptr [rdi], r8; shr r9, cl; mov qword ptr [rdi + 8], r9; ret; 
0x00000000004770a3: shrd r8, r9, cl; mov qword ptr [rdi + 8], r8; shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x0000000000477029: shrd r8, r9, cl; mov qword ptr [rdi], r8; shr r9, cl; mov qword ptr [rdi + 8], r9; ret; 
0x0000000000439c45: shufps xmm0, xmmword ptr [rdi + 2], 0; lea rax, [rdi + 2]; vzeroupper; ret; 
0x0000000000435a55: shufps xmm0, xmmword ptr [rdi + 2], 0; vzeroupper; ret; 
0x000000000045b01b: sldt word ptr [r8]; mov rdx, rbx; mov rsi, r9; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x000000000045f6b2: sldt word ptr [rax]; lea rax, [rip + 0xd34]; cmove rax, rdx; ret; 
0x000000000045b01c: sldt word ptr [rax]; mov rdx, rbx; mov rsi, r9; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x000000000043b38f: stc; adc dword ptr [rdi], ecx; test byte ptr [rbx], bl; add al, byte ptr [rax]; add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x0000000000422b13: stc; add al, byte ptr [rsi]; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000406d79: stc; add byte ptr [rax], al; nop dword ptr [rax]; ret; 
0x00000000004620b0: stc; add dword ptr [rdi + 0x2c], esi; mov eax, 0x106; syscall; 
0x0000000000449a31: stc; add dword ptr [rdi], ecx; xchg byte ptr [rax + rcx - 0x157f0000], dl; ret 0; 
0x0000000000423444: stc; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000046a34d: stc; call qword ptr [rax + 0x90d8d48]; ret 2; 
0x0000000000474107: stc; cld; jmp qword ptr [rsi + 0xf]; 
0x0000000000463407: stc; dec dword ptr [rax + 0x39]; ret; 
0x000000000046c38d: stc; dec dword ptr [rax + 1]; ret; 
0x000000000046c868: stc; dec dword ptr [rax - 0x39]; ret 0xffff; 
0x00000000004612d4: stc; dec dword ptr [rax - 0x77]; ret 0x2948; 
0x000000000046d8a7: stc; dec dword ptr [rax - 0x77]; ret 0x2949; 
0x0000000000464954: stc; dec dword ptr [rax - 0x77]; ret 0x8348; 
0x000000000046c5e8: stc; dec dword ptr [rax - 0x77]; ret 0x8948; 
0x000000000046c2e6: stc; dec dword ptr [rax - 0x77]; ret; 
0x0000000000465980: stc; inc dword ptr [rbp - 0x467bf040]; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000402774: stc; ja 0x2788; lea rsi, [rip + 0x7e959]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000045d1d1: stc; ja 0x5d1f4; lea rsi, [rip + 0x37f4c]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x00000000004642f4: stc; jmp qword ptr [rsi + 0x2e]; 
0x00000000004646c3: stc; jmp qword ptr [rsi + 0x66]; 
0x0000000000469ddc: stc; jmp qword ptr [rsi - 0x70]; 
0x000000000044ee3e: stc; jmp rcx; 
0x0000000000439c9f: stc; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000424b58: stc; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000424b52: stc; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000439c97: stc; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000435a87: stc; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x000000000041b4bf: stc; movzx eax, byte ptr [rax + rdi + 0x20]; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000041b4df: stc; movzx eax, byte ptr [rax + rdi + 0x40]; movzx edx, byte ptr [rdx + rdi + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000042d474: stc; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x0000000000435a8f: stc; vzeroupper; ret; 
0x0000000000420ae7: stc; xlatb; ret 0xff2d; 
0x0000000000459bbf: std; add cl, byte ptr [rcx + rcx*4 - 0x16]; call qword ptr [rax + 0x38]; 
0x000000000040a5be: std; add dword ptr [rsi + rbp - 0x77], esi; ret 0xc085; 
0x0000000000423054: std; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000441475: std; dec dword ptr [rax - 0x77]; or byte ptr [r8 - 0x77], cl; ret 0x8548; 
0x0000000000441187: std; dec dword ptr [rax - 0x77]; ret; 
0x000000000046287e: std; dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x8e; ret; 
0x0000000000440f82: std; dec dword ptr [rcx + rcx*4 - 0x20]; pop rbx; pop rbp; pop r12; ret; 
0x000000000046b48d: std; inc dword ptr [rbp + 0x481575c0]; mov dword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x41c66], 1; ret; 
0x000000000046cdce: std; jbe 0x6cdd8; ret; 
0x000000000044d9dc: std; je 0x4d9f8; pop rbx; ret; 
0x000000000043cbba: std; jg 0x3cc07; jmp qword ptr [rdx - 0x2f]; 
0x00000000004458b4: std; jmp qword ptr [rsi + 0x2e]; 
0x000000000046c1ef: std; jmp qword ptr [rsi + 0x66]; 
0x0000000000441375: std; jmp qword ptr [rsi + 0xf]; 
0x000000000046213c: std; jmp qword ptr [rsi - 0x70]; 
0x0000000000439c7b: std; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000424373: std; mov cx, word ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x0000000000439c77: std; mov dword ptr [rdi + rdx - 3], ecx; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000435a77: std; mov dword ptr [rdi + rdx - 3], ecx; vzeroupper; ret; 
0x000000000043eca7: std; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x000000000042437b: std; mov word ptr [rdi - 2], cx; ret; 
0x000000000043c108: std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x00000000004612d3: std; stc; dec dword ptr [rax - 0x77]; ret 0x2948; 
0x0000000000461a97: std; sub rsp, 8; mov rax, qword ptr [rip + 0x4a015]; test rax, rax; je 0x61ad8; call rax; 
0x000000000044f317: std; test rax, rax; je 0x4f31f; call rax; 
0x000000000043cb31: std; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000043ca1a: std; vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7; vzeroupper; ret; 
0x000000000042d1a4: std; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000042cf6a: std; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000043be62: std; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x0000000000435a7b: std; vzeroupper; ret; 
0x00000000004203a9: std; xlatb; ret 0xc085; 
0x0000000000420923: std; xlatb; ret 0xe883; 
0x00000000004203b1: std; xlatb; ret; 
0x0000000000460244: std; xlatb; retf 0xfdc5; xlatb; ret; 
0x00000000004602a4: std; xlatb; rol ch, cl; std; xlatb; ret; 
0x00000000004202de: std; xlatb; rol dword ptr [rbp + 0x311b75c0], 0xc0; vzeroupper; ret; 
0x00000000004203a1: std; xlatb; rol dword ptr [rbp - 0x3a378a40], 0xfd; xlatb; ret 0xc085; 
0x00000000004351f1: std; xlatb; rol dword ptr [rbp - 0x3a678a40], 0xfd; xlatb; ret 0xc085; 
0x000000000042325b: sti; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000439551: sti; cmpsd dword ptr [rsi], dword ptr [rdi]; add al, 0; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000445d8f: sti; dec dword ptr [rax - 0x77]; ret 0x8548; 
0x0000000000446d79: sti; dec dword ptr [rbp - 0x77]; fld qword ptr [rcx - 0x77]; ret 0x8ee9; 
0x000000000045fea2: sti; dec dword ptr [rcx - 0x77]; add byte ptr [r8 - 0x77], r9b; ret 0x8548; 
0x0000000000456a54: sti; dec dword ptr [rcx - 0x77]; ret 0x8548; 
0x000000000044aa09: sti; inc dword ptr [rcx - 0x77]; ret; 
0x000000000047f931: sti; insd dword ptr [rdi], dx; stc; jmp qword ptr [rsi + 0x66]; 
0x0000000000444210: sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000446780: sti; jmp qword ptr [rsi + 0x66]; 
0x0000000000445431: sti; jmp qword ptr [rsi + 0xf]; 
0x00000000004442bc: sti; jmp qword ptr [rsi - 0x70]; 
0x0000000000424758: sti; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000424752: sti; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000417b91: sti; or eax, 0x8d480000; adc eax, 0x24e4; cmovne rax, rdx; ret; 
0x000000000045e966: sti; test byte ptr [rdi], 2; jne 0x5e9d0; mov rax, qword ptr [rax + 0xe0]; call qword ptr [rax + 0x68]; 
0x000000000042d466: sti; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x00000000004286d7: stosb byte ptr [rdi], al; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043e47a: stosb byte ptr [rdi], al; add rax, rdx; jmp rax; 
0x000000000043ce14: stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x000000000045cbf1: stosd dword ptr [rdi], eax; add dword ptr [rbx], 0; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000473241: stosd dword ptr [rdi], eax; add eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; add eax, 0x74; cmove rax, rdx; ret; 
0x00000000004605a4: stosd dword ptr [rdi], eax; fimul dword ptr [rax + 0xf]; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x0000000000461254: stosd dword ptr [rdi], eax; fimul dword ptr [rax + 0xf]; mov esp, 0xd00148d2; sub rax, rdi; shr rax, 2; ret; 
0x00000000004152f1: stosd dword ptr [rdi], eax; je 0x152fd; add byte ptr [rax + 0x39], cl; ror dword ptr [rdi], cl; xchg eax, ebp; ret 0xb60f; 
0x0000000000480381: stosd dword ptr [rdi], eax; movsxd rdi, ecx; jmp qword ptr [rsi + 0x2e]; 
0x0000000000412811: stosd dword ptr [rdi], eax; nop word ptr [rax + rax]; call rax; 
0x0000000000411c25: stosd dword ptr [rdi], eax; or dword ptr [rax], eax; cmp rax, rdx; jne 0x11c2e; ret; 
0x0000000000415e04: stosd dword ptr [rdi], eax; pop rbp; ret; 
0x0000000000460505: stosd dword ptr [rdi], eax; sar rdx, cl; test rdx, rdx; je 0x60520; bsf rax, rdx; ret; 
0x000000000045e001: stosd dword ptr [rdi], eax; sub edi, esi; jmp qword ptr [rsi + 0x2e]; 
0x0000000000415e03: stosq qword ptr [rdi], rax; pop rbp; ret; 
0x00000000004782b2: str word ptr [rax + 0x21]; ret 0xc148; 
0x000000000044057d: sub ah, bh; call qword ptr [rbp - 0x41]; 
0x0000000000453eab: sub ah, bh; jmp qword ptr [rsi - 0x70]; 
0x000000000046d326: sub al, 0x48; add esp, 0x38; ret; 
0x000000000040c22a: sub al, 0x48; mov dword ptr [rbx + 0x90], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000043d052: sub al, 0x72; add cl, byte ptr [rax + 0x77f8c50f]; ret; 
0x000000000040f403: sub al, 0x89; ret 0xc883; 
0x00000000004218c3: sub al, 0xa; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000460010: sub al, 1; add byte ptr [rax], al; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x0000000000451edf: sub al, 4; add al, ch; or dword ptr [rdi], ecx; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000047cf3d: sub al, byte ptr [rax]; add byte ptr [rax - 0x7b], cl; ror byte ptr [rax + 0xf], 0x45; and al, 0x10; add rsp, 0x28; ret; 
0x0000000000420c85: sub al, ch; std; xlatb; ret; 
0x0000000000478357: sub bh, al; add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x000000000043e8bd: sub bh, byte ptr [rax + 5]; syscall; 
0x000000000043e8bd: sub bh, byte ptr [rax + 5]; syscall; cmp rax, -0x1000; ja 0x3e8d0; ret; 
0x000000000045e142: sub bh, dh; jmp qword ptr [rsi + 0x2e]; 
0x000000000040acce: sub byte ptr [r13 - 0x7b], r8b; sal byte ptr [rbx + rbp*2 + 0x49], 0x2b; and byte ptr [r8 + 1], r9b; ret; 
0x00000000004514df: sub byte ptr [r15 + rcx - 0x4a], r8b; ret; 
0x0000000000463df9: sub byte ptr [r8 + 0x39], r9b; ret 0x870f; 
0x000000000046d6c5: sub byte ptr [r9 + r9*4 + 4], cl; ret 0x8b48; 
0x0000000000441513: sub byte ptr [r9], r8b; ret; 
0x0000000000463dfa: sub byte ptr [rax + 0x39], cl; ret 0x870f; 
0x0000000000470699: sub byte ptr [rax + 0xe850f01], ch; or byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffb0; 
0x0000000000417ef5: sub byte ptr [rax + 1], cl; ret; 
0x000000000046cdec: sub byte ptr [rax + rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000046cdc4: sub byte ptr [rax + rax], al; lea rax, [rdi - 1]; cmp rax, -3; jbe 0x6cdd8; ret; 
0x000000000044fed7: sub byte ptr [rax - 0x73], cl; dec dword ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret 0x148; 
0x000000000045d7b4: sub byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000044e40a: sub byte ptr [rax - 0x77], cl; ret; 
0x00000000004144c4: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x144d0; add rsp, 0x10; pop rbp; ret; 
0x000000000043d93b: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3d964; add rsp, 0x20; pop rbx; ret; 
0x000000000043e843: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3e859; add rsp, 0x28; ret; 
0x000000000043f3f3: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3f443; add rsp, 0x68; ret; 
0x000000000043f482: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3f4cb; add rsp, 0x18; ret; 
0x000000000043f52a: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3f573; add rsp, 0x58; ret; 
0x000000000043f5c8: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3f613; add rsp, 0x58; ret; 
0x000000000043f7b6: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3f7c1; add rsp, 0x28; ret; 
0x000000000044fa6d: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4fa78; add rsp, 0x18; ret; 
0x000000000044fd08: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4fd54; mov eax, r9d; add rsp, 0x148; ret; 
0x000000000044fdf0: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4fe86; add rsp, 0x98; ret; 
0x0000000000450f80: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x50f8e; add rsp, 0xd8; ret; 
0x000000000046212b: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x62139; movzx eax, al; add rsp, 0x58; ret; 
0x00000000004621e0: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x62204; mov eax, r9d; add rsp, 0x38; ret; 
0x000000000046cf9d: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6cfcb; add rsp, 0x38; ret; 
0x000000000046d037: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6d04c; add rsp, 0x38; ret; 
0x000000000046d113: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6d1a7; add rsp, 0x48; ret; 
0x000000000046d224: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6d230; add rsp, 0x20; pop rbx; ret; 
0x000000000046d321: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6d353; add rsp, 0x38; ret; 
0x000000000046d3c7: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6d3dc; add rsp, 0x38; ret; 
0x000000000046d48a: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6d496; add rsp, 0x30; pop rbp; ret; 
0x000000000046d607: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6d61d; add rsp, 0x38; ret; 
0x0000000000472e34: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x72e3f; add rsp, 0x28; ret; 
0x0000000000472f22: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x72f2d; add rsp, 0x38; ret; 
0x000000000047808a: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x780d1; leave; ret; 
0x00000000004785cd: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x785d8; add rsp, 0x38; ret; 
0x000000000047a4d5: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x7a4e5; add rsp, 0x28; ret; 
0x0000000000407afe: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x7b24; mov eax, r8d; add rsp, 0x118; ret; 
0x0000000000408f70: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x8f7e; add rsp, 0xd8; ret; 
0x00000000004092b0: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x92be; add rsp, 0xd8; ret; 
0x000000000040accf: sub byte ptr [rbp - 0x7b], al; sal byte ptr [rbx + rbp*2 + 0x49], 0x2b; and byte ptr [r8 + 1], r9b; ret; 
0x0000000000461db7: sub byte ptr [rbx + 0x4801046b], al; add esp, 8; pop rbx; pop rbp; ret; 
0x000000000043de93: sub byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000046ceeb: sub byte ptr [rbx + rcx*4 + 0x5c], cl; and al, 0x30; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000046ce79: sub byte ptr [rbx + rcx*4 + 0x5c], cl; and al, 0x30; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000476a28: sub byte ptr [rbx - 0x1b], dh; mov eax, 1; ret; 
0x0000000000476a27: sub byte ptr [rbx - 0x1b], sil; mov eax, 1; ret; 
0x000000000046d6c6: sub byte ptr [rcx + rcx*4 + 4], cl; ret 0x8b48; 
0x0000000000416fb4: sub byte ptr [rcx + rcx*4 - 0x19], cl; call rax; 
0x000000000044fb55: sub byte ptr [rcx - 0x3b76b310], cl; mov rbp, r9; jmp rdx; 
0x0000000000441514: sub byte ptr [rcx], al; ret; 
0x0000000000462159: sub byte ptr [rcx], dh; ror byte ptr [rax - 0x77], 0xe2; mov eax, 0x10; syscall; 
0x00000000004514e0: sub byte ptr [rdi + rcx - 0x4a], al; ret; 
0x0000000000480788: sub byte ptr [rdi - 0x4b], ch; dec dword ptr [rax - 0x39]; ret 0xa280; 
0x000000000048075f: sub byte ptr [rdi - 0x4b], ch; dec dword ptr [rax - 0x39]; ret 0xa540; 
0x00000000004807b1: sub byte ptr [rdi - 0x4b], ch; dec dword ptr [rax - 0x39]; ret 0xaa80; 
0x00000000004807da: sub byte ptr [rdi - 0x4b], ch; dec dword ptr [rax - 0x39]; ret 0xaae0; 
0x0000000000480803: sub byte ptr [rdi - 0x4b], ch; dec dword ptr [rax - 0x39]; ret 0xab60; 
0x000000000048082c: sub byte ptr [rdi - 0x4b], ch; dec dword ptr [rax - 0x39]; ret 0xac20; 
0x0000000000480855: sub byte ptr [rdi - 0x4b], ch; dec dword ptr [rax - 0x39]; ret 0xaca0; 
0x000000000048087e: sub byte ptr [rdi - 0x4b], ch; dec dword ptr [rax - 0x39]; ret 0xad00; 
0x00000000004806be: sub byte ptr [rdi - 0x4b], ch; dec dword ptr [rax - 0x39]; ret 0xadc0; 
0x000000000047e406: sub byte ptr [rdi], cl; mov bh, 0x47; and byte ptr [rsi - 0x3f], ah; call 0x10072015; test byte ptr [rcx - 0x76fffffe], bh; ret 0xb60f; 
0x00000000004672fb: sub byte ptr [rdi], cl; xchg eax, ebp; ret; 
0x000000000040df25: sub cl, byte ptr [rdi]; mov dh, 0xc0; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000451c8b: sub dh, al; add byte ptr [rcx - 0x7d], cl; ret; 
0x0000000000471bbd: sub dh, al; add byte ptr [rip - 0x101b17], ch; jmp qword ptr [rsi + 0x2e]; 
0x000000000040cd17: sub dl, ah; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x00000000004097cc: sub dword ptr [r15], 1; add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000043f5ae: sub dword ptr [rax + 0x101], edi; syscall; 
0x000000000043e86e: sub dword ptr [rax + 4], edi; syscall; 
0x000000000043e86e: sub dword ptr [rax + 4], edi; syscall; cmp rax, -0x1000; ja 0x3e880; ret; 
0x000000000046205e: sub dword ptr [rax + 6], edi; syscall; 
0x000000000046205e: sub dword ptr [rax + 6], edi; syscall; cmp rax, -0x1000; ja 0x62070; ret; 
0x00000000004541c3: sub dword ptr [rax], eax; add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x0000000000461db8: sub dword ptr [rbx + 4], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000043d850: sub dword ptr [rbx], 0xe274b104; ret; 
0x000000000047ce4b: sub dword ptr [rbx], eax; add byte ptr [rax + 0xf08323c], al; test dword ptr [rip + 0x48fff848], eax; mov eax, dword ptr [rax]; add rsp, 8; ret; 
0x000000000040e29f: sub dword ptr [rbx], eax; add byte ptr [rax - 0x39], cl; ret; 
0x000000000045d13d: sub dword ptr [rdi + 0x10], esi; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000045cae4: sub dword ptr [rdi + 0x31], esi; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000004097cd: sub dword ptr [rdi], 1; add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000004727c6: sub dword ptr [rdi], 1; ret; 
0x000000000043c2b1: sub dword ptr [rdi], ecx; adc dword ptr [rcx - 0x10], esi; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x00000000004726f3: sub dword ptr [rip + 0x3cf8e], 1; mov eax, r8d; pop rbx; ret; 
0x000000000047244c: sub dword ptr [rip + 0x3d231], 1; pop r12; ret; 
0x00000000004508ec: sub dword ptr [rip + 0x5eced], 1; xor eax, eax; add rsp, 8; ret; 
0x00000000004178f0: sub dword ptr [rip + 0x94ea9], 1; add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000004168cd: sub dword ptr [rip + 0x988bc], 1; pop rbx; pop rbp; pop r12; ret; 
0x0000000000413d10: sub dword ptr [rip + 0x98a89], 1; pop rbp; ret; 
0x0000000000415fb7: sub dword ptr [rip + 0x991c2], 1; pop rbx; ret; 
0x0000000000410d08: sub dword ptr [rip + 0x9e401], 1; ret; 
0x000000000040e6dc: sub dword ptr [rip + 0xa0a2d], 1; ret; 
0x0000000000434b6c: sub dword ptr [rip - 0x6eeb7500], eax; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000434ba0: sub dword ptr [rip - 0x75f37500], eax; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x00000000004220a6: sub dword ptr [rip - 0xcfffffe], 0xf; outsd dx, dword ptr [rsi]; push rdi; ret; 
0x0000000000420a17: sub eax, -1; jne 0x20a20; vzeroupper; ret; 
0x000000000040e6de: sub eax, 0x1000a0a; ret; 
0x000000000041176b: sub eax, 0x11; shr rax, 4; lea rdx, [rax + 1]; mov qword ptr [rip + 0x9afd3], rdx; ret; 
0x000000000045444e: sub eax, 0x20; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000045d138: sub eax, 0x20; cmp eax, 0x29; ja 0x5d150; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000004551c9: sub eax, 0x20; lea rdi, [rip + 0x544ad]; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000455156: sub eax, 0x20; lea rdi, [rip + 0x54520]; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000453f86: sub eax, 0x20; lea rdi, [rip + 0x556f0]; cdqe; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000456e55: sub eax, 0x30; cmp eax, 9; mov eax, 0xffffffff; jbe 0x56e30; mov qword ptr [rdi], rsi; ret; 
0x000000000045d0c5: sub eax, 0x30; cmp eax, 9; mov eax, 0xffffffff; jbe 0x5d0a0; mov qword ptr [rdi], rsi; ret; 
0x000000000046cb73: sub eax, 0x3349646c; add byte ptr [rax + 9], cl; ret 0x2875; 
0x00000000004726f4: sub eax, 0x3cf8e; add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x000000000047244d: sub eax, 0x3d231; add dword ptr [rcx + 0x5c], eax; ret; 
0x00000000004161a4: sub eax, 0x5b000002; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000047877f: sub eax, 0x66fffc84; nop dword ptr cs:[rax + rax]; nop dword ptr [rax]; mov eax, 0x26; syscall; 
0x000000000043e304: sub eax, 0x8948fffc; ret; 
0x0000000000461f6f: sub eax, 0x89fffdd4; ret 0xf883; 
0x00000000004168ce: sub eax, 0x988bc; add dword ptr [rbx + 0x5d], ebx; pop r12; ret; 
0x0000000000471bc0: sub eax, 0xffefe4e9; jmp qword ptr [rsi + 0x2e]; 
0x0000000000420b0f: sub eax, 0xffff; jne 0x20a20; ret; 
0x000000000044d9d4: sub eax, 1; mov dword ptr [rbx + 8], eax; cmp eax, -3; je 0x4d9f8; pop rbx; ret; 
0x000000000044d9ec: sub eax, 1; mov dword ptr [rdx + 8], eax; pop rbx; ret; 
0x000000000043bbe4: sub eax, 1; ret; 
0x0000000000441bf1: sub eax, 3; cmp rax, 0x1e; ja 0x41c20; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000442cdf: sub eax, 4; cmp rax, 0x16; ja 0x42d00; movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x000000000046ce16: sub eax, dword ptr [0]; ret; 
0x000000000044fa6a: sub eax, dword ptr [0x28]; jne 0x4fa78; add rsp, 0x18; ret; 
0x0000000000478087: sub eax, dword ptr [0x28]; jne 0x780d1; leave; ret; 
0x0000000000401baa: sub eax, dword ptr [rax]; mov rdi, 0x401cd4; call 0x21f0; hlt; nop dword ptr [rax + rax]; ret; 
0x000000000040308f: sub eax, dword ptr [rbx + 8]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000045f0eb: sub eax, dword ptr [rcx + 0x10]; sar rax, 2; mov r8d, dword ptr [rdi + 0x10]; sub r8d, eax; mov eax, r8d; ret; 
0x0000000000451c3b: sub eax, dword ptr [rcx + 0xf]; mov dh, 0x47; or al, 0x83; ret; 
0x000000000043d851: sub eax, dword ptr [rcx + rsi*4]; je 0x3d838; ret; 
0x00000000004115de: sub eax, dword ptr [rdi + 0x18]; ret; 
0x0000000000410923: sub eax, dword ptr [rsi + 0x10]; ret; 
0x000000000047847c: sub eax, eax; mov dword ptr [rsi], eax; mov eax, 2; ret; 
0x000000000045f0f7: sub eax, eax; mov eax, r8d; ret; 
0x000000000046c7bc: sub eax, eax; ret; 
0x000000000045a094: sub eax, ebx; mov rsi, rbx; mov rdi, r12; sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x0000000000420a63: sub eax, ecx; je 0x20a70; sbb eax, eax; or eax, 1; ret; 
0x000000000047839d: sub eax, ecx; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x0000000000419dac: sub eax, ecx; ret; 
0x0000000000478300: sub eax, ecx; shl rdx, cl; mov qword ptr [rdi], rdx; mov dword ptr [rsi], eax; mov eax, 1; ret; 
0x000000000041b61f: sub eax, ecx; vzeroupper; ret; 
0x0000000000415df6: sub eax, edi; lea ecx, [r8 + 0x280]; shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x00000000004355b9: sub eax, edi; ret; 
0x000000000046125e: sub eax, edi; shr rax, 2; ret; 
0x000000000040d741: sub eax, edx; pop rbp; pop r12; ret; 
0x000000000041094b: sub eax, edx; ret; 
0x00000000004615e0: sub eax, edx; shr rax, 2; vzeroupper; ret; 
0x000000000041b31e: sub eax, edx; vzeroupper; ret; 
0x000000000047847b: sub eax, r8d; mov dword ptr [rsi], eax; mov eax, 2; ret; 
0x000000000046c7bb: sub eax, r8d; ret; 
0x0000000000471488: sub ebp, ecx; sar dh, 0xff; jmp qword ptr [rsi - 0x70]; 
0x0000000000472594: sub ebx, dword ptr [rbx + 0x5d]; pop r12; pop r13; ret; 
0x0000000000417c91: sub ebx, ecx; add dword ptr [rax], eax; lea rax, [rip + 0x1d784]; cmove rax, rdx; ret; 
0x00000000004264a3: sub ebx, ecx; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000041cf45: sub ebx, edx; jbe 0x1cf54; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000041e6a5: sub ebx, edx; jbe 0x1e6b4; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000041f685: sub ebx, edx; jbe 0x1f694; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000459bb8: sub ebx, esi; mov r13, rbx; sar r13, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x000000000043f3f0: sub ecx, dword ptr [0x28]; jne 0x3f443; add rsp, 0x68; ret; 
0x000000000043f47f: sub ecx, dword ptr [0x28]; jne 0x3f4cb; add rsp, 0x18; ret; 
0x000000000043f527: sub ecx, dword ptr [0x28]; jne 0x3f573; add rsp, 0x58; ret; 
0x000000000043f5c5: sub ecx, dword ptr [0x28]; jne 0x3f613; add rsp, 0x58; ret; 
0x000000000044fded: sub ecx, dword ptr [0x28]; jne 0x4fe86; add rsp, 0x98; ret; 
0x0000000000450f7d: sub ecx, dword ptr [0x28]; jne 0x50f8e; add rsp, 0xd8; ret; 
0x000000000046d034: sub ecx, dword ptr [0x28]; jne 0x6d04c; add rsp, 0x38; ret; 
0x000000000046d110: sub ecx, dword ptr [0x28]; jne 0x6d1a7; add rsp, 0x48; ret; 
0x000000000046d31e: sub ecx, dword ptr [0x28]; jne 0x6d353; add rsp, 0x38; ret; 
0x000000000046d3c4: sub ecx, dword ptr [0x28]; jne 0x6d3dc; add rsp, 0x38; ret; 
0x0000000000472e31: sub ecx, dword ptr [0x28]; jne 0x72e3f; add rsp, 0x28; ret; 
0x00000000004785ca: sub ecx, dword ptr [0x28]; jne 0x785d8; add rsp, 0x38; ret; 
0x0000000000408f6d: sub ecx, dword ptr [0x28]; jne 0x8f7e; add rsp, 0xd8; ret; 
0x00000000004092ad: sub ecx, dword ptr [0x28]; jne 0x92be; add rsp, 0xd8; ret; 
0x0000000000476a22: sub ecx, dword ptr [rax + 0x10]; cmp rcx, qword ptr [rax + 0x28]; jae 0x76a10; mov eax, 1; ret; 
0x000000000045f6f1: sub ecx, dword ptr [rbx]; add byte ptr [rax], al; lea rax, [rip + 0x834]; cmove rax, rdx; ret; 
0x0000000000461934: sub ecx, dword ptr [rcx + rcx*4 - 0x40]; shr rax, 2; vzeroupper; ret; 
0x00000000004607f4: sub ecx, dword ptr [rcx + rcx*4 - 0x40]; vzeroupper; ret; 
0x000000000040ff29: sub ecx, eax; lea eax, [rcx - 1]; ret; 
0x000000000045f049: sub ecx, eax; sar rcx, 2; lea eax, [rcx - 1]; ret; 
0x0000000000425152: sub edi, 0x40; lea r11, [rip + 0x5de74]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425093: sub edi, 0x40; lea r11, [rip + 0x5df33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422782: sub edi, 0x40; lea r11, [rip + 0x60684]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004226c3: sub edi, 0x40; lea r11, [rip + 0x60743]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000453d40: sub edi, ebp; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x000000000042bf8f: sub edi, edx; lea r11, [rip + 0x576f8]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042947b: sub edi, edx; lea r11, [rip + 0x59d0c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bc2e: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x57a56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042baae: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x57bd6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b92e: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x57d56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b7ae: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x57ed6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b62e: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x58056]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b4ae: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x581d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b32e: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x58356]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b1ae: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x584d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b02e: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x58656]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aeae: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x587d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042ad2e: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x58956]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042abae: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x58ad6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aa2e: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x58c56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a8ae: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x58dd6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a72e: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x58f56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a5b5: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x590cf]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042914e: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x5a036]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428fce: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x5a1b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428e4e: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x5a336]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428cce: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x5a4b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428b4e: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x5a636]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004289ce: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x5a7b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042884e: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x5a936]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004286ce: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x5aab6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042854e: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x5ac36]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004283ce: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x5adb6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042824e: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x5af36]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004280ce: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x5b0b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427f4e: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x5b236]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427dce: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x5b3b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427c4e: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x5b536]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427ad5: sub edi, edx; sub rsi, rdx; lea r11, [rip + 0x5b6af]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004236e3: sub edi, esi; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000045e002: sub edi, esi; jmp qword ptr [rsi + 0x2e]; 
0x0000000000427881: sub edx, 0x40; lea r11, [rip + 0x5b745]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004277c1: sub edx, 0x40; sfence; lea r11, [rip + 0x5b802]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424cfd: sub edx, 0x40; sfence; lea r11, [rip + 0x5e106]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000045e712: sub edx, 0x4adb80; cmp rax, rdx; jbe 0x5e758; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000045ef57: sub edx, 0x4adb80; cmp rax, rdx; jbe 0x5ef90; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000045eff1: sub edx, 0x4adb80; cmp rax, rdx; jbe 0x5f010; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x0000000000409782: sub edx, 0x4adb80; cmp rax, rdx; jbe 0x97e8; mov rdi, rbx; call qword ptr [rbp + 0x60]; 
0x0000000000409e67: sub edx, 0x4adb80; cmp rax, rdx; jbe 0x9ee4; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040efcc: sub edx, 0x4adb80; cmp rax, rdx; jbe 0xf030; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x18]; 
0x000000000040f480: sub edx, 0x4adb80; cmp rax, rdx; jbe 0xf4f0; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040f532: sub edx, 0x4adb80; cmp rax, rdx; jbe 0xf560; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000040fe32: sub edx, 0x4adb80; cmp rax, rdx; jbe 0xfe70; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000040fec9: sub edx, 0x4adb80; cmp rax, rdx; jbe 0xfef0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x0000000000417446: sub edx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x000000000043e840: sub edx, dword ptr [0x28]; jne 0x3e859; add rsp, 0x28; ret; 
0x000000000043f7b3: sub edx, dword ptr [0x28]; jne 0x3f7c1; add rsp, 0x28; ret; 
0x000000000046cf9a: sub edx, dword ptr [0x28]; jne 0x6cfcb; add rsp, 0x38; ret; 
0x000000000046d604: sub edx, dword ptr [0x28]; jne 0x6d61d; add rsp, 0x38; ret; 
0x0000000000472f1f: sub edx, dword ptr [0x28]; jne 0x72f2d; add rsp, 0x38; ret; 
0x0000000000410950: sub edx, dword ptr [rax + 0x10]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x0000000000410945: sub edx, dword ptr [rax + 0x18]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x000000000040d73c: sub edx, dword ptr [rdi + 8]; pop rbx; sub rax, rdx; pop rbp; pop r12; ret; 
0x000000000041185c: sub edx, eax; cmp rsi, rdx; jb 0x11840; mov byte ptr [r8 + rsi], r10b; mov rax, r8; ret; 
0x000000000041fc4d: sub edx, eax; jbe 0x1fef0; add rax, rdi; add rax, rcx; ret; 
0x000000000041feb4: sub edx, eax; jbe 0x1fef0; add rax, rdi; ret; 
0x000000000041fec4: sub edx, eax; jbe 0x1fef0; lea rax, [rdi + rax + 0x10]; ret; 
0x000000000041fed4: sub edx, eax; jbe 0x1fef0; lea rax, [rdi + rax + 0x20]; ret; 
0x000000000041fee4: sub edx, eax; jbe 0x1fef0; lea rax, [rdi + rax + 0x30]; ret; 
0x000000000047333d: sub edx, eax; jbe 0x735e0; add rax, rdi; add rax, rcx; ret; 
0x00000000004735a4: sub edx, eax; jbe 0x735e0; add rax, rdi; ret; 
0x00000000004735b4: sub edx, eax; jbe 0x735e0; lea rax, [rdi + rax + 0x10]; ret; 
0x00000000004735c4: sub edx, eax; jbe 0x735e0; lea rax, [rdi + rax + 0x20]; ret; 
0x00000000004735d4: sub edx, eax; jbe 0x735e0; lea rax, [rdi + rax + 0x30]; ret; 
0x000000000043954c: sub edx, ecx; lea r11, [rip + 0x4a7fb]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f2c: sub edx, ecx; lea r11, [rip + 0x4ad9b]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000040a187: sub edx, esi; call qword ptr [rax + 0x70]; 
0x000000000040c578: sub edx, esi; call qword ptr [rbp + 0x70]; 
0x00000000004520cd: sub edx, esi; call qword ptr [rbx + 0x38]; 
0x000000000043bd24: sub edx, esi; cmp edx, ecx; jle 0x3bd3c; movsxd rax, ecx; ret; 
0x000000000040a86c: sub edx, esi; mov qword ptr [rsp + 8], rcx; mov rdi, r15; call rax; 
0x000000000040cee5: sub edx, esi; mov qword ptr [rsp], rcx; mov rdi, rbp; call rax; 
0x000000000042508f: sub esi, 0x40; sub rdi, 0x40; lea r11, [rip + 0x5df33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004226bf: sub esi, 0x40; sub rdi, 0x40; lea r11, [rip + 0x60743]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000047a4d2: sub esi, dword ptr [0x28]; jne 0x7a4e5; add rsp, 0x28; ret; 
0x000000000042bc31: sub esi, edx; lea r11, [rip + 0x57a56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bab1: sub esi, edx; lea r11, [rip + 0x57bd6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b931: sub esi, edx; lea r11, [rip + 0x57d56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b7b1: sub esi, edx; lea r11, [rip + 0x57ed6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b631: sub esi, edx; lea r11, [rip + 0x58056]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b4b1: sub esi, edx; lea r11, [rip + 0x581d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b331: sub esi, edx; lea r11, [rip + 0x58356]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b1b1: sub esi, edx; lea r11, [rip + 0x584d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b031: sub esi, edx; lea r11, [rip + 0x58656]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aeb1: sub esi, edx; lea r11, [rip + 0x587d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042ad31: sub esi, edx; lea r11, [rip + 0x58956]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042abb1: sub esi, edx; lea r11, [rip + 0x58ad6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aa31: sub esi, edx; lea r11, [rip + 0x58c56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a8b1: sub esi, edx; lea r11, [rip + 0x58dd6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a731: sub esi, edx; lea r11, [rip + 0x58f56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a5b8: sub esi, edx; lea r11, [rip + 0x590cf]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429151: sub esi, edx; lea r11, [rip + 0x5a036]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428fd1: sub esi, edx; lea r11, [rip + 0x5a1b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428e51: sub esi, edx; lea r11, [rip + 0x5a336]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428cd1: sub esi, edx; lea r11, [rip + 0x5a4b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428b51: sub esi, edx; lea r11, [rip + 0x5a636]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004289d1: sub esi, edx; lea r11, [rip + 0x5a7b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428851: sub esi, edx; lea r11, [rip + 0x5a936]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004286d1: sub esi, edx; lea r11, [rip + 0x5aab6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428551: sub esi, edx; lea r11, [rip + 0x5ac36]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004283d1: sub esi, edx; lea r11, [rip + 0x5adb6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428251: sub esi, edx; lea r11, [rip + 0x5af36]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004280d1: sub esi, edx; lea r11, [rip + 0x5b0b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427f51: sub esi, edx; lea r11, [rip + 0x5b236]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427dd1: sub esi, edx; lea r11, [rip + 0x5b3b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427c51: sub esi, edx; lea r11, [rip + 0x5b536]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427ad8: sub esi, edx; lea r11, [rip + 0x5b6af]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bf8c: sub esi, edx; sub rdi, rdx; lea r11, [rip + 0x576f8]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429478: sub esi, edx; sub rdi, rdx; lea r11, [rip + 0x59d0c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000047a263: sub esp, -0x80; pop rbx; pop rbp; pop r12; ret; 
0x000000000046b258: sub esp, 0x1008; mov rbp, rsp; mov rsi, rbp; syscall; 
0x0000000000480bf9: sub esp, 8; add rsp, 8; ret; 
0x0000000000446121: sub esp, 8; call 0x45c30; or dword ptr [rip + 0x692e4], 2; add rsp, 8; ret; 
0x0000000000467b3d: sub esp, 8; call qword ptr [rip + 0x455fa]; xor eax, eax; add rsp, 8; ret; 
0x0000000000461a99: sub esp, 8; mov rax, qword ptr [rip + 0x4a015]; test rax, rax; je 0x61ad8; call rax; 
0x00000000004751c3: sub esp, ebx; clc; jmp qword ptr [rsi + 0xf]; 
0x00000000004646c1: sub esp, edi; stc; jmp qword ptr [rsi + 0x66]; 
0x000000000041cf44: sub r11, rdx; jbe 0x1cf54; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000041e6a4: sub r11, rdx; jbe 0x1e6b4; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000041f684: sub r11, rdx; jbe 0x1f694; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000453d3f: sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x0000000000415df5: sub r8, rdi; lea ecx, [r8 + 0x280]; shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x000000000045f0f6: sub r8d, eax; mov eax, r8d; ret; 
0x000000000041176a: sub rax, 0x11; shr rax, 4; lea rdx, [rax + 1]; mov qword ptr [rip + 0x9afd3], rdx; ret; 
0x000000000043bbe3: sub rax, 1; ret; 
0x0000000000441bf0: sub rax, 3; cmp rax, 0x1e; ja 0x41c20; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000442cde: sub rax, 4; cmp rax, 0x16; ja 0x42d00; movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x000000000046ce15: sub rax, qword ptr [0]; ret; 
0x000000000044fa69: sub rax, qword ptr [0x28]; jne 0x4fa78; add rsp, 0x18; ret; 
0x0000000000478086: sub rax, qword ptr [0x28]; jne 0x780d1; leave; ret; 
0x000000000045f0ea: sub rax, qword ptr [rcx + 0x10]; sar rax, 2; mov r8d, dword ptr [rdi + 0x10]; sub r8d, eax; mov eax, r8d; ret; 
0x00000000004115dd: sub rax, qword ptr [rdi + 0x18]; ret; 
0x000000000046ce14: sub rax, qword ptr fs:[0]; ret; 
0x000000000044fa68: sub rax, qword ptr fs:[0x28]; jne 0x4fa78; add rsp, 0x18; ret; 
0x0000000000478085: sub rax, qword ptr fs:[0x28]; jne 0x780d1; leave; ret; 
0x000000000045a093: sub rax, rbx; mov rsi, rbx; mov rdi, r12; sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x0000000000420a62: sub rax, rcx; je 0x20a70; sbb eax, eax; or eax, 1; ret; 
0x00000000004355b8: sub rax, rdi; ret; 
0x000000000046125d: sub rax, rdi; shr rax, 2; ret; 
0x000000000040d740: sub rax, rdx; pop rbp; pop r12; ret; 
0x000000000043bcb3: sub rax, rdx; ret; 
0x00000000004615df: sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000043560f: sub rax, rdx; vzeroupper; ret; 
0x0000000000459bb7: sub rbx, r14; mov r13, rbx; sar r13, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x000000000043f3ef: sub rcx, qword ptr [0x28]; jne 0x3f443; add rsp, 0x68; ret; 
0x000000000043f47e: sub rcx, qword ptr [0x28]; jne 0x3f4cb; add rsp, 0x18; ret; 
0x000000000043f526: sub rcx, qword ptr [0x28]; jne 0x3f573; add rsp, 0x58; ret; 
0x000000000043f5c4: sub rcx, qword ptr [0x28]; jne 0x3f613; add rsp, 0x58; ret; 
0x000000000044fdec: sub rcx, qword ptr [0x28]; jne 0x4fe86; add rsp, 0x98; ret; 
0x0000000000450f7c: sub rcx, qword ptr [0x28]; jne 0x50f8e; add rsp, 0xd8; ret; 
0x000000000046d033: sub rcx, qword ptr [0x28]; jne 0x6d04c; add rsp, 0x38; ret; 
0x000000000046d10f: sub rcx, qword ptr [0x28]; jne 0x6d1a7; add rsp, 0x48; ret; 
0x000000000046d31d: sub rcx, qword ptr [0x28]; jne 0x6d353; add rsp, 0x38; ret; 
0x000000000046d3c3: sub rcx, qword ptr [0x28]; jne 0x6d3dc; add rsp, 0x38; ret; 
0x0000000000472e30: sub rcx, qword ptr [0x28]; jne 0x72e3f; add rsp, 0x28; ret; 
0x00000000004785c9: sub rcx, qword ptr [0x28]; jne 0x785d8; add rsp, 0x38; ret; 
0x0000000000408f6c: sub rcx, qword ptr [0x28]; jne 0x8f7e; add rsp, 0xd8; ret; 
0x00000000004092ac: sub rcx, qword ptr [0x28]; jne 0x92be; add rsp, 0xd8; ret; 
0x0000000000476a21: sub rcx, qword ptr [rax + 0x10]; cmp rcx, qword ptr [rax + 0x28]; jae 0x76a10; mov eax, 1; ret; 
0x000000000043f3ee: sub rcx, qword ptr fs:[0x28]; jne 0x3f443; add rsp, 0x68; ret; 
0x000000000043f47d: sub rcx, qword ptr fs:[0x28]; jne 0x3f4cb; add rsp, 0x18; ret; 
0x000000000043f525: sub rcx, qword ptr fs:[0x28]; jne 0x3f573; add rsp, 0x58; ret; 
0x000000000043f5c3: sub rcx, qword ptr fs:[0x28]; jne 0x3f613; add rsp, 0x58; ret; 
0x000000000044fdeb: sub rcx, qword ptr fs:[0x28]; jne 0x4fe86; add rsp, 0x98; ret; 
0x0000000000450f7b: sub rcx, qword ptr fs:[0x28]; jne 0x50f8e; add rsp, 0xd8; ret; 
0x000000000046d032: sub rcx, qword ptr fs:[0x28]; jne 0x6d04c; add rsp, 0x38; ret; 
0x000000000046d10e: sub rcx, qword ptr fs:[0x28]; jne 0x6d1a7; add rsp, 0x48; ret; 
0x000000000046d31c: sub rcx, qword ptr fs:[0x28]; jne 0x6d353; add rsp, 0x38; ret; 
0x000000000046d3c2: sub rcx, qword ptr fs:[0x28]; jne 0x6d3dc; add rsp, 0x38; ret; 
0x0000000000472e2f: sub rcx, qword ptr fs:[0x28]; jne 0x72e3f; add rsp, 0x28; ret; 
0x00000000004785c8: sub rcx, qword ptr fs:[0x28]; jne 0x785d8; add rsp, 0x38; ret; 
0x0000000000408f6b: sub rcx, qword ptr fs:[0x28]; jne 0x8f7e; add rsp, 0xd8; ret; 
0x00000000004092ab: sub rcx, qword ptr fs:[0x28]; jne 0x92be; add rsp, 0xd8; ret; 
0x000000000040ff28: sub rcx, rax; lea eax, [rcx - 1]; ret; 
0x000000000045f048: sub rcx, rax; sar rcx, 2; lea eax, [rcx - 1]; ret; 
0x0000000000425151: sub rdi, 0x40; lea r11, [rip + 0x5de74]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425092: sub rdi, 0x40; lea r11, [rip + 0x5df33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422781: sub rdi, 0x40; lea r11, [rip + 0x60684]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004226c2: sub rdi, 0x40; lea r11, [rip + 0x60743]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bf8e: sub rdi, rdx; lea r11, [rip + 0x576f8]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042947a: sub rdi, rdx; lea r11, [rip + 0x59d0c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bc2d: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x57a56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042baad: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x57bd6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b92d: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x57d56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b7ad: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x57ed6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b62d: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x58056]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b4ad: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x581d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b32d: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x58356]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b1ad: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x584d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b02d: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x58656]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aead: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x587d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042ad2d: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x58956]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042abad: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x58ad6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aa2d: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x58c56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a8ad: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x58dd6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a72d: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x58f56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a5b4: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x590cf]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042914d: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x5a036]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428fcd: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x5a1b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428e4d: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x5a336]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428ccd: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x5a4b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428b4d: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x5a636]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004289cd: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x5a7b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042884d: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x5a936]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004286cd: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x5aab6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042854d: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x5ac36]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004283cd: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x5adb6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042824d: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x5af36]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004280cd: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x5b0b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427f4d: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x5b236]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427dcd: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x5b3b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427c4d: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x5b536]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427ad4: sub rdi, rdx; sub rsi, rdx; lea r11, [rip + 0x5b6af]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427880: sub rdx, 0x40; lea r11, [rip + 0x5b745]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004277c0: sub rdx, 0x40; sfence; lea r11, [rip + 0x5b802]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424cfc: sub rdx, 0x40; sfence; lea r11, [rip + 0x5e106]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000045e711: sub rdx, 0x4adb80; cmp rax, rdx; jbe 0x5e758; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000045ef56: sub rdx, 0x4adb80; cmp rax, rdx; jbe 0x5ef90; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000045eff0: sub rdx, 0x4adb80; cmp rax, rdx; jbe 0x5f010; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x0000000000409781: sub rdx, 0x4adb80; cmp rax, rdx; jbe 0x97e8; mov rdi, rbx; call qword ptr [rbp + 0x60]; 
0x0000000000409e66: sub rdx, 0x4adb80; cmp rax, rdx; jbe 0x9ee4; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040efcb: sub rdx, 0x4adb80; cmp rax, rdx; jbe 0xf030; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x18]; 
0x000000000040f47f: sub rdx, 0x4adb80; cmp rax, rdx; jbe 0xf4f0; mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000040f531: sub rdx, 0x4adb80; cmp rax, rdx; jbe 0xf560; mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000040fe31: sub rdx, 0x4adb80; cmp rax, rdx; jbe 0xfe70; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000040fec8: sub rdx, 0x4adb80; cmp rax, rdx; jbe 0xfef0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x0000000000417445: sub rdx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x000000000043e83f: sub rdx, qword ptr [0x28]; jne 0x3e859; add rsp, 0x28; ret; 
0x000000000043f7b2: sub rdx, qword ptr [0x28]; jne 0x3f7c1; add rsp, 0x28; ret; 
0x000000000046cf99: sub rdx, qword ptr [0x28]; jne 0x6cfcb; add rsp, 0x38; ret; 
0x000000000046d603: sub rdx, qword ptr [0x28]; jne 0x6d61d; add rsp, 0x38; ret; 
0x0000000000472f1e: sub rdx, qword ptr [0x28]; jne 0x72f2d; add rsp, 0x38; ret; 
0x000000000040d73b: sub rdx, qword ptr [rdi + 8]; pop rbx; sub rax, rdx; pop rbp; pop r12; ret; 
0x000000000043e83e: sub rdx, qword ptr fs:[0x28]; jne 0x3e859; add rsp, 0x28; ret; 
0x000000000043f7b1: sub rdx, qword ptr fs:[0x28]; jne 0x3f7c1; add rsp, 0x28; ret; 
0x000000000046cf98: sub rdx, qword ptr fs:[0x28]; jne 0x6cfcb; add rsp, 0x38; ret; 
0x000000000046d602: sub rdx, qword ptr fs:[0x28]; jne 0x6d61d; add rsp, 0x38; ret; 
0x0000000000472f1d: sub rdx, qword ptr fs:[0x28]; jne 0x72f2d; add rsp, 0x38; ret; 
0x000000000041185b: sub rdx, rax; cmp rsi, rdx; jb 0x11840; mov byte ptr [r8 + rsi], r10b; mov rax, r8; ret; 
0x000000000041fc4c: sub rdx, rax; jbe 0x1fef0; add rax, rdi; add rax, rcx; ret; 
0x000000000041feb3: sub rdx, rax; jbe 0x1fef0; add rax, rdi; ret; 
0x000000000041fec3: sub rdx, rax; jbe 0x1fef0; lea rax, [rdi + rax + 0x10]; ret; 
0x000000000041fed3: sub rdx, rax; jbe 0x1fef0; lea rax, [rdi + rax + 0x20]; ret; 
0x000000000041fee3: sub rdx, rax; jbe 0x1fef0; lea rax, [rdi + rax + 0x30]; ret; 
0x000000000047333c: sub rdx, rax; jbe 0x735e0; add rax, rdi; add rax, rcx; ret; 
0x00000000004735a3: sub rdx, rax; jbe 0x735e0; add rax, rdi; ret; 
0x00000000004735b3: sub rdx, rax; jbe 0x735e0; lea rax, [rdi + rax + 0x10]; ret; 
0x00000000004735c3: sub rdx, rax; jbe 0x735e0; lea rax, [rdi + rax + 0x20]; ret; 
0x00000000004735d3: sub rdx, rax; jbe 0x735e0; lea rax, [rdi + rax + 0x30]; ret; 
0x000000000043954b: sub rdx, rcx; lea r11, [rip + 0x4a7fb]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000438f2b: sub rdx, rcx; lea r11, [rip + 0x4ad9b]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000040a186: sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x000000000040c577: sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x00000000004520cc: sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x000000000040a86b: sub rdx, rsi; mov qword ptr [rsp + 8], rcx; mov rdi, r15; call rax; 
0x000000000040cee4: sub rdx, rsi; mov qword ptr [rsp], rcx; mov rdi, rbp; call rax; 
0x000000000042508e: sub rsi, 0x40; sub rdi, 0x40; lea r11, [rip + 0x5df33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004226be: sub rsi, 0x40; sub rdi, 0x40; lea r11, [rip + 0x60743]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000047a4d1: sub rsi, qword ptr [0x28]; jne 0x7a4e5; add rsp, 0x28; ret; 
0x000000000047a4d0: sub rsi, qword ptr fs:[0x28]; jne 0x7a4e5; add rsp, 0x28; ret; 
0x000000000042bc30: sub rsi, rdx; lea r11, [rip + 0x57a56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bab0: sub rsi, rdx; lea r11, [rip + 0x57bd6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b930: sub rsi, rdx; lea r11, [rip + 0x57d56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b7b0: sub rsi, rdx; lea r11, [rip + 0x57ed6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b630: sub rsi, rdx; lea r11, [rip + 0x58056]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b4b0: sub rsi, rdx; lea r11, [rip + 0x581d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b330: sub rsi, rdx; lea r11, [rip + 0x58356]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b1b0: sub rsi, rdx; lea r11, [rip + 0x584d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b030: sub rsi, rdx; lea r11, [rip + 0x58656]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aeb0: sub rsi, rdx; lea r11, [rip + 0x587d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042ad30: sub rsi, rdx; lea r11, [rip + 0x58956]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042abb0: sub rsi, rdx; lea r11, [rip + 0x58ad6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aa30: sub rsi, rdx; lea r11, [rip + 0x58c56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a8b0: sub rsi, rdx; lea r11, [rip + 0x58dd6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a730: sub rsi, rdx; lea r11, [rip + 0x58f56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a5b7: sub rsi, rdx; lea r11, [rip + 0x590cf]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429150: sub rsi, rdx; lea r11, [rip + 0x5a036]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428fd0: sub rsi, rdx; lea r11, [rip + 0x5a1b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428e50: sub rsi, rdx; lea r11, [rip + 0x5a336]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428cd0: sub rsi, rdx; lea r11, [rip + 0x5a4b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428b50: sub rsi, rdx; lea r11, [rip + 0x5a636]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004289d0: sub rsi, rdx; lea r11, [rip + 0x5a7b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428850: sub rsi, rdx; lea r11, [rip + 0x5a936]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004286d0: sub rsi, rdx; lea r11, [rip + 0x5aab6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428550: sub rsi, rdx; lea r11, [rip + 0x5ac36]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004283d0: sub rsi, rdx; lea r11, [rip + 0x5adb6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428250: sub rsi, rdx; lea r11, [rip + 0x5af36]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004280d0: sub rsi, rdx; lea r11, [rip + 0x5b0b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427f50: sub rsi, rdx; lea r11, [rip + 0x5b236]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427dd0: sub rsi, rdx; lea r11, [rip + 0x5b3b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427c50: sub rsi, rdx; lea r11, [rip + 0x5b536]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427ad7: sub rsi, rdx; lea r11, [rip + 0x5b6af]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bf8b: sub rsi, rdx; sub rdi, rdx; lea r11, [rip + 0x576f8]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429477: sub rsi, rdx; sub rdi, rdx; lea r11, [rip + 0x59d0c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000047a262: sub rsp, -0x80; pop rbx; pop rbp; pop r12; ret; 
0x000000000046b257: sub rsp, 0x1008; mov rbp, rsp; mov rsi, rbp; syscall; 
0x0000000000480bf8: sub rsp, 8; add rsp, 8; ret; 
0x0000000000446120: sub rsp, 8; call 0x45c30; or dword ptr [rip + 0x692e4], 2; add rsp, 8; ret; 
0x0000000000467b3c: sub rsp, 8; call qword ptr [rip + 0x455fa]; xor eax, eax; add rsp, 8; ret; 
0x0000000000461a98: sub rsp, 8; mov rax, qword ptr [rip + 0x4a015]; test rax, rax; je 0x61ad8; call rax; 
0x000000000040120b: syscall; 
0x000000000043e874: syscall; cmp rax, -0x1000; ja 0x3e880; ret; 
0x000000000043e8c3: syscall; cmp rax, -0x1000; ja 0x3e8d0; ret; 
0x000000000043ea3c: syscall; cmp rax, -0x1000; ja 0x3eaa0; ret; 
0x000000000043eae1: syscall; cmp rax, -0x1000; ja 0x3eb40; ret; 
0x000000000043eb75: syscall; cmp rax, -0x1000; ja 0x3eb80; ret; 
0x000000000043ebb1: syscall; cmp rax, -0x1000; ja 0x3ec00; ret; 
0x000000000043f375: syscall; cmp rax, -0x1000; ja 0x3f380; ret; 
0x000000000043f622: syscall; cmp rax, -0x1000; ja 0x3f630; ret; 
0x000000000043f655: syscall; cmp rax, -0x1000; ja 0x3f660; ret; 
0x000000000043f68e: syscall; cmp rax, -0x1000; ja 0x3f6a0; ret; 
0x000000000043f7f0: syscall; cmp rax, -0x1000; ja 0x3f860; pop rbx; pop rbp; ret; 
0x0000000000462064: syscall; cmp rax, -0x1000; ja 0x62070; ret; 
0x00000000004620b9: syscall; cmp rax, -0x1000; ja 0x620c8; ret; 
0x00000000004738d5: syscall; cmp rax, -0x1000; ja 0x738e0; ret; 
0x0000000000473918: syscall; cmp rax, -0x1000; ja 0x73928; ret; 
0x000000000043e7e5: syscall; cmp rax, -0xfff; jae 0x3e7f0; ret; 
0x000000000043f885: syscall; cmp rax, -0xfff; jae 0x3f890; ret; 
0x000000000043f8b5: syscall; cmp rax, -0xfff; jae 0x3f8c0; ret; 
0x000000000043f8e5: syscall; cmp rax, -0xfff; jae 0x3f8f0; ret; 
0x0000000000440b48: syscall; cmp rax, -0xfff; jae 0x40b53; ret; 
0x0000000000440b75: syscall; cmp rax, -0xfff; jae 0x40b80; ret; 
0x0000000000461fe5: syscall; cmp rax, -0xfff; jae 0x61ff0; ret; 
0x0000000000478795: syscall; cmp rax, -0xfff; jae 0x787a0; ret; 
0x0000000000413da6: syscall; pop rbp; ret; 
0x000000000041600e: syscall; pop rbx; ret; 
0x000000000040e73c: syscall; ret; 
0x0000000000439f0d: test ah, 0x20; jne 0x39ff0; test ah, 0x40; jne 0x3a000; lea rax, [rdi + 0xf]; ret; 
0x0000000000439f16: test ah, 0x40; jne 0x3a000; lea rax, [rdi + 0xf]; ret; 
0x0000000000439e2e: test ah, 0x40; jne 0x3a000; test dh, 0x40; jne 0x39d70; lea rax, [rdi + 0xf]; ret; 
0x0000000000471f9a: test ah, ah; add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret 0xffe8; 
0x0000000000478780: test ah, bh; jmp qword ptr [rsi + 0x2e]; 
0x000000000044e2a7: test ah, bh; jmp qword ptr [rsi + 0xf]; 
0x00000000004786cb: test ah, bh; jmp qword ptr [rsi - 0x70]; 
0x000000000046e417: test ah, dh; or dword ptr [rax], eax; add byte ptr [rax - 0x14343], al; jmp qword ptr [rsi + 0xf]; 
0x000000000040fa44: test al, 0; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000461c70: test al, 0; add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x000000000040cad0: test al, 0; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x000000000047cf63: test al, 0; add byte ptr [rax], al; ret; 
0x0000000000439ebc: test al, 0x20; jne 0x39f80; test al, 0x40; jne 0x39f90; lea rax, [rdi + 7]; ret; 
0x0000000000439ec4: test al, 0x40; jne 0x39f90; lea rax, [rdi + 7]; ret; 
0x0000000000439dac: test al, 0x40; jne 0x39f90; test dl, 0x40; jne 0x39d70; lea rax, [rdi + 7]; ret; 
0x000000000043fe79: test al, 0x4c; mov dword ptr [rbp - 0x50], ecx; mov r15d, r14d; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x00000000004188b4: test al, 0x9a; add byte ptr [rax], al; lea rdx, [rip + 0xf011]; cmovne rax, rdx; ret; 
0x000000000045e992: test al, 0xd8; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax - 0xa]; ret 0x7408; 
0x000000000044855f: test al, 0xfb; jmp qword ptr [rsi + 0xf]; 
0x0000000000439496: test al, 4; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000004016e2: test al, al; jne 0x16e7; ret; 
0x000000000041a06a: test al, al; jne 0x1a050; xor eax, eax; sub eax, ecx; ret; 
0x000000000046c735: test al, al; jne 0x6c707; movsx eax, byte ptr [rsi]; neg eax; ret; 
0x00000000004547eb: test al, dh; or eax, 0xeb830000; add dword ptr [rax - 0x50743], eax; jmp qword ptr [rax]; 
0x000000000047db54: test bh, bh; js 0x7db78; mov qword ptr [r8], rdx; add rsp, 8; ret; 
0x000000000047fc74: test bh, bh; js 0x7fc98; mov qword ptr [r8], rdx; add rsp, 8; ret; 
0x0000000000417c98: test bh, dl; add dword ptr [rax], eax; cmove rax, rdx; ret; 
0x000000000044b868: test bl, ah; add al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; add cl, byte ptr [rax + 0x39]; ret; 
0x000000000047c4db: test bl, bl; add al, 0; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000046a7fe: test bl, bl; cmove r8, rax; mov rax, r8; pop rbx; ret; 
0x000000000043faac: test byte ptr [r10 + 8], 1; jne 0x3faf0; ret; 
0x000000000044152d: test byte ptr [rax + 0x3b], 0x57; sbb byte ptr [rdi - 0x10], bh; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000479b9f: test byte ptr [rax + rax + 0x438b0000], al; adc byte ptr [rbp + 0x51840fc0], al; add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x0000000000475c1b: test byte ptr [rax + rax - 0x76b40000], cl; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000447f1b: test byte ptr [rax + rax*4], ah; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000448d4a: test byte ptr [rax + rax*4], ah; add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x50; dec dword ptr [rcx - 0x7d]; ret; 
0x0000000000463fb9: test byte ptr [rax + rax*8], ah; add byte ptr [rax], al; add dh, dh; ret 0x7404; 
0x0000000000459b7c: test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x00000000004541c8: test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x000000000047cc12: test byte ptr [rax + rdi*2], ah; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000463727: test byte ptr [rax + rdi*4], ah; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret; 
0x0000000000441a5e: test byte ptr [rax - 0x73], 0x3d; or al, 0x31; add al, 0; mov eax, 0x15; syscall; 
0x0000000000474b57: test byte ptr [rax - 0x75], 0x3c; ret 0xb60f; 
0x000000000040d4f3: test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbp + 0x70]; 
0x00000000004094e7: test byte ptr [rax - 0x77], 0xef; call qword ptr [rbx + 0x10]; 
0x00000000004612cc: test byte ptr [rax - 0x7d], 0xec; or al, ch; mov dl, 0xfd; stc; dec dword ptr [rax - 0x77]; ret 0x2948; 
0x000000000043e46a: test byte ptr [rax], 0; add byte ptr [rdi + 0x78], dh; lea rdx, [rip + 0x45f25]; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x000000000046de9a: test byte ptr [rax], ah; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; ret 0x22; 
0x000000000046f222: test byte ptr [rax], ah; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x00000000004614fa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add rax, 3; ret; 
0x000000000041fe8a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; bsf eax, eax; lea rax, [rax + rdi + 0x10]; ret; 
0x0000000000439fba: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xa]; ret; 
0x0000000000439fca: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xb]; ret; 
0x0000000000439fda: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xc]; ret; 
0x0000000000439fea: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xd]; ret; 
0x0000000000439ffa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xe]; ret; 
0x0000000000439f4a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 2]; ret; 
0x0000000000439f5a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 3]; ret; 
0x0000000000439f6a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 4]; ret; 
0x0000000000439f7a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 5]; ret; 
0x0000000000439f8a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 6]; ret; 
0x0000000000439f9a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 8]; ret; 
0x0000000000439faa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 9]; ret; 
0x000000000047282a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x3ce89]; mov qword ptr [rip + 0x3ce6a], rax; ret; 
0x00000000004395da: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rdi], dh; lea rax, [rdi]; ret; 
0x0000000000438fba: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rdi], dh; ret; 
0x0000000000417a8a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x16; pop rbx; ret; 
0x000000000046202a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x68; syscall; 
0x000000000046202a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x68; syscall; ret; 
0x000000000046201a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x6b; syscall; 
0x000000000046201a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x6b; syscall; ret; 
0x000000000046203a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x6c; syscall; 
0x000000000046203a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x6c; syscall; ret; 
0x000000000040af6a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffffff; pop rbp; ret; 
0x000000000040f4fa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x000000000044151a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 0x20], rsi; ret; 
0x000000000047cefa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 0x98], rsi; ret; 
0x000000000040fd3a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 0xa0], -1; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000047390a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov r10, rcx; mov eax, 0x11; syscall; 
0x000000000040fdea: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, -1; ret; 
0x000000000044f97a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, -8; add rax, qword ptr fs:[0]; ret; 
0x000000000046152a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 2; ret; 
0x000000000046153a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 3; ret; 
0x000000000046154a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 4; ret; 
0x000000000046155a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 5; ret; 
0x000000000046156a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 6; ret; 
0x000000000046157a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 7; ret; 
0x000000000046cdfa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rax + 8]; ret; 
0x000000000047cf0a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xa0]; ret; 
0x000000000047cf5a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xa8]; ret; 
0x000000000047cf1a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xb8]; ret; 
0x00000000004116ea: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi]; mov dword ptr [rip + 0x9da9b], eax; ret; 
0x000000000041179a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi]; mov qword ptr [rip + 0x9afbe], rax; ret; 
0x000000000041171a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi]; mov qword ptr [rip + 0x9aff6], rax; ret; 
0x00000000004442da: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rip + 0x6b101]; ret; 
0x00000000004442ca: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rip + 0x6b109]; ret; 
0x000000000046087a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, r8; vzeroupper; ret; 
0x0000000000410c6a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000416faa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rsi, qword ptr [rsp + 0x28]; mov rdi, r12; call rax; 
0x000000000043f8d5: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax + rax]; mov eax, 0x1c; syscall; 
0x0000000000462005: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax + rax]; mov eax, 0x66; syscall; 
0x000000000043f8a5: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax + rax]; mov eax, 0xa; syscall; 
0x0000000000478787: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov eax, 0x26; syscall; 
0x000000000044fb66: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov rax, 0xf; syscall; 
0x000000000047cec6: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov rax, qword ptr [rdi + 0x98]; ret; 
0x0000000000410c36: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov rax, qword ptr [rip + 0x9b4d9]; ret; 
0x000000000043bc07: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; xor eax, eax; ret; 
0x0000000000439f39: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; lea rax, [rdi + 1]; ret; 
0x0000000000439f29: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; lea rax, [rdi]; ret; 
0x00000000004738f8: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; mov eax, 0x27; syscall; 
0x0000000000440b68: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; mov eax, 0x63; syscall; 
0x000000000043f879: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; mov eax, 0xb; syscall; 
0x0000000000410c18: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; mov eax, 0xffffffff; ret; 
0x000000000043f648: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; mov eax, 1; syscall; 
0x000000000043f369: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; mov eax, 3; syscall; 
0x0000000000461519: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; mov rax, 1; ret; 
0x0000000000410c58: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; mov rax, qword ptr [rdi + 0x68]; ret; 
0x0000000000440be8: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; ret; 
0x0000000000439d69: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; xor rax, rax; ret; 
0x0000000000410c2a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000040f66a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043f61a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; syscall; 
0x000000000046150a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor rax, rax; ret; 
0x000000000043bd55: test byte ptr [rbp + 0x48d674d2], 0x63; leave; add rax, rcx; sub rax, rdi; ret; 
0x000000000044fafe: test byte ptr [rbp - 0x6bf0bf40], 0xc6; xor eax, eax; mov dword ptr [rbx + 0x40], esi; pop rbx; ret; 
0x0000000000424167: test byte ptr [rbx - 0x76b303aa], 0x5f; out dx, al; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043b392: test byte ptr [rbx], bl; add al, byte ptr [rax]; add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x000000000043faa6: test byte ptr [rcx + 8], 1; je 0x3fae5; test byte ptr [r10 + 8], 1; jne 0x3faf0; ret; 
0x000000000043b389: test byte ptr [rcx + rax - 0x67d0000], al; adc dword ptr [rdi], ecx; test byte ptr [rbx], bl; add al, byte ptr [rax]; add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x000000000046000f: test byte ptr [rcx + rax], ch; add byte ptr [rax], al; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x0000000000459bb3: test byte ptr [rcx + rcx*4 - 0x19], 0x4c; sub ebx, esi; mov r13, rbx; sar r13, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x000000000047e412: test byte ptr [rcx - 0x76fffffe], bh; ret 0xb60f; 
0x000000000040228d: test byte ptr [rcx], 0; add byte ptr [rax - 0x75], cl; push rax; and byte ptr [rax + 1], cl; ret 0xb70f; 
0x00000000004490c4: test byte ptr [rcx], dh; add al, byte ptr [rax]; add bh, dh; ret 0; 
0x00000000004395c8: test byte ptr [rdi + 0x63490004], ah; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000459a81: test byte ptr [rdi], 0x84; jmp qword ptr [rdx]; 
0x00000000004671f8: test byte ptr [rdi], 0x84; ret 2; 
0x00000000004687c8: test byte ptr [rdi], 0x84; sar ebx, 0xff; dec dword ptr [rcx + 1]; ret 0xb58b; 
0x000000000044288d: test byte ptr [rdi], 0x84; xchg eax, edi; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000045e967: test byte ptr [rdi], 2; jne 0x5e9d0; mov rax, qword ptr [rax + 0xe0]; call qword ptr [rax + 0x68]; 
0x0000000000469f01: test byte ptr [rdi], bl; add eax, dword ptr [rax]; add byte ptr [rbx - 0x70f0c005], al; add al, byte ptr [rax + rax]; add byte ptr [rax + 0x63], cl; ret; 
0x0000000000461141: test byte ptr [rdx + 0x48000000], bl; bsf eax, edx; shr rax, 2; ret; 
0x000000000045ff81: test byte ptr [rdx + 0x48000001], bh; bsr eax, eax; add rax, rdi; ret; 
0x000000000043faad: test byte ptr [rdx + 8], 1; jne 0x3faf0; ret; 
0x0000000000479a69: test byte ptr [rdx], al; add al, byte ptr [rax]; add byte ptr [rax - 0x75], cl; or byte ptr [rax + 3], cl; add byte ptr [r13 + 0x31], r8b; jmp qword ptr [rsi - 0x7d]; 
0x0000000000447406: test byte ptr [rdx], bl; add eax, dword ptr [rax]; add byte ptr [rbp - 0x7a7bf00a], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4901; 
0x0000000000423796: test byte ptr [rip + 0x14634900], 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b1b7: test byte ptr [rip + 0x14634900], al; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000461057: test byte ptr [rip + 0x4e24c], 8; lea rax, [rip + 0x25b]; lea rdx, [rip + 0x34]; cmovne rax, rdx; ret; 
0x00000000004188e8: test byte ptr [rip + 0x969c6], 2; lea rdx, [rip + 0x2378a]; lea rax, [rip + 0x23823]; cmove rax, rdx; ret; 
0x000000000041886e: test byte ptr [rip + 0x96a40], 2; lea rdx, [rip + 0x23bb4]; lea rax, [rip + 0x23bed]; cmove rax, rdx; ret; 
0x00000000004187c7: test byte ptr [rip + 0x96adb], 2; lea rax, [rip + 0x1d3eb]; lea rdx, [rip + 0x1ec74]; cmovne rax, rdx; ret; 
0x0000000000418768: test byte ptr [rip + 0x96b46], 2; lea rdx, [rip + 0x238fa]; lea rax, [rip + 0x23993]; cmove rax, rdx; ret; 
0x0000000000418748: test byte ptr [rip + 0x96b66], 2; lea rdx, [rip + 0x240fa]; lea rax, [rip + 0x24143]; cmove rax, rdx; ret; 
0x00000000004186ee: test byte ptr [rip + 0x96bc0], 2; lea rdx, [rip + 0x23d24]; lea rax, [rip + 0x23d5d]; cmove rax, rdx; ret; 
0x0000000000418537: test byte ptr [rip + 0x96dc7], 1; je 0x184fd; ret; 
0x0000000000417be7: test byte ptr [rip + 0x976bb], 2; lea rax, [rip + 0x1deeb]; lea rdx, [rip + 0x1e0a4]; cmovne rax, rdx; ret; 
0x0000000000417b87: test byte ptr [rip + 0x9771b], 2; lea rax, [rip + 0xdfb]; lea rdx, [rip + 0x24e4]; cmovne rax, rdx; ret; 
0x0000000000417b27: test byte ptr [rip + 0x977d6], 0x40; lea rax, [rip + 0x1d09b]; lea rdx, [rip + 0x221b4]; cmovne rax, rdx; ret; 
0x000000000046048d: test byte ptr [rsi + 0x48000000], bl; bsf eax, edx; ret; 
0x000000000041a03a: test byte ptr [rsi + 0x48fffffe], dl; bsf ecx, edi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x00000000004763c4: test byte ptr [rsi + rdi*8 - 0x76be0001], ch; ret 0xe883; 
0x000000000043549d: test byte ptr [rsi], bh; add byte ptr [rax], al; bsf rax, rdx; ret; 
0x000000000045f9bc: test byte ptr [rsi], bh; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x000000000046a20c: test ch, ah; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0xf48; 
0x000000000045272e: test ch, dh; add eax, 0xe9830000; add dword ptr [rax - 0x8ef43], eax; jmp qword ptr [rax]; 
0x000000000046c4c5: test cl, cl; add dword ptr [rax], eax; add byte ptr [rdi], cl; mov dh, 0x45; add cl, byte ptr [rax - 0x7d]; ret; 
0x000000000043b86f: test cl, cl; jne 0x3b860; ret; 
0x000000000043b91f: test cl, cl; jne 0x3b910; ret; 
0x000000000043bbdf: test cl, cl; jne 0x3bbd0; sub rax, 1; ret; 
0x0000000000439e37: test dh, 0x40; jne 0x39d70; lea rax, [rdi + 0xf]; ret; 
0x000000000043b2c6: test dh, 0x40; jne 0x3b290; movzx eax, byte ptr [rdi - 9]; movzx edx, byte ptr [rsi - 9]; sub eax, edx; ret; 
0x000000000043d3aa: test dh, 0xf0; je 0x3d2ca; lea eax, [rdx + rdx]; pop rbx; and eax, 0x7ff80000; ret; 
0x000000000043fae0: test dh, 1; jne 0x3fb00; ret; 
0x0000000000439e7d: test dh, 4; jne 0x39d70; lea rax, [rdi + 0xb]; ret; 
0x00000000004023d5: test dh, bh; add dword ptr [rax], eax; add byte ptr [rax - 0x39], cl; ret; 
0x000000000047aea8: test dh, dh; jns 0x7ae52; mov rdx, qword ptr [rdx]; mov qword ptr [r9], rdx; pop rbx; ret; 
0x0000000000446235: test dh, dh; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000000047db53: test dil, dil; js 0x7db78; mov qword ptr [r8], rdx; add rsp, 8; ret; 
0x000000000047fc73: test dil, dil; js 0x7fc98; mov qword ptr [r8], rdx; add rsp, 8; ret; 
0x0000000000439db4: test dl, 0x40; jne 0x39d70; lea rax, [rdi + 7]; ret; 
0x000000000043b212: test dl, 0x40; jne 0x3b290; movzx eax, byte ptr [rdi - 9]; movzx edx, byte ptr [rsi - 9]; sub eax, edx; ret; 
0x0000000000439de2: test dl, 4; jne 0x39d70; lea rax, [rdi + 3]; ret; 
0x0000000000468941: test dl, bh; or byte ptr [rax], al; add byte ptr [rcx], bh; ret 0x850f; 
0x000000000043ecd1: test dl, cl; add al, 0; add byte ptr [rax - 0x39], cl; ret; 
0x00000000004691d9: test dl, dl; add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0x850f; 
0x00000000004614c7: test dl, dl; je 0x614e0; mov cl, dl; and cl, 0xf; je 0x614f0; ret; 
0x000000000043ba8f: test dl, dl; jne 0x3ba80; lea rax, [rcx - 1]; ret; 
0x000000000040798f: test dl, dl; jne 0x796c; ret; 
0x000000000045d77d: test dword ptr [rax + 0x48000000], ebx; add esp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x000000000047cea5: test dword ptr [rax + 0x48fff847], edi; mov dword ptr [rcx], edx; add rsp, 8; ret; 
0x00000000004607bb: test dword ptr [rax + 0x4c000000], esp; mov eax, eax; vzeroupper; ret; 
0x000000000040843f: test dword ptr [rax + 0xa], ebp; add byte ptr [rdi], cl; add eax, 0xffff28e9; jmp qword ptr [rsi + 0xf]; 
0x000000000043dbf5: test dword ptr [rax + rax + 0x14c0000], eax; ret 0x71e9; 
0x0000000000439ebf: test dword ptr [rax + rax + 0x40a80000], edi; jne 0x39f90; lea rax, [rdi + 7]; ret; 
0x00000000004202a7: test dword ptr [rax + rax - 0x3fcf0000], edx; vzeroupper; ret; 
0x00000000004620a7: test dword ptr [rax - 0x77], 0xca8948d6; cmp r9d, 1; ja 0x620e0; mov eax, 0x106; syscall; 
0x000000000044ff48: test dword ptr [rax - 0x77], 0xe8d148ea; imul rax, rdi; lea r12, [rcx + rax]; mov rdi, r12; call rbx; 
0x000000000043e865: test dword ptr [rax - 0x77], 0xf88341d6; add dword ptr [rdi + 0x29], esi; mov eax, 4; syscall; 
0x0000000000462055: test dword ptr [rax - 0x77], 0xf88341d6; add dword ptr [rdi + 0x29], esi; mov eax, 6; syscall; 
0x000000000043e8b4: test dword ptr [rax - 0x77], 0xf88341d6; add dword ptr [rdi + 0x2a], esi; mov eax, 5; syscall; 
0x0000000000479296: test dword ptr [rax - 0x7c000005], esi; ret; 
0x00000000004167a5: test dword ptr [rax - 0x7d], 0x61e918c4; mov dh, 0xff; call qword ptr [rax + 0x18c48348]; ret; 
0x0000000000422d15: test dword ptr [rax], 0x63490006; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000457147: test dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x0000000000442d32: test dword ptr [rax], eax; add rax, rbp; jmp rax; 
0x000000000045259d: test dword ptr [rax], eax; idiv edi; call qword ptr [rax]; 
0x000000000046cac0: test dword ptr [rax], edx; add byte ptr [rax], al; add byte ptr [rcx], ch; ret 0x8d4d; 
0x0000000000452470: test dword ptr [rax], edx; idiv edi; inc dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x00000000004525b0: test dword ptr [rax], edx; idiv edi; jmp qword ptr [rax]; 
0x000000000045286c: test dword ptr [rax], esp; idiv edi; inc dword ptr [rcx]; ret; 
0x0000000000442d31: test dword ptr [rax], r8d; add rax, rbp; jmp rax; 
0x000000000041216c: test dword ptr [rbp + 0x31], eax; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9d00a]; syscall; 
0x00000000004618fe: test dword ptr [rbp + 0x4c000000], ebx; mov eax, eax; shr rax, 2; vzeroupper; ret; 
0x0000000000438f47: test dword ptr [rbp + 0x63490004], ebp; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000045ce1b: test dword ptr [rbp + rdi*8 - 0x7cb60001], ecx; ret; 
0x00000000004700cd: test dword ptr [rbp - 0x1600000e], edx; in eax, 0xff; jmp qword ptr [rsi + 0xf]; 
0x00000000004564fc: test dword ptr [rbp*8 - 0x6d160001], eax; fcos; jmp qword ptr [rsi + 0x2e]; 
0x000000000041fe38: test dword ptr [rbx + 0x31000000], esp; rol bl, 0x83; ret 0x6620; 
0x0000000000439e78: test dword ptr [rbx + 1], eax; add byte ptr [rax], al; test dh, 4; jne 0x39d70; lea rax, [rdi + 0xb]; ret; 
0x0000000000421ba7: test dword ptr [rbx + 7], edx; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000421ff6: test dword ptr [rbx + rax], eax; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000420c78: test dword ptr [rbx - 0x3a000003], esp; std; xlatb; ret 0xe883; 
0x0000000000423fa3: test dword ptr [rbx - 0x76b703aa], 0x5789f74f; cld; ret; 
0x0000000000429893: test dword ptr [rbx - 0x76b703b2], 0x4f89f757; cld; ret; 
0x0000000000421b7d: test dword ptr [rcx + 7], esi; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000421a8d: test dword ptr [rcx + 8], esp; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004219b9: test dword ptr [rcx + 9], eax; add byte ptr [rax], al; movzx eax, byte ptr [rdi - 1]; movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x000000000042199d: test dword ptr [rcx + 9], edx; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000047e58b: test dword ptr [rcx + rax], edx; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000045202b: test dword ptr [rcx + rcx*4 - 0x7b], 0xfffff6cc; call rax; 
0x000000000046ec9c: test dword ptr [rcx - 0x16000004], edx; ret; 
0x000000000046c2df: test dword ptr [rcx - 0x77], 0x4de0e8f5; stc; dec dword ptr [rax - 0x77]; ret; 
0x000000000043dd39: test dword ptr [rdi + 0x48000000], ecx; add esp, 8; pop rbx; pop rbp; ret; 
0x000000000046eef2: test dword ptr [rdi + rdi*8 - 1], esp; jmp qword ptr [rsi]; 
0x000000000046d118: test dword ptr [rdx + 0x48000000], ecx; add esp, 0x48; ret; 
0x0000000000421bbb: test dword ptr [rdx + 7], ecx; add byte ptr [rax], al; movzx eax, byte ptr [rdi - 1]; movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x0000000000421ab9: test dword ptr [rdx + 8], esp; add byte ptr [rax], al; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x00000000004218c2: test dword ptr [rdx + rcx], ebp; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000047ce53: test dword ptr [rip + 0x48fff848], eax; mov eax, dword ptr [rax]; add rsp, 8; ret; 
0x00000000004161a3: test dword ptr [rip + 0x5b000002], ebp; mov rax, r8; pop rbp; pop r12; ret; 
0x0000000000460273: test dword ptr [rip - 0x76ffffff], edi; ret 0x8948; 
0x000000000043f874: test dword ptr [rsi + 0x2e], esp; nop dword ptr [rax + rax]; nop; mov eax, 0xb; syscall; 
0x0000000000439ddd: test dword ptr [rsi + 1], ebp; add byte ptr [rax], al; test dl, 4; jne 0x39d70; lea rax, [rdi + 3]; ret; 
0x000000000043b5f2: test dword ptr [rsi + 1], ebp; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000046df80: test dword ptr [rsi - 0x7cfffffa], ebx; ret; 
0x000000000047069d: test dword ptr [rsi], ecx; or byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffb0; 
0x0000000000421dc8: test dword ptr [rsi], esp; add eax, 0xc0310000; ret; 
0x00000000004178f2: test eax, 0x100094e; add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000412726: test eax, 0x45fffffd; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000425a23: test eax, 0x490005d5; movsxd rdx, dword ptr [rbx + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422c63: test eax, 0x49000601; movsxd rdx, dword ptr [rbx + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428857: test eax, 0x63490005; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427a46: test eax, 0x7f0f41f3; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x0000000000418713: test eax, 0x80000147; out 8, al; je 0x18748; ret; 
0x0000000000406771: test eax, 0x8d4dffff; je 0x677e; add dword ptr [rax - 9], ecx; ror byte ptr [rax + 1], 1; ret; 
0x0000000000433d62: test eax, 0xe3c4c9eb; jns 0x33dcc; rcr dword ptr [rdx], 0xf; xchg bh, bl; or eax, 0x83480000; ret 0x4910; 
0x0000000000434542: test eax, 0xe3c4c9eb; jns 0x345ac; rcr dword ptr [rdx], 0xf; xchg bh, bh; add eax, 0x83480000; ret 0x4910; 
0x000000000043bbf8: test eax, 0xfffd3be9; jmp qword ptr [rsi - 0x70]; 
0x00000000004422e0: test eax, eax; add byte ptr [rax], al; add dh, dh; ret 0x7404; 
0x0000000000440acb: test eax, eax; cmove eax, edx; ret; 
0x000000000047cf41: test eax, eax; cmovne rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000040100c: test eax, eax; je 0x1012; call rax; 
0x000000000040100c: test eax, eax; je 0x1012; call rax; add rsp, 8; ret; 
0x0000000000413ac2: test eax, eax; je 0x139b1; mov qword ptr [rsp + 0x10], rdx; mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp], rdi; call rax; 
0x0000000000401be3: test eax, eax; je 0x1bf0; mov edi, 0x4adb30; jmp rax; 
0x0000000000401c25: test eax, eax; je 0x1c30; mov edi, 0x4adb30; jmp rax; 
0x000000000041f668: test eax, eax; je 0x1f66d; xchg eax, edx; sub eax, edx; ret; 
0x000000000041ff56: test eax, eax; je 0x1ff70; bsf eax, eax; add rax, rdi; add rax, rcx; ret; 
0x0000000000434e2f: test eax, eax; je 0x34e40; bsf eax, eax; lea rax, [rdi + rax]; ret; 
0x000000000043f758: test eax, eax; je 0x3f75d; ret; 
0x0000000000442bf6: test eax, eax; je 0x42c00; ret; 
0x0000000000446116: test eax, eax; je 0x46120; ret; 
0x000000000044e14d: test eax, eax; je 0x4e153; call rax; 
0x000000000044e38f: test eax, eax; je 0x4e395; call rax; 
0x000000000044f319: test eax, eax; je 0x4f31f; call rax; 
0x000000000046039d: test eax, eax; je 0x60354; bsr eax, eax; lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x00000000004603c2: test eax, eax; je 0x603e0; bsr eax, eax; lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x0000000000461aa4: test eax, eax; je 0x61ad8; call rax; 
0x000000000046d4cf: test eax, eax; je 0x6d4dd; lea rcx, [rip + 0x405a6]; mov qword ptr [rax], rcx; pop rbp; ret; 
0x0000000000472811: test eax, eax; je 0x72823; lea rax, [rip + 0x3cea4]; mov qword ptr [rip + 0x3ce85], rax; add rsp, 8; ret; 
0x0000000000472cb1: test eax, eax; je 0x72cbf; lea rdx, [rip + 0x3ae04]; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x0000000000472f50: test eax, eax; je 0x72f60; pop rbx; pop rbp; pop r12; ret; 
0x000000000047505c: test eax, eax; je 0x75076; lea rbx, [rbp + rdx*8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000047d838: test eax, eax; je 0x7d848; mov edi, 1; jmp rax; 
0x0000000000480644: test eax, eax; je 0x8064a; call rax; 
0x0000000000480901: test eax, eax; je 0x8090c; call rax; 
0x000000000040fbf9: test eax, eax; je 0xfc0c; mov qword ptr [rax], 0; mov qword ptr [rax + 8], 0; ret; 
0x000000000044d9e8: test eax, eax; jle 0x4da10; sub eax, 1; mov dword ptr [rdx + 8], eax; pop rbx; ret; 
0x0000000000410904: test eax, eax; jne 0x108f8; ret; 
0x0000000000411df6: test eax, eax; jne 0x11e00; ret; 
0x0000000000413d0c: test eax, eax; jne 0x13d80; sub dword ptr [rip + 0x98a89], 1; pop rbp; ret; 
0x0000000000415fb3: test eax, eax; jne 0x15fe8; sub dword ptr [rip + 0x991c2], 1; pop rbx; ret; 
0x000000000041b61b: test eax, eax; jne 0x1b600; sub eax, ecx; vzeroupper; ret; 
0x000000000041fa80: test eax, eax; jne 0x1fa60; sub eax, ecx; vzeroupper; ret; 
0x000000000041fdc3: test eax, eax; jne 0x1fea0; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x000000000041fe65: test eax, eax; jne 0x1fec0; xor eax, eax; ret; 
0x000000000041fe35: test eax, eax; jne 0x1fee0; xor eax, eax; ret; 
0x00000000004200a1: test eax, eax; jne 0x200f0; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x00000000004202e1: test eax, eax; jne 0x20300; xor eax, eax; vzeroupper; ret; 
0x00000000004202a4: test eax, eax; jne 0x20340; xor eax, eax; vzeroupper; ret; 
0x0000000000439d60: test eax, eax; jne 0x39d74; nop word ptr cs:[rax + rax]; nop; xor rax, rax; ret; 
0x000000000043ea38: test eax, eax; jne 0x3ea50; syscall; 
0x000000000043ea38: test eax, eax; jne 0x3ea50; syscall; cmp rax, -0x1000; ja 0x3eaa0; ret; 
0x000000000043ead8: test eax, eax; jne 0x3eaf0; mov eax, 1; syscall; 
0x000000000043eba8: test eax, eax; jne 0x3ebc0; mov eax, 3; syscall; 
0x0000000000443b50: test eax, eax; jne 0x43bd0; mov rcx, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rcx; 
0x00000000004508e8: test eax, eax; jne 0x50918; sub dword ptr [rip + 0x5eced], 1; xor eax, eax; add rsp, 8; ret; 
0x000000000045e3bf: test eax, eax; jne 0x5e3b0; mov rax, r8; ret; 
0x00000000004607f1: test eax, eax; jne 0x60820; mov rax, r8; vzeroupper; ret; 
0x00000000004607b8: test eax, eax; jne 0x60860; mov rax, r8; vzeroupper; ret; 
0x0000000000461931: test eax, eax; jne 0x61960; mov rax, r8; shr rax, 2; vzeroupper; ret; 
0x0000000000467b85: test eax, eax; jne 0x67b8b; pop rbx; ret; 
0x000000000046b48f: test eax, eax; jne 0x6b4a8; mov qword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x41c66], 1; ret; 
0x00000000004726ef: test eax, eax; jne 0x72728; sub dword ptr [rip + 0x3cf8e], 1; mov eax, r8d; pop rbx; ret; 
0x00000000004734b3: test eax, eax; jne 0x73590; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000473555: test eax, eax; jne 0x735b0; xor eax, eax; ret; 
0x0000000000473525: test eax, eax; jne 0x735d0; xor eax, eax; ret; 
0x00000000004737d1: test eax, eax; jne 0x737f0; xor eax, eax; vzeroupper; ret; 
0x0000000000473794: test eax, eax; jne 0x73830; xor eax, eax; vzeroupper; ret; 
0x000000000047842f: test eax, eax; jne 0x78490; mov dword ptr [rsi], 0; mov eax, 2; ret; 
0x000000000047a803: test eax, eax; jne 0x7a70c; add rsp, 0x38; ret; 
0x000000000047f5d2: test eax, eax; jne 0x7f5e0; ret; 
0x000000000047f912: test eax, eax; jne 0x7f920; ret; 
0x000000000040ef2f: test eax, eax; jne 0xef20; mov rax, r8; ret; 
0x000000000040fb4c: test eax, eax; jne 0xfb40; ret; 
0x000000000044ff5c: test eax, eax; js 0x502c0; mov rdi, qword ptr [rsp + 8]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x0000000000418678: test eax, eax; lea rdx, [rip + 0x2479f]; lea rax, [rip + 0x24738]; cmovne rax, rdx; ret; 
0x000000000041865d: test eax, eax; lea rdx, [rip + 0x248ca]; lea rax, [rip + 0x24913]; cmove rax, rdx; ret; 
0x00000000004117c9: test eax, eax; mov eax, 0x10; cmovne rax, rdx; mov qword ptr [rip + 0x9d9bd], rax; ret; 
0x000000000044faff: test eax, eax; sete sil; xor eax, eax; mov dword ptr [rbx + 0x40], esi; pop rbx; ret; 
0x0000000000478603: test eax, eax; setne al; add rsp, 8; movzx eax, al; neg eax; ret; 
0x00000000004203bc: test eax, eax; tzcnt eax, eax; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x000000000040ce86: test eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x0000000000416453: test eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; call qword ptr [rax]; 
0x000000000040cd08: test eax, ebx; add byte ptr [rax], al; add byte ptr [rcx - 0x39], cl; mov byte ptr [rax + 0x48004adb], 0xc7; ret; 
0x000000000045755e: test eax, edi; idiv bh; inc esi; test eax, edx; idiv bh; jmp qword ptr [rax]; 
0x0000000000457564: test eax, edx; idiv bh; jmp qword ptr [rax]; 
0x0000000000480244: test ebp, ebp; jne 0x80230; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000421a4e: test ebp, ecx; or byte ptr [rax], al; add byte ptr [rip + 0xffff], ah; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000046db84: test ebp, edx; sbb eax, dword ptr [rax]; add byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x000000000041fda0: test ebx, ebx; add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; xlatb; ret 0xc085; 
0x000000000046a814: test ebx, ebx; je 0x6a804; mov rax, r8; mov qword ptr [r11], rdi; pop rbx; ret; 
0x000000000046851f: test ebx, ebx; jne 0x68525; call rax; 
0x000000000048028f: test ebx, ebx; jne 0x80268; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004803c3: test ebx, ebx; jne 0x803a8; pop rbx; ret; 
0x00000000004804d3: test ebx, ebx; jne 0x804bd; pop rbx; ret; 
0x000000000048098c: test ebx, ebx; jne 0x80970; pop rbx; pop rbp; pop r12; ret; 
0x0000000000439da2: test ecx, ebx; add dword ptr [rax], eax; add dh, dh; ret 0x7520; 
0x0000000000417434: test ecx, ecx; je 0x17440; lea rax, [rdx - 0x10]; ret; 
0x000000000046839d: test ecx, ecx; jne 0x683a3; call rax; 
0x000000000040bc26: test ecx, ecx; jne 0xbc38; mov eax, dword ptr [rdx + 0x4c]; cmp dword ptr [rdx + 0x48], eax; cmovne eax, ecx; ret; 
0x0000000000406c28: test edi, ebp; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000043eca1: test edi, edi; je 0x3ec7d; mov rbp, rdi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x000000000043f7e1: test edi, edi; je 0x3f820; mov r10d, ebx; mov rdi, rbp; mov eax, 9; syscall; 
0x0000000000440391: test edi, edi; je 0x4039a; test rsi, rsi; jne 0x403a0; ret; 
0x00000000004403b1: test edi, edi; je 0x403ba; test rsi, rsi; jne 0x403c0; ret; 
0x000000000044d9fd: test edi, edi; je 0x4d9df; call 0x6d2d0; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x00000000004808f8: test edi, edi; je 0x80911; mov rax, qword ptr [rdi + 0x20]; test rax, rax; je 0x8090c; call rax; 
0x000000000043fa4b: test edi, edi; jne 0x3fa76; mov rdi, qword ptr [rbp]; call rbx; 
0x0000000000418528: test edx, 0x400000; je 0x184fd; lea rax, [rip + 0x83d9]; test byte ptr [rip + 0x96dc7], 1; je 0x184fd; ret; 
0x0000000000417a7b: test edx, edx; je 0x17a84; mov qword ptr [rbx], rdx; xor eax, eax; pop rbx; ret; 
0x0000000000435452: test edx, edx; je 0x3545a; bsf eax, edx; ret; 
0x00000000004354fb: test edx, edx; je 0x35510; bsf rax, rdx; ret; 
0x000000000043549a: test edx, edx; je 0x35520; bsf rax, rdx; ret; 
0x000000000043bd56: test edx, edx; je 0x3bd30; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000000441af8: test edx, edx; je 0x41b08; lea rdi, [rcx + rsi + 0x20]; jmp rdx; 
0x00000000004604fa: test edx, edx; je 0x60520; bsf rax, rdx; ret; 
0x000000000046048a: test edx, edx; je 0x60530; bsf rax, rdx; ret; 
0x00000000004611aa: test edx, edx; je 0x611d0; bsf rax, rdx; shr rax, 2; ret; 
0x000000000046113e: test edx, edx; je 0x611e0; bsf rax, rdx; shr rax, 2; ret; 
0x0000000000410d04: test edx, edx; jne 0x10d10; sub dword ptr [rip + 0x9e401], 1; ret; 
0x0000000000411965: test edx, edx; jne 0x11948; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000043ce01: test edx, edx; jne 0x3ce09; mov rax, rdi; ret; 
0x000000000046109b: test edx, edx; jne 0x61090; ret; 
0x000000000046232d: test edx, edx; jne 0x62338; ret; 
0x0000000000468c13: test edx, edx; jne 0x68c19; call rax; 
0x0000000000468d4f: test edx, edx; jne 0x68d63; mov qword ptr [rbp - 0xd8], r11; call rax; 
0x00000000004727c2: test edx, edx; jne 0x727d0; sub dword ptr [rdi], 1; ret; 
0x00000000004782c6: test edx, edx; jne 0x782f0; mov dword ptr [rsi], 0; mov eax, 1; ret; 
0x000000000047a9b4: test edx, edx; jne 0x7a9e1; add rsp, 0x38; pop rbx; pop r14; ret; 
0x000000000040dc91: test edx, edx; jne 0xdca0; xor eax, eax; ret; 
0x000000000040e6d8: test edx, edx; jne 0xe6e8; sub dword ptr [rip + 0xa0a2d], 1; ret; 
0x000000000047281f: test esi, ecx; add eax, dword ptr [rax]; add rsp, 8; ret; 
0x0000000000439d95: test esi, edx; add dword ptr [rax], eax; add dh, dh; ret 0x7510; 
0x000000000040228c: test esi, esi; add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; push rax; and byte ptr [rax + 1], cl; ret 0xb70f; 
0x000000000044d9b0: test esi, esi; je 0x4d9c0; cmp esi, 3; je 0x4d9c0; ret; 
0x0000000000440396: test esi, esi; jne 0x403a0; ret; 
0x00000000004403b6: test esi, esi; jne 0x403c0; ret; 
0x000000000044fae4: test esi, esi; jne 0x4faf0; mov dword ptr [rbx + 0x40], esi; xor eax, eax; pop rbx; ret; 
0x000000000045f147: test esi, esi; jne 0x5f190; lea rdx, [r8 + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x00000000004603f1: test esi, esi; jne 0x603f9; xor rax, rax; ret; 
0x00000000004610a1: test esi, esi; jne 0x610a9; xor rax, rax; ret; 
0x0000000000467f6a: test esi, esi; jne 0x67f70; call rax; 
0x0000000000478369: test esi, esi; jne 0x7835e; cmp cx, 0x7fff; jne 0x78358; mov eax, 1; ret; 
0x0000000000478354: test esi, esi; jne 0x78380; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x0000000000458391: test esp, ebp; idiv bh; inc dword ptr [rbp - 0x7b]; ror byte ptr [rdi], 0x84; ret; 
0x0000000000439daf: test esp, ebx; add dword ptr [rax], eax; add dh, dh; ret 0x7540; 
0x0000000000423fa2: test qword ptr [rbx - 0x76b703aa], 0x5789f74f; cld; ret; 
0x0000000000468d4e: test r10d, r10d; jne 0x68d63; mov qword ptr [rbp - 0xd8], r11; call rax; 
0x000000000047a9b3: test r10d, r10d; jne 0x7a9e1; add rsp, 0x38; pop rbx; pop r14; ret; 
0x000000000046a813: test r11, r11; je 0x6a804; mov rax, r8; mov qword ptr [r11], rdi; pop rbx; ret; 
0x000000000046851e: test r11d, r11d; jne 0x68525; call rax; 
0x000000000041f667: test r8d, r8d; je 0x1f66d; xchg eax, edx; sub eax, edx; ret; 
0x000000000047a802: test r8d, r8d; jne 0x7a70c; add rsp, 0x38; ret; 
0x000000000047cf40: test rax, rax; cmovne rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000040100b: test rax, rax; je 0x1012; call rax; 
0x000000000040100b: test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x0000000000413ac1: test rax, rax; je 0x139b1; mov qword ptr [rsp + 0x10], rdx; mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp], rdi; call rax; 
0x0000000000401be2: test rax, rax; je 0x1bf0; mov edi, 0x4adb30; jmp rax; 
0x0000000000401c24: test rax, rax; je 0x1c30; mov edi, 0x4adb30; jmp rax; 
0x000000000043f757: test rax, rax; je 0x3f75d; ret; 
0x000000000044e14c: test rax, rax; je 0x4e153; call rax; 
0x000000000044e38e: test rax, rax; je 0x4e395; call rax; 
0x000000000044f318: test rax, rax; je 0x4f31f; call rax; 
0x0000000000461aa3: test rax, rax; je 0x61ad8; call rax; 
0x000000000046d4ce: test rax, rax; je 0x6d4dd; lea rcx, [rip + 0x405a6]; mov qword ptr [rax], rcx; pop rbp; ret; 
0x0000000000472cb0: test rax, rax; je 0x72cbf; lea rdx, [rip + 0x3ae04]; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x0000000000472f4f: test rax, rax; je 0x72f60; pop rbx; pop rbp; pop r12; ret; 
0x000000000047d837: test rax, rax; je 0x7d848; mov edi, 1; jmp rax; 
0x0000000000480643: test rax, rax; je 0x8064a; call rax; 
0x0000000000480900: test rax, rax; je 0x8090c; call rax; 
0x000000000040fbf8: test rax, rax; je 0xfc0c; mov qword ptr [rax], 0; mov qword ptr [rax + 8], 0; ret; 
0x0000000000410903: test rax, rax; jne 0x108f8; ret; 
0x000000000045e3be: test rax, rax; jne 0x5e3b0; mov rax, r8; ret; 
0x000000000047842e: test rax, rax; jne 0x78490; mov dword ptr [rsi], 0; mov eax, 2; ret; 
0x000000000040ef2e: test rax, rax; jne 0xef20; mov rax, r8; ret; 
0x000000000040fb4b: test rax, rax; jne 0xfb40; ret; 
0x00000000004117c8: test rax, rax; mov eax, 0x10; cmovne rax, rdx; mov qword ptr [rip + 0x9d9bd], rax; ret; 
0x0000000000480243: test rbp, rbp; jne 0x80230; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000048028e: test rbx, rbx; jne 0x80268; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004803c2: test rbx, rbx; jne 0x803a8; pop rbx; ret; 
0x00000000004804d2: test rbx, rbx; jne 0x804bd; pop rbx; ret; 
0x000000000048098b: test rbx, rbx; jne 0x80970; pop rbx; pop rbp; pop r12; ret; 
0x0000000000417433: test rcx, rcx; je 0x17440; lea rax, [rdx - 0x10]; ret; 
0x000000000043eca0: test rdi, rdi; je 0x3ec7d; mov rbp, rdi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x000000000043f7e0: test rdi, rdi; je 0x3f820; mov r10d, ebx; mov rdi, rbp; mov eax, 9; syscall; 
0x0000000000440390: test rdi, rdi; je 0x4039a; test rsi, rsi; jne 0x403a0; ret; 
0x00000000004403b0: test rdi, rdi; je 0x403ba; test rsi, rsi; jne 0x403c0; ret; 
0x000000000044d9fc: test rdi, rdi; je 0x4d9df; call 0x6d2d0; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x00000000004808f7: test rdi, rdi; je 0x80911; mov rax, qword ptr [rdi + 0x20]; test rax, rax; je 0x8090c; call rax; 
0x000000000043fa4a: test rdi, rdi; jne 0x3fa76; mov rdi, qword ptr [rbp]; call rbx; 
0x0000000000417a7a: test rdx, rdx; je 0x17a84; mov qword ptr [rbx], rdx; xor eax, eax; pop rbx; ret; 
0x00000000004354fa: test rdx, rdx; je 0x35510; bsf rax, rdx; ret; 
0x0000000000435499: test rdx, rdx; je 0x35520; bsf rax, rdx; ret; 
0x0000000000441af7: test rdx, rdx; je 0x41b08; lea rdi, [rcx + rsi + 0x20]; jmp rdx; 
0x00000000004604f9: test rdx, rdx; je 0x60520; bsf rax, rdx; ret; 
0x0000000000460489: test rdx, rdx; je 0x60530; bsf rax, rdx; ret; 
0x00000000004611a9: test rdx, rdx; je 0x611d0; bsf rax, rdx; shr rax, 2; ret; 
0x000000000046113d: test rdx, rdx; je 0x611e0; bsf rax, rdx; shr rax, 2; ret; 
0x0000000000411964: test rdx, rdx; jne 0x11948; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000043ce00: test rdx, rdx; jne 0x3ce09; mov rax, rdi; ret; 
0x00000000004782c5: test rdx, rdx; jne 0x782f0; mov dword ptr [rsi], 0; mov eax, 1; ret; 
0x000000000040dc90: test rdx, rdx; jne 0xdca0; xor eax, eax; ret; 
0x0000000000440395: test rsi, rsi; jne 0x403a0; ret; 
0x00000000004403b5: test rsi, rsi; jne 0x403c0; ret; 
0x00000000004603f0: test rsi, rsi; jne 0x603f9; xor rax, rax; ret; 
0x00000000004610a0: test rsi, rsi; jne 0x610a9; xor rax, rax; ret; 
0x0000000000478368: test rsi, rsi; jne 0x7835e; cmp cx, 0x7fff; jne 0x78358; mov eax, 1; ret; 
0x0000000000478353: test rsi, rsi; jne 0x78380; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x000000000043fadf: test sil, 1; jne 0x3fb00; ret; 
0x000000000047aea7: test sil, sil; jns 0x7ae52; mov rdx, qword ptr [rdx]; mov qword ptr [r9], rdx; pop rbx; ret; 
0x0000000000446234: test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x00000000004356d0: tzcnt eax, eax; add rax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000420380: tzcnt eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x00000000004356f0: tzcnt eax, eax; add rax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000420390: tzcnt eax, eax; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x000000000043573c: tzcnt eax, eax; add rax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000004203be: tzcnt eax, eax; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000004352a3: tzcnt eax, eax; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x0000000000435605: tzcnt eax, eax; add rax, rdi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000000420415: tzcnt eax, eax; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000000461690: tzcnt eax, eax; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x00000000004356c0: tzcnt eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000420370: tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000004202f0: tzcnt eax, eax; cmp rdx, rax; jbe 0x20360; add rax, rdi; vzeroupper; ret; 
0x00000000004737e0: tzcnt eax, eax; cmp rdx, rax; jbe 0x73850; add rax, rdi; vzeroupper; ret; 
0x0000000000420cb0: tzcnt ecx, eax; movzx eax, byte ptr [rdi + rcx + 0x20]; movzx edx, byte ptr [rsi + rcx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000420cd0: tzcnt ecx, eax; movzx eax, byte ptr [rdi + rcx + 0x40]; movzx edx, byte ptr [rsi + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000420c96: tzcnt ecx, eax; movzx eax, byte ptr [rdi + rcx + 0x60]; movzx edx, byte ptr [rsi + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000000420a20: tzcnt ecx, eax; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000041b493: tzcnt ecx, edi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000041b4f8: tzcnt ecx, esi; movzx eax, byte ptr [rax + rcx + 0x60]; movzx edx, byte ptr [rdx + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x000000000041b4bc: tzcnt edi, ecx; movzx eax, byte ptr [rax + rdi + 0x20]; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000041b4dc: tzcnt edi, ecx; movzx eax, byte ptr [rax + rdi + 0x40]; movzx edx, byte ptr [rdx + rdi + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000041b330: tzcnt edx, ecx; movzx eax, byte ptr [rdi + rdx + 0x20]; movzx edx, byte ptr [rsi + rdx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000041b350: tzcnt edx, ecx; movzx eax, byte ptr [rdi + rdx + 0x40]; movzx edx, byte ptr [rsi + rdx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000041b370: tzcnt edx, ecx; movzx eax, byte ptr [rdi + rdx + 0x60]; movzx edx, byte ptr [rsi + rdx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x000000000041b312: tzcnt edx, ecx; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x000000000041b562: tzcnt rcx, rdi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000043c101: ud0; lea rsi, [rsi + rcx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x00000000004278f8: ud2; lea r11, [rip + 0x5b88f]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043d025: vmovdqa ymmword ptr [rcx + 0x60], ymm0; add rcx, 0x80; cmp rdx, rcx; jne 0x3d017; vzeroupper; ret; 
0x000000000042cffd: vmovdqu xmm0, xmmword ptr [rsi]; vmovdqu xmm1, xmmword ptr [rcx - 0x10]; vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [r9 - 0x10], xmm1; ret; 
0x000000000043c4de: vmovdqu xmm0, xmmword ptr [rsi]; vmovdqu xmm1, xmmword ptr [rsi + rdx - 0x10]; vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000042d001: vmovdqu xmm1, xmmword ptr [rcx - 0x10]; vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [r9 - 0x10], xmm1; ret; 
0x000000000043c4e2: vmovdqu xmm1, xmmword ptr [rsi + rdx - 0x10]; vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000435aa0: vmovdqu xmm2, xmmword ptr [rsi]; vmovdqu xmm3, xmmword ptr [rsi + rdx - 0xf]; vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; vzeroupper; ret; 
0x0000000000420b41: vmovdqu xmm2, xmmword ptr [rsi]; vpcmpeqb xmm2, xmm2, xmmword ptr [rdi]; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x20a20; ret; 
0x0000000000439cb4: vmovdqu xmm3, xmmword ptr [rsi + rdx - 0xf]; vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000435aa4: vmovdqu xmm3, xmmword ptr [rsi + rdx - 0xf]; vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; vzeroupper; ret; 
0x000000000042d00a: vmovdqu xmmword ptr [r9 - 0x10], xmm1; ret; 
0x000000000043d05b: vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm0; vmovdqu xmmword ptr [rdi], xmm0; vzeroupper; ret; 
0x000000000043c4ec: vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000439cbe: vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000435aae: vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; vzeroupper; ret; 
0x000000000042d006: vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [r9 - 0x10], xmm1; ret; 
0x000000000043c4e8: vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000043beb5: vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [rsi - 0x10], xmm0; ret; 
0x000000000043d061: vmovdqu xmmword ptr [rdi], xmm0; vzeroupper; ret; 
0x0000000000439cba: vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000435aaa: vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; vzeroupper; ret; 
0x000000000043beb9: vmovdqu xmmword ptr [rsi - 0x10], xmm0; ret; 
0x000000000042cfe9: vmovdqu ymm0, ymmword ptr [rsi]; vmovdqu ymm1, ymmword ptr [rcx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x000000000043c447: vmovdqu ymm0, ymmword ptr [rsi]; vmovdqu ymm1, ymmword ptr [rsi + rdx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1; vzeroupper; ret; 
0x000000000042cfed: vmovdqu ymm1, ymmword ptr [rcx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x000000000043c44b: vmovdqu ymm1, ymmword ptr [rsi + rdx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1; vzeroupper; ret; 
0x0000000000435ac0: vmovdqu ymm2, ymmword ptr [rsi]; vmovdqu ymm3, ymmword ptr [rsi + rdx - 0x1f]; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; vzeroupper; ret; 
0x000000000042cfc9: vmovdqu ymm3, ymmword ptr [rcx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + 0x20], ymm1; vmovdqu ymmword ptr [r9 - 0x40], ymm2; vmovdqu ymmword ptr [r9 - 0x20], ymm3; ret; 
0x0000000000439cd4: vmovdqu ymm3, ymmword ptr [rsi + rdx - 0x1f]; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000435ac4: vmovdqu ymm3, ymmword ptr [rsi + rdx - 0x1f]; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; vzeroupper; ret; 
0x000000000043cf4b: vmovdqu ymmword ptr [edi + edx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x000000000043c678: vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x000000000043c71f: vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x000000000042cff6: vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x000000000042cfdd: vmovdqu ymmword ptr [r9 - 0x20], ymm3; ret; 
0x000000000042cfd7: vmovdqu ymmword ptr [r9 - 0x40], ymm2; vmovdqu ymmword ptr [r9 - 0x20], ymm3; ret; 
0x000000000043c669: vmovdqu ymmword ptr [rcx - 0x20], ymm6; vmovdqu ymmword ptr [rcx - 0x40], ymm7; vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x000000000043c66e: vmovdqu ymmword ptr [rcx - 0x40], ymm7; vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x000000000043c673: vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x000000000043cfc0: vmovdqu ymmword ptr [rdi + 0x20], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0; vzeroupper; ret; 
0x000000000042cfd2: vmovdqu ymmword ptr [rdi + 0x20], ymm1; vmovdqu ymmword ptr [r9 - 0x40], ymm2; vmovdqu ymmword ptr [r9 - 0x20], ymm3; ret; 
0x000000000043c5b8: vmovdqu ymmword ptr [rdi + 0x20], ymm1; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3; vzeroupper; ret; 
0x000000000043c710: vmovdqu ymmword ptr [rdi + 0x20], ymm5; vmovdqu ymmword ptr [rdi + 0x40], ymm6; vmovdqu ymmword ptr [rdi + 0x60], ymm7; vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x000000000043c715: vmovdqu ymmword ptr [rdi + 0x40], ymm6; vmovdqu ymmword ptr [rdi + 0x60], ymm7; vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x000000000043c71a: vmovdqu ymmword ptr [rdi + 0x60], ymm7; vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x0000000000439cde: vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000435ace: vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; vzeroupper; ret; 
0x000000000043cfc5: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0; vzeroupper; ret; 
0x000000000043cf4c: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x000000000043c455: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1; vzeroupper; ret; 
0x000000000043c5bd: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3; vzeroupper; ret; 
0x000000000043c583: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm4; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm5; vmovdqu ymmword ptr [rdi + rdx - 0x60], ymm6; vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7; vzeroupper; ret; 
0x000000000043cfcb: vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0; vzeroupper; ret; 
0x000000000043c5c3: vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3; vzeroupper; ret; 
0x000000000043c589: vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm5; vmovdqu ymmword ptr [rdi + rdx - 0x60], ymm6; vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7; vzeroupper; ret; 
0x000000000043c58f: vmovdqu ymmword ptr [rdi + rdx - 0x60], ymm6; vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7; vzeroupper; ret; 
0x000000000043c595: vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7; vzeroupper; ret; 
0x000000000042cff2: vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x000000000043cfbc: vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + 0x20], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0; vzeroupper; ret; 
0x000000000042cfce: vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + 0x20], ymm1; vmovdqu ymmword ptr [r9 - 0x40], ymm2; vmovdqu ymmword ptr [r9 - 0x20], ymm3; ret; 
0x000000000043c5b4: vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + 0x20], ymm1; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3; vzeroupper; ret; 
0x000000000043c451: vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1; vzeroupper; ret; 
0x000000000043cf52: vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x0000000000439cda: vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000435aca: vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; vzeroupper; ret; 
0x000000000043beab: vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x000000000043beaf: vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x000000000043c87a: vmovdqu64 zmm0, zmmword ptr [rsi]; vmovdqu64 zmm1, zmmword ptr [rsi + rdx - 0x40]; vmovdqu64 zmmword ptr [rdi], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1; vzeroupper; ret; 
0x000000000043c880: vmovdqu64 zmm1, zmmword ptr [rsi + rdx - 0x40]; vmovdqu64 zmmword ptr [rdi], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1; vzeroupper; ret; 
0x000000000043cb32: vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000043cbf8: vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000043cb2b: vmovdqu64 zmmword ptr [rcx - 0xc0], zmm8; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000043d15f: vmovdqu64 zmmword ptr [rdi + 0x40], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm0; vzeroupper; ret; 
0x000000000043ca4a: vmovdqu64 zmmword ptr [rdi + 0x40], zmm1; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm2; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm3; vzeroupper; ret; 
0x000000000043cbf1: vmovdqu64 zmmword ptr [rdi + 0xc0], zmm7; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000043ca1b: vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7; vzeroupper; ret; 
0x000000000043d166: vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm0; vzeroupper; ret; 
0x000000000043d0d5: vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000043c88e: vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1; vzeroupper; ret; 
0x000000000043ca51: vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm2; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm3; vzeroupper; ret; 
0x000000000043d16e: vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm0; vzeroupper; ret; 
0x000000000043ca59: vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm3; vzeroupper; ret; 
0x000000000043d159: vmovdqu64 zmmword ptr [rdi], zmm0; vmovdqu64 zmmword ptr [rdi + 0x40], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm0; vzeroupper; ret; 
0x000000000043ca44: vmovdqu64 zmmword ptr [rdi], zmm0; vmovdqu64 zmmword ptr [rdi + 0x40], zmm1; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm2; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm3; vzeroupper; ret; 
0x000000000043c888: vmovdqu64 zmmword ptr [rdi], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1; vzeroupper; ret; 
0x000000000043d0dd: vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000043bec4: vmovq qword ptr [rdi], xmm0; vmovq qword ptr [rsi - 8], xmm0; ret; 
0x000000000043bec8: vmovq qword ptr [rsi - 8], xmm0; ret; 
0x000000000042d305: vmovups zmmword ptr [r9 + 0x140], zmm13; vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000042d30c: vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000042d313: vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000042cf5d: vmovups zmmword ptr [r9 - 0x100], zmm4; vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000042d1ac: vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000042cfae: vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000042cf72: vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000042d1a5: vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000042cfa7: vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000042cf6b: vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000042d19e: vmovups zmmword ptr [r9 - 0xc0], zmm13; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000042cf64: vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000042cfa0: vmovups zmmword ptr [rdi + 0x40], zmm1; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000043be7d: vmovups zmmword ptr [rdi + 0x40], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000042d460: vmovups zmmword ptr [rdi - 0x140], zmm12; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000042d467: vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000042d46e: vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000042d475: vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000043be98: vmovups zmmword ptr [rdi], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043c05a: vmovups zmmword ptr [rsi + 0x140], zmm2; vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000043c061: vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000043c068: vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000043bfbd: vmovups zmmword ptr [rsi + 0x40], zmm2; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000043bfc4: vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000043bfcb: vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000043be6a: vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043be63: vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043be5c: vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004209cc: vpand ymm5, ymm5, ymm4; vptest ymm5, ymm0; jae 0x20c70; xor eax, eax; vzeroupper; ret; 
0x0000000000420b07: vpcmpeqb xmm2, xmm2, xmm1; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x20a20; ret; 
0x0000000000420b45: vpcmpeqb xmm2, xmm2, xmmword ptr [rdi]; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x20a20; ret; 
0x0000000000420b0b: vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x20a20; ret; 
0x00000000004202dd: vpmovmskb eax, ymm1; test eax, eax; jne 0x20300; xor eax, eax; vzeroupper; ret; 
0x00000000004607ed: vpmovmskb eax, ymm1; test eax, eax; jne 0x60820; mov rax, r8; vzeroupper; ret; 
0x00000000004737cd: vpmovmskb eax, ymm1; test eax, eax; jne 0x737f0; xor eax, eax; vzeroupper; ret; 
0x0000000000420a13: vpmovmskb eax, ymm2; sub eax, -1; jne 0x20a20; vzeroupper; ret; 
0x00000000004209d0: vptest ymm5, ymm0; jae 0x20c70; xor eax, eax; vzeroupper; ret; 
0x000000000041b320: vzeroupper; ret; 
0x0000000000420360: vzeroupper; xor eax, eax; ret; 
0x000000000041fc51: wait; add al, byte ptr [rax]; add byte ptr [rax + 1], cl; clc; add rax, rcx; ret; 
0x000000000047ab92: wait; and edi, 0x20; je 0x7aba8; movss xmm0, dword ptr [rip + 0x21a98]; divss xmm0, dword ptr [rip + 0x21a94]; ret; 
0x000000000043e251: wait; cld; jmp qword ptr [rsi + 0x2e]; 
0x0000000000418931: wait; jp 0x18934; add byte ptr [rax - 0x73], cl; add eax, 0x75c4; cmove rax, rdx; ret; 
0x0000000000438f31: wait; lodsd eax, dword ptr [rsi]; add al, 0; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000004764b7: wait; mov eax, 0xc48348ff; sbb byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000417b31: wait; rol byte ptr [rcx], 1; add byte ptr [rax - 0x73], cl; adc eax, 0x221b4; cmovne rax, rdx; ret; 
0x000000000041ecb3: xchg ah, bl; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x00000000004328ff: xchg ah, bl; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041eda3: xchg ah, ch; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000041ebc3: xchg ah, cl; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000472b26: xchg al, ah; cld; jmp qword ptr [rsi + 0xf]; 
0x000000000045e82b: xchg al, bh; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 2], al; mov rdi, r13; call qword ptr [rbx + 0x18]; 
0x000000000043454c: xchg bh, bh; add eax, 0x83480000; ret 0x4910; 
0x000000000044981c: xchg bh, bl; add byte ptr [rax], al; add byte ptr [rbp - 0x77], cl; ret; 
0x0000000000433d6c: xchg bh, bl; or eax, 0x83480000; ret 0x4910; 
0x000000000043415c: xchg bh, ch; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043397c: xchg bh, cl; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043d2f2: xchg byte ptr [rax + 1], cl; int1; jmp rcx; 
0x000000000041f60b: xchg byte ptr [rax + rax - 0x7cb80000], al; ret 0xeb10; 
0x000000000043345f: xchg byte ptr [rax + rax], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000449a34: xchg byte ptr [rax + rcx - 0x157f0000], dl; ret 0; 
0x0000000000432c3f: xchg byte ptr [rax + rcx - 0x7cb80000], bl; ret 0xe910; 
0x000000000043241f: xchg byte ptr [rax + rdx - 0x7cb80000], bh; ret 0xe910; 
0x00000000004767a9: xchg byte ptr [rax - 0x77], cl; ret 0x294c; 
0x000000000041f163: xchg byte ptr [rax - 0x7cb80000], ch; ret 0xeb10; 
0x0000000000433b1b: xchg byte ptr [rax], dh; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000432f7f: xchg byte ptr [rbp + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041e8f3: xchg byte ptr [rbp + rcx - 0x7cb80000], bl; ret 0xeb10; 
0x000000000043275f: xchg byte ptr [rbp + rcx], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000431f3f: xchg byte ptr [rbp + rdx - 0x7cb80000], bl; ret 0xe910; 
0x000000000041fc50: xchg byte ptr [rbx + 0x48000002], bl; add eax, edi; add rax, rcx; ret; 
0x000000000045b01a: xchg byte ptr [rbx + 0xf], cl; add byte ptr [rax], al; mov rdx, rbx; mov rsi, r9; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x0000000000452e82: xchg byte ptr [rbx + 8], dh; add byte ptr [rax], al; mov rdx, rbx; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000043311f: xchg byte ptr [rbx + rax - 0x7cb80000], bh; ret 0xe910; 
0x000000000041f343: xchg byte ptr [rbx + rax], cl; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000041ead3: xchg byte ptr [rbx + rcx - 0x7cb80000], bh; ret 0xeb10; 
0x000000000044dc25: xchg byte ptr [rbx], al; add al, ch; ret; 
0x000000000047bb79: xchg byte ptr [rcx + rax - 0x10], cl; jmp rax; 
0x000000000041f523: xchg byte ptr [rcx + rax], ch; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000040dad6: xchg byte ptr [rcx], dl; add byte ptr [rax], al; mov dword ptr [rbx + 0x70], 0xffffffff; pop rbx; ret; 
0x00000000004524e4: xchg byte ptr [rdi + 0x11], dh; add byte ptr [rax], al; mov rdx, rbx; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000452b2d: xchg byte ptr [rdi], al; or dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x1e], cl; mov rsi, r13; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x000000000043400c: xchg byte ptr [rdi], bh; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043382c: xchg byte ptr [rdi], bl; adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043493c: xchg byte ptr [rdi], cl; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000452839: xchg byte ptr [rdx + 0x4c00000b], dl; mov edx, esp; mov rsi, r13; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x00000000004094e1: xchg byte ptr [rdx + 1], bl; add byte ptr [rax], al; xor esi, esi; mov rdi, rbp; call qword ptr [rbx + 0x10]; 
0x000000000041f433: xchg byte ptr [rdx + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000043227f: xchg byte ptr [rdx + rdx], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041ed75: xchg byte ptr [rdx], bl; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000041ee65: xchg byte ptr [rdx], ch; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000040d4e9: xchg byte ptr [rdx], cl; add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 6], cl; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x000000000041ec85: xchg byte ptr [rdx], cl; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000042b037: xchg byte ptr [rip + 0x14634900], al; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004323b5: xchg byte ptr [rsi], ah; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004330b5: xchg byte ptr [rsi], ah; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000432bd5: xchg byte ptr [rsi], al; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000433f0d: xchg byte ptr [rsi], bh; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000043483d: xchg byte ptr [rsi], cl; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004490b0: xchg byte ptr [rsi], dl; add al, byte ptr [rax]; add byte ptr [rbp + 0xe880fd2], al; add al, byte ptr [rax]; add bh, dh; ret 0xf800; 
0x000000000041e9e3: xchg byte ptr [rsp + rcx - 0x7cb80000], ch; ret 0xeb10; 
0x00000000004333f5: xchg dh, ah; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004326f5: xchg dh, ah; or eax, 0x83480000; ret 0x4910; 
0x0000000000432215: xchg dh, al; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000432f15: xchg dh, al; add eax, 0x83480000; ret 0x4910; 
0x000000000043405d: xchg dh, ch; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000043387d: xchg dh, cl; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041eb95: xchg dl, bh; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000041e9b5: xchg dl, bl; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000041eaa5: xchg dl, ch; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000041e8c5: xchg dl, cl; or eax, 0x83480000; ret 0x4910; 
0x000000000045e952: xchg dword ptr [rax + 0x48000000], esp; cmp dword ptr [rax + 0x30], 0; je 0x5e960; ret; 
0x0000000000468ac9: xchg dword ptr [rax + 0x48000008], esp; lea edi, [rip + 0x2d7e3]; movsxd rax, dword ptr [rdi + r12*4]; add rax, rdi; jmp rax; 
0x000000000040df2c: xchg dword ptr [rax + 1], ecx; clc; jmp rax; 
0x000000000043d2ad: xchg dword ptr [rax + 1], esi; add byte ptr [rax], al; lea rsi, [rip + 0x46b87]; movsxd rax, dword ptr [rsi + rdi*4]; add rax, rsi; jmp rax; 
0x0000000000417715: xchg dword ptr [rax + 9], edx; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000418501: xchg dword ptr [rax], eax; add bh, dh; ret 0; 
0x000000000046b5ff: xchg dword ptr [rax], eax; add byte ptr [rcx - 0x77], cl; ret; 
0x00000000004681fa: xchg dword ptr [rax], ebx; add al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000044ee33: xchg dword ptr [rax], edi; add dword ptr [rax], eax; add byte ptr [rdx + 0x63], cl; or al, 0x8f; add rcx, rdi; jmp rcx; 
0x0000000000413d5c: xchg dword ptr [rbp + 0x31], eax; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x98a2a]; syscall; 
0x00000000004544de: xchg dword ptr [rbp - 0x76ffffe8], esi; ret 0xc083; 
0x000000000043d2b5: xchg dword ptr [rbx + 4], ebp; add byte ptr [rax + 0x63], cl; add al, 0xbe; add rax, rsi; jmp rax; 
0x000000000045a35e: xchg dword ptr [rbx - 0x76ffffe6], ebx; ret 0xc083; 
0x000000000045d22a: xchg dword ptr [rcx + 1], esi; add byte ptr [rax], al; lea rcx, [rip + 0x37fae]; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x00000000004574ba: xchg dword ptr [rcx + 8], esp; add byte ptr [rax], al; movsxd rcx, dword ptr [rdx + rcx*4]; add rcx, rdx; jmp rcx; 
0x000000000047b8ec: xchg dword ptr [rcx + rax - 8], ecx; jmp rax; 
0x0000000000409eea: xchg dword ptr [rcx - 0x77], ecx; shr cl, 0x13; jne 0x9ef1; jmp qword ptr [rsi + 0x2e]; 
0x000000000043d53a: xchg dword ptr [rcx], esi; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000046821c: xchg dword ptr [rdi + 0x48000004], ecx; lea esi, [rip + 0x2dff8]; movsxd rax, dword ptr [rsi + r12*4]; add rax, rsi; jmp rax; 
0x00000000004727d0: xchg dword ptr [rdi], eax; cmp eax, 1; jg 0x727d8; ret; 
0x0000000000454ddc: xchg dword ptr [rdx - 0x16000010], ebx; cmpsd dword ptr [rsi], dword ptr [rdi]; idiv bh; jmp qword ptr [rsi + 0x2e]; 
0x0000000000406514: xchg dword ptr [rdx], ecx; add byte ptr [rdi], cl; add eax, 0xfffefbe9; jmp qword ptr [rsi - 0x70]; 
0x000000000042aeb7: xchg dword ptr [rip + 0x14634900], eax; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000410d10: xchg dword ptr [rip + 0x9e3fa], eax; cmp eax, 1; jg 0x10d1c; ret; 
0x000000000040e6e8: xchg dword ptr [rip + 0xa0a22], eax; cmp eax, 1; jg 0xe723; ret; 
0x00000000004651ec: xchg dword ptr [rip - 0x76fffffd], ebx; ret 0xe8c0; 
0x000000000045ad05: xchg dword ptr [rsi - 0x76fffff0], edx; ret 0xc083; 
0x000000000046b5fe: xchg dword ptr cs:[rax], eax; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000047b151: xchg eax, ebp; add byte ptr [rcx + rax - 0x18], cl; jmp rax; 
0x00000000004422d4: xchg eax, ebp; call 0xfffffffff60422dd; ret 0x7402; 
0x0000000000458ab2: xchg eax, ebp; clc; idiv bh; dec dword ptr [rax + 0x39]; ret 0x850f; 
0x0000000000418967: xchg eax, ebp; imul ecx, dword ptr [rcx], 0xd0394800; lea rdx, [rip + 0x1c8bb]; lea rax, [rip + 0x1c474]; cmove rax, rdx; ret; 
0x0000000000472ba5: xchg eax, ebp; rcr byte ptr [rbx + 0xf], 0xb6; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000047a968: xchg eax, ebp; ret 0x145; 
0x0000000000469643: xchg eax, ebp; ret 0x2148; 
0x000000000045d604: xchg eax, ebp; ret 0x5389; 
0x000000000041521d: xchg eax, ebp; ret 0x8348; 
0x000000000043ed7b: xchg eax, ebp; ret 0x8948; 
0x000000000044275e: xchg eax, ebp; ret 0x8d48; 
0x000000000047aa1a: xchg eax, ebp; ret 0x94c; 
0x0000000000414f70: xchg eax, ebp; ret 0xb60f; 
0x0000000000464bf0: xchg eax, ebp; ret 0xc031; 
0x0000000000402878: xchg eax, ebp; ret; 
0x0000000000473fc2: xchg eax, ebp; rol byte ptr [rdx], 0; add byte ptr [rcx + 0x148b48d8], cl; ret 0xb60f; 
0x0000000000478606: xchg eax, ebp; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x0000000000413e53: xchg eax, ebp; ror byte ptr [rdi], 0xb6; rol byte ptr [rbp + 0xfcd75c0], 0x1f; add byte ptr [rax - 0x39], cl; ret; 
0x000000000040dcae: xchg eax, ebp; ror byte ptr [rdi], 0xb6; sal bh, 0xd8; ret; 
0x000000000040a840: xchg eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x000000000042a53d: xchg eax, ebx; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422879: xchg eax, ebx; add eax, 0x63490006; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000420d10: xchg eax, ebx; add rcx, r11; jmp rcx; 
0x0000000000459a1b: xchg eax, ebx; cli; jmp qword ptr [rsi - 0x70]; 
0x000000000045a2e9: xchg eax, ebx; inc byte ptr [rax + rax]; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x0000000000438e7c: xchg eax, ebx; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000004224b2: xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000040a19b: xchg eax, ebx; nop; add byte ptr [rax], al; add byte ptr [rcx + 1], cl; ret; 
0x000000000045d239: xchg eax, ecx; add rdx, rcx; jmp rdx; 
0x0000000000433501: xchg eax, ecx; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000041600b: xchg eax, ecx; or dword ptr [rax], eax; syscall; 
0x000000000041600b: xchg eax, ecx; or dword ptr [rax], eax; syscall; pop rbx; ret; 
0x000000000042d5a6: xchg eax, ecx; sar ch, 0xff; jmp qword ptr [rdx - 0xf]; 
0x0000000000431c2f: xchg eax, ecx; sub eax, edx; ret; 
0x0000000000442890: xchg eax, edi; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000422a75: xchg eax, edi; add eax, dword ptr [rsi]; add byte ptr [rcx + 0x63], cl; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000477462: xchg eax, edi; cld; jmp qword ptr [rsi + 0x2e]; 
0x00000000004099fa: xchg eax, edi; fadd dword ptr [rax]; add byte ptr [rax], al; mov rdx, qword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x00000000004478fb: xchg eax, edi; in al, 3; add al, ch; in al, dx; mov ah, 0xfb; jmp qword ptr [rsi + 0x66]; 
0x0000000000409a01: xchg eax, edi; movabs al, byte ptr [0xe08a8948000000]; add byte ptr [rax], al; ret; 
0x0000000000442f64: xchg eax, edi; ret; 
0x000000000045ef95: xchg eax, edi; sar edx, 1; dec dword ptr [rbx - 0x14f3db8c]; ret; 
0x0000000000425835: xchg eax, edi; xlatb; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000414568: xchg eax, edi; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000042a3bf: xchg eax, edx; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000456502: xchg eax, edx; fcos; jmp qword ptr [rsi + 0x2e]; 
0x0000000000434b67: xchg eax, edx; lea rcx, [rip + 0x52971]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x00000000004334f7: xchg eax, edx; lea rcx, [rip + 0x53fe1]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x00000000004705da: xchg eax, edx; lock add eax, dword ptr [rax]; syscall; 
0x000000000040995c: xchg eax, edx; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000045283a: xchg eax, edx; or eax, dword ptr [rax]; add byte ptr [rcx + rcx*4 - 0x1e], cl; mov rsi, r13; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x0000000000477221: xchg eax, edx; ret 0x8948; 
0x0000000000474187: xchg eax, edx; ret 0xc148; 
0x000000000043bd50: xchg eax, edx; ret 0xf40; 
0x0000000000448f5a: xchg eax, edx; sahf; sti; jmp qword ptr [rsi - 0x70]; 
0x0000000000459a7b: xchg eax, edx; sbb byte ptr [rax], al; add byte ptr [rbp - 0x7b], cl; test byte ptr [rdi], 0x84; jmp qword ptr [rdx]; 
0x000000000041f66c: xchg eax, edx; sub eax, edx; ret; 
0x0000000000421010: xchg eax, esi; add byte ptr [rax], 0; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000429243: xchg eax, esi; add byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x000000000047b18e: xchg eax, esi; add rax, r14; jmp rax; 
0x000000000043d384: xchg eax, esi; add rax, rsi; jmp rax; 
0x00000000004210cd: xchg eax, esi; lock add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000416ac6: xchg eax, esi; mov al, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000042102b: xchg eax, esi; nop; add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043e06b: xchg eax, esi; ret 0xc085; 
0x000000000043e0c7: xchg eax, esi; ret 0xd284; 
0x000000000042107c: xchg eax, esi; rol byte ptr [rax], 0; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042a3e1: xchg eax, esp; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000044c026: xchg eax, esp; and al, 0x80; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000463fac: xchg eax, esp; and al, 0xe8; add eax, dword ptr [rax]; add dh, dh; ret 0x7402; 
0x000000000040f4f6: xchg eax, esp; nop word ptr [rax + rax]; mov eax, 0xffffffff; ret; 
0x00000000004160f0: xchg eax, esp; or word ptr [rax], ax; lea rax, [rip - 0xa8b]; mov qword ptr [rip + 0x9667e], rax; ret; 
0x000000000043ee72: xchg eax, esp; ret 0x2044; 
0x0000000000409559: xchg eax, esp; ret 0x3948; 
0x0000000000404acd: xchg eax, esp; ret 0x8040; 
0x0000000000470ffa: xchg eax, esp; ret 0x894c; 
0x000000000044273d: xchg eax, esp; ret 0x8d48; 
0x0000000000465d90: xchg eax, esp; ret 0xb60f; 
0x00000000004025c0: xchg eax, esp; ret 0xd284; 
0x0000000000417484: xchg eax, esp; ror byte ptr [rax - 0x73], 0x54; ret 0xfff; 
0x00000000004754db: xchg eax, esp; ror byte ptr [rdi], 0x94; ret 0xb60f; 
0x0000000000467bde: xchg eax, esp; stc; jmp qword ptr [rsi + 0x66]; 
0x0000000000444a76: xchg eax, r8d; call 0x42c50; mov rax, qword ptr [rbp - 0x70]; mov rdi, r12; call rax; 
0x0000000000444a7f: xchg eax, r8d; mov rdi, r12; call rax; 
0x0000000000425445: xchg ebx, ebx; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000401f95: xchg ebx, edx; or al, byte ptr [rax]; add rsp, 0x88; pop rbx; ret; 
0x000000000045183a: xchg ecx, esi; add eax, 0x63480000; or al, 0x8a; add rcx, rdx; jmp rcx; 
0x0000000000423b85: xchg edx, esi; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000477461: xchg rax, r15; cld; jmp qword ptr [rsi + 0x2e]; 
0x000000000047f223: xlatb; adc byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000468ad2: xlatb; add al, byte ptr [rax]; movsxd rax, dword ptr [rdi + r12*4]; add rax, rdi; jmp rax; 
0x0000000000417c99: xlatb; add dword ptr [rax], eax; cmove rax, rdx; ret; 
0x0000000000423a35: xlatb; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bb72: xlatb; add rsi, rdx; lea r11, [rip + 0x57d53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b9f2: xlatb; add rsi, rdx; lea r11, [rip + 0x57ed3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b872: xlatb; add rsi, rdx; lea r11, [rip + 0x58053]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b6f3: xlatb; add rsi, rdx; lea r11, [rip + 0x581d2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b572: xlatb; add rsi, rdx; lea r11, [rip + 0x58353]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b3f2: xlatb; add rsi, rdx; lea r11, [rip + 0x584d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b272: xlatb; add rsi, rdx; lea r11, [rip + 0x58653]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b0f2: xlatb; add rsi, rdx; lea r11, [rip + 0x587d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042af72: xlatb; add rsi, rdx; lea r11, [rip + 0x58953]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042adf2: xlatb; add rsi, rdx; lea r11, [rip + 0x58ad3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042ac72: xlatb; add rsi, rdx; lea r11, [rip + 0x58c53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aaf2: xlatb; add rsi, rdx; lea r11, [rip + 0x58dd3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a972: xlatb; add rsi, rdx; lea r11, [rip + 0x58f53]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a7f2: xlatb; add rsi, rdx; lea r11, [rip + 0x590d3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a672: xlatb; add rsi, rdx; lea r11, [rip + 0x59253]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000429092: xlatb; add rsi, rdx; lea r11, [rip + 0x5a333]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428f12: xlatb; add rsi, rdx; lea r11, [rip + 0x5a4b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428d92: xlatb; add rsi, rdx; lea r11, [rip + 0x5a633]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428c13: xlatb; add rsi, rdx; lea r11, [rip + 0x5a7b2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428a92: xlatb; add rsi, rdx; lea r11, [rip + 0x5a933]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428912: xlatb; add rsi, rdx; lea r11, [rip + 0x5aab3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428792: xlatb; add rsi, rdx; lea r11, [rip + 0x5ac33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428612: xlatb; add rsi, rdx; lea r11, [rip + 0x5adb3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428492: xlatb; add rsi, rdx; lea r11, [rip + 0x5af33]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428312: xlatb; add rsi, rdx; lea r11, [rip + 0x5b0b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428192: xlatb; add rsi, rdx; lea r11, [rip + 0x5b233]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428012: xlatb; add rsi, rdx; lea r11, [rip + 0x5b3b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427e92: xlatb; add rsi, rdx; lea r11, [rip + 0x5b533]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427d12: xlatb; add rsi, rdx; lea r11, [rip + 0x5b6b3]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427b92: xlatb; add rsi, rdx; lea r11, [rip + 0x5b833]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425028: xlatb; add rsi, rdx; lea r11, [rip + 0x5df9d]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000422658: xlatb; add rsi, rdx; lea r11, [rip + 0x607ad]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000046d5a7: xlatb; cmp rax, 9; ja 0x6d580; mov rax, r8; ret; 
0x0000000000406e88: xlatb; dec dword ptr [rax - 0x7d]; ret 0x8908; 
0x00000000004252f5: xlatb; fadd qword ptr [rip + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000043c0f8: xlatb; jb 0x3c0fe; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000406f98: xlatb; jmp rdi; 
0x00000000004156c5: xlatb; jo 0x156d1; add al, ch; ret 0xfffd; 
0x000000000042986b: xlatb; lddqu xmm0, xmmword ptr [rsi - 0x19]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x19], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000042bf90: xlatb; lea r11, [rip + 0x576f8]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042bddd: xlatb; lea r11, [rip + 0x57aeb]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a538: xlatb; lea r11, [rip + 0x59390]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a3dc: xlatb; lea r11, [rip + 0x594ec]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042947c: xlatb; lea r11, [rip + 0x59d0c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004292e9: xlatb; lea r11, [rip + 0x5a0df]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004276db: xlatb; lea r11, [rip + 0x5b8ed]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427a58: xlatb; lea r11, [rip + 0x5b970]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004278e6: xlatb; lea r11, [rip + 0x5bae2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424f3c: xlatb; lea r11, [rip + 0x5e08c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424e77: xlatb; lea r11, [rip + 0x5e151]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042256c: xlatb; lea r11, [rip + 0x6089c]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004224a7: xlatb; lea r11, [rip + 0x60961]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000421762: xlatb; lea r11, [rip + 0x61566]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x00000000004216e8: xlatb; lea r11, [rip + 0x615e0]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421659: xlatb; lea r11, [rip + 0x6166f]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000042144e: xlatb; lea r11, [rip + 0x6187a]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x000000000042131c: xlatb; lea r11, [rip + 0x619ac]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421256: xlatb; lea r11, [rip + 0x61a72]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x00000000004211d8: xlatb; lea r11, [rip + 0x61af0]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000421141: xlatb; lea r11, [rip + 0x61b87]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420f45: xlatb; lea r11, [rip + 0x61d83]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420e14: xlatb; lea r11, [rip + 0x61eb4]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000420d05: xlatb; lea r11, [rip + 0x61fc3]; movsxd rcx, dword ptr [r11 + rdx*4]; add rcx, r11; jmp rcx; 
0x0000000000425c21: xlatb; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5d3a2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000423251: xlatb; movdqu xmmword ptr [r8], xmm0; lea r11, [rip + 0x5fbb2]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000047f5c8: xlatb; nop dword ptr [rax]; mov eax, dword ptr [rdi]; test eax, eax; jne 0x7f5e0; ret; 
0x0000000000441185: xlatb; push rdi; std; dec dword ptr [rax - 0x77]; ret; 
0x00000000004600f7: xlatb; ret 0x94c; 
0x000000000041fc9f: xlatb; ret 0xc085; 
0x0000000000419e60: xlatb; ret 0xc148; 
0x0000000000420924: xlatb; ret 0xe883; 
0x0000000000435474: xlatb; ret 0xf66; 
0x0000000000420ae8: xlatb; ret 0xff2d; 
0x000000000041fcb4: xlatb; ret; 
0x0000000000460245: xlatb; retf 0xfdc5; xlatb; ret; 
0x0000000000420081: xlatb; rol byte ptr [rbp + 0x664975c0], 0xf; xlatb; ret 0xc085; 
0x00000000004602a5: xlatb; rol ch, cl; std; xlatb; ret; 
0x00000000004202df: xlatb; rol dword ptr [rbp + 0x311b75c0], 0xc0; vzeroupper; ret; 
0x000000000041fe63: xlatb; rol dword ptr [rbp + 0x315775c0], 0xc0; ret; 
0x0000000000439d5e: xlatb; rol dword ptr [rbp + 0x661075c0], cl; nop word ptr cs:[rax + rax]; nop; xor rax, rax; ret; 
0x00000000004203a2: xlatb; rol dword ptr [rbp - 0x3a378a40], 0xfd; xlatb; ret 0xc085; 
0x00000000004351f2: xlatb; rol dword ptr [rbp - 0x3a678a40], 0xfd; xlatb; ret 0xc085; 
0x000000000041fe33: xlatb; rol dword ptr [rbp - 0x5c7af040], 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004607b6: xlatb; rol dword ptr [rbp - 0x5f7af040], 0; add byte ptr [rax], al; mov rax, r8; vzeroupper; ret; 
0x00000000004202a2: xlatb; rol dword ptr [rbp - 0x6b7af040], 0; add byte ptr [rax], al; xor eax, eax; vzeroupper; ret; 
0x0000000000435e72: xlatb; ror byte ptr [rax - 0x73], 0x76; adc byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x85; call qword ptr [rbx]; 
0x0000000000435eae: xlatb; ror byte ptr [rax - 0x73], 0x76; adc byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x85; ret; 
0x0000000000439d56: xlatb; ror dword ptr [rcx], cl; ret 0xe074; 
0x0000000000419d46: xlatb; sal bh, 1; ret 0x8000; 
0x0000000000419c06: xlatb; sal bh, 1; ret 0xc000; 
0x0000000000419ac6: xlatb; sal bh, 1; ret 0xe000; 
0x0000000000419986: xlatb; sal bh, 1; ret 0xf000; 
0x0000000000419846: xlatb; sal bh, 1; ret 0xf800; 
0x0000000000419706: xlatb; sal bh, 1; ret 0xfc00; 
0x00000000004195c6: xlatb; sal bh, 1; ret 0xfe00; 
0x0000000000419486: xlatb; sal bh, 1; ret 0xff00; 
0x0000000000419346: xlatb; sal bh, 1; ret 0xff80; 
0x0000000000419206: xlatb; sal bh, 1; ret 0xffc0; 
0x00000000004190c6: xlatb; sal bh, 1; ret 0xffe0; 
0x0000000000418f86: xlatb; sal bh, 1; ret 0xfff0; 
0x0000000000418e46: xlatb; sal bh, 1; ret 0xfff8; 
0x0000000000418d06: xlatb; sal bh, 1; ret 0xfffc; 
0x0000000000418bc6: xlatb; sal bh, 1; ret 0xfffe; 
0x000000000042760d: xlatb; sfence; lea r11, [rip + 0x5b9b8]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000424c25: xlatb; sfence; lea r11, [rip + 0x5e1e0]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000439d52: xlatb; shl byte ptr [rsi + 0xf], 0xd7; ror dword ptr [rcx], cl; ret 0xe074; 
0x00000000004600a6: xlatb; shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x0000000000460095: xlatb; shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret; 
0x000000000042bc2f: xlatb; sub rsi, rdx; lea r11, [rip + 0x57a56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042baaf: xlatb; sub rsi, rdx; lea r11, [rip + 0x57bd6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b92f: xlatb; sub rsi, rdx; lea r11, [rip + 0x57d56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b7af: xlatb; sub rsi, rdx; lea r11, [rip + 0x57ed6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b62f: xlatb; sub rsi, rdx; lea r11, [rip + 0x58056]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b4af: xlatb; sub rsi, rdx; lea r11, [rip + 0x581d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b32f: xlatb; sub rsi, rdx; lea r11, [rip + 0x58356]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b1af: xlatb; sub rsi, rdx; lea r11, [rip + 0x584d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042b02f: xlatb; sub rsi, rdx; lea r11, [rip + 0x58656]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aeaf: xlatb; sub rsi, rdx; lea r11, [rip + 0x587d6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042ad2f: xlatb; sub rsi, rdx; lea r11, [rip + 0x58956]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042abaf: xlatb; sub rsi, rdx; lea r11, [rip + 0x58ad6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042aa2f: xlatb; sub rsi, rdx; lea r11, [rip + 0x58c56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a8af: xlatb; sub rsi, rdx; lea r11, [rip + 0x58dd6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a72f: xlatb; sub rsi, rdx; lea r11, [rip + 0x58f56]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042a5b6: xlatb; sub rsi, rdx; lea r11, [rip + 0x590cf]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042914f: xlatb; sub rsi, rdx; lea r11, [rip + 0x5a036]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428fcf: xlatb; sub rsi, rdx; lea r11, [rip + 0x5a1b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428e4f: xlatb; sub rsi, rdx; lea r11, [rip + 0x5a336]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428ccf: xlatb; sub rsi, rdx; lea r11, [rip + 0x5a4b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428b4f: xlatb; sub rsi, rdx; lea r11, [rip + 0x5a636]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004289cf: xlatb; sub rsi, rdx; lea r11, [rip + 0x5a7b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042884f: xlatb; sub rsi, rdx; lea r11, [rip + 0x5a936]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004286cf: xlatb; sub rsi, rdx; lea r11, [rip + 0x5aab6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042854f: xlatb; sub rsi, rdx; lea r11, [rip + 0x5ac36]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004283cf: xlatb; sub rsi, rdx; lea r11, [rip + 0x5adb6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000042824f: xlatb; sub rsi, rdx; lea r11, [rip + 0x5af36]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x00000000004280cf: xlatb; sub rsi, rdx; lea r11, [rip + 0x5b0b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427f4f: xlatb; sub rsi, rdx; lea r11, [rip + 0x5b236]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427dcf: xlatb; sub rsi, rdx; lea r11, [rip + 0x5b3b6]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427c4f: xlatb; sub rsi, rdx; lea r11, [rip + 0x5b536]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000427ad6: xlatb; sub rsi, rdx; lea r11, [rip + 0x5b6af]; movsxd rdx, dword ptr [r11 + rdx*4]; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000041221e: xor al, 0; add byte ptr [rax - 0x77], cl; add eax, 0x9a558; ret; 
0x0000000000461068: xor al, 0; add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x000000000043d849: xor al, 0x11; mov rdi, rax; mov eax, dword ptr [rcx + rax*4]; sub eax, dword ptr [rcx + rsi*4]; je 0x3d838; ret; 
0x000000000040f5d0: xor al, 0x24; lea r15, [r12 + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x000000000045fe23: xor al, 0x24; pop r12; pop r13; pop r14; ret; 
0x000000000047a4d3: xor al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x7a4e5; add rsp, 0x28; ret; 
0x000000000044ff89: xor al, 0x28; nop dword ptr [rax + rax]; mov rdx, rbp; mov rsi, r12; mov rdi, r15; call rbx; 
0x000000000045cf2f: xor al, 0x48; lea ecx, [rbx + 0x40]; mov esi, 1; mov rdi, rbx; call rax; 
0x00000000004782e4: xor al, 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rdi], rdx; ret; 
0x0000000000479842: xor al, 0xc3; nop dword ptr [rax]; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x000000000045f6b8: xor al, 0xd; add byte ptr [rax], al; cmove rax, rdx; ret; 
0x000000000047548f: xor al, 2; add al, ch; pop rcx; fprem; jmp qword ptr [rsi + 0xf]; 
0x000000000045f6f8: xor al, 8; add byte ptr [rax], al; cmove rax, rdx; ret; 
0x000000000043f505: xor al, byte ptr [rcx + rcx*4 - 0x3e]; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000000463403: xor al, ch; cmpsd dword ptr [rsi], dword ptr [rdi]; fdiv st(1), st(0); dec dword ptr [rax + 0x39]; ret; 
0x000000000047e3eb: xor bh, al; jmp qword ptr [rsi - 0x70]; 
0x000000000040df83: xor bh, bh; dec dword ptr [rax - 0x77]; ret; 
0x000000000041fdbd: xor byte ptr [r14 + 0xf], r12b; xlatb; ret; 
0x000000000041fe2f: xor byte ptr [r14 + 0xf], r12b; xlatb; rol dword ptr [rbp - 0x5c7af040], 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000040f00f: xor byte ptr [r8 - 0x77], cl; and byte ptr [r9], sil; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000447ac3: xor byte ptr [rax - 0x75], cl; je 0x47aec; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044a50d: xor byte ptr [rax - 0x75], cl; je 0x4a536; push rax; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044b90d: xor byte ptr [rax - 0x75], cl; je 0x4b936; push rax; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000043fe75: xor byte ptr [rax - 0x75], cl; jge 0x3fe22; mov qword ptr [rbp - 0x50], r9; mov r15d, r14d; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x000000000046cef0: xor byte ptr [rax - 0x75], cl; push rsp; and al, 0x38; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000046ce7e: xor byte ptr [rax - 0x75], cl; push rsp; and al, 0x38; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000435b6f: xor byte ptr [rax - 0x77], cl; add cl, byte ptr [rax - 0x7d]; ret 0x4808; 
0x000000000043f3cf: xor byte ptr [rax - 0x77], cl; and al, 0x20; cmp esi, 9; je 0x3f400; mov eax, 0x48; syscall; 
0x000000000040f010: xor byte ptr [rax - 0x77], cl; and byte ptr [r9], sil; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000478444: xor byte ptr [rax - 0x77], cl; or byte ptr [r8 + 2], r15b; ret; 
0x00000000004671f5: xor byte ptr [rax - 0x7b], cl; test byte ptr [rdi], 0x84; ret 2; 
0x00000000004083c5: xor byte ptr [rax], al; add byte ptr [rax], al; call rax; 
0x00000000004083a7: xor byte ptr [rax], al; add byte ptr [rax], al; call rdx; 
0x000000000046a4af: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x69de0; add rsp, 0xd8; ret; 
0x000000000043d3d4: xor byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000045e95a: xor byte ptr [rax], al; je 0x5e960; ret; 
0x000000000043c345: xor byte ptr [rbp + 0xf], al; adc dword ptr [rbx], eax; ret; 
0x0000000000439491: xor byte ptr [rbp + rcx*4 + 0x1d], cl; mov bh, 0xa8; add al, 0; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000004529f2: xor byte ptr [rbp + rcx*4 + 0x68], cl; inc esi; test dword ptr [rax], edx; idiv edi; jmp qword ptr [rax]; 
0x000000000041881b: xor byte ptr [rbp + rdx - 0x80], 0xe6; add cl, byte ptr [rax - 0x73]; add eax, 0x14e08; lea rdx, [rip + 0x17041]; cmovne rax, rdx; ret; 
0x0000000000417cf2: xor byte ptr [rbp + rdx - 0x80], 0xe6; add cl, byte ptr [rax - 0x73]; add eax, 0x3a21; lea rdx, [rip + 0x526a]; cmovne rax, rdx; ret; 
0x0000000000402772: xor byte ptr [rbx + 0x107745f9], al; lea rsi, [rip + 0x7e959]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x0000000000407936: xor byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x000000000040eb4e: xor byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000040fede: xor byte ptr [rbx - 0x448a0008], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000047261b: xor byte ptr [rbx - 0x7cb7fb8e], cl; ret 0x4804; 
0x000000000045e9a7: xor byte ptr [rcx + rcx*4 + 0x60], cl; cmp byte ptr [rcx + 0x5d5b7453], cl; pop r12; ret; 
0x00000000004786c2: xor byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; ret; 
0x0000000000411866: xor byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x0000000000455415: xor byte ptr [rcx - 0x77], cl; ret 0x2948; 
0x000000000046d6bb: xor byte ptr [rcx - 0x77], cl; ror byte ptr [rax - 0x75], 0x43; sbb byte ptr [rax + 0x2b], cl; sub byte ptr [r9 + r9*4 + 4], cl; ret 0x8b48; 
0x0000000000407703: xor byte ptr [rcx - 0x7d], cl; ret 0x4102; 
0x000000000043c1f6: xor byte ptr [rdi], cl; adc dword ptr [rdi + rdx - 0x10], esp; movups xmmword ptr [rdi + rdx - 0x20], xmm5; movups xmmword ptr [rdi + rdx - 0x30], xmm6; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x0000000000420dbf: xor byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000420dba: xor byte ptr [rsi + 0xf], ah; out dx, eax; push rsi; xor byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000046005c: xor byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret; 
0x000000000041fdbe: xor byte ptr [rsi + 0xf], ah; xlatb; ret; 
0x000000000041fe30: xor byte ptr [rsi + 0xf], ah; xlatb; rol dword ptr [rbp - 0x5c7af040], 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000047bc42: xor cl, byte ptr [rax - 0x7d]; ret 0x4801; 
0x000000000047ce50: xor cl, byte ptr [rax]; jne 0x165d; mov rax, qword ptr [rax]; add rsp, 8; ret; 
0x00000000004084a8: xor dl, ah; add byte ptr [rcx + r15 - 0x1d], cl; jae 0x84c3; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000046b930: xor dl, dh; ret; 
0x0000000000417d79: xor dword ptr [rax + 0x39], ecx; ret; 
0x000000000045dfc7: xor dword ptr [rax + 0x63], ecx; ror dword ptr [rcx + rcx*4 - 0x12], cl; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x0000000000441a63: xor dword ptr [rax + rax], eax; mov eax, 0x15; syscall; 
0x00000000004413f6: xor dword ptr [rax], edx; jae 0x413a1; xor eax, eax; ret; 
0x0000000000441aff: xor dword ptr [rax], esp; jmp rdx; 
0x00000000004413f5: xor dword ptr [rax], r10d; jae 0x413a1; xor eax, eax; ret; 
0x0000000000415fb6: xor dword ptr [rbx + 0x991c22d], eax; add byte ptr [rcx], al; pop rbx; ret; 
0x000000000046b3a9: xor dword ptr [rbx - 0x7cb70006], 0xffffffc4; or byte ptr [rcx + rcx*4 - 0x20], al; pop rbp; pop r12; ret; 
0x000000000043eb26: xor dword ptr [rcx + rcx*4 - 0x39], eax; mov qword ptr [rsp + 8], rax; call 0x5f2c0; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000045cae6: xor dword ptr [rdi], ecx; mov dh, 0xc0; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000044d457: xor eax, 0x20c48348; pop rbx; pop rbp; pop r12; ret; 
0x0000000000473f57: xor eax, 0x2450c; lea rdi, [rip + 0x2451d]; call 0x2df0; nop dword ptr [rax + rax]; ret; 
0x0000000000468223: xor eax, 0x2dff8; movsxd rax, dword ptr [rsi + r12*4]; add rax, rsi; jmp rax; 
0x000000000045d1d7: xor eax, 0x37f4c; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x0000000000442bcc: xor eax, 0x425c4; lea rdi, [rip + 0x426c8]; call 0x2df0; nop dword ptr [rax]; lea rax, [rip + 0x6a639]; ret; 
0x000000000043d2b4: xor eax, 0x46b87; movsxd rax, dword ptr [rsi + rdi*4]; add rax, rsi; jmp rax; 
0x000000000043c903: xor eax, 0x48000002; mov ecx, edx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000045a2e8: xor eax, 0x4fe93; mov rax, qword ptr [rsi + rax*8]; jmp rax; 
0x000000000043d215: xor eax, 0x7701fa80; cmp dh, byte ptr [rdx + 2]; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x000000000040866c: xor eax, 0x7914f; lea rdi, [rip + 0x79155]; call 0x2df0; xor r8d, r8d; mov rax, r8; ret; 
0x000000000040277a: xor eax, 0x7e959; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000043ebe2: xor eax, 0x89c78944; and al, 0xc; call 0x5f2c0; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x00000000004726f2: xor eax, 0xcf8e2d83; add eax, dword ptr [rax]; add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x00000000004083c2: xor eax, dword ptr [0x30]; call rax; 
0x000000000043c4d0: xor eax, dword ptr [rax + 0x3b7701fa]; jb 0x3c4dd; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000040672b: xor eax, dword ptr [rax]; add cl, al; cli; add al, byte ptr [rcx - 0xccc1e]; inc dword ptr [rcx]; ret 0xd089; 
0x000000000047dc7e: xor eax, eax; add rsp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000040e648: xor eax, eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000040f015: xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004508f3: xor eax, eax; add rsp, 8; ret; 
0x000000000044410b: xor eax, eax; call rbx; 
0x000000000043f462: xor eax, eax; cmp esi, 9; je 0x3f490; mov eax, 0x48; syscall; 
0x000000000041162b: xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x000000000044fb05: xor eax, eax; mov dword ptr [rbx + 0x40], esi; pop rbx; ret; 
0x000000000045eacb: xor eax, eax; mov dword ptr [rbx], ecx; pop rbx; ret; 
0x0000000000408689: xor eax, eax; mov rax, r8; pop rbx; pop rbp; ret; 
0x000000000040867e: xor eax, eax; mov rax, r8; ret; 
0x000000000043e175: xor eax, eax; mov rdi, rbp; call rbx; 
0x0000000000460e12: xor eax, eax; mov rdi, rbp; lea r9, [rsp + 0x30]; call rbx; 
0x000000000046215a: xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000043dfee: xor eax, eax; mov rsi, qword ptr [rsp + 0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x0000000000416521: xor eax, eax; pop rbp; pop r12; mov rax, r8; pop r13; ret; 
0x0000000000445357: xor eax, eax; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000040dbb1: xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000406b33: xor eax, eax; pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x000000000040b69c: xor eax, eax; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000004127bb: xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000046a67c: xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000040ca02: xor eax, eax; pop rbx; ret; 
0x0000000000415488: xor eax, eax; pop rdx; pop rbp; pop r12; ret; 
0x0000000000407998: xor eax, eax; ret; 
0x000000000041a06e: xor eax, eax; sub eax, ecx; ret; 
0x000000000043ea78: xor eax, eax; syscall; 
0x000000000043f620: xor eax, eax; syscall; cmp rax, -0x1000; ja 0x3f630; ret; 
0x000000000047a800: xor eax, eax; test r8d, r8d; jne 0x7a70c; add rsp, 0x38; ret; 
0x000000000041fa90: xor eax, eax; vzeroupper; ret; 
0x0000000000444179: xor eax, eax; xor ecx, ecx; xor edx, edx; push rax; call rbx; 
0x000000000045ff7b: xor eax, edx; and rax, rcx; je 0x60140; bsr rax, rax; add rax, rdi; ret; 
0x00000000004601ff: xor eax, edx; and rsi, rax; je 0x60140; bsr rax, rsi; add rax, rdi; ret; 
0x000000000040798a: xor eax, edx; movzx edx, byte ptr [rdi]; test dl, dl; jne 0x796c; ret; 
0x0000000000428799: xor ebp, dword ptr [rbp + rax + 0x14634900]; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428a99: xor ebp, dword ptr [rcx + 0x63490005]; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428499: xor ebp, dword ptr [rdi + 0x63490005]; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000425099: xor ebx, edi; add eax, 0x14634900; xchg eax, ebx; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000044049b: xor ecx, 0x8948ffff; ret; 
0x0000000000477bae: xor ecx, dword ptr [rax - 0x7d]; ret; 
0x00000000004187ff: xor ecx, dword ptr [rbx + 0x96aa215]; add bh, dh; ret 0; 
0x0000000000417cd6: xor ecx, dword ptr [rbx + 0x975cb15]; add bh, dh; ret 0; 
0x0000000000460009: xor ecx, eax; and rsi, rcx; je 0x60140; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x0000000000459e11: xor ecx, ecx; jmp rax; 
0x000000000044417b: xor ecx, ecx; xor edx, edx; push rax; call rbx; 
0x0000000000427b99: xor edi, dword ptr [rax + 0x63490005]; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x000000000047e2cf: xor edi, eax; jmp qword ptr [rsi + 0xf]; 
0x00000000004025d0: xor edi, edi; mov eax, edx; syscall; 
0x000000000043f836: xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x000000000043f68c: xor edi, edi; syscall; 
0x000000000043f68c: xor edi, edi; syscall; cmp rax, -0x1000; ja 0x3f6a0; ret; 
0x00000000004083a4: xor edx, dword ptr [0x30]; call rdx; 
0x000000000047244e: xor edx, edx; add eax, dword ptr [rax]; add dword ptr [rcx + 0x5c], eax; ret; 
0x0000000000467271: xor edx, edx; add rdi, 0x1c; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000045f2ff: xor edx, edx; add rdi, 0x308; mov esi, 0x80; syscall; 
0x000000000043d416: xor edx, edx; and eax, 0x3fffc00; div ecx; mov eax, eax; ret; 
0x000000000043f5a1: xor edx, edx; and eax, 0x410000; cmp eax, 0x410000; je 0x3f5d8; mov eax, 0x101; syscall; 
0x00000000004704fb: xor edx, edx; div ecx; add r8d, eax; mov eax, r8d; ret; 
0x00000000004351b4: xor edx, edx; lea rax, [rdi + rax + 0x20]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000004351d4: xor edx, edx; lea rax, [rdi + rax + 0x40]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000435212: xor edx, edx; lea rax, [rdi + rax + 0x60]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000043507a: xor edx, edx; lea rax, [rdi + rax]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000472736: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3cf3a]; syscall; 
0x00000000004724b2: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3d1ba]; syscall; 
0x00000000004705c6: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3f092]; syscall; 
0x0000000000450926: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5eca2]; syscall; 
0x0000000000450861: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5ed67]; syscall; 
0x00000000004506c4: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5ef04]; syscall; 
0x00000000004505f5: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5efd3]; syscall; 
0x0000000000445376: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a04a]; syscall; 
0x000000000044520a: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a1b6]; syscall; 
0x0000000000445112: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a2ae]; syscall; 
0x000000000043ddae: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x71612]; syscall; 
0x0000000000417a12: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x94d76]; syscall; 
0x0000000000415cfa: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96a8e]; syscall; 
0x0000000000415cc2: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96ac6]; syscall; 
0x00000000004157a2: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96fe6]; syscall; 
0x000000000041545e: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9732a]; syscall; 
0x000000000041691d: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9885b]; syscall; 
0x0000000000413d8e: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x989fa]; syscall; 
0x0000000000413d5e: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x98a2a]; syscall; 
0x0000000000415ff6: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x99172]; syscall; 
0x000000000041432c: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ae4c]; syscall; 
0x00000000004142b0: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9aeb8]; syscall; 
0x000000000041400b: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9b16d]; syscall; 
0x000000000041216e: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9d00a]; syscall; 
0x0000000000410d1d: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9e3db]; syscall; 
0x0000000000410824: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9e8d4]; syscall; 
0x00000000004104d9: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ec1f]; syscall; 
0x0000000000410196: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ef62]; syscall; 
0x000000000040ee90: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa0268]; syscall; 
0x000000000040ebd0: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa0528]; syscall; 
0x000000000040e724: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa09d4]; syscall; 
0x0000000000409692: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa5d2e]; syscall; 
0x0000000000408761: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa654f]; syscall; 
0x000000000040853a: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa6776]; syscall; 
0x00000000004084ff: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa67b1]; syscall; 
0x000000000040842b: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa6885]; syscall; 
0x00000000004064ff: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa8751]; syscall; 
0x0000000000404c2c: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa9fec]; syscall; 
0x0000000000403c43: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xaaf25]; syscall; 
0x0000000000403c1a: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xaaf4e]; syscall; 
0x0000000000403b11: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xab057]; syscall; 
0x00000000004011f3: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xada75]; syscall; 
0x0000000000401345: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004727d9: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x0000000000415fcb: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000004163ba: xor edx, edx; mov edx, 1; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004166ac: xor edx, edx; mov edx, 1; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000412e00: xor edx, edx; mov edx, 1; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000416c6b: xor edx, edx; mov edx, 1; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000004173d1: xor edx, edx; mov edx, 1; mov esi, 0x81; mov rdi, rcx; mov eax, 0xca; syscall; 
0x0000000000411653: xor edx, edx; mov edx, 2; mov esi, 0x80; mov eax, 0xca; syscall; 
0x000000000043f683: xor edx, edx; mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x000000000040f8fb: xor edx, edx; mov rsi, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000000407ae0: xor edx, edx; mov rsi, r9; mov edi, 2; mov eax, 0xe; syscall; 
0x000000000045a945: xor edx, edx; movzx eax, byte ptr [rsi + rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000040f8d3: xor edx, edx; pop rbx; jmp rax; 
0x0000000000460c19: xor edx, edx; push 1; lea r9, [rsp + 0x20]; call rbx; 
0x000000000044417d: xor edx, edx; push rax; call rbx; 
0x0000000000427e99: xor esi, dword ptr [rbp + 0x63490005]; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428199: xor esi, dword ptr [rdx + 0x63490005]; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000467b7e: xor esi, esi; call 0x67a80; test eax, eax; jne 0x67b8b; pop rbx; ret; 
0x0000000000441a5d: xor esi, esi; lea rdi, [rip + 0x4310c]; mov eax, 0x15; syscall; 
0x00000000004094e6: xor esi, esi; mov rdi, rbp; call qword ptr [rbx + 0x10]; 
0x0000000000429099: xor esp, dword ptr [rbx + 0x63490005]; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000428d99: xor esp, dword ptr [rsi + 0x63490005]; adc al, 0x93; lea rdx, [r11 + rdx]; jmp rdx; 
0x0000000000480a49: xor esp, esp; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000004742e9: xor esp, esp; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000044dbdb: xor esp, esp; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000045f775: xor esp, esp; pop rbp; mov rax, r12; pop r12; pop r13; ret; 
0x0000000000402f24: xor esp, esp; pop rbx; pop rbp; mov rax, r12; pop r12; ret; 
0x000000000045f2fe: xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x0000000000467270: xor r10d, r10d; add rdi, 0x1c; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000043f5a0: xor r10d, r10d; and eax, 0x410000; cmp eax, 0x410000; je 0x3f5d8; mov eax, 0x101; syscall; 
0x0000000000472735: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3cf3a]; syscall; 
0x00000000004724b1: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3d1ba]; syscall; 
0x00000000004705c5: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x3f092]; syscall; 
0x0000000000450925: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5eca2]; syscall; 
0x0000000000450860: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5ed67]; syscall; 
0x00000000004506c3: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5ef04]; syscall; 
0x00000000004505f4: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x5efd3]; syscall; 
0x0000000000445375: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a04a]; syscall; 
0x0000000000445209: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a1b6]; syscall; 
0x0000000000445111: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x6a2ae]; syscall; 
0x000000000043ddad: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x71612]; syscall; 
0x0000000000417a11: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x94d76]; syscall; 
0x0000000000415cf9: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96a8e]; syscall; 
0x0000000000415cc1: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96ac6]; syscall; 
0x00000000004157a1: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x96fe6]; syscall; 
0x000000000041545d: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9732a]; syscall; 
0x000000000041691c: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9885b]; syscall; 
0x0000000000413d8d: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x989fa]; syscall; 
0x0000000000413d5d: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x98a2a]; syscall; 
0x0000000000415ff5: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x99172]; syscall; 
0x000000000041432b: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ae4c]; syscall; 
0x00000000004142af: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9aeb8]; syscall; 
0x000000000041400a: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9b16d]; syscall; 
0x000000000041216d: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9d00a]; syscall; 
0x0000000000410d1c: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9e3db]; syscall; 
0x0000000000410823: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9e8d4]; syscall; 
0x00000000004104d8: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ec1f]; syscall; 
0x0000000000410195: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0x9ef62]; syscall; 
0x000000000040ee8f: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa0268]; syscall; 
0x000000000040ebcf: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa0528]; syscall; 
0x000000000040e723: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa09d4]; syscall; 
0x0000000000409691: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa5d2e]; syscall; 
0x0000000000408760: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa654f]; syscall; 
0x0000000000408539: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa6776]; syscall; 
0x00000000004084fe: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa67b1]; syscall; 
0x000000000040842a: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa6885]; syscall; 
0x00000000004064fe: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa8751]; syscall; 
0x0000000000404c2b: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xa9fec]; syscall; 
0x0000000000403c42: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xaaf25]; syscall; 
0x0000000000403c19: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xaaf4e]; syscall; 
0x0000000000403b10: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xab057]; syscall; 
0x00000000004011f2: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xada75]; syscall; 
0x0000000000401344: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004727d8: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x0000000000415fca: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000004163b9: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004166ab: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000412dff: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000416c6a: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000004173d0: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov rdi, rcx; mov eax, 0xca; syscall; 
0x0000000000411652: xor r10d, r10d; mov edx, 2; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000000480a48: xor r12d, r12d; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000004742e8: xor r12d, r12d; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000044dbda: xor r12d, r12d; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000045f774: xor r12d, r12d; pop rbp; mov rax, r12; pop r12; pop r13; ret; 
0x0000000000402f23: xor r12d, r12d; pop rbx; pop rbp; mov rax, r12; pop r12; ret; 
0x000000000047dc7d: xor r8d, r8d; add rsp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000044410a: xor r8d, r8d; call rbx; 
0x0000000000408688: xor r8d, r8d; mov rax, r8; pop rbx; pop rbp; ret; 
0x000000000040867d: xor r8d, r8d; mov rax, r8; ret; 
0x000000000043e174: xor r8d, r8d; mov rdi, rbp; call rbx; 
0x0000000000460e11: xor r8d, r8d; mov rdi, rbp; lea r9, [rsp + 0x30]; call rbx; 
0x000000000043dfed: xor r8d, r8d; mov rsi, qword ptr [rsp + 0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x0000000000416520: xor r8d, r8d; pop rbp; pop r12; mov rax, r8; pop r13; ret; 
0x0000000000406b32: xor r8d, r8d; pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x0000000000444178: xor r8d, r8d; xor ecx, ecx; xor edx, edx; push rax; call rbx; 
0x00000000004083c1: xor rax, qword ptr [0x30]; call rax; 
0x00000000004083c0: xor rax, qword ptr fs:[0x30]; call rax; 
0x0000000000439d70: xor rax, rax; ret; 
0x000000000045ff7a: xor rax, rdx; and rax, rcx; je 0x60140; bsr rax, rax; add rax, rdi; ret; 
0x00000000004601fe: xor rax, rdx; and rsi, rax; je 0x60140; bsr rax, rsi; add rax, rdi; ret; 
0x0000000000407989: xor rax, rdx; movzx edx, byte ptr [rdi]; test dl, dl; jne 0x796c; ret; 
0x0000000000460008: xor rcx, rax; and rsi, rcx; je 0x60140; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x00000000004083a3: xor rdx, qword ptr [0x30]; call rdx; 
0x00000000004083a2: xor rdx, qword ptr fs:[0x30]; call rdx; 

17844 gadgets found
