


Gadgets
=======


0x00000000004010aa: adc al, byte ptr [rax]; mov rdi, 0x401180; call qword ptr [rip + 0x2f36]; hlt; nop dword ptr [rax + rax]; ret; 
0x00000000004010b0: adc byte ptr [rcx], 0x40; add bh, bh; adc eax, 0x2f36; hlt; nop dword ptr [rax + rax]; ret; 
0x00000000004010b1: adc dword ptr [rax], eax; call qword ptr [rip + 0x2f36]; hlt; nop dword ptr [rax + rax]; ret; 
0x000000000040111e: adc dword ptr [rax], edi; test rax, rax; je 0x1130; mov edi, 0x404058; jmp rax; 
0x00000000004010b5: adc eax, 0x2f36; hlt; nop dword ptr [rax + rax]; ret; 
0x00000000004010dc: adc edi, dword ptr [rax]; test rax, rax; je 0x10f0; mov edi, 0x404058; jmp rax; 
0x00000000004010b9: add ah, dh; nop dword ptr [rax + rax]; ret; 
0x00000000004010b3: add bh, bh; adc eax, 0x2f36; hlt; nop dword ptr [rax + rax]; ret; 
0x00000000004010ac: add byte ptr [rax - 0x39], cl; mov dword ptr [rax - 0xffbfef], 0x2f3615; add ah, dh; nop dword ptr [rax + rax]; ret; 
0x000000000040100a: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000401241: add byte ptr [rax], al; add byte ptr [rax], al; call 0x1030; mov dword ptr [rbp - 0x40], eax; mov al, 0; call qword ptr [rbp - 0x10]; 
0x0000000000401255: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rbp - 4]; add rsp, 0x40; pop rbp; ret; 
0x00000000004010de: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x10f0; mov edi, 0x404058; jmp rax; 
0x0000000000401120: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x1130; mov edi, 0x404058; jmp rax; 
0x0000000000401243: add byte ptr [rax], al; call 0x1030; mov dword ptr [rbp - 0x40], eax; mov al, 0; call qword ptr [rbp - 0x10]; 
0x00000000004010b8: add byte ptr [rax], al; hlt; nop dword ptr [rax + rax]; ret; 
0x00000000004012d6: add byte ptr [rax], al; mov dword ptr [rbp - 0x14], eax; call 0x1080; add rsp, 0x20; pop rbp; ret; 
0x0000000000401257: add byte ptr [rax], al; mov eax, dword ptr [rbp - 4]; add rsp, 0x40; pop rbp; ret; 
0x00000000004010be: add byte ptr [rax], al; ret; 
0x0000000000401352: add byte ptr [rax], al; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401009: add byte ptr [rax], al; test rax, rax; je 0x1012; call rax; 
0x0000000000401009: add byte ptr [rax], al; test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x00000000004010e0: add byte ptr [rax], al; test rax, rax; je 0x10f0; mov edi, 0x404058; jmp rax; 
0x0000000000401122: add byte ptr [rax], al; test rax, rax; je 0x1130; mov edi, 0x404058; jmp rax; 
0x00000000004010bd: add byte ptr [rax], r8b; ret; 
0x0000000000401157: add byte ptr [rcx], al; pop rbp; ret; 
0x00000000004010b2: add dil, dil; adc eax, 0x2f36; hlt; nop dword ptr [rax + rax]; ret; 
0x0000000000401006: add eax, 0x2fed; test rax, rax; je 0x1012; call rax; 
0x0000000000401006: add eax, 0x2fed; test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x00000000004012e1: add esp, 0x20; pop rbp; ret; 
0x000000000040125d: add esp, 0x40; pop rbp; ret; 
0x0000000000401013: add esp, 8; ret; 
0x00000000004012e0: add rsp, 0x20; pop rbp; ret; 
0x000000000040125c: add rsp, 0x40; pop rbp; ret; 
0x0000000000401012: add rsp, 8; ret; 
0x0000000000401245: call 0x1030; mov dword ptr [rbp - 0x40], eax; mov al, 0; call qword ptr [rbp - 0x10]; 
0x00000000004012db: call 0x1080; add rsp, 0x20; pop rbp; ret; 
0x000000000040114d: call 0x10d0; mov byte ptr [rip + 0x2f2f], 1; pop rbp; ret; 
0x000000000040124f: call qword ptr [rbp - 0x10]; 
0x00000000004010b4: call qword ptr [rip + 0x2f36]; hlt; nop dword ptr [rax + rax]; ret; 
0x0000000000401010: call rax; 
0x0000000000401010: call rax; add rsp, 8; ret; 
0x000000000040125b: cld; add rsp, 0x40; pop rbp; ret; 
0x0000000000401249: dec dword ptr [rcx + 0xb0c045]; call qword ptr [rbp - 0x10]; 
0x0000000000401334: fisttp word ptr [rax - 0x7d]; ret; 
0x00000000004010ba: hlt; nop dword ptr [rax + rax]; ret; 
0x00000000004012da: in al, dx; call 0x1080; add rsp, 0x20; pop rbp; ret; 
0x0000000000401002: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x2fed; test rax, rax; je 0x1012; call rax; 
0x000000000040100e: je 0x1012; call rax; 
0x000000000040100e: je 0x1012; call rax; add rsp, 8; ret; 
0x00000000004010db: je 0x10f0; mov eax, 0; test rax, rax; je 0x10f0; mov edi, 0x404058; jmp rax; 
0x00000000004010e5: je 0x10f0; mov edi, 0x404058; jmp rax; 
0x000000000040111d: je 0x1130; mov eax, 0; test rax, rax; je 0x1130; mov edi, 0x404058; jmp rax; 
0x0000000000401127: je 0x1130; mov edi, 0x404058; jmp rax; 
0x00000000004010ec: jmp rax; 
0x00000000004010a9: lock adc al, byte ptr [rax]; mov rdi, 0x401180; call qword ptr [rip + 0x2f36]; hlt; nop dword ptr [rax + rax]; ret; 
0x000000000040124d: mov al, 0; call qword ptr [rbp - 0x10]; 
0x0000000000401152: mov byte ptr [rip + 0x2f2f], 1; pop rbp; ret; 
0x00000000004010af: mov dword ptr [rax - 0xffbfef], 0x2f3615; add ah, dh; nop dword ptr [rax + rax]; ret; 
0x00000000004012d8: mov dword ptr [rbp - 0x14], eax; call 0x1080; add rsp, 0x20; pop rbp; ret; 
0x000000000040124a: mov dword ptr [rbp - 0x40], eax; mov al, 0; call qword ptr [rbp - 0x10]; 
0x00000000004010dd: mov eax, 0; test rax, rax; je 0x10f0; mov edi, 0x404058; jmp rax; 
0x000000000040111f: mov eax, 0; test rax, rax; je 0x1130; mov edi, 0x404058; jmp rax; 
0x0000000000401259: mov eax, dword ptr [rbp - 4]; add rsp, 0x40; pop rbp; ret; 
0x0000000000401005: mov eax, dword ptr [rip + 0x2fed]; test rax, rax; je 0x1012; call rax; 
0x0000000000401005: mov eax, dword ptr [rip + 0x2fed]; test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x000000000040114b: mov ebp, esp; call 0x10d0; mov byte ptr [rip + 0x2f2f], 1; pop rbp; ret; 
0x00000000004010a7: mov ecx, 0x4012f0; mov rdi, 0x401180; call qword ptr [rip + 0x2f36]; hlt; nop dword ptr [rax + rax]; ret; 
0x00000000004010ae: mov edi, 0x401180; call qword ptr [rip + 0x2f36]; hlt; nop dword ptr [rax + rax]; ret; 
0x00000000004010e7: mov edi, 0x404058; jmp rax; 
0x0000000000401004: mov rax, qword ptr [rip + 0x2fed]; test rax, rax; je 0x1012; call rax; 
0x0000000000401004: mov rax, qword ptr [rip + 0x2fed]; test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x000000000040114a: mov rbp, rsp; call 0x10d0; mov byte ptr [rip + 0x2f2f], 1; pop rbp; ret; 
0x00000000004010a6: mov rcx, 0x4012f0; mov rdi, 0x401180; call qword ptr [rip + 0x2f36]; hlt; nop dword ptr [rax + rax]; ret; 
0x00000000004010ad: mov rdi, 0x401180; call qword ptr [rip + 0x2f36]; hlt; nop dword ptr [rax + rax]; ret; 
0x00000000004012dc: movabs al, byte ptr [0x5d20c48348fffffd]; ret; 
0x00000000004010bb: nop dword ptr [rax + rax]; ret; 
0x000000000040134d: nop dword ptr [rax]; ret; 
0x00000000004010ef: nop; ret; 
0x0000000000401003: or byte ptr [rax - 0x75], cl; add eax, 0x2fed; test rax, rax; je 0x1012; call rax; 
0x00000000004010e6: or dword ptr [rdi + 0x404058], edi; jmp rax; 
0x0000000000401344: pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000000401346: pop r13; pop r14; pop r15; ret; 
0x0000000000401348: pop r14; pop r15; ret; 
0x000000000040134a: pop r15; ret; 
0x0000000000401343: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000000401347: pop rbp; pop r14; pop r15; ret; 
0x0000000000401159: pop rbp; ret; 
0x000000000040134b: pop rdi; ret; 
0x0000000000401349: pop rsi; pop r15; ret; 
0x0000000000401345: pop rsp; pop r13; pop r14; pop r15; ret; 
0x0000000000401149: push rbp; mov rbp, rsp; call 0x10d0; mov byte ptr [rip + 0x2f2f], 1; pop rbp; ret; 
0x0000000000401072: ret 0x2f; 
0x0000000000401016: ret; 
0x000000000040100d: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000004010a8: sal eax, 0x12; add byte ptr [rax - 0x39], cl; mov dword ptr [rax - 0xffbfef], 0x2f3615; add ah, dh; nop dword ptr [rax + rax]; ret; 
0x0000000000401355: sub esp, 8; add rsp, 8; ret; 
0x0000000000401001: sub esp, 8; mov rax, qword ptr [rip + 0x2fed]; test rax, rax; je 0x1012; call rax; 
0x0000000000401354: sub rsp, 8; add rsp, 8; ret; 
0x0000000000401000: sub rsp, 8; mov rax, qword ptr [rip + 0x2fed]; test rax, rax; je 0x1012; call rax; 
0x000000000040100c: test eax, eax; je 0x1012; call rax; 
0x000000000040100c: test eax, eax; je 0x1012; call rax; add rsp, 8; ret; 
0x00000000004010e3: test eax, eax; je 0x10f0; mov edi, 0x404058; jmp rax; 
0x0000000000401125: test eax, eax; je 0x1130; mov edi, 0x404058; jmp rax; 
0x000000000040100b: test rax, rax; je 0x1012; call rax; 
0x000000000040100b: test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x00000000004010e2: test rax, rax; je 0x10f0; mov edi, 0x404058; jmp rax; 
0x0000000000401124: test rax, rax; je 0x1130; mov edi, 0x404058; jmp rax; 

108 gadgets found
